{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/book.png","path":"images/book.png","modified":1,"renderable":0},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1501000966000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1500999735000},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1500999735000},{"_id":"themes/maupassant/README.md","hash":"e75d6136d0355d0c231fb9bd27f93ef3e2d29477","modified":1500999735000},{"_id":"themes/maupassant/_config.yml","hash":"141e91b380d330de256167919466b39891fff8a3","modified":1501087719000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1500999735000},{"_id":"source/favicon.ico","hash":"3031e0539e0d09b5cf593c56b04ff8fb2563c70e","modified":1501001538000},{"_id":"source/_posts/.DS_Store","hash":"ec2c7043c8b6444bf400853be3553425dbd6f238","modified":1501081928000},{"_id":"source/_posts/me-brief.md","hash":"1c95de8b3c901e57f9394e0059adf27fe1b578af","modified":1501086561000},{"_id":"source/_posts/me-huawei.md","hash":"0f12dcacc566fefbad7c1580893ff7039f25e164","modified":1501086568000},{"_id":"source/_posts/me.md","hash":"28261ac0a945b262cd5eb03f47796adea4cf2f17","modified":1501086573000},{"_id":"source/_posts/salary.md","hash":"9c8eadf7ef91a745936c6ac9a119ac46933f4659","modified":1481561257000},{"_id":"source/about/index.md","hash":"1b0facf1641b4b78e1d939004f6fff0b3a7eea94","modified":1501086798000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1500999734000},{"_id":"source/images/avatar.jpg","hash":"cbb589a0ea28aabbc1bb8e6ff3aa2d93144e19f3","modified":1501001411000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1500999734000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1500999734000},{"_id":"source/images/book.png","hash":"d86fffc2d56b39d72214ccf9666c0c80bb9f8999","modified":1501001420000},{"_id":"themes/maupassant/.git/index","hash":"140d151598b2b24a928e946ec9fad47ec9bf6de0","modified":1500999962000},{"_id":"themes/maupassant/.git/packed-refs","hash":"a81967263875914a1921de7455ff84d4a0daaae8","modified":1500999735000},{"_id":"themes/maupassant/languages/en.yml","hash":"9dc51349f64e882433957c00dc757366229e0269","modified":1500999735000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1500999735000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1500999735000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1500999735000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1500999735000},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1500999735000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ffce5df2448a80dbad71da115c84b81f42a42778","modified":1500999735000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"bf3ab970f2ab3f29ddeb9f59bf98163be635e284","modified":1500999735000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1500999735000},{"_id":"themes/maupassant/layout/index.jade","hash":"d3bfb2821602f814eb626d4ab17ca1674b296c52","modified":1500999735000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"60b5a70f7c61c91aca9fbf813bde26096ef4028f","modified":1500999735000},{"_id":"themes/maupassant/layout/base.jade","hash":"41f3a0f5e3c5b722de9d058c458822e5122384e1","modified":1500999735000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1500999735000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"649281ace58d7ff08a6ecb10606799ae2f77bb38","modified":1500999735000},{"_id":"themes/maupassant/layout/post.jade","hash":"5c3828dcca577974f6844c35ef91f0140144cd45","modified":1500999735000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1500999735000},{"_id":"source/_posts/resume/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1456889894000},{"_id":"source/_posts/resume/AndroidL录音机介绍.md","hash":"c6fa13d99b924925592cad39668202c9add334be","modified":1501074689000},{"_id":"source/_posts/resume/COLOR公寓技术介绍.md","hash":"b717888d892d6895af5de04b65ea5386d764eaad","modified":1501074689000},{"_id":"source/_posts/resume/COLOR公寓IT系统功能结构.png","hash":"a13a413f2b8d350fa609f37cf535709c0e0941b6","modified":1453526635000},{"_id":"source/_posts/resume/COLOR公寓系统构架.png","hash":"9081fc25e04d10e6b08f9d23a176c4ab18d084b9","modified":1453526729000},{"_id":"source/_posts/resume/bolo-dianhua.jpg","hash":"f7754c2c18f76fd2ffcadc29409ad8f582f7058a","modified":1453910124000},{"_id":"source/_posts/resume/bolo-haoyou.jpg","hash":"2c29294ace9589e5e548373ad0a40d8e1a6f7665","modified":1453910148000},{"_id":"source/_posts/resume/bolo-kanshipin.jpg","hash":"53fef7ee7585cde6bf1a4919846931c57558d81b","modified":1453910976000},{"_id":"source/_posts/resume/bolo-shezhi.jpg","hash":"4361e91dc3984fa6cdef0eb357758955231dc657","modified":1453909878000},{"_id":"source/_posts/resume/caigou.jpeg","hash":"80884a2bfd81d4888d0799bc92ffb119e72f8b5d","modified":1453526460000},{"_id":"source/_posts/resume/hetong.jpg","hash":"4742c72db41aed9dc655ee8066880f01cbd16caf","modified":1453525799000},{"_id":"source/_posts/resume/renwu.jpg","hash":"4283832a6cf67d8cacd507455cb80015648ace67","modified":1453525543000},{"_id":"source/_posts/resume/zhangdan.jpg","hash":"81164e0314f505341ed2a79ebeb6842b9ef3d8a4","modified":1453526029000},{"_id":"source/_posts/resume/zhuangxiu.jpg","hash":"8246a677492cc94c1ef28261d3629c76433cfe52","modified":1453525814000},{"_id":"source/_posts/resume/zsg-ditu.jpg","hash":"d6a159714b6d95683bc0e90ec6493615eb7f8c76","modified":1453612814000},{"_id":"source/_posts/resume/叨叨项目介绍.md","hash":"72312ee6aff88ae1f1788e5be16876f7702f1371","modified":1501074689000},{"_id":"source/_posts/resume/全民斗地主技术介绍.md","hash":"b4097ab49beaf6f8163dfa745c8275e4a7927c74","modified":1453267829000},{"_id":"source/_posts/resume/战三国技术介绍.md","hash":"fbf74a07286621ac7e99da8096ba1fe444492f07","modified":1501074689000},{"_id":"source/_posts/resume/安全宝应用介绍.md","hash":"2abdecb260f4ba7f880cfbf65f66dce26a4084db","modified":1501074689000},{"_id":"source/_posts/扯淡/2016年职业发展规划.md","hash":"f36056e8be34cbdf11d833b210e617a98f4152e8","modified":1501085940000},{"_id":"source/_posts/扯淡/COLOR公寓社交思考.md","hash":"b663ac86da6d4d15ddd76b1913427bb0716063b9","modified":1501086303000},{"_id":"source/_posts/resume/泡泡龙技术介绍.md","hash":"b4097ab49beaf6f8163dfa745c8275e4a7927c74","modified":1453267831000},{"_id":"source/_posts/扯淡/.DS_Store","hash":"39af1813ff1f75b6fdd0ff2bb4803898c996d10e","modified":1501085866000},{"_id":"source/_posts/扯淡/Color公寓一周岁了.comments.md","hash":"5944a7d5ca8839cbb58303dcf40274d37fcc71b8","modified":1459558454000},{"_id":"source/_posts/扯淡/Color公寓一周岁了.md","hash":"d40a6006f1d2153de7c3da05ea52f9b38cfe4385","modified":1501085807000},{"_id":"source/_posts/扯淡/介绍我们.md","hash":"10034fd88cc7468505eb640ff1bae789fccce029","modified":1501086093000},{"_id":"source/_posts/扯淡/ppt.md","hash":"81c8f1853741cb8fc4f8dc855adb6d1422384bac","modified":1501074689000},{"_id":"source/_posts/扯淡/不算春节，你有多久没有回过家？.md","hash":"12107252ec567304114c9e81c8eca0af3be78a2a","modified":1501086005000},{"_id":"source/_posts/扯淡/别轻易打开微信APP.md","hash":"294a543db5cdfe92888b35bee4ea8db7d9897f0b","modified":1501085967000},{"_id":"source/_posts/扯淡/我为什么写博客.md","hash":"f69ca1fdee386b2de8148cf96a4196f7a036d5bf","modified":1501086359000},{"_id":"source/_posts/扯淡/我的技能树.md","hash":"711c59fe853cb5f477ae1d85e4dcad6e01c0d3cc","modified":1501086246000},{"_id":"source/_posts/扯淡/摄影O2O行业调研.md","hash":"3662dba9420c37a325f3548966d9a8ae29bda3e3","modified":1501086191000},{"_id":"source/_posts/扯淡/活动是评价公寓好坏的唯一标准.md","hash":"8424aba8dddb66e028b97b84f1f25050587faf43","modified":1501086044000},{"_id":"source/_posts/扯淡/程序员的自我修养.md","hash":"5e2d652a4306d0e41bcb6d4b4689dc82298cac37","modified":1501086028000},{"_id":"source/_posts/扯淡/自省.md","hash":"ede7f1fb7bf125bb0052765b08b3b53580e07cc7","modified":1501086319000},{"_id":"source/_posts/技术/.DS_Store","hash":"68d2b91fa01eb0b8d0127cdf0ea81fb1ac7978fb","modified":1501082891000},{"_id":"source/_posts/技术/LeanCloud云引擎的学习和部署.md","hash":"4e91275a6921ce13633aa992ff9a79d6e94b223b","modified":1501085749000},{"_id":"source/_posts/技术/QQ截图20140323205043.png","hash":"d0f4d9f270ab3cd434c272ce6d265e66c14b06e0","modified":1453198416000},{"_id":"source/_posts/技术/[AS3] 动态加载字体.md","hash":"fccb951caf30f5ea9ee9a78ffad880307c0d56d1","modified":1501083029000},{"_id":"source/_posts/技术/[AS3]精简字体打包成SWF.md","hash":"4bfb39b4078df87b3f5a7250f22449cefffe840d","modified":1501083202000},{"_id":"source/_posts/技术/[AS3]语法性能差异分析报告.md","hash":"9c98c8df77175e44546ebc103ba8a88db1257767","modified":1501083224000},{"_id":"source/_posts/技术/[OAuth]一张图理解OAuth2.0.md","hash":"b6250e3b5a63a219521e089b116f91dbef828060","modified":1501084943000},{"_id":"source/_posts/技术/[PHP]深入理解Yii2的ActiveRecord.md","hash":"bbdb6f524bf5a1b46f4fc179ca7c6e140d3e9675","modified":1501085429000},{"_id":"source/_posts/技术/[PHP]swoole_server几个进程的分工.md","hash":"77914a4201e96eacd42a2b319e1e9054d42ee968","modified":1501085508000},{"_id":"source/_posts/技术/[PHP]Yii2框架的坑.md","hash":"6f0286940d04617dc582de04c653de448943f370","modified":1501085593000},{"_id":"source/_posts/技术/[OO]面向对象的基本原则.md","hash":"a9958ebf4539840aecef7ea5e10a5934a9e03633","modified":1501084969000},{"_id":"source/_posts/技术/[PHP]深入理解Yii2的基础类.md","hash":"b34dd1993673ce2671f73063871f2522b4606eea","modified":1501085393000},{"_id":"source/_posts/技术/[PHP]深入理解Yii2的lifecycle.md","hash":"16dbe5b21cbe5dbf3d8c51446fa21793d103cffd","modified":1501085475000},{"_id":"source/_posts/技术/[PHP]程序员技能栈.md","hash":"5e58d9dbfa6655e9a7d623358ca4350a0da7e514","modified":1501085375000},{"_id":"source/_posts/技术/[PHP]深入理解Yii2的coreComponents.md","hash":"6059d1c74760afb4230e6af8cc5b729be1ab00fc","modified":1501085453000},{"_id":"source/_posts/技术/[UML]构架师要熟练使用UML.md","hash":"ccaa6d127f28a6d608b7e8de74061eb05cdeb897","modified":1501085711000},{"_id":"source/_posts/技术/[RESTful]最优雅的RESTful设计.md","hash":"d64b6f81bca6089a8082d377b1a7e895a7a4a339","modified":1501085686000},{"_id":"source/_posts/技术/[Web]十种方法提高你的网站性能.md","hash":"36066d8c36a2798e12cba918eb18a1014ded4f19","modified":1501085740000},{"_id":"source/_posts/技术/[cocos2dx]2.2到3.1(3.0)升级帮助.md","hash":"49c4f82e575d44daaee064efd74f30ac0ede2934","modified":1501084522000},{"_id":"source/_posts/技术/[cocos2dx]深入--几个代表性的类.md","hash":"6d71ec5124dd1c2e0592293ac52b6848ff9cd255","modified":1501084616000},{"_id":"source/_posts/技术/[cocos2dx]利用NDK崩溃日志查找BUG.md","hash":"72b1f221fac90bb9060cac166fcd6ec628349d32","modified":1501084522000},{"_id":"source/_posts/技术/[cocos2dx]让CCScrollView支持分页.md","hash":"8112ab818889970750299b78c8bbc2ce1d873c32","modified":1501084522000},{"_id":"source/_posts/技术/[cocos2dx]深入--几个代表性的类 (续).md","hash":"d3e40c05d5b47dde97df90606947e0d012f1507a","modified":1501084623000},{"_id":"source/_posts/技术/[iOS]UIView位置属性大揭秘.md","hash":"8edf569d524800c5507d3ad75c86ea5c0efa7e06","modified":1501084857000},{"_id":"source/_posts/技术/[cocos2dx]让UIButton支持disable状态.md","hash":"876f8f146db8c4087eef896d39610f6718652cc6","modified":1501084500000},{"_id":"source/_posts/技术/[hadoop]简单了解Hadoop.md","hash":"f92377bf5fc3ed123347e739f84328241e4dfa58","modified":1501084744000},{"_id":"source/_posts/技术/[iOS]Orientation 想怎么转就怎么转.md","hash":"5683562191754452c4a2d52790c344c3bb879b15","modified":1501084791000},{"_id":"source/_posts/技术/[iOS]VoIP解密.md","hash":"e8ef8d5e6ed3639595b834aaf5e238573ced37e4","modified":1501084903000},{"_id":"source/_posts/技术/[iOS]是怎么\"绘画\"的?.md","hash":"8db3c765dd4940ad181858b7084bd05dab2736f3","modified":1501084739000},{"_id":"source/_posts/技术/[opencv]Windows平台下编译openCV.md","hash":"1b7ccff404762e2d147664a06d4a918c6197fd77","modified":1501085126000},{"_id":"source/_posts/技术/[opencv]opencv VS2012 环境搭建.md","hash":"e7d86930dadc613935cb32fd242a2673e9932b93","modified":1501085086000},{"_id":"source/_posts/技术/[opencv]训练自己的识别器.md","hash":"7b3148975dd211379897c8648b2cb25293611d15","modified":1501085052000},{"_id":"source/_posts/技术/[other]该如何使用Exception.md","hash":"48513eeef356b7681954c0e517011d64520ffc2c","modified":1501085218000},{"_id":"source/_posts/技术/[other]威锋网(Weiphone) BBS排序插件.md","hash":"67ec869226235dcd0a87ff5cc690bf0811a8b464","modified":1501085314000},{"_id":"source/_posts/技术/[other]利用Google Speech API实现Speech To Text.md","hash":"e45c5cb496fef1b728e981d31fcf3a9962523cbe","modified":1501085274000},{"_id":"source/_posts/技术/[构架]从〇开始构架前端（NLDV框架）.md","hash":"51031e5a0c9ed7889e00328bb730736ab837f697","modified":1501085176000},{"_id":"source/_posts/技术/o_Image.png","hash":"82d10dd13dd945ff395c363479bc125f01133f08","modified":1453197439000},{"_id":"source/_posts/管理/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1457680731000},{"_id":"source/_posts/技术/o_Untitled Diagram.png","hash":"2cb6e84ac8bacc81fdcdf7f69ce43479b9728856","modified":1453197491000},{"_id":"source/_posts/管理/Color工作的评价和反馈.md","hash":"1216229097159a61af83bcf26560a2060bf2fb87","modified":1501079439000},{"_id":"source/_posts/管理/Color薪酬体系.md","hash":"06565d043c6355ef98873af7b817b876d93a7cd3","modified":1501079431000},{"_id":"source/_posts/管理/Color工作的评价和反馈.comments.md","hash":"c6967b7718706f4f6a377e561faea4efc384b067","modified":1459560600000},{"_id":"source/_posts/管理/Color期权激励.md","hash":"066e11a1424fdb700649d88398593b8ac0bf43e1","modified":1501079434000},{"_id":"source/_posts/管理/技术领导者的任务.md","hash":"34aa783a4e84bc19087f8558067e73e54058d367","modified":1501079449000},{"_id":"source/_posts/读书/.DS_Store","hash":"aed9e2d7cf7e5002f601b4813a3ffb8bd9e227e0","modified":1458297446000},{"_id":"source/_posts/管理/Scrum项目管理规范.md","hash":"ebf1ec4b271f13122d1ac3cfa285c8abbfb61684","modified":1501079385000},{"_id":"source/_posts/管理/IT技术团队管理-总结.md","hash":"f1452f9dde69ac026827b3793054327298c96989","modified":1501086421000},{"_id":"source/_posts/读书/《关键对话》读书笔记.md","hash":"ca82567f02f78be863fba48418324b70a1c63938","modified":1501084522000},{"_id":"source/_posts/读书/《Principles》思维导航.md","hash":"c8a95938edaafe2a656e7716a2c1b5021d53f09e","modified":1501080161000},{"_id":"source/_posts/读书/《自我》读书笔记.md","hash":"615ef2a7d071f54a29720d50de8a5721d3189e58","modified":1501080169000},{"_id":"source/_posts/读书/《淘宝技术这十年》读书笔记.md","hash":"28ee32476e3e9649a3a4752a8f08ad2ec9d5422d","modified":1501080175000},{"_id":"source/_posts/读书/书香之路.md","hash":"22c0f2dfaa999a3948140601775c63b7184503b7","modified":1501080036000},{"_id":"source/_posts/读书/人类，一个没什么特别的物种.md","hash":"007293c5d9e7e5138fbbd2da562cd730334b7985","modified":1501080060000},{"_id":"source/_posts/读书/失去的二十年.md","hash":"1e27c3966773dd694dca1d6b5a6f1960edeae854","modified":1501080043000},{"_id":"source/_posts/读书/如何阅读一本书.md","hash":"e69cd371f986e75183fce985c3bdbf6919040c59","modified":1501084522000},{"_id":"source/_posts/读书/货币如何产生，国家财富如何积累？.md","hash":"ef0e384413dc55de9e1febc3dd39a76478d4ea26","modified":1501084522000},{"_id":"source/_posts/读书/学习了12小时的社会科学.md","hash":"81fb72e14886855854f8b95fc5c6713bb1a1c3f5","modified":1501079987000},{"_id":"source/_posts/读书/学会提问.md","hash":"62b8c1a4e204a34c831d053180ef1646ce73f8e7","modified":1501080016000},{"_id":"source/_posts/读书/还原一个真实的政商圈.md","hash":"8ac50b158d83e1216903fe42f356c5988bca147b","modified":1501084522000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1500999734000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1500999734000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1500999734000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"9c02b655d468a5c645bdf6dcb598aa8605c23643","modified":1500999735000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1500999735000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1500999735000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1500999735000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1500999735000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1500999735000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"78424748d749d5df0f251e896c2d4d1a69b02b62","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/head.jade","hash":"74585fd208f074cae496274cb3a656925915ed8a","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"eb17dcfff2aed1d93e87bce4324e569cfbd2c56b","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1500999735000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1500999735000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1500999735000},{"_id":"themes/maupassant/source/css/style.scss","hash":"b4a7dc1343687924f2e23ae137a2f72f30ab2d04","modified":1500999735000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1500999735000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1500999735000},{"_id":"themes/maupassant/source/js/share.js","hash":"6400d719d5eb14587d854a3dff6b290a3c06dc67","modified":1500999735000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1500999735000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1500999735000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1500999735000},{"_id":"source/_posts/resume/COLOR公寓数据库设计.md","hash":"5a1eba47c4418b70c336b61851ce254293a92128","modified":1501084522000},{"_id":"source/_posts/resume/bolo-bg.jpg","hash":"addfa19f4ddf243da4ea4704433b63a4bd5b9747","modified":1453911059000},{"_id":"source/_posts/resume/bolo-liaotianjilu.jpg","hash":"60409cc7cfd5b789dd263e8dbced23110a3a7b5f","modified":1453910193000},{"_id":"source/_posts/resume/bolo-xuanshipin.jpg","hash":"6cc67585ed7e8bd2ee8728b5ea70e737a32ffaf1","modified":1453910073000},{"_id":"source/_posts/resume/fangyuan.jpg","hash":"4f8440ca39feb1a4d714e84053cf4708a75860d5","modified":1453525945000},{"_id":"source/_posts/resume/zsg-buzhen.jpg","hash":"2933f1e0a41271ebb5bf76d5905ca06529146e49","modified":1453613174000},{"_id":"source/_posts/resume/zsg-jingjichang.jpg","hash":"33bb200f06707ed7ffeb2e957a0e41c3442dc938","modified":1453613237000},{"_id":"source/_posts/resume/zsg-wujiang.jpg","hash":"8d962a5d2e8cf353510e60c356c187b8aea5eae2","modified":1453613319000},{"_id":"source/_posts/技术/How to use the Public folder.png","hash":"56f548e2aa4dea5d29733cc33a1331e3f6603465","modified":1453196149000},{"_id":"source/_posts/技术/SpeechResult.jpg","hash":"a1e94aad90e9a336d3711340bd2707bad614bd48","modified":1396000735000},{"_id":"source/_posts/resume/double_security.jpg","hash":"52966f8db04e5313231df5b9a3463866ca9e0520","modified":1453908596000},{"_id":"source/_posts/resume/zhansanguo.jpg","hash":"2ddc1510a5183365d0358fe914fb6cffc79af454","modified":1453527493000},{"_id":"source/_posts/扯淡/_huodong/.DS_Store","hash":"4689d9cdadb624727d6eab2285ddf45b42af6c3e","modified":1460010596000},{"_id":"source/_posts/扯淡/_huodong/u50.jpg","hash":"cea0d76b514689b73c05526f94c3af2a0d6f28df","modified":1459938442000},{"_id":"source/_posts/扯淡/_huodong/u52.jpg","hash":"6e1a405b77f08cdba2ba1d21b97afb822488d9c6","modified":1459935256000},{"_id":"source/_posts/技术/frame_images/IMG_0012.PNG","hash":"9e536799283a5364091e1ad8077cfbc08e5e3f87","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0013.PNG","hash":"9d247c4d3553c7e423a5f8171f4c493488dd883b","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0014.PNG","hash":"8d3a43555f97b049813fa10e9548602d02927972","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0016.PNG","hash":"8327ac67e6bfb17b71a58cafab45450f7970e125","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0015.PNG","hash":"8456a17b62b98749d045c116c84c80c340f19be4","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0017.PNG","hash":"78bf7dfa18e7d1b563e714a4458f349826be4422","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0018.PNG","hash":"7db25a226182da15ace36d28d80662f04764bed2","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0019.PNG","hash":"42b301f64d2a6beb982b6da820cb4e0e53f2c9c5","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/IMG_0020.PNG","hash":"5fed34ffd1c18569d80f14ee7b4a70b1ed88bb2a","modified":1383407641000},{"_id":"source/_posts/技术/frame_images/testFrameFrontImage.jpg","hash":"021da739ad629e896a3c16db94c109c6b5a6a8ed","modified":1383407815000},{"_id":"source/_posts/技术/设计模式/bridge-method-1.jpg","hash":"c37a5017605c6f46824213ef79c8d142165c5427","modified":1387440283000},{"_id":"source/_posts/技术/frame_images/IMG_0022.PNG","hash":"b6049e0f8e100706b905cf41df632974f544a081","modified":1383408367000},{"_id":"source/_posts/技术/设计模式/.DS_Store","hash":"b4ef7361d6f965f45c5ae47c5c46c52f45a2a916","modified":1501082871000},{"_id":"source/_posts/技术/设计模式/bridge-method-2.jpg","hash":"1e4483bbc9a742ce1916892e5c6c18c265bc6864","modified":1387440307000},{"_id":"source/_posts/技术/设计模式/创建型模式.md","hash":"465de9f992f7b170903861083852a3b8e4cbd428","modified":1501082680000},{"_id":"source/_posts/技术/设计模式/common-method.jpg","hash":"88eeb3a446db92200148d3566efaf9c60ada8e2b","modified":1387440257000},{"_id":"source/_posts/技术/设计模式/创建型模式-2013.md","hash":"eb8f51c957c7f14fa1f615fa731f5c3012d775db","modified":1501082528000},{"_id":"source/_posts/技术/设计模式/结构型模式-2013.md","hash":"8aeb2a7c9b40744ed434c7ff6edf40bb89014a9d","modified":1501084522000},{"_id":"source/_posts/技术/设计模式/结构型模式.md","hash":"d313bb87ecb2b58a8307b18f568bf736b662e261","modified":1501082671000},{"_id":"source/_posts/技术/设计模式/行为模式.md","hash":"adf2e3a0a4fa25c7b5e02aae7691e4837c9e12b8","modified":1501082772000},{"_id":"source/_posts/管理/技术领导者的任务/技术领导者的任务.png","hash":"a822c42ecff57aa582cb0358f41a4ee4f08fed6c","modified":1501078893000},{"_id":"themes/maupassant/.git/objects/pack/pack-798005cfaced575fbc3b39a9f014f7ffd0cf17a9.idx","hash":"ca8f570f687eaac345d058b5ac2b8b1082d4e2bb","modified":1500999735000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"fced5a8b032d8f23541d7da5779d9c0f369610c5","modified":1500999735000},{"_id":"source/_posts/resume/recorder.jpg","hash":"c6bdbdf19d95a7dda2afdc12db575724b6165a57","modified":1453874224000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_1.PNG","hash":"f50731d4e242fbcd8ab24fe93a6277d7731c9cd5","modified":1459164308000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_2.PNG","hash":"06229cea18d4aeaf00b6fd84eb0d2648d8a5af16","modified":1459164331000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_5.PNG","hash":"e11388ae2b5ddace1367b6ced90e1ae332077493","modified":1459164387000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_6.png","hash":"dc3f433bc83e64568574af25c19310b0d90c2c7e","modified":1459164404000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/第一个租客.JPG","hash":"e07dc8fcf0a9ed51027702a82c7263fa1df83c71","modified":1459164701000},{"_id":"source/_posts/扯淡/_huodong/u16.jpg","hash":"aae0a8973e2a779b175bc514a0f11b384678ac84","modified":1459936865000},{"_id":"source/_posts/扯淡/_huodong/u18.jpg","hash":"9f0d9ab4c6401cdd5b822cbbf340dd68847cd8a2","modified":1459935256000},{"_id":"source/_posts/扯淡/_huodong/u24.jpg","hash":"2a72696b2ad420c9da054760dea3b1e0eb4d1468","modified":1459937511000},{"_id":"source/_posts/管理/Scrum项目管理规范/Scrum-backlog.png","hash":"17b65ffb8d8a63e7c74635063416db04a9683113","modified":1501079274000},{"_id":"source/_posts/管理/Scrum项目管理规范/Scrum-task.png","hash":"537c1ed1265e680bc4b12e0cf4c15cbf9bccc910","modified":1501079271000},{"_id":"source/_posts/扯淡/我的技能树/我的技能树.png","hash":"abe870a66a03a3a2e0314c7a01577b437fc567ca","modified":1501086259000},{"_id":"source/_posts/技术/设计模式/创建型模式/Builder.jpg","hash":"79f2162d57679771b2e21b5aa0c05808f5531602","modified":1501080507000},{"_id":"source/_posts/技术/设计模式/结构型模式/Adapter.jpg","hash":"e3828499b311410104047f3906d5f4f756791677","modified":1457354534000},{"_id":"source/_posts/技术/设计模式/创建型模式/FactoryMethod.jpg","hash":"e2e5a79c19d0fb34e1d087f29828e1e21f24058c","modified":1501080482000},{"_id":"source/_posts/技术/设计模式/创建型模式/AbatractFactory.jpg","hash":"039cb7ed7b67c4f2d5019604ec02a4a6c0852be2","modified":1501080492000},{"_id":"source/_posts/技术/设计模式/创建型模式/SimpleFactory.jpg","hash":"b07b626683b3436f9a7b55d98fb431b3665b1aeb","modified":1501080468000},{"_id":"source/_posts/技术/设计模式/结构型模式/Decorator-Example.png","hash":"681d4ef3132b488de9f2581a7470e0e2f25b1e9c","modified":1457505398000},{"_id":"source/_posts/技术/设计模式/结构型模式/Bridge.jpg","hash":"1ff290afb849bbf1dd4545b7341693d01a93d254","modified":1457410506000},{"_id":"source/_posts/技术/设计模式/结构型模式/Decorator.jpg","hash":"680adc2e4ab6194dc7ab074719d7c46de8a75037","modified":1457419850000},{"_id":"source/_posts/技术/设计模式/结构型模式/Facade-Exmaple.png","hash":"771926fddb60a5c26cc9a4a5c5cc6e973155470e","modified":1457505752000},{"_id":"source/_posts/技术/设计模式/结构型模式/Facade.jpg","hash":"608e69b74b2403dfeb96fe4416f24b2114dd976e","modified":1457422151000},{"_id":"source/_posts/技术/设计模式/结构型模式/Proxy.jpg","hash":"3a9e9d0a8266db70d1e842a01511830832456efb","modified":1457425841000},{"_id":"source/_posts/技术/设计模式/结构型模式/Flyweight.jpg","hash":"83aae9f1a24e281e53229621cde46f5f5a20d733","modified":1457423252000},{"_id":"source/_posts/技术/设计模式/行为模式/Command.jpg","hash":"785e7d3fe7a7f016f8868fefacb7799d17e06a62","modified":1457431176000},{"_id":"source/_posts/技术/设计模式/行为模式/Memento.png","hash":"78aa09fc89847e3a39e6df82c5f3acbce4356974","modified":1457441269000},{"_id":"source/_posts/技术/设计模式/行为模式/State.png","hash":"fd57c6a0c0bb49a8b74638a6a1293333b8ac9cd7","modified":1457593455000},{"_id":"source/_posts/读书/书香之路/5662a6aee4b01db999f35018.png","hash":"cb022fdc4de5dd64dc4981efdeeaf75f7baf0299","modified":1501079916000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1500999735000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"9c02b655d468a5c645bdf6dcb598aa8605c23643","modified":1500999735000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/第一章海报.JPG","hash":"c1eb37c231a847c3f083dd10d544e06c7f089900","modified":1459157745000},{"_id":"source/_posts/技术/设计模式/结构型模式/Flyweight-example.png","hash":"f91156569e3f1f5ebd71e0ac5ee06e9676fc1759","modified":1457410269000},{"_id":"source/_posts/技术/设计模式/结构型模式/Bridge.png","hash":"f91156569e3f1f5ebd71e0ac5ee06e9676fc1759","modified":1457410269000},{"_id":"source/_posts/技术/设计模式/行为模式/Observer.png","hash":"a95c26d1b213a93986c7d9c4181f1718c77d8c4f","modified":1457441685000},{"_id":"source/_posts/技术/设计模式/行为模式/Visitor.png","hash":"d89bbbbacade79ee9f7343490a88bc92a71cbcb3","modified":1457597254000},{"_id":"source/_posts/扯淡/_huodong/u66.jpg","hash":"b3f22ab875dff708bcce422d227fd31e2bcbac70","modified":1459938929000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"9c02b655d468a5c645bdf6dcb598aa8605c23643","modified":1500999735000},{"_id":"source/_posts/扯淡/Color公寓一周岁了/first-version-web.png","hash":"7bde048cbbb21342123ad92fd0cd07a5ee6923be","modified":1458899634000},{"_id":"source/_posts/扯淡/_huodong/u79.png","hash":"e61e4cbac5731a2f0c0aff7ec9574aa3093c130a","modified":1459935256000},{"_id":"source/_posts/扯淡/_huodong/u32.png","hash":"ec8108931e74eb1c1414cb533fdf21ef31e8bb5f","modified":1459939450000},{"_id":"source/_posts/扯淡/_huodong/u28.png","hash":"905f1b00dd66f7f3f8adcc5107045bff2a710f66","modified":1459935256000},{"_id":"themes/maupassant/.git/objects/pack/pack-798005cfaced575fbc3b39a9f014f7ffd0cf17a9.pack","hash":"1ba8c9fc7223f885c430ba27595a9969ac008f61","modified":1500999735000},{"_id":"source/_posts/扯淡/_huodong/u48.jpg","hash":"f82e62fa7810620f3c7d06598920c1070563ab60","modified":1459937675000}],"Category":[{"name":"扯淡","_id":"cj5ls6kmg0029q0d4y2f0fwjo"},{"name":"技术","_id":"cj5ls6kpc003cq0d4q36t30hl"},{"name":"管理","_id":"cj5ls6ks30065q0d4outln6l2"},{"name":"读书","_id":"cj5ls6ksi006uq0d4lovuif9j"}],"Data":[],"Page":[{"title":"朱金衡的履历","date":"2017-07-26T16:30:18.000Z","_content":"\n# 联系方式\n\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 本科 / 中国科学技术大学·计算机系\n - 工作年限：5年\n - 技术博客：<http://blog.bookbook.in> \n - 期望职位：技术总监，构架师，项目负责人\n - 期望薪资：40k~50k/月\n - 期望城市：深圳\n\n\n# 这些比履历重要\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒资产管理有限公司\n__时间__：2015年3月~NOW\n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup\n__角色__：创始人/CTO/产品经理\n__人数__：研发:3，设计:2，产品:1\n__参与任务__：（以下全部独立完成）\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：武汉市光游网络有限公司\n__时间__：2013年12月~2014年6月\n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket\n__角色__：合伙人/CTO\n__人数__：前端2，后端2，美术设计2，策划1\n__项目类型__：Android+iOS棋牌类游戏\n__项目规模__：月流水1200w，总安装量1176436，日活7692\n__参与任务__：（以下全部独立完成）\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：北京领拓云合信息技术有限公司\n__时间__：2013年7月~2013年12月\n__技术__：iOS, protobuf, sqlite, obj-c\n__职位__：前端负责人\n__人数__：前端2，后端3，美术设计2，产品1\n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。\n__参与任务__：（以下全部独立完成）\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界\n__时间__：2011年7月~2013年6月\n__技术__：AS3，Web，Java\n__职位__：前端主程\n__人数__：前端5，后端6，美术设计5，策划7\n__项目类型__：大型RPG回合制页游.\n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器 \n__参与任务__：\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n在业余时间做了些个人项目，下面是有代表性的两个：\n1.《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]\n2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x, Android, iOS, PHP+Yii2`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 |`RDB, MySQL, HTML+CSS3+JS` | 开发过完整项目，了解基本原理，熟悉常见API       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\n","source":"about/index.md","raw":"---\ntitle: 朱金衡的履历\ndate: 2017-07-27 00:30:18\n---\n\n# 联系方式\n\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 本科 / 中国科学技术大学·计算机系\n - 工作年限：5年\n - 技术博客：<http://blog.bookbook.in> \n - 期望职位：技术总监，构架师，项目负责人\n - 期望薪资：40k~50k/月\n - 期望城市：深圳\n\n\n# 这些比履历重要\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒资产管理有限公司\n__时间__：2015年3月~NOW\n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup\n__角色__：创始人/CTO/产品经理\n__人数__：研发:3，设计:2，产品:1\n__参与任务__：（以下全部独立完成）\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：武汉市光游网络有限公司\n__时间__：2013年12月~2014年6月\n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket\n__角色__：合伙人/CTO\n__人数__：前端2，后端2，美术设计2，策划1\n__项目类型__：Android+iOS棋牌类游戏\n__项目规模__：月流水1200w，总安装量1176436，日活7692\n__参与任务__：（以下全部独立完成）\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：北京领拓云合信息技术有限公司\n__时间__：2013年7月~2013年12月\n__技术__：iOS, protobuf, sqlite, obj-c\n__职位__：前端负责人\n__人数__：前端2，后端3，美术设计2，产品1\n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。\n__参与任务__：（以下全部独立完成）\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界\n__时间__：2011年7月~2013年6月\n__技术__：AS3，Web，Java\n__职位__：前端主程\n__人数__：前端5，后端6，美术设计5，策划7\n__项目类型__：大型RPG回合制页游.\n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器 \n__参与任务__：\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n在业余时间做了些个人项目，下面是有代表性的两个：\n1.《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]\n2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x, Android, iOS, PHP+Yii2`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 |`RDB, MySQL, HTML+CSS3+JS` | 开发过完整项目，了解基本原理，熟悉常见API       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\n","updated":"2017-07-26T16:33:18.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj5ls6jfb0001q0d4gbfiua0z","content":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>Email：<a href=\"&#109;&#97;&#105;&#x6c;&#116;&#111;&#58;&#x6a;&#104;&#122;&#104;&#x75;&#x75;&#115;&#x74;&#99;&#64;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;\">&#x6a;&#104;&#122;&#104;&#x75;&#x75;&#115;&#x74;&#99;&#64;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>本科 / 中国科学技术大学·计算机系</li>\n<li>工作年限：5年</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n<li>期望职位：技术总监，构架师，项目负责人</li>\n<li>期望薪资：40k~50k/月</li>\n<li>期望城市：深圳</li>\n</ul>\n<h1 id=\"这些比履历重要\"><a href=\"#这些比履历重要\" class=\"headerlink\" title=\"这些比履历重要\"></a>这些比履历重要</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒资产管理有限公司<br><strong>时间</strong>：2015年3月~NOW<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：创始人/CTO/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：武汉市光游网络有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：合伙人/CTO<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：北京领拓云合信息技术有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：前端负责人<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><p>在业余时间做了些个人项目，下面是有代表性的两个：<br>1.《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a><br>2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></p>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x, Android, iOS, PHP+Yii2</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>RDB, MySQL, HTML+CSS3+JS</code></td>\n<td>开发过完整项目，了解基本原理，熟悉常见API</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>Email：<a href=\"&#109;&#97;&#105;&#x6c;&#116;&#111;&#58;&#x6a;&#104;&#122;&#104;&#x75;&#x75;&#115;&#x74;&#99;&#64;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;\">&#x6a;&#104;&#122;&#104;&#x75;&#x75;&#115;&#x74;&#99;&#64;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>本科 / 中国科学技术大学·计算机系</li>\n<li>工作年限：5年</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n<li>期望职位：技术总监，构架师，项目负责人</li>\n<li>期望薪资：40k~50k/月</li>\n<li>期望城市：深圳</li>\n</ul>\n<h1 id=\"这些比履历重要\"><a href=\"#这些比履历重要\" class=\"headerlink\" title=\"这些比履历重要\"></a>这些比履历重要</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒资产管理有限公司<br><strong>时间</strong>：2015年3月~NOW<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：创始人/CTO/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：武汉市光游网络有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：合伙人/CTO<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：北京领拓云合信息技术有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：前端负责人<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><p>在业余时间做了些个人项目，下面是有代表性的两个：<br>1.《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a><br>2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></p>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x, Android, iOS, PHP+Yii2</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>RDB, MySQL, HTML+CSS3+JS</code></td>\n<td>开发过完整项目，了解基本原理，熟悉常见API</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n"}],"Post":[{"date":"2016-01-19T11:20:00.000Z","status":"hide","title":"朱金衡的简历","_content":"\n# 联系方式\n\n- 手机：18600457626\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 朱金衡 / 男 / 1989 \n - 本科 / 中国科学技术大学·计算机系\n - 工作年限：5年\n - 技术博客：<http://blog.bookbook.in> \n\n# 写在前面\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒资产管理有限公司  \n__时间__：2015年3月~NOW  \n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup  \n__角色__：创始人/CTO/产品经理  \n__人数__：研发:3，设计:2，产品:1  \n__参与任务__：（以下全部独立完成）\n\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：武汉市光游网络有限公司   \n__时间__：2013年12月~2014年6月  \n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket  \n__角色__：合伙人/CTO  \n__人数__：前端2，后端2，美术设计2，策划1  \n__项目类型__：Android+iOS棋牌类游戏  \n__项目规模__：月流水1200w，总安装量1176436，日活7692  \n__参与任务__：（以下全部独立完成）\n\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：北京领拓云合信息技术有限公司  \n__时间__：2013年7月~2013年12月  \n__技术__：iOS, protobuf, sqlite, obj-c  \n__职位__：前端负责人  \n__人数__：前端2，后端3，美术设计2，产品1  \n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。   \n__参与任务__：（以下全部独立完成）\n\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界  \n__时间__：2011年7月~2013年6月  \n__技术__：AS3，Web，Java  \n__职位__：前端主程  \n__人数__：前端5，后端6，美术设计5，策划7  \n__项目类型__：大型RPG回合制页游.  \n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器，  \n__参与任务__：\n\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n在业余时间做了些个人项目，下面是有代表性的两个：\n\n1.《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]  \n2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x, Android, iOS, PHP+Yii2`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 |`RDB, MySQL, HTML+CSS3+JS` | 开发过完整项目，了解基本原理，熟悉常见API       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao","source":"_posts/me-brief.md","raw":"date: 2016-1-19 19:20\nstatus: hide\ntags: \n- iOS\n- Android\n- cocos2dx\n- Yii\n- PHP\n- MySQL\n- RDB\n- java\n- C/C++\n- Objective-C\n- scrum\ntitle: 朱金衡的简历\n---\n\n# 联系方式\n\n- 手机：18600457626\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 朱金衡 / 男 / 1989 \n - 本科 / 中国科学技术大学·计算机系\n - 工作年限：5年\n - 技术博客：<http://blog.bookbook.in> \n\n# 写在前面\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒资产管理有限公司  \n__时间__：2015年3月~NOW  \n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup  \n__角色__：创始人/CTO/产品经理  \n__人数__：研发:3，设计:2，产品:1  \n__参与任务__：（以下全部独立完成）\n\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：武汉市光游网络有限公司   \n__时间__：2013年12月~2014年6月  \n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket  \n__角色__：合伙人/CTO  \n__人数__：前端2，后端2，美术设计2，策划1  \n__项目类型__：Android+iOS棋牌类游戏  \n__项目规模__：月流水1200w，总安装量1176436，日活7692  \n__参与任务__：（以下全部独立完成）\n\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：北京领拓云合信息技术有限公司  \n__时间__：2013年7月~2013年12月  \n__技术__：iOS, protobuf, sqlite, obj-c  \n__职位__：前端负责人  \n__人数__：前端2，后端3，美术设计2，产品1  \n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。   \n__参与任务__：（以下全部独立完成）\n\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界  \n__时间__：2011年7月~2013年6月  \n__技术__：AS3，Web，Java  \n__职位__：前端主程  \n__人数__：前端5，后端6，美术设计5，策划7  \n__项目类型__：大型RPG回合制页游.  \n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器，  \n__参与任务__：\n\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n在业余时间做了些个人项目，下面是有代表性的两个：\n\n1.《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]  \n2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x, Android, iOS, PHP+Yii2`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 |`RDB, MySQL, HTML+CSS3+JS` | 开发过完整项目，了解基本原理，熟悉常见API       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao","slug":"me-brief","published":1,"updated":"2017-07-26T16:29:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6jf50000q0d4ha4qmye7","content":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：18600457626</li>\n<li>Email：<a href=\"&#109;&#97;&#x69;&#x6c;&#x74;&#111;&#x3a;&#106;&#104;&#x7a;&#104;&#117;&#x75;&#x73;&#x74;&#x63;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#106;&#104;&#x7a;&#104;&#117;&#x75;&#x73;&#x74;&#x63;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>朱金衡 / 男 / 1989 </li>\n<li>本科 / 中国科学技术大学·计算机系</li>\n<li>工作年限：5年</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n</ul>\n<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒资产管理有限公司<br><strong>时间</strong>：2015年3月~NOW<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：创始人/CTO/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：武汉市光游网络有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：合伙人/CTO<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：北京领拓云合信息技术有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：前端负责人<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器，<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><p>在业余时间做了些个人项目，下面是有代表性的两个：</p>\n<p>1.《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a><br>2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></p>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x, Android, iOS, PHP+Yii2</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>RDB, MySQL, HTML+CSS3+JS</code></td>\n<td>开发过完整项目，了解基本原理，熟悉常见API</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：18600457626</li>\n<li>Email：<a href=\"&#109;&#97;&#x69;&#x6c;&#x74;&#111;&#x3a;&#106;&#104;&#x7a;&#104;&#117;&#x75;&#x73;&#x74;&#x63;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#106;&#104;&#x7a;&#104;&#117;&#x75;&#x73;&#x74;&#x63;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>朱金衡 / 男 / 1989 </li>\n<li>本科 / 中国科学技术大学·计算机系</li>\n<li>工作年限：5年</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n</ul>\n<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒资产管理有限公司<br><strong>时间</strong>：2015年3月~NOW<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：创始人/CTO/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：武汉市光游网络有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：合伙人/CTO<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：北京领拓云合信息技术有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：前端负责人<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器，<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><p>在业余时间做了些个人项目，下面是有代表性的两个：</p>\n<p>1.《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a><br>2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></p>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x, Android, iOS, PHP+Yii2</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>RDB, MySQL, HTML+CSS3+JS</code></td>\n<td>开发过完整项目，了解基本原理，熟悉常见API</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n"},{"date":"2016-01-19T11:20:00.000Z","status":"public","title":"朱金衡的简历","_content":"\n# 联系方式\n\n- 手机：18600457626\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 朱金衡 / 男 / 1989 \n - 本科 / 中国科学技术大学·计算机系 2007~2011\n - 技术博客：<http://blog.bookbook.in> \n - 期望职位：技术总监，构架师，项目负责人\n - 期望薪资：40k~50k/月\n - 期望城市：深圳\n\n\n# 这些比履历重要\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，多平台通用的、普适的技术原理或思维方式，比如数理基础、数据结构、算法、设计模式等，以下简称为**普适技能**。\n2. **特定技能是招式**，可速成。对于任何特定技能，只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，我便可在一两个月内成为不错的一线程序员。我这么说是因为我成功过很多次，下面履历中的`iOS,Android,cocos2d-x,PHP`项目都是这么过来的。内功扎实的前提下，学习**特定技能**就是熟悉和使用API的过程，都是无需消化的死知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**招式的学习很容易，为的是满足特定项目需求；内功的修炼是根本，让程序员有更强的可塑性，拥有更高层面的设计能力**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒网络科技有限公司\n__时间__：2015年3月~2016年12月\n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup\n__角色__：技术总监/产品经理\n__人数__：研发:3，设计:2，产品:1\n__参与任务__：（以下全部独立完成）\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：深圳市迈芒网络科技有限公司\n__时间__：2013年12月~2014年6月\n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket\n__角色__：技术总监\n__人数__：前端2，后端2，美术设计2，策划1\n__项目类型__：Android+iOS棋牌类游戏\n__项目规模__：月流水1200w，总安装量1176436，日活7692\n__参与任务__：（以下全部独立完成）\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：深圳市迈芒网络科技有限公司\n__时间__：2013年7月~2013年12月\n__技术__：iOS, protobuf, sqlite, obj-c\n__职位__：iOS组长\n__人数__：前端2，后端3，美术设计2，产品1\n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。\n__参与任务__：（以下全部独立完成）\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界\n__时间__：2011年7月~2013年6月\n__技术__：AS3，Web，Java\n__职位__：前端主程\n__人数__：前端5，后端6，美术设计5，策划7\n__项目类型__：大型RPG回合制页游.\n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器 \n__参与任务__：\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n3. 《opencv嘴巴区域识别》：利用opencv的分类训练器，完成对嘴巴区域的图像识别。参考[我的老博客](http://www.cnblogs.com/jhzhu/tag/opencv/)\n4. 《AS3性能分析报告》：工作前两年一直在写AS3, 因为引擎优化的需求比较苛刻, 就逐渐深入到了语法性能的级别，也就有了这次研究: [《AS3 语法性能差异分析报告》](http://www.cnblogs.com/jhzhu/archive/2013/05/19/3086695.html)\n5. 《五官定位》：此项目是大学实验室的一个项目，由我独自完成。内容是基于颜色特征的人脸检测，根据肤色像素在水平和竖直方向上的统计分布，来判断眼睛嘴巴的位置。\n1. 《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]\n2. 《安全宝》：Android Native的安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。好友可获取近24小时此人的位置轨迹。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 | `Android, iOS, PHP+Yii2, RDB, MySQL` | 主导过完整项目，了解平台原理，熟练使用常见API，了解部分源码。市面上常见项目，可以独自完成。       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina, HTML+CSS3+JS` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **数据结构、算法、数理基础扎实**。常见数据结构（数组、链表、树、图），及与其相关的算法都很熟悉，可灵活应变。涉及过矩阵、模式识别、图像处理、分类器等相关的研究。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，里程碑延期时间不超过30%。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao","source":"_posts/me-huawei.md","raw":"date: 2016-1-19 19:20\nstatus: public\ntags: \n- iOS\n- Android\n- cocos2dx\n- Yii\n- PHP\n- MySQL\n- RDB\n- java\n- C/C++\n- Objective-C\n- scrum\ntitle: 朱金衡的简历\n---\n\n# 联系方式\n\n- 手机：18600457626\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 朱金衡 / 男 / 1989 \n - 本科 / 中国科学技术大学·计算机系 2007~2011\n - 技术博客：<http://blog.bookbook.in> \n - 期望职位：技术总监，构架师，项目负责人\n - 期望薪资：40k~50k/月\n - 期望城市：深圳\n\n\n# 这些比履历重要\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，多平台通用的、普适的技术原理或思维方式，比如数理基础、数据结构、算法、设计模式等，以下简称为**普适技能**。\n2. **特定技能是招式**，可速成。对于任何特定技能，只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，我便可在一两个月内成为不错的一线程序员。我这么说是因为我成功过很多次，下面履历中的`iOS,Android,cocos2d-x,PHP`项目都是这么过来的。内功扎实的前提下，学习**特定技能**就是熟悉和使用API的过程，都是无需消化的死知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**招式的学习很容易，为的是满足特定项目需求；内功的修炼是根本，让程序员有更强的可塑性，拥有更高层面的设计能力**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒网络科技有限公司\n__时间__：2015年3月~2016年12月\n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup\n__角色__：技术总监/产品经理\n__人数__：研发:3，设计:2，产品:1\n__参与任务__：（以下全部独立完成）\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：深圳市迈芒网络科技有限公司\n__时间__：2013年12月~2014年6月\n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket\n__角色__：技术总监\n__人数__：前端2，后端2，美术设计2，策划1\n__项目类型__：Android+iOS棋牌类游戏\n__项目规模__：月流水1200w，总安装量1176436，日活7692\n__参与任务__：（以下全部独立完成）\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：深圳市迈芒网络科技有限公司\n__时间__：2013年7月~2013年12月\n__技术__：iOS, protobuf, sqlite, obj-c\n__职位__：iOS组长\n__人数__：前端2，后端3，美术设计2，产品1\n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。\n__参与任务__：（以下全部独立完成）\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界\n__时间__：2011年7月~2013年6月\n__技术__：AS3，Web，Java\n__职位__：前端主程\n__人数__：前端5，后端6，美术设计5，策划7\n__项目类型__：大型RPG回合制页游.\n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器 \n__参与任务__：\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n3. 《opencv嘴巴区域识别》：利用opencv的分类训练器，完成对嘴巴区域的图像识别。参考[我的老博客](http://www.cnblogs.com/jhzhu/tag/opencv/)\n4. 《AS3性能分析报告》：工作前两年一直在写AS3, 因为引擎优化的需求比较苛刻, 就逐渐深入到了语法性能的级别，也就有了这次研究: [《AS3 语法性能差异分析报告》](http://www.cnblogs.com/jhzhu/archive/2013/05/19/3086695.html)\n5. 《五官定位》：此项目是大学实验室的一个项目，由我独自完成。内容是基于颜色特征的人脸检测，根据肤色像素在水平和竖直方向上的统计分布，来判断眼睛嘴巴的位置。\n1. 《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]\n2. 《安全宝》：Android Native的安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。好友可获取近24小时此人的位置轨迹。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 | `Android, iOS, PHP+Yii2, RDB, MySQL` | 主导过完整项目，了解平台原理，熟练使用常见API，了解部分源码。市面上常见项目，可以独自完成。       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina, HTML+CSS3+JS` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **数据结构、算法、数理基础扎实**。常见数据结构（数组、链表、树、图），及与其相关的算法都很熟悉，可灵活应变。涉及过矩阵、模式识别、图像处理、分类器等相关的研究。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，里程碑延期时间不超过30%。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao","slug":"me-huawei","published":1,"updated":"2017-07-26T16:29:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6jfc0002q0d4gcvxhlxq","content":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：18600457626</li>\n<li>Email：<a href=\"&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x6a;&#x68;&#122;&#104;&#117;&#117;&#x73;&#x74;&#99;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6a;&#x68;&#122;&#104;&#117;&#117;&#x73;&#x74;&#99;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>朱金衡 / 男 / 1989 </li>\n<li>本科 / 中国科学技术大学·计算机系 2007~2011</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n<li>期望职位：技术总监，构架师，项目负责人</li>\n<li>期望薪资：40k~50k/月</li>\n<li>期望城市：深圳</li>\n</ul>\n<h1 id=\"这些比履历重要\"><a href=\"#这些比履历重要\" class=\"headerlink\" title=\"这些比履历重要\"></a>这些比履历重要</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，多平台通用的、普适的技术原理或思维方式，比如数理基础、数据结构、算法、设计模式等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是招式</strong>，可速成。对于任何特定技能，只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，我便可在一两个月内成为不错的一线程序员。我这么说是因为我成功过很多次，下面履历中的<code>iOS,Android,cocos2d-x,PHP</code>项目都是这么过来的。内功扎实的前提下，学习<strong>特定技能</strong>就是熟悉和使用API的过程，都是无需消化的死知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>招式的学习很容易，为的是满足特定项目需求；内功的修炼是根本，让程序员有更强的可塑性，拥有更高层面的设计能力</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒网络科技有限公司<br><strong>时间</strong>：2015年3月~2016年12月<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：技术总监/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：深圳市迈芒网络科技有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：技术总监<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：深圳市迈芒网络科技有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：iOS组长<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><ol>\n<li>《opencv嘴巴区域识别》：利用opencv的分类训练器，完成对嘴巴区域的图像识别。参考<a href=\"http://www.cnblogs.com/jhzhu/tag/opencv/\" target=\"_blank\" rel=\"external\">我的老博客</a></li>\n<li>《AS3性能分析报告》：工作前两年一直在写AS3, 因为引擎优化的需求比较苛刻, 就逐渐深入到了语法性能的级别，也就有了这次研究: <a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/19/3086695.html\" target=\"_blank\" rel=\"external\">《AS3 语法性能差异分析报告》</a></li>\n<li>《五官定位》：此项目是大学实验室的一个项目，由我独自完成。内容是基于颜色特征的人脸检测，根据肤色像素在水平和竖直方向上的统计分布，来判断眼睛嘴巴的位置。</li>\n<li>《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></li>\n<li>《安全宝》：Android Native的安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。好友可获取近24小时此人的位置轨迹。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></li>\n</ol>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>Android, iOS, PHP+Yii2, RDB, MySQL</code></td>\n<td>主导过完整项目，了解平台原理，熟练使用常见API，了解部分源码。市面上常见项目，可以独自完成。</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina, HTML+CSS3+JS</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>数据结构、算法、数理基础扎实</strong>。常见数据结构（数组、链表、树、图），及与其相关的算法都很熟悉，可灵活应变。涉及过矩阵、模式识别、图像处理、分类器等相关的研究。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，里程碑延期时间不超过30%。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：18600457626</li>\n<li>Email：<a href=\"&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x6a;&#x68;&#122;&#104;&#117;&#117;&#x73;&#x74;&#99;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6a;&#x68;&#122;&#104;&#117;&#117;&#x73;&#x74;&#99;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>朱金衡 / 男 / 1989 </li>\n<li>本科 / 中国科学技术大学·计算机系 2007~2011</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n<li>期望职位：技术总监，构架师，项目负责人</li>\n<li>期望薪资：40k~50k/月</li>\n<li>期望城市：深圳</li>\n</ul>\n<h1 id=\"这些比履历重要\"><a href=\"#这些比履历重要\" class=\"headerlink\" title=\"这些比履历重要\"></a>这些比履历重要</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，多平台通用的、普适的技术原理或思维方式，比如数理基础、数据结构、算法、设计模式等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是招式</strong>，可速成。对于任何特定技能，只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，我便可在一两个月内成为不错的一线程序员。我这么说是因为我成功过很多次，下面履历中的<code>iOS,Android,cocos2d-x,PHP</code>项目都是这么过来的。内功扎实的前提下，学习<strong>特定技能</strong>就是熟悉和使用API的过程，都是无需消化的死知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>招式的学习很容易，为的是满足特定项目需求；内功的修炼是根本，让程序员有更强的可塑性，拥有更高层面的设计能力</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒网络科技有限公司<br><strong>时间</strong>：2015年3月~2016年12月<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：技术总监/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：深圳市迈芒网络科技有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：技术总监<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：深圳市迈芒网络科技有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：iOS组长<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><ol>\n<li>《opencv嘴巴区域识别》：利用opencv的分类训练器，完成对嘴巴区域的图像识别。参考<a href=\"http://www.cnblogs.com/jhzhu/tag/opencv/\" target=\"_blank\" rel=\"external\">我的老博客</a></li>\n<li>《AS3性能分析报告》：工作前两年一直在写AS3, 因为引擎优化的需求比较苛刻, 就逐渐深入到了语法性能的级别，也就有了这次研究: <a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/19/3086695.html\" target=\"_blank\" rel=\"external\">《AS3 语法性能差异分析报告》</a></li>\n<li>《五官定位》：此项目是大学实验室的一个项目，由我独自完成。内容是基于颜色特征的人脸检测，根据肤色像素在水平和竖直方向上的统计分布，来判断眼睛嘴巴的位置。</li>\n<li>《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></li>\n<li>《安全宝》：Android Native的安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。好友可获取近24小时此人的位置轨迹。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></li>\n</ol>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>Android, iOS, PHP+Yii2, RDB, MySQL</code></td>\n<td>主导过完整项目，了解平台原理，熟练使用常见API，了解部分源码。市面上常见项目，可以独自完成。</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina, HTML+CSS3+JS</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>数据结构、算法、数理基础扎实</strong>。常见数据结构（数组、链表、树、图），及与其相关的算法都很熟悉，可灵活应变。涉及过矩阵、模式识别、图像处理、分类器等相关的研究。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，里程碑延期时间不超过30%。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n"},{"date":"2016-01-19T11:20:00.000Z","status":"public","title":"朱金衡的简历","_content":"\n# 联系方式\n\n- 手机：18600457626\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 朱金衡 / 男 / 1989 \n - 本科 / 中国科学技术大学·计算机系\n - 工作年限：5年\n - 技术博客：<http://blog.bookbook.in> \n - 期望职位：技术总监，构架师，项目负责人\n - 期望薪资：40k~50k/月\n - 期望城市：深圳\n\n\n# 这些比履历重要\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒资产管理有限公司\n__时间__：2015年3月~NOW\n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup\n__角色__：创始人/CTO/产品经理\n__人数__：研发:3，设计:2，产品:1\n__参与任务__：（以下全部独立完成）\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：武汉市光游网络有限公司\n__时间__：2013年12月~2014年6月\n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket\n__角色__：合伙人/CTO\n__人数__：前端2，后端2，美术设计2，策划1\n__项目类型__：Android+iOS棋牌类游戏\n__项目规模__：月流水1200w，总安装量1176436，日活7692\n__参与任务__：（以下全部独立完成）\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：北京领拓云合信息技术有限公司\n__时间__：2013年7月~2013年12月\n__技术__：iOS, protobuf, sqlite, obj-c\n__职位__：前端负责人\n__人数__：前端2，后端3，美术设计2，产品1\n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。\n__参与任务__：（以下全部独立完成）\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界\n__时间__：2011年7月~2013年6月\n__技术__：AS3，Web，Java\n__职位__：前端主程\n__人数__：前端5，后端6，美术设计5，策划7\n__项目类型__：大型RPG回合制页游.\n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器 \n__参与任务__：\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n在业余时间做了些个人项目，下面是有代表性的两个：\n1.《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]\n2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x, Android, iOS, PHP+Yii2`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 |`RDB, MySQL, HTML+CSS3+JS` | 开发过完整项目，了解基本原理，熟悉常见API       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao","source":"_posts/me.md","raw":"date: 2016-1-19 19:20\nstatus: public\ntags: \n- iOS\n- Android\n- cocos2dx\n- Yii\n- PHP\n- MySQL\n- RDB\n- java\n- C/C++\n- Objective-C\n- scrum\ntitle: 朱金衡的简历\n---\n\n# 联系方式\n\n- 手机：18600457626\n- Email：<jhzhuustc@gmail.com>\n- 微信：zjh1943\n\n# 个人信息\n\n - 朱金衡 / 男 / 1989 \n - 本科 / 中国科学技术大学·计算机系\n - 工作年限：5年\n - 技术博客：<http://blog.bookbook.in> \n - 期望职位：技术总监，构架师，项目负责人\n - 期望薪资：40k~50k/月\n - 期望城市：深圳\n\n\n# 这些比履历重要\n\n以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n下面我的工作履历，也体现了我对程序员个人发展的看法：**学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人**。\n\n# 工作经历\n\n## 《COLOR公寓官网》\n\n__公司__：深圳市迈芒资产管理有限公司\n__时间__：2015年3月~NOW\n__技术__：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup\n__角色__：创始人/CTO/产品经理\n__人数__：研发:3，设计:2，产品:1\n__参与任务__：（以下全部独立完成）\n  1. 数据库设计。[查看数据库文档][COLOR公寓数据库设计]\n  3. 开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。\n  4. 产品原型设计。[查看产品原型](http://prototype.dev.color520.com/ts/#p=my-complaint)\n  5. 模块分割、任务分配、进度管理、招聘。\n  6. RESTful接口设计，授权。（供手机端访问）\n\n[项目详情][COLOR公寓介绍] \n\n\n## 《全民斗地主》\n\n__公司__：武汉市光游网络有限公司\n__时间__：2013年12月~2014年6月\n__技术__：cocos2d-x, iOS, Android, C/C++, Unix Socket\n__角色__：合伙人/CTO\n__人数__：前端2，后端2，美术设计2，策划1\n__项目类型__：Android+iOS棋牌类游戏\n__项目规模__：月流水1200w，总安装量1176436，日活7692\n__参与任务__：（以下全部独立完成）\n1. 原创前端框架NLDV。[查看框架介绍][NLDV框架介绍]\n2. 针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知\n4. 前后端通讯接口设计\n5. 斗地主主要逻辑、界面、特效开发。\n5. 多分辨率适配\n6. 多平台打包脚本，通过XLS配置文件一键打包\n7. 测试机器人编写\n8. 模块分割、任务分配、进度管理、招聘。\n\n[项目详情][全民斗地主介绍]\n\n\n\n## 《叨叨》\n\n__公司__：北京领拓云合信息技术有限公司\n__时间__：2013年7月~2013年12月\n__技术__：iOS, protobuf, sqlite, obj-c\n__职位__：前端负责人\n__人数__：前端2，后端3，美术设计2，产品1\n__项目介绍__：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。\n__参与任务__：（以下全部独立完成）\n1. 视频源信息的在线抓取。\n2. 多端同步播放器的研发。\n3. 前后端通信接口的确定。\n3. IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。\n5. 加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.\n\n[项目详情][叨叨项目介绍]\n\n\n\n## 《战·三国》\n\n__公司__：完美世界\n__时间__：2011年7月~2013年6月\n__技术__：AS3，Web，Java\n__职位__：前端主程\n__人数__：前端5，后端6，美术设计5，策划7\n__项目类型__：大型RPG回合制页游.\n__项目规模__：月流水4000万，总用户数10+万，同时在线1000人/服务器 \n__参与任务__：\n  1. BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）\n  2. 基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）\n  3. 游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）\n  4. 聊天系统、图文混排。（独立完成）\n\n[了解项目详情][战三国介绍]\n\n\n## 个人项目\n\n在业余时间做了些个人项目，下面是有代表性的两个：\n1.《Android录音机》：Android Native的录音工具，设计新颖。[点此查看][AndroidL录音机介绍]\n2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。[点此查看][安全宝介绍]\n\n\n# 我的技能栈\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a> \n\n| 技能等级 | 技能 | 技能说明 |\n|----------|------|----------|\n| 精通     | `AS3, cocos2d-x, Android, iOS, PHP+Yii2`| 主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。 |\n|    熟练使用 |`RDB, MySQL, HTML+CSS3+JS` | 开发过完整项目，了解基本原理，熟悉常见API       | \n|    简单使用      |  `openCV, 图像识别, APS.NET, Hibernate, Mina` | 开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。    | \n\n\n\n# 自我评价\n\n1. **学习能力强，技术全面**。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。\n2. **擅长总结，有较强的构架能力**。个人总结的[《NLDV前端框架》][NLDV框架介绍]已经过多个项目验证，结构清晰、易于迭代。\n3. **善于领导中小型研发团队**。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。\n4. **有良好的设计感，注重用户体验**。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don't Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：[COLOR公寓官网](http://www.color520.com)，[AndroidL录音机][AndroidL录音机介绍]。\n\n\n# 其它\n\n1. 英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。\n2. 爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。[读书笔记](http://blog.bookbook.in/tag/读书笔记)\n\n\n\n\n[COLOR公寓介绍]: http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\n[战三国介绍]: http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\n[泡泡龙介绍]: http://blog.bookbook.in/resume/泡泡龙技术介绍.md\n[全民斗地主介绍]: http://blog.bookbook.in/resume/全民斗地主技术介绍.md \n[COLOR公寓数据库设计]: http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\n[NLDV框架介绍]: http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\n[叨叨项目介绍]: http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\n[AndroidL录音机介绍]: http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\n[安全宝介绍]: http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao","slug":"me","published":1,"updated":"2017-07-26T16:29:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6jfg0004q0d4ficaxwz0","content":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：18600457626</li>\n<li>Email：<a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#x6a;&#104;&#122;&#104;&#x75;&#117;&#115;&#x74;&#99;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#x6a;&#104;&#122;&#104;&#x75;&#117;&#115;&#x74;&#99;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>朱金衡 / 男 / 1989 </li>\n<li>本科 / 中国科学技术大学·计算机系</li>\n<li>工作年限：5年</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n<li>期望职位：技术总监，构架师，项目负责人</li>\n<li>期望薪资：40k~50k/月</li>\n<li>期望城市：深圳</li>\n</ul>\n<h1 id=\"这些比履历重要\"><a href=\"#这些比履历重要\" class=\"headerlink\" title=\"这些比履历重要\"></a>这些比履历重要</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒资产管理有限公司<br><strong>时间</strong>：2015年3月~NOW<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：创始人/CTO/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：武汉市光游网络有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：合伙人/CTO<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：北京领拓云合信息技术有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：前端负责人<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><p>在业余时间做了些个人项目，下面是有代表性的两个：<br>1.《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a><br>2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></p>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x, Android, iOS, PHP+Yii2</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>RDB, MySQL, HTML+CSS3+JS</code></td>\n<td>开发过完整项目，了解基本原理，熟悉常见API</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：18600457626</li>\n<li>Email：<a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#x6a;&#104;&#122;&#104;&#x75;&#117;&#115;&#x74;&#99;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#x6a;&#104;&#122;&#104;&#x75;&#117;&#115;&#x74;&#99;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a></li>\n<li>微信：zjh1943</li>\n</ul>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>朱金衡 / 男 / 1989 </li>\n<li>本科 / 中国科学技术大学·计算机系</li>\n<li>工作年限：5年</li>\n<li>技术博客：<a href=\"http://blog.bookbook.in\" target=\"_blank\" rel=\"external\">http://blog.bookbook.in</a> </li>\n<li>期望职位：技术总监，构架师，项目负责人</li>\n<li>期望薪资：40k~50k/月</li>\n<li>期望城市：深圳</li>\n</ul>\n<h1 id=\"这些比履历重要\"><a href=\"#这些比履历重要\" class=\"headerlink\" title=\"这些比履历重要\"></a>这些比履历重要</h1><p>以下是我对技术人员自身修养的思考。为了节省您的时间，您若认可以下观点，再继续看我的简历。</p>\n<ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<p>下面我的工作履历，也体现了我对程序员个人发展的看法：<strong>学习技能很容易，它不是目的，在多样的技能学习中融汇贯通，达到全盘把握，才能称为合格的技术负责人</strong>。</p>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"《COLOR公寓官网》\"><a href=\"#《COLOR公寓官网》\" class=\"headerlink\" title=\"《COLOR公寓官网》\"></a>《COLOR公寓官网》</h2><p><strong>公司</strong>：深圳市迈芒资产管理有限公司<br><strong>时间</strong>：2015年3月~NOW<br><strong>技术</strong>：PHP，Yii2, MySQL，Linux, Nginx, XtraBackup<br><strong>角色</strong>：创始人/CTO/产品经理<br><strong>人数</strong>：研发:3，设计:2，产品:1<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>数据库设计。<a href=\"http://blog.bookbook.in/resume/colorgong-yu-shu-ju-ku-she-ji\" target=\"_blank\" rel=\"external\">查看数据库文档</a></li>\n<li>开发系统：房屋管理、合同管理、租金交付、服务预约、管家任务系统。</li>\n<li>产品原型设计。<a href=\"http://prototype.dev.color520.com/ts/#p=my-complaint\" target=\"_blank\" rel=\"external\">查看产品原型</a></li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n<li>RESTful接口设计，授权。（供手机端访问）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/colorgong-yu-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a> </p>\n<h2 id=\"《全民斗地主》\"><a href=\"#《全民斗地主》\" class=\"headerlink\" title=\"《全民斗地主》\"></a>《全民斗地主》</h2><p><strong>公司</strong>：武汉市光游网络有限公司<br><strong>时间</strong>：2013年12月~2014年6月<br><strong>技术</strong>：cocos2d-x, iOS, Android, C/C++, Unix Socket<br><strong>角色</strong>：合伙人/CTO<br><strong>人数</strong>：前端2，后端2，美术设计2，策划1<br><strong>项目类型</strong>：Android+iOS棋牌类游戏<br><strong>项目规模</strong>：月流水1200w，总安装量1176436，日活7692<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>原创前端框架NLDV。<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">查看框架介绍</a></li>\n<li>针对Win32、Android、iOS三个平台socket的封装。支持断线重连、实时多连接、消息通知和断线通知</li>\n<li>前后端通讯接口设计</li>\n<li>斗地主主要逻辑、界面、特效开发。</li>\n<li>多分辨率适配</li>\n<li>多平台打包脚本，通过XLS配置文件一键打包</li>\n<li>测试机器人编写</li>\n<li>模块分割、任务分配、进度管理、招聘。</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/全民斗地主技术介绍.md\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《叨叨》\"><a href=\"#《叨叨》\" class=\"headerlink\" title=\"《叨叨》\"></a>《叨叨》</h2><p><strong>公司</strong>：北京领拓云合信息技术有限公司<br><strong>时间</strong>：2013年7月~2013年12月<br><strong>技术</strong>：iOS, protobuf, sqlite, obj-c<br><strong>职位</strong>：前端负责人<br><strong>人数</strong>：前端2，后端3，美术设计2，产品1<br><strong>项目介绍</strong>：《叨叨》是一款主打朋友间同步看视频的社交应用, 同时还支持通用IM的主要功能。<br><strong>参与任务</strong>：（以下全部独立完成）</p>\n<ol>\n<li>视频源信息的在线抓取。</li>\n<li>多端同步播放器的研发。</li>\n<li>前后端通信接口的确定。</li>\n<li>IM系统的开发。包括文字、图像、视频的发送，本地好友数据库的维护, 本地多媒体资源(图片,视频)的管理。</li>\n<li>加入项目前, 我对Obj-C一无所知, 借助于官方文档、大量优秀的开源组件和自己的努力钻研, 这款产品在三个月内就发布到了AppStore.</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/tao-tao-xiang-mu-jie-shao\" target=\"_blank\" rel=\"external\">项目详情</a></p>\n<h2 id=\"《战·三国》\"><a href=\"#《战·三国》\" class=\"headerlink\" title=\"《战·三国》\"></a>《战·三国》</h2><p><strong>公司</strong>：完美世界<br><strong>时间</strong>：2011年7月~2013年6月<br><strong>技术</strong>：AS3，Web，Java<br><strong>职位</strong>：前端主程<br><strong>人数</strong>：前端5，后端6，美术设计5，策划7<br><strong>项目类型</strong>：大型RPG回合制页游.<br><strong>项目规模</strong>：月流水4000万，总用户数10+万，同时在线1000人/服务器<br><strong>参与任务</strong>：</p>\n<ol>\n<li>BoltEngine 2D地图引擎开发、维护。配套的地图编辑器开发。（参与）</li>\n<li>基于开源代码的游戏UI库开发。配套的UI编辑器开发。（独立完成）</li>\n<li>游戏主要模块的功能开发：角色系统、任务系统、背包系统、聊天系统、跨服竞技场。（独立完成）</li>\n<li>聊天系统、图文混排。（独立完成）</li>\n</ol>\n<p><a href=\"http://blog.bookbook.in/resume/zhan-san-guo-ji-zhu-jie-shao\" target=\"_blank\" rel=\"external\">了解项目详情</a></p>\n<h2 id=\"个人项目\"><a href=\"#个人项目\" class=\"headerlink\" title=\"个人项目\"></a>个人项目</h2><p>在业余时间做了些个人项目，下面是有代表性的两个：<br>1.《Android录音机》：Android Native的录音工具，设计新颖。<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a><br>2.《安全宝》：安全工具，当用户用户对未来某段时间的安全有顾虑时，可以设置安全闹钟，若在规定时间未正常解锁闹钟，会自动短信通知好友。个人花1个月业余时间开发，包括前后端。<a href=\"http://blog.bookbook.in/resume/an-quan-bao-ying-yong-jie-shao\" target=\"_blank\" rel=\"external\">点此查看</a></p>\n<h1 id=\"我的技能栈\"><a href=\"#我的技能栈\" class=\"headerlink\" title=\"我的技能栈\"></a>我的技能栈</h1><p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"http://blog.bookbook.in/%E6%89%AF%E6%B7%A1/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a> </p>\n<table>\n<thead>\n<tr>\n<th>技能等级</th>\n<th>技能</th>\n<th>技能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>精通</td>\n<td><code>AS3, cocos2d-x, Android, iOS, PHP+Yii2</code></td>\n<td>主导过大型完整项目。对于开源平台，精读源码、理解原理、并能进行功能更改和性能优化；对于非开源平台，理解平台构架、设计理念，能完美实现常见功能、针对平台进行性能优化、规避平台自有bug。</td>\n</tr>\n<tr>\n<td>熟练使用</td>\n<td><code>RDB, MySQL, HTML+CSS3+JS</code></td>\n<td>开发过完整项目，了解基本原理，熟悉常见API</td>\n</tr>\n<tr>\n<td>简单使用</td>\n<td><code>openCV, 图像识别, APS.NET, Hibernate, Mina</code></td>\n<td>开发过小型项目或个人项目，使用其部分功能，其他功能需要查阅文档。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ol>\n<li><strong>学习能力强，技术全面</strong>。以上项目中，叨叨（iOS）、全民斗地主（cocos2d-x）、COLOR公寓官网(php)三个项目，我从零基础学习到上线发布，最多只花3个月。</li>\n<li><strong>擅长总结，有较强的构架能力</strong>。个人总结的<a href=\"http://blog.bookbook.in/ji-zhu/-other-cong-0kai-shi-gou-jia-qian-duan-nldvkuang-jia\" target=\"_blank\" rel=\"external\">《NLDV前端框架》</a>已经过多个项目验证，结构清晰、易于迭代。</li>\n<li><strong>善于领导中小型研发团队</strong>。擅长使用Scrum极限编程思想来领导团队，让团队每日都有有效的沟通，了解项目的阻碍因素，还能让成员时刻明确自己的任务。成功领导4个项目，均按照里程碑高质量完成。</li>\n<li><strong>有良好的设计感，注重用户体验</strong>。深入学习过10多本经典设计书籍（包括《设计中的设计》、《写给大家看的设计书》、《Don’t Make Me Think》、《文字设计的原理》等），并在实际项目中熟练运用。成功案例有：<a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">COLOR公寓官网</a>，<a href=\"http://blog.bookbook.in/resume/androidllu-yin-ji-jie-shao\" target=\"_blank\" rel=\"external\">AndroidL录音机</a>。</li>\n</ol>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><ol>\n<li>英文阅读能力良好，阅读英文书籍、原版文档，StackOverflow上查找和询问技术问题毫无压力。Speak能力一般。</li>\n<li>爱好广泛，看书、篮球、台球、游泳我都比较擅长，这些爱好可以很好地帮我分担工作压力，保持良好的状态。<a href=\"http://blog.bookbook.in/tag/读书笔记\" target=\"_blank\" rel=\"external\">读书笔记</a></li>\n</ol>\n"},{"date":"2016-03-18T03:56:00.000Z","status":"hide","title":"薪水记录","_content":"\n# 薪水记录\n\n* 11年6月~12年1月@完美世界：7.5k*14=10.5w \n* 12年2月~13年1月@完美世界：11k*14=15.4w\n* 13年2月~13年8月@完美世界：14k*16=22.4w\n* 13年9月~14年1月@领托云合：20k*14=28w\n* 14年2月~15年2月@自己创业：8k*14=11.2w\n* 15年3月~16年3月@自己创业：20k*14+其它=30w","source":"_posts/salary.md","raw":"date: 2016-3-18 11:56\nstatus: hide\ntitle: 薪水记录\n---\n\n# 薪水记录\n\n* 11年6月~12年1月@完美世界：7.5k*14=10.5w \n* 12年2月~13年1月@完美世界：11k*14=15.4w\n* 13年2月~13年8月@完美世界：14k*16=22.4w\n* 13年9月~14年1月@领托云合：20k*14=28w\n* 14年2月~15年2月@自己创业：8k*14=11.2w\n* 15年3月~16年3月@自己创业：20k*14+其它=30w","slug":"salary","published":1,"updated":"2016-12-12T16:47:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6jhd0005q0d4bpap2o9p","content":"<h1 id=\"薪水记录\"><a href=\"#薪水记录\" class=\"headerlink\" title=\"薪水记录\"></a>薪水记录</h1><ul>\n<li>11年6月~12年1月@完美世界：7.5k*14=10.5w </li>\n<li>12年2月~13年1月@完美世界：11k*14=15.4w</li>\n<li>13年2月~13年8月@完美世界：14k*16=22.4w</li>\n<li>13年9月~14年1月@领托云合：20k*14=28w</li>\n<li>14年2月~15年2月@自己创业：8k*14=11.2w</li>\n<li>15年3月~16年3月@自己创业：20k*14+其它=30w</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"薪水记录\"><a href=\"#薪水记录\" class=\"headerlink\" title=\"薪水记录\"></a>薪水记录</h1><ul>\n<li>11年6月~12年1月@完美世界：7.5k*14=10.5w </li>\n<li>12年2月~13年1月@完美世界：11k*14=15.4w</li>\n<li>13年2月~13年8月@完美世界：14k*16=22.4w</li>\n<li>13年9月~14年1月@领托云合：20k*14=28w</li>\n<li>14年2月~15年2月@自己创业：8k*14=11.2w</li>\n<li>15年3月~16年3月@自己创业：20k*14+其它=30w</li>\n</ul>\n"},{"_content":"Status: public\ntags: Andorid, Recorder\nLayout: one_page_site\ndescription: 个人业余项目，一款极致简洁的录音机\n\n\n一款极致简洁的录音机\n\nKeywords: Gradle, Fragment, Layout, Resource, Manifest, Service, Animation, Ripple Effect, UI Inject, androidannotations\n\n\n[视频演示](http://7ximqb.com1.z0.glb.clouddn.com/AndroidL_Recorder.mp4 \"960*540\")\n\n![](recorder.jpg)\n\n\n\n\n\n\n","source":"_posts/resume/AndroidL录音机介绍.md","raw":"Status: public\ntags: Andorid, Recorder\nLayout: one_page_site\ndescription: 个人业余项目，一款极致简洁的录音机\n\n\n一款极致简洁的录音机\n\nKeywords: Gradle, Fragment, Layout, Resource, Manifest, Service, Animation, Ripple Effect, UI Inject, androidannotations\n\n\n[视频演示](http://7ximqb.com1.z0.glb.clouddn.com/AndroidL_Recorder.mp4 \"960*540\")\n\n![](recorder.jpg)\n\n\n\n\n\n\n","slug":"resume/AndroidL录音机介绍","published":1,"date":"2016-01-27T15:32:15.000Z","updated":"2017-07-26T13:11:29.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kki001zq0d44p36ncff","content":"<p>Status: public<br>tags: Andorid, Recorder<br>Layout: one_page_site<br>description: 个人业余项目，一款极致简洁的录音机</p>\n<p>一款极致简洁的录音机</p>\n<p>Keywords: Gradle, Fragment, Layout, Resource, Manifest, Service, Animation, Ripple Effect, UI Inject, androidannotations</p>\n<p><a href=\"http://7ximqb.com1.z0.glb.clouddn.com/AndroidL_Recorder.mp4\" title=\"960*540\" target=\"_blank\" rel=\"external\">视频演示</a></p>\n<p><img src=\"recorder.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Status: public<br>tags: Andorid, Recorder<br>Layout: one_page_site<br>description: 个人业余项目，一款极致简洁的录音机</p>\n<p>一款极致简洁的录音机</p>\n<p>Keywords: Gradle, Fragment, Layout, Resource, Manifest, Service, Animation, Ripple Effect, UI Inject, androidannotations</p>\n<p><a href=\"http://7ximqb.com1.z0.glb.clouddn.com/AndroidL_Recorder.mp4\" title=\"960*540\" target=\"_blank\" rel=\"external\">视频演示</a></p>\n<p><img src=\"recorder.jpg\" alt=\"\"></p>\n"},{"date":"2016-01-20T07:28:00.000Z","layout":"one_page_site","status":"public","title":"COLOR公寓项目详情","description":"领先行业的O2O租房管理和销售系统，高性能的系统构架","_content":"\nKeywords: Yii2, PHP, MySQL, jQuery, innobackupex, crontab, Swoole \n领先行业的O2O租房管理和销售系统\n\n[产品网站](http://www.color520.com)\n\n[手机版](http://m.color520.com)\n\n![](https://images.unsplash.com/photo-1446797376004-9352dfc9f789?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&w=1080&fit=max&s=69456cfc0f4d312538621db6007ea1fc)\n\n## 所用到的技术\n\n**Nginx**: 更先进的Web Server\n**Yii2**: 专为Web2.0应用而设计的高性能PHP框架，内建超丰富建站feature。\n**Swoole**: PHP语言的异步、并行、高性能网络通信框架,为PHP提供异步功能。\n**crontab**: Linux定时任务工具\n**Git**: 分布式版本控制系统\n**MySQL**: 关系数据库\n**XtraBackup**:开源的在线数据库备份解决方案\n\n\n\n## 系统构架 \n\n### 功能构架\n\n![](COLOR%E5%85%AC%E5%AF%93IT%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E7%BB%93%E6%9E%84.png)\n\n用互联网思维打造高效O2O公寓管理平台\n\n\n### 技术构架\n\n![](COLOR%E5%85%AC%E5%AF%93%E7%B3%BB%E7%BB%9F%E6%9E%84%E6%9E%B6.png)\n\n功能清晰、高扩展性的系统构架\n\n## 特色功能\n\nCOLOR公寓后台管理系统是由迈芒资产研发团队专为提高公寓运营效率而开发的后台管理系统，功能全面、运行稳定、扩展性强。根据上下游供应链顺序分为以下模块：物料采购管理，装修进度管理，房源管理，合同管理，消费订单管理，任务分配系统，报表数据管理等。\n\n### 物料采购\n\n![](caigou.jpeg)\n\n每一件物品都可追溯到供应商\n\n\n\n### 装修进度\n\n![](zhuangxiu.jpg)\n\n实时监控供应链各环节的速度\n\n\n### 任务分配\n\n![](renwu.jpg)\n\n每次一带看房，都有详细记录。成功，则生成合同；失败，则追究原因。\n\n### 合同管理\n\n![](hetong.jpg)\n\n所有用户信息和合同均电子化。\n\n\n### 房源管理\n\n![](fangyuan.jpg)\n\n超多维的房屋信息，让租客通过网站即可订房。\n\n\n### 消费账单管理\n\n![](zhangdan.jpg)\n\n在COLOR的一切消费，均可在线支付。\n\n\n## 我们如何开发\n\n1. 我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。\n3. 我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。\n4. 用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。\n\n\n\n\n","source":"_posts/resume/COLOR公寓技术介绍.md","raw":"---\ndate: 2016-01-20 15:28\nlayout: one_page_site\nstatus: public\ntitle: COLOR公寓项目详情\ndescription: 领先行业的O2O租房管理和销售系统，高性能的系统构架\ntags: color\n---\n\nKeywords: Yii2, PHP, MySQL, jQuery, innobackupex, crontab, Swoole \n领先行业的O2O租房管理和销售系统\n\n[产品网站](http://www.color520.com)\n\n[手机版](http://m.color520.com)\n\n![](https://images.unsplash.com/photo-1446797376004-9352dfc9f789?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&w=1080&fit=max&s=69456cfc0f4d312538621db6007ea1fc)\n\n## 所用到的技术\n\n**Nginx**: 更先进的Web Server\n**Yii2**: 专为Web2.0应用而设计的高性能PHP框架，内建超丰富建站feature。\n**Swoole**: PHP语言的异步、并行、高性能网络通信框架,为PHP提供异步功能。\n**crontab**: Linux定时任务工具\n**Git**: 分布式版本控制系统\n**MySQL**: 关系数据库\n**XtraBackup**:开源的在线数据库备份解决方案\n\n\n\n## 系统构架 \n\n### 功能构架\n\n![](COLOR%E5%85%AC%E5%AF%93IT%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E7%BB%93%E6%9E%84.png)\n\n用互联网思维打造高效O2O公寓管理平台\n\n\n### 技术构架\n\n![](COLOR%E5%85%AC%E5%AF%93%E7%B3%BB%E7%BB%9F%E6%9E%84%E6%9E%B6.png)\n\n功能清晰、高扩展性的系统构架\n\n## 特色功能\n\nCOLOR公寓后台管理系统是由迈芒资产研发团队专为提高公寓运营效率而开发的后台管理系统，功能全面、运行稳定、扩展性强。根据上下游供应链顺序分为以下模块：物料采购管理，装修进度管理，房源管理，合同管理，消费订单管理，任务分配系统，报表数据管理等。\n\n### 物料采购\n\n![](caigou.jpeg)\n\n每一件物品都可追溯到供应商\n\n\n\n### 装修进度\n\n![](zhuangxiu.jpg)\n\n实时监控供应链各环节的速度\n\n\n### 任务分配\n\n![](renwu.jpg)\n\n每次一带看房，都有详细记录。成功，则生成合同；失败，则追究原因。\n\n### 合同管理\n\n![](hetong.jpg)\n\n所有用户信息和合同均电子化。\n\n\n### 房源管理\n\n![](fangyuan.jpg)\n\n超多维的房屋信息，让租客通过网站即可订房。\n\n\n### 消费账单管理\n\n![](zhangdan.jpg)\n\n在COLOR的一切消费，均可在线支付。\n\n\n## 我们如何开发\n\n1. 我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。\n3. 我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。\n4. 用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。\n\n\n\n\n","slug":"resume/COLOR公寓技术介绍","published":1,"updated":"2017-07-26T13:11:29.000Z","comments":1,"photos":[],"link":"","_id":"cj5ls6kkm0020q0d4cnmy2pwa","content":"<p>Keywords: Yii2, PHP, MySQL, jQuery, innobackupex, crontab, Swoole<br>领先行业的O2O租房管理和销售系统</p>\n<p><a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">产品网站</a></p>\n<p><a href=\"http://m.color520.com\" target=\"_blank\" rel=\"external\">手机版</a></p>\n<p><img src=\"https://images.unsplash.com/photo-1446797376004-9352dfc9f789?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;w=1080&amp;fit=max&amp;s=69456cfc0f4d312538621db6007ea1fc\" alt=\"\"></p>\n<h2 id=\"所用到的技术\"><a href=\"#所用到的技术\" class=\"headerlink\" title=\"所用到的技术\"></a>所用到的技术</h2><p><strong>Nginx</strong>: 更先进的Web Server<br><strong>Yii2</strong>: 专为Web2.0应用而设计的高性能PHP框架，内建超丰富建站feature。<br><strong>Swoole</strong>: PHP语言的异步、并行、高性能网络通信框架,为PHP提供异步功能。<br><strong>crontab</strong>: Linux定时任务工具<br><strong>Git</strong>: 分布式版本控制系统<br><strong>MySQL</strong>: 关系数据库<br><strong>XtraBackup</strong>:开源的在线数据库备份解决方案</p>\n<h2 id=\"系统构架\"><a href=\"#系统构架\" class=\"headerlink\" title=\"系统构架\"></a>系统构架</h2><h3 id=\"功能构架\"><a href=\"#功能构架\" class=\"headerlink\" title=\"功能构架\"></a>功能构架</h3><p><img src=\"COLOR%E5%85%AC%E5%AF%93IT%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E7%BB%93%E6%9E%84.png\" alt=\"\"></p>\n<p>用互联网思维打造高效O2O公寓管理平台</p>\n<h3 id=\"技术构架\"><a href=\"#技术构架\" class=\"headerlink\" title=\"技术构架\"></a>技术构架</h3><p><img src=\"COLOR%E5%85%AC%E5%AF%93%E7%B3%BB%E7%BB%9F%E6%9E%84%E6%9E%B6.png\" alt=\"\"></p>\n<p>功能清晰、高扩展性的系统构架</p>\n<h2 id=\"特色功能\"><a href=\"#特色功能\" class=\"headerlink\" title=\"特色功能\"></a>特色功能</h2><p>COLOR公寓后台管理系统是由迈芒资产研发团队专为提高公寓运营效率而开发的后台管理系统，功能全面、运行稳定、扩展性强。根据上下游供应链顺序分为以下模块：物料采购管理，装修进度管理，房源管理，合同管理，消费订单管理，任务分配系统，报表数据管理等。</p>\n<h3 id=\"物料采购\"><a href=\"#物料采购\" class=\"headerlink\" title=\"物料采购\"></a>物料采购</h3><p><img src=\"caigou.jpeg\" alt=\"\"></p>\n<p>每一件物品都可追溯到供应商</p>\n<h3 id=\"装修进度\"><a href=\"#装修进度\" class=\"headerlink\" title=\"装修进度\"></a>装修进度</h3><p><img src=\"zhuangxiu.jpg\" alt=\"\"></p>\n<p>实时监控供应链各环节的速度</p>\n<h3 id=\"任务分配\"><a href=\"#任务分配\" class=\"headerlink\" title=\"任务分配\"></a>任务分配</h3><p><img src=\"renwu.jpg\" alt=\"\"></p>\n<p>每次一带看房，都有详细记录。成功，则生成合同；失败，则追究原因。</p>\n<h3 id=\"合同管理\"><a href=\"#合同管理\" class=\"headerlink\" title=\"合同管理\"></a>合同管理</h3><p><img src=\"hetong.jpg\" alt=\"\"></p>\n<p>所有用户信息和合同均电子化。</p>\n<h3 id=\"房源管理\"><a href=\"#房源管理\" class=\"headerlink\" title=\"房源管理\"></a>房源管理</h3><p><img src=\"fangyuan.jpg\" alt=\"\"></p>\n<p>超多维的房屋信息，让租客通过网站即可订房。</p>\n<h3 id=\"消费账单管理\"><a href=\"#消费账单管理\" class=\"headerlink\" title=\"消费账单管理\"></a>消费账单管理</h3><p><img src=\"zhangdan.jpg\" alt=\"\"></p>\n<p>在COLOR的一切消费，均可在线支付。</p>\n<h2 id=\"我们如何开发\"><a href=\"#我们如何开发\" class=\"headerlink\" title=\"我们如何开发\"></a>我们如何开发</h2><ol>\n<li>我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。</li>\n<li>我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。</li>\n<li>用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Keywords: Yii2, PHP, MySQL, jQuery, innobackupex, crontab, Swoole<br>领先行业的O2O租房管理和销售系统</p>\n<p><a href=\"http://www.color520.com\" target=\"_blank\" rel=\"external\">产品网站</a></p>\n<p><a href=\"http://m.color520.com\" target=\"_blank\" rel=\"external\">手机版</a></p>\n<p><img src=\"https://images.unsplash.com/photo-1446797376004-9352dfc9f789?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;w=1080&amp;fit=max&amp;s=69456cfc0f4d312538621db6007ea1fc\" alt=\"\"></p>\n<h2 id=\"所用到的技术\"><a href=\"#所用到的技术\" class=\"headerlink\" title=\"所用到的技术\"></a>所用到的技术</h2><p><strong>Nginx</strong>: 更先进的Web Server<br><strong>Yii2</strong>: 专为Web2.0应用而设计的高性能PHP框架，内建超丰富建站feature。<br><strong>Swoole</strong>: PHP语言的异步、并行、高性能网络通信框架,为PHP提供异步功能。<br><strong>crontab</strong>: Linux定时任务工具<br><strong>Git</strong>: 分布式版本控制系统<br><strong>MySQL</strong>: 关系数据库<br><strong>XtraBackup</strong>:开源的在线数据库备份解决方案</p>\n<h2 id=\"系统构架\"><a href=\"#系统构架\" class=\"headerlink\" title=\"系统构架\"></a>系统构架</h2><h3 id=\"功能构架\"><a href=\"#功能构架\" class=\"headerlink\" title=\"功能构架\"></a>功能构架</h3><p><img src=\"COLOR%E5%85%AC%E5%AF%93IT%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E7%BB%93%E6%9E%84.png\" alt=\"\"></p>\n<p>用互联网思维打造高效O2O公寓管理平台</p>\n<h3 id=\"技术构架\"><a href=\"#技术构架\" class=\"headerlink\" title=\"技术构架\"></a>技术构架</h3><p><img src=\"COLOR%E5%85%AC%E5%AF%93%E7%B3%BB%E7%BB%9F%E6%9E%84%E6%9E%B6.png\" alt=\"\"></p>\n<p>功能清晰、高扩展性的系统构架</p>\n<h2 id=\"特色功能\"><a href=\"#特色功能\" class=\"headerlink\" title=\"特色功能\"></a>特色功能</h2><p>COLOR公寓后台管理系统是由迈芒资产研发团队专为提高公寓运营效率而开发的后台管理系统，功能全面、运行稳定、扩展性强。根据上下游供应链顺序分为以下模块：物料采购管理，装修进度管理，房源管理，合同管理，消费订单管理，任务分配系统，报表数据管理等。</p>\n<h3 id=\"物料采购\"><a href=\"#物料采购\" class=\"headerlink\" title=\"物料采购\"></a>物料采购</h3><p><img src=\"caigou.jpeg\" alt=\"\"></p>\n<p>每一件物品都可追溯到供应商</p>\n<h3 id=\"装修进度\"><a href=\"#装修进度\" class=\"headerlink\" title=\"装修进度\"></a>装修进度</h3><p><img src=\"zhuangxiu.jpg\" alt=\"\"></p>\n<p>实时监控供应链各环节的速度</p>\n<h3 id=\"任务分配\"><a href=\"#任务分配\" class=\"headerlink\" title=\"任务分配\"></a>任务分配</h3><p><img src=\"renwu.jpg\" alt=\"\"></p>\n<p>每次一带看房，都有详细记录。成功，则生成合同；失败，则追究原因。</p>\n<h3 id=\"合同管理\"><a href=\"#合同管理\" class=\"headerlink\" title=\"合同管理\"></a>合同管理</h3><p><img src=\"hetong.jpg\" alt=\"\"></p>\n<p>所有用户信息和合同均电子化。</p>\n<h3 id=\"房源管理\"><a href=\"#房源管理\" class=\"headerlink\" title=\"房源管理\"></a>房源管理</h3><p><img src=\"fangyuan.jpg\" alt=\"\"></p>\n<p>超多维的房屋信息，让租客通过网站即可订房。</p>\n<h3 id=\"消费账单管理\"><a href=\"#消费账单管理\" class=\"headerlink\" title=\"消费账单管理\"></a>消费账单管理</h3><p><img src=\"zhangdan.jpg\" alt=\"\"></p>\n<p>在COLOR的一切消费，均可在线支付。</p>\n<h2 id=\"我们如何开发\"><a href=\"#我们如何开发\" class=\"headerlink\" title=\"我们如何开发\"></a>我们如何开发</h2><ol>\n<li>我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。</li>\n<li>我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。</li>\n<li>用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。</li>\n</ol>\n"},{"_content":"Status: public\nLayout: one_page_site\ntags: ios, pods, AppDelegate, Social Network\ndescription: 一款主打多人视频的社交应用\n\n\n主打多人视频的社交应用，\n可以和好友一起同时看视频和聊语音，\n\n利用P2P和技术和视频压缩技术，\n使得在2G网络下也可流畅通话\n\n![](bolo-bg.jpg)\n\n## Used Skills\n\nprotobuf: 谷歌的高性能，数据序列化和反序列化工具。\nPods: XCode先进的依赖管理工具\nTMQuiltView: 多列Item排布工具\nGCD: Obj-C的多线程任务管理系统\n\n## 功能介绍\n\n\n### 好友管理\n\n![](bolo-haoyou.jpg)\n\n好友记录管理\n\n### 即时通信\n\n![](bolo-liaotianjilu.jpg)\n\n即时聊天系统，支持常见的IM功能\n\n### 网络电话\n\n![](bolo-dianhua.jpg)\n\n网络电话，低延迟，高音质\n\n### 同步视频\n\n![](bolo-kanshipin.jpg)\n\n多人在线，同步看视频，实时同步双方的进度。\n\n### 丰富的视频资源库\n\n![](bolo-xuanshipin.jpg)\n\n从优酷抓取超多视频资源，随时在线观看。\n\n### 个人设置\n\n![](bolo-shezhi.jpg)\n\n个人设置，功能齐全。\n","source":"_posts/resume/叨叨项目介绍.md","raw":"Status: public\nLayout: one_page_site\ntags: ios, pods, AppDelegate, Social Network\ndescription: 一款主打多人视频的社交应用\n\n\n主打多人视频的社交应用，\n可以和好友一起同时看视频和聊语音，\n\n利用P2P和技术和视频压缩技术，\n使得在2G网络下也可流畅通话\n\n![](bolo-bg.jpg)\n\n## Used Skills\n\nprotobuf: 谷歌的高性能，数据序列化和反序列化工具。\nPods: XCode先进的依赖管理工具\nTMQuiltView: 多列Item排布工具\nGCD: Obj-C的多线程任务管理系统\n\n## 功能介绍\n\n\n### 好友管理\n\n![](bolo-haoyou.jpg)\n\n好友记录管理\n\n### 即时通信\n\n![](bolo-liaotianjilu.jpg)\n\n即时聊天系统，支持常见的IM功能\n\n### 网络电话\n\n![](bolo-dianhua.jpg)\n\n网络电话，低延迟，高音质\n\n### 同步视频\n\n![](bolo-kanshipin.jpg)\n\n多人在线，同步看视频，实时同步双方的进度。\n\n### 丰富的视频资源库\n\n![](bolo-xuanshipin.jpg)\n\n从优酷抓取超多视频资源，随时在线观看。\n\n### 个人设置\n\n![](bolo-shezhi.jpg)\n\n个人设置，功能齐全。\n","slug":"resume/叨叨项目介绍","published":1,"date":"2016-01-27T16:15:53.000Z","updated":"2017-07-26T13:11:29.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kl60021q0d4w1z73x9r","content":"<p>Status: public<br>Layout: one_page_site<br>tags: ios, pods, AppDelegate, Social Network<br>description: 一款主打多人视频的社交应用</p>\n<p>主打多人视频的社交应用，<br>可以和好友一起同时看视频和聊语音，</p>\n<p>利用P2P和技术和视频压缩技术，<br>使得在2G网络下也可流畅通话</p>\n<p><img src=\"bolo-bg.jpg\" alt=\"\"></p>\n<h2 id=\"Used-Skills\"><a href=\"#Used-Skills\" class=\"headerlink\" title=\"Used Skills\"></a>Used Skills</h2><p>protobuf: 谷歌的高性能，数据序列化和反序列化工具。<br>Pods: XCode先进的依赖管理工具<br>TMQuiltView: 多列Item排布工具<br>GCD: Obj-C的多线程任务管理系统</p>\n<h2 id=\"功能介绍\"><a href=\"#功能介绍\" class=\"headerlink\" title=\"功能介绍\"></a>功能介绍</h2><h3 id=\"好友管理\"><a href=\"#好友管理\" class=\"headerlink\" title=\"好友管理\"></a>好友管理</h3><p><img src=\"bolo-haoyou.jpg\" alt=\"\"></p>\n<p>好友记录管理</p>\n<h3 id=\"即时通信\"><a href=\"#即时通信\" class=\"headerlink\" title=\"即时通信\"></a>即时通信</h3><p><img src=\"bolo-liaotianjilu.jpg\" alt=\"\"></p>\n<p>即时聊天系统，支持常见的IM功能</p>\n<h3 id=\"网络电话\"><a href=\"#网络电话\" class=\"headerlink\" title=\"网络电话\"></a>网络电话</h3><p><img src=\"bolo-dianhua.jpg\" alt=\"\"></p>\n<p>网络电话，低延迟，高音质</p>\n<h3 id=\"同步视频\"><a href=\"#同步视频\" class=\"headerlink\" title=\"同步视频\"></a>同步视频</h3><p><img src=\"bolo-kanshipin.jpg\" alt=\"\"></p>\n<p>多人在线，同步看视频，实时同步双方的进度。</p>\n<h3 id=\"丰富的视频资源库\"><a href=\"#丰富的视频资源库\" class=\"headerlink\" title=\"丰富的视频资源库\"></a>丰富的视频资源库</h3><p><img src=\"bolo-xuanshipin.jpg\" alt=\"\"></p>\n<p>从优酷抓取超多视频资源，随时在线观看。</p>\n<h3 id=\"个人设置\"><a href=\"#个人设置\" class=\"headerlink\" title=\"个人设置\"></a>个人设置</h3><p><img src=\"bolo-shezhi.jpg\" alt=\"\"></p>\n<p>个人设置，功能齐全。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Status: public<br>Layout: one_page_site<br>tags: ios, pods, AppDelegate, Social Network<br>description: 一款主打多人视频的社交应用</p>\n<p>主打多人视频的社交应用，<br>可以和好友一起同时看视频和聊语音，</p>\n<p>利用P2P和技术和视频压缩技术，<br>使得在2G网络下也可流畅通话</p>\n<p><img src=\"bolo-bg.jpg\" alt=\"\"></p>\n<h2 id=\"Used-Skills\"><a href=\"#Used-Skills\" class=\"headerlink\" title=\"Used Skills\"></a>Used Skills</h2><p>protobuf: 谷歌的高性能，数据序列化和反序列化工具。<br>Pods: XCode先进的依赖管理工具<br>TMQuiltView: 多列Item排布工具<br>GCD: Obj-C的多线程任务管理系统</p>\n<h2 id=\"功能介绍\"><a href=\"#功能介绍\" class=\"headerlink\" title=\"功能介绍\"></a>功能介绍</h2><h3 id=\"好友管理\"><a href=\"#好友管理\" class=\"headerlink\" title=\"好友管理\"></a>好友管理</h3><p><img src=\"bolo-haoyou.jpg\" alt=\"\"></p>\n<p>好友记录管理</p>\n<h3 id=\"即时通信\"><a href=\"#即时通信\" class=\"headerlink\" title=\"即时通信\"></a>即时通信</h3><p><img src=\"bolo-liaotianjilu.jpg\" alt=\"\"></p>\n<p>即时聊天系统，支持常见的IM功能</p>\n<h3 id=\"网络电话\"><a href=\"#网络电话\" class=\"headerlink\" title=\"网络电话\"></a>网络电话</h3><p><img src=\"bolo-dianhua.jpg\" alt=\"\"></p>\n<p>网络电话，低延迟，高音质</p>\n<h3 id=\"同步视频\"><a href=\"#同步视频\" class=\"headerlink\" title=\"同步视频\"></a>同步视频</h3><p><img src=\"bolo-kanshipin.jpg\" alt=\"\"></p>\n<p>多人在线，同步看视频，实时同步双方的进度。</p>\n<h3 id=\"丰富的视频资源库\"><a href=\"#丰富的视频资源库\" class=\"headerlink\" title=\"丰富的视频资源库\"></a>丰富的视频资源库</h3><p><img src=\"bolo-xuanshipin.jpg\" alt=\"\"></p>\n<p>从优酷抓取超多视频资源，随时在线观看。</p>\n<h3 id=\"个人设置\"><a href=\"#个人设置\" class=\"headerlink\" title=\"个人设置\"></a>个人设置</h3><p><img src=\"bolo-shezhi.jpg\" alt=\"\"></p>\n<p>个人设置，功能齐全。</p>\n"},{"_content":"Status: hide","source":"_posts/resume/全民斗地主技术介绍.md","raw":"Status: hide","slug":"resume/全民斗地主技术介绍","published":1,"date":"2016-01-20T05:30:29.000Z","updated":"2016-01-20T05:30:29.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kla0023q0d4cyouh38m","content":"<p>Status: hide</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Status: hide</p>\n"},{"Status":"public","title":"战三国项目介绍","Layout":"one_page_site","Tag":"AS3, 战三国, 完美世界, BoltEngine","description":"秒杀同行的BoltEngine地图引擎。轻量级的游戏UI系统。","_content":"\n![](zhansanguo.jpg)\n\n\n\n[官网](http://zsg.173.com/)\n[百度服务器](http://youxi.baidu.com/games/zsg/)\n[51服务器](http://game.51.com/zsg/)\n\n\n## 介绍\n\n完美世界侵略火团队精心打造的三国题材RPG网页游戏。\n\n月流水过亿，总用户20多万\n在东南亚、东亚、欧洲、北美等8个国家上线，\n400多个服务器共享竞技场。\n\n## 秒杀同行的BoltEngine地图引擎\n\nBolt Engine 和配套地图编辑器由侵略火团队自主研发。  \n\n利用**主动渲染**技术, 保证在同屏战斗人数达到**100人**依然不卡。\n对应的地图编辑器，也让策划也可以顺利完成地图配置和调整工作，保证了开发的灵活性。\n\n技术原理是: 对需要大量渲染的素材(主要是人物模型)只进行一次渲染, 获得每一帧的图像, 保存在内存里. 以后每次需要\"渲染\"的时候, 只需从内存中取出对应帧的图像, 显示在stage上.\n\n![](zsg-ditu.jpg)\n\n## 轻量级的游戏UI系统\n\n基于开源代码的轻量级UI库。除了基本的展示和响应操作，我们还借鉴了Flex的思想，实现了ItemRender、数据绑定、动态布局、事件冒泡等优秀的思想和机制。\n\n开发出UI库后，我们还为其量身定做了可视化UI编辑器。我们用XML来描述拖拽操作后对应的UI层级树，然后生成对应的Sprite代码。\n\n\n## 玩法系统介绍\n\n### 武将系统\n\n![](zsg-wujiang.jpg)\n\n多达60多个武将，各有特长，增加收集的趣味。\n\n### 布阵\n\n![](zsg-buzhen.jpg)\n\n3*3的矩阵上，每个点的武将可以灵活设置。通过分析对手，可达到田忌赛马的效果。\n\n### 跨服竞技场\n\n![](zsg-jingjichang.jpg)\n\n突破服务器的限制，不同服务器间的高端玩家可跨服挑战。\n\n\n## 更多详情\n\n[请看官网](http://zsg.173.com/)\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/resume/战三国技术介绍.md","raw":"Status: public\ntitle:  战三国项目介绍\nLayout: one_page_site\nTag: AS3, 战三国, 完美世界, BoltEngine\ndescription: 秒杀同行的BoltEngine地图引擎。轻量级的游戏UI系统。\n---\n\n![](zhansanguo.jpg)\n\n\n\n[官网](http://zsg.173.com/)\n[百度服务器](http://youxi.baidu.com/games/zsg/)\n[51服务器](http://game.51.com/zsg/)\n\n\n## 介绍\n\n完美世界侵略火团队精心打造的三国题材RPG网页游戏。\n\n月流水过亿，总用户20多万\n在东南亚、东亚、欧洲、北美等8个国家上线，\n400多个服务器共享竞技场。\n\n## 秒杀同行的BoltEngine地图引擎\n\nBolt Engine 和配套地图编辑器由侵略火团队自主研发。  \n\n利用**主动渲染**技术, 保证在同屏战斗人数达到**100人**依然不卡。\n对应的地图编辑器，也让策划也可以顺利完成地图配置和调整工作，保证了开发的灵活性。\n\n技术原理是: 对需要大量渲染的素材(主要是人物模型)只进行一次渲染, 获得每一帧的图像, 保存在内存里. 以后每次需要\"渲染\"的时候, 只需从内存中取出对应帧的图像, 显示在stage上.\n\n![](zsg-ditu.jpg)\n\n## 轻量级的游戏UI系统\n\n基于开源代码的轻量级UI库。除了基本的展示和响应操作，我们还借鉴了Flex的思想，实现了ItemRender、数据绑定、动态布局、事件冒泡等优秀的思想和机制。\n\n开发出UI库后，我们还为其量身定做了可视化UI编辑器。我们用XML来描述拖拽操作后对应的UI层级树，然后生成对应的Sprite代码。\n\n\n## 玩法系统介绍\n\n### 武将系统\n\n![](zsg-wujiang.jpg)\n\n多达60多个武将，各有特长，增加收集的趣味。\n\n### 布阵\n\n![](zsg-buzhen.jpg)\n\n3*3的矩阵上，每个点的武将可以灵活设置。通过分析对手，可达到田忌赛马的效果。\n\n### 跨服竞技场\n\n![](zsg-jingjichang.jpg)\n\n突破服务器的限制，不同服务器间的高端玩家可跨服挑战。\n\n\n## 更多详情\n\n[请看官网](http://zsg.173.com/)\n\n\n\n\n\n\n\n\n\n\n","slug":"resume/战三国技术介绍","published":1,"date":"2016-01-24T10:31:29.000Z","updated":"2017-07-26T13:11:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6klj0024q0d4p2m0n4t0","content":"<p><img src=\"zhansanguo.jpg\" alt=\"\"></p>\n<p><a href=\"http://zsg.173.com/\" target=\"_blank\" rel=\"external\">官网</a><br><a href=\"http://youxi.baidu.com/games/zsg/\" target=\"_blank\" rel=\"external\">百度服务器</a><br><a href=\"http://game.51.com/zsg/\" target=\"_blank\" rel=\"external\">51服务器</a></p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>完美世界侵略火团队精心打造的三国题材RPG网页游戏。</p>\n<p>月流水过亿，总用户20多万<br>在东南亚、东亚、欧洲、北美等8个国家上线，<br>400多个服务器共享竞技场。</p>\n<h2 id=\"秒杀同行的BoltEngine地图引擎\"><a href=\"#秒杀同行的BoltEngine地图引擎\" class=\"headerlink\" title=\"秒杀同行的BoltEngine地图引擎\"></a>秒杀同行的BoltEngine地图引擎</h2><p>Bolt Engine 和配套地图编辑器由侵略火团队自主研发。  </p>\n<p>利用<strong>主动渲染</strong>技术, 保证在同屏战斗人数达到<strong>100人</strong>依然不卡。<br>对应的地图编辑器，也让策划也可以顺利完成地图配置和调整工作，保证了开发的灵活性。</p>\n<p>技术原理是: 对需要大量渲染的素材(主要是人物模型)只进行一次渲染, 获得每一帧的图像, 保存在内存里. 以后每次需要”渲染”的时候, 只需从内存中取出对应帧的图像, 显示在stage上.</p>\n<p><img src=\"zsg-ditu.jpg\" alt=\"\"></p>\n<h2 id=\"轻量级的游戏UI系统\"><a href=\"#轻量级的游戏UI系统\" class=\"headerlink\" title=\"轻量级的游戏UI系统\"></a>轻量级的游戏UI系统</h2><p>基于开源代码的轻量级UI库。除了基本的展示和响应操作，我们还借鉴了Flex的思想，实现了ItemRender、数据绑定、动态布局、事件冒泡等优秀的思想和机制。</p>\n<p>开发出UI库后，我们还为其量身定做了可视化UI编辑器。我们用XML来描述拖拽操作后对应的UI层级树，然后生成对应的Sprite代码。</p>\n<h2 id=\"玩法系统介绍\"><a href=\"#玩法系统介绍\" class=\"headerlink\" title=\"玩法系统介绍\"></a>玩法系统介绍</h2><h3 id=\"武将系统\"><a href=\"#武将系统\" class=\"headerlink\" title=\"武将系统\"></a>武将系统</h3><p><img src=\"zsg-wujiang.jpg\" alt=\"\"></p>\n<p>多达60多个武将，各有特长，增加收集的趣味。</p>\n<h3 id=\"布阵\"><a href=\"#布阵\" class=\"headerlink\" title=\"布阵\"></a>布阵</h3><p><img src=\"zsg-buzhen.jpg\" alt=\"\"></p>\n<p>3*3的矩阵上，每个点的武将可以灵活设置。通过分析对手，可达到田忌赛马的效果。</p>\n<h3 id=\"跨服竞技场\"><a href=\"#跨服竞技场\" class=\"headerlink\" title=\"跨服竞技场\"></a>跨服竞技场</h3><p><img src=\"zsg-jingjichang.jpg\" alt=\"\"></p>\n<p>突破服务器的限制，不同服务器间的高端玩家可跨服挑战。</p>\n<h2 id=\"更多详情\"><a href=\"#更多详情\" class=\"headerlink\" title=\"更多详情\"></a>更多详情</h2><p><a href=\"http://zsg.173.com/\" target=\"_blank\" rel=\"external\">请看官网</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"zhansanguo.jpg\" alt=\"\"></p>\n<p><a href=\"http://zsg.173.com/\" target=\"_blank\" rel=\"external\">官网</a><br><a href=\"http://youxi.baidu.com/games/zsg/\" target=\"_blank\" rel=\"external\">百度服务器</a><br><a href=\"http://game.51.com/zsg/\" target=\"_blank\" rel=\"external\">51服务器</a></p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>完美世界侵略火团队精心打造的三国题材RPG网页游戏。</p>\n<p>月流水过亿，总用户20多万<br>在东南亚、东亚、欧洲、北美等8个国家上线，<br>400多个服务器共享竞技场。</p>\n<h2 id=\"秒杀同行的BoltEngine地图引擎\"><a href=\"#秒杀同行的BoltEngine地图引擎\" class=\"headerlink\" title=\"秒杀同行的BoltEngine地图引擎\"></a>秒杀同行的BoltEngine地图引擎</h2><p>Bolt Engine 和配套地图编辑器由侵略火团队自主研发。  </p>\n<p>利用<strong>主动渲染</strong>技术, 保证在同屏战斗人数达到<strong>100人</strong>依然不卡。<br>对应的地图编辑器，也让策划也可以顺利完成地图配置和调整工作，保证了开发的灵活性。</p>\n<p>技术原理是: 对需要大量渲染的素材(主要是人物模型)只进行一次渲染, 获得每一帧的图像, 保存在内存里. 以后每次需要”渲染”的时候, 只需从内存中取出对应帧的图像, 显示在stage上.</p>\n<p><img src=\"zsg-ditu.jpg\" alt=\"\"></p>\n<h2 id=\"轻量级的游戏UI系统\"><a href=\"#轻量级的游戏UI系统\" class=\"headerlink\" title=\"轻量级的游戏UI系统\"></a>轻量级的游戏UI系统</h2><p>基于开源代码的轻量级UI库。除了基本的展示和响应操作，我们还借鉴了Flex的思想，实现了ItemRender、数据绑定、动态布局、事件冒泡等优秀的思想和机制。</p>\n<p>开发出UI库后，我们还为其量身定做了可视化UI编辑器。我们用XML来描述拖拽操作后对应的UI层级树，然后生成对应的Sprite代码。</p>\n<h2 id=\"玩法系统介绍\"><a href=\"#玩法系统介绍\" class=\"headerlink\" title=\"玩法系统介绍\"></a>玩法系统介绍</h2><h3 id=\"武将系统\"><a href=\"#武将系统\" class=\"headerlink\" title=\"武将系统\"></a>武将系统</h3><p><img src=\"zsg-wujiang.jpg\" alt=\"\"></p>\n<p>多达60多个武将，各有特长，增加收集的趣味。</p>\n<h3 id=\"布阵\"><a href=\"#布阵\" class=\"headerlink\" title=\"布阵\"></a>布阵</h3><p><img src=\"zsg-buzhen.jpg\" alt=\"\"></p>\n<p>3*3的矩阵上，每个点的武将可以灵活设置。通过分析对手，可达到田忌赛马的效果。</p>\n<h3 id=\"跨服竞技场\"><a href=\"#跨服竞技场\" class=\"headerlink\" title=\"跨服竞技场\"></a>跨服竞技场</h3><p><img src=\"zsg-jingjichang.jpg\" alt=\"\"></p>\n<p>突破服务器的限制，不同服务器间的高端玩家可跨服挑战。</p>\n<h2 id=\"更多详情\"><a href=\"#更多详情\" class=\"headerlink\" title=\"更多详情\"></a>更多详情</h2><p><a href=\"http://zsg.173.com/\" target=\"_blank\" rel=\"external\">请看官网</a></p>\n"},{"_content":"Status: public\ntags: Andorid\nLayout: one_page_site\ndescription: 个人项目，一款安全类应用，可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。\n\n一款安全类应用\n可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。\n\nKeywords：LeanCloud, Fragment, Dialog, Loader, Multi Thread, AsyncTask, Baidu Map, ViewPager.\n\n前后端均由本人开发，历时30*5小时\n\n[视频演示](http://7ximqb.com1.z0.glb.clouddn.com/double_security.mp4 \"960*540\")\n\n![](double_security.jpg)\n\n\n\n\n\n\n\n\n","source":"_posts/resume/安全宝应用介绍.md","raw":"Status: public\ntags: Andorid\nLayout: one_page_site\ndescription: 个人项目，一款安全类应用，可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。\n\n一款安全类应用\n可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。\n\nKeywords：LeanCloud, Fragment, Dialog, Loader, Multi Thread, AsyncTask, Baidu Map, ViewPager.\n\n前后端均由本人开发，历时30*5小时\n\n[视频演示](http://7ximqb.com1.z0.glb.clouddn.com/double_security.mp4 \"960*540\")\n\n![](double_security.jpg)\n\n\n\n\n\n\n\n\n","slug":"resume/安全宝应用介绍","published":1,"date":"2016-01-27T15:32:07.000Z","updated":"2017-07-26T13:11:29.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6klq0025q0d455dqrom9","content":"<p>Status: public<br>tags: Andorid<br>Layout: one_page_site<br>description: 个人项目，一款安全类应用，可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。</p>\n<p>一款安全类应用<br>可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。</p>\n<p>Keywords：LeanCloud, Fragment, Dialog, Loader, Multi Thread, AsyncTask, Baidu Map, ViewPager.</p>\n<p>前后端均由本人开发，历时30*5小时</p>\n<p><a href=\"http://7ximqb.com1.z0.glb.clouddn.com/double_security.mp4\" title=\"960*540\" target=\"_blank\" rel=\"external\">视频演示</a></p>\n<p><img src=\"double_security.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Status: public<br>tags: Andorid<br>Layout: one_page_site<br>description: 个人项目，一款安全类应用，可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。</p>\n<p>一款安全类应用<br>可设置安全闹钟，触发之前若未取消，会通知好友并共享我的实时位置。</p>\n<p>Keywords：LeanCloud, Fragment, Dialog, Loader, Multi Thread, AsyncTask, Baidu Map, ViewPager.</p>\n<p>前后端均由本人开发，历时30*5小时</p>\n<p><a href=\"http://7ximqb.com1.z0.glb.clouddn.com/double_security.mp4\" title=\"960*540\" target=\"_blank\" rel=\"external\">视频演示</a></p>\n<p><img src=\"double_security.jpg\" alt=\"\"></p>\n"},{"title":"2016年职业发展规划","date":"2016-03-14T16:00:00.000Z","_content":"\n摘要：一份学习计划\n\n# 技术\n\n1. RESTful接口设计\n2. 网站高并发处理\n3. 分布式数据库搭建\n4. 多服务器通信\n5. 设计模式、架构的深入学习\n6. 手机通用开发平台的研究\n\n\n# 管理\n\n1. Scrum和实际生产的结合，制定出符合自己的目标。\n2. 团队管理、激励、提高。\n3. 招聘，公司文化宣传。\n\n# 产品\n\n1. 用户需求调研、整理需求。\n2. 产品经理相关技能学习。\n\n\n","source":"_posts/扯淡/2016年职业发展规划.md","raw":"---\ntitle: 2016年职业发展规划\ndate: 2016-03-15\ntags: \n- 学习计划\ncategories: \n- 扯淡\n---\n\n摘要：一份学习计划\n\n# 技术\n\n1. RESTful接口设计\n2. 网站高并发处理\n3. 分布式数据库搭建\n4. 多服务器通信\n5. 设计模式、架构的深入学习\n6. 手机通用开发平台的研究\n\n\n# 管理\n\n1. Scrum和实际生产的结合，制定出符合自己的目标。\n2. 团队管理、激励、提高。\n3. 招聘，公司文化宣传。\n\n# 产品\n\n1. 用户需求调研、整理需求。\n2. 产品经理相关技能学习。\n\n\n","slug":"扯淡/2016年职业发展规划","published":1,"updated":"2017-07-26T16:19:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6km20027q0d4a4gkoiuz","content":"<p>摘要：一份学习计划</p>\n<h1 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h1><ol>\n<li>RESTful接口设计</li>\n<li>网站高并发处理</li>\n<li>分布式数据库搭建</li>\n<li>多服务器通信</li>\n<li>设计模式、架构的深入学习</li>\n<li>手机通用开发平台的研究</li>\n</ol>\n<h1 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h1><ol>\n<li>Scrum和实际生产的结合，制定出符合自己的目标。</li>\n<li>团队管理、激励、提高。</li>\n<li>招聘，公司文化宣传。</li>\n</ol>\n<h1 id=\"产品\"><a href=\"#产品\" class=\"headerlink\" title=\"产品\"></a>产品</h1><ol>\n<li>用户需求调研、整理需求。</li>\n<li>产品经理相关技能学习。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：一份学习计划</p>\n<h1 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h1><ol>\n<li>RESTful接口设计</li>\n<li>网站高并发处理</li>\n<li>分布式数据库搭建</li>\n<li>多服务器通信</li>\n<li>设计模式、架构的深入学习</li>\n<li>手机通用开发平台的研究</li>\n</ol>\n<h1 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h1><ol>\n<li>Scrum和实际生产的结合，制定出符合自己的目标。</li>\n<li>团队管理、激励、提高。</li>\n<li>招聘，公司文化宣传。</li>\n</ol>\n<h1 id=\"产品\"><a href=\"#产品\" class=\"headerlink\" title=\"产品\"></a>产品</h1><ol>\n<li>用户需求调研、整理需求。</li>\n<li>产品经理相关技能学习。</li>\n</ol>\n"},{"date":"2016-01-18T16:00:00.000Z","description":"关于“领袖”，“仪式”，“表演”的一些思考，以及他在公寓产品中的应用。","_content":"\n\n\n## 社区\n\nSlogan：不做无趣之人\n\n\n## 领袖\n\n想成为XX那样的人\n享受活动组织者的荣耀\n\n## 仪式\n\n周期性的活动。\n宗教的基本构成元素：信仰寄托+仪式。\n仪式增强集体认同感。\n\n例子：\n>当你唱起国歌的时候，会不会觉得那一刻更爱国？\n>春节联欢晚会的那个时间，会不会有那么一刻觉得中国人都是相亲相爱的一大家。\n\n## 表演\n\n社交的本质:\n\n内部的人，提供给他表现自己的平台。\n外部的人，让他们以为在这里可以表现自己。\n\n\n## 产品\n\n为什么没有人线上租房？\n能够线上购买的充分必要条件：\n\n* 信息标准化，方便展示\n* 信任（口碑）\n* 简单的退出机制\n","source":"_posts/扯淡/COLOR公寓社交思考.md","raw":"---\ntags: \n- color \n- 社区 \n- 领袖 \n- 仪式 \n- 表演\ndate: 2016-01-19\ndescription: 关于“领袖”，“仪式”，“表演”的一些思考，以及他在公寓产品中的应用。\ncategories: \n- 扯淡\n---\n\n\n\n## 社区\n\nSlogan：不做无趣之人\n\n\n## 领袖\n\n想成为XX那样的人\n享受活动组织者的荣耀\n\n## 仪式\n\n周期性的活动。\n宗教的基本构成元素：信仰寄托+仪式。\n仪式增强集体认同感。\n\n例子：\n>当你唱起国歌的时候，会不会觉得那一刻更爱国？\n>春节联欢晚会的那个时间，会不会有那么一刻觉得中国人都是相亲相爱的一大家。\n\n## 表演\n\n社交的本质:\n\n内部的人，提供给他表现自己的平台。\n外部的人，让他们以为在这里可以表现自己。\n\n\n## 产品\n\n为什么没有人线上租房？\n能够线上购买的充分必要条件：\n\n* 信息标准化，方便展示\n* 信任（口碑）\n* 简单的退出机制\n","slug":"扯淡/COLOR公寓社交思考","published":1,"updated":"2017-07-26T16:25:03.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6km90028q0d4m626u6g4","content":"<h2 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h2><p>Slogan：不做无趣之人</p>\n<h2 id=\"领袖\"><a href=\"#领袖\" class=\"headerlink\" title=\"领袖\"></a>领袖</h2><p>想成为XX那样的人<br>享受活动组织者的荣耀</p>\n<h2 id=\"仪式\"><a href=\"#仪式\" class=\"headerlink\" title=\"仪式\"></a>仪式</h2><p>周期性的活动。<br>宗教的基本构成元素：信仰寄托+仪式。<br>仪式增强集体认同感。</p>\n<p>例子：</p>\n<blockquote>\n<p>当你唱起国歌的时候，会不会觉得那一刻更爱国？<br>春节联欢晚会的那个时间，会不会有那么一刻觉得中国人都是相亲相爱的一大家。</p>\n</blockquote>\n<h2 id=\"表演\"><a href=\"#表演\" class=\"headerlink\" title=\"表演\"></a>表演</h2><p>社交的本质:</p>\n<p>内部的人，提供给他表现自己的平台。<br>外部的人，让他们以为在这里可以表现自己。</p>\n<h2 id=\"产品\"><a href=\"#产品\" class=\"headerlink\" title=\"产品\"></a>产品</h2><p>为什么没有人线上租房？<br>能够线上购买的充分必要条件：</p>\n<ul>\n<li>信息标准化，方便展示</li>\n<li>信任（口碑）</li>\n<li>简单的退出机制</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h2><p>Slogan：不做无趣之人</p>\n<h2 id=\"领袖\"><a href=\"#领袖\" class=\"headerlink\" title=\"领袖\"></a>领袖</h2><p>想成为XX那样的人<br>享受活动组织者的荣耀</p>\n<h2 id=\"仪式\"><a href=\"#仪式\" class=\"headerlink\" title=\"仪式\"></a>仪式</h2><p>周期性的活动。<br>宗教的基本构成元素：信仰寄托+仪式。<br>仪式增强集体认同感。</p>\n<p>例子：</p>\n<blockquote>\n<p>当你唱起国歌的时候，会不会觉得那一刻更爱国？<br>春节联欢晚会的那个时间，会不会有那么一刻觉得中国人都是相亲相爱的一大家。</p>\n</blockquote>\n<h2 id=\"表演\"><a href=\"#表演\" class=\"headerlink\" title=\"表演\"></a>表演</h2><p>社交的本质:</p>\n<p>内部的人，提供给他表现自己的平台。<br>外部的人，让他们以为在这里可以表现自己。</p>\n<h2 id=\"产品\"><a href=\"#产品\" class=\"headerlink\" title=\"产品\"></a>产品</h2><p>为什么没有人线上租房？<br>能够线上购买的充分必要条件：</p>\n<ul>\n<li>信息标准化，方便展示</li>\n<li>信任（口碑）</li>\n<li>简单的退出机制</li>\n</ul>\n"},{"_content":"Status: hide","source":"_posts/resume/泡泡龙技术介绍.md","raw":"Status: hide","slug":"resume/泡泡龙技术介绍","published":1,"date":"2016-01-20T05:30:31.000Z","updated":"2016-01-20T05:30:31.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kmi002bq0d49vln4o5a","content":"<p>Status: hide</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Status: hide</p>\n"},{"_content":"date: 2016-04-02 08:54:14\nauthor: 罗爱\nemail: nooai@qq.com\nsite: http://www.nooai.com\nip: 119.9.74.18\n\n这个不错，哈\n\n- - - - - - - - - - - - - - - -\n\n","source":"_posts/扯淡/Color公寓一周岁了.comments.md","raw":"date: 2016-04-02 08:54:14\nauthor: 罗爱\nemail: nooai@qq.com\nsite: http://www.nooai.com\nip: 119.9.74.18\n\n这个不错，哈\n\n- - - - - - - - - - - - - - - -\n\n","slug":"扯淡/Color公寓一周岁了.comments","published":1,"date":"2016-04-02T00:54:14.000Z","updated":"2016-04-02T00:54:14.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kmy002cq0d4cfhj2l5q","content":"<p>date: 2016-04-02 08:54:14<br>author: 罗爱<br>email: nooai@qq.com<br>site: <a href=\"http://www.nooai.com\" target=\"_blank\" rel=\"external\">http://www.nooai.com</a><br>ip: 119.9.74.18</p>\n<p>这个不错，哈</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>date: 2016-04-02 08:54:14<br>author: 罗爱<br>email: nooai@qq.com<br>site: <a href=\"http://www.nooai.com\" target=\"_blank\" rel=\"external\">http://www.nooai.com</a><br>ip: 119.9.74.18</p>\n<p>这个不错，哈</p>\n<hr>\n"},{"title":"创业一年，苟且偷生","description":"一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。","_content":"\n摘要：一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。\n\n在这个忙碌的世界，我们往往容易忘记自己生日。若不是LinkedIn的入职一周年提醒，我恐怕也想不起来，这一年来我投入时间最多的Color公寓，也一岁了。  \n猛然意识到一年光景如白驹过隙，有种青春被浪费掉的遗憾。于是我想来回忆下近一年点滴，好向自己证明并没有浑噩度日。 \n\n\n# 从办公楼说起\n\n第一次进入我身处的这座大楼，这里还在装修，各种切割机、抛光机、装修耗材散落遍地，油漆味十分刺鼻。我们每隔几天都要穿过荆棘和硝烟来确定装修进度。熊强（我的合伙人小伙伴兼首席打杂官）在跟装修队交涉的时候，甚至被一根钢钉戳穿了脚掌。当时我开玩笑说：“通过这一戳，我觉得我们要发。你把坏运气都用在不重要的事情上，重要的事情必有好运。”**那时我们经常这样互谑打气。因为我们心里很没底，尽管在互联网行业里我和熊强都有自己的绝活，但在这里，一切从零开始。**\n\n因为大楼施工延期，我们有长达两个月的时间不得不在家里办公。我在南油租了一间30平米的单身公寓，白天摆一张桌子，我和熊强一人坐一边，就开始了一天的工作。有时候房间安静的像太平间，有时候又争吵的像菜市场，一个多月的紧张工作我们主要做了三件事：\n\n1. 一是注册公司、搭建团队。说到招人，当时很无奈：办公地不正规，两个创始人的打扮又是那种年轻无极限又红又骚类型的，好几个人聊了一次就消失在微信通讯里了。后来想想，也不怪他们，换做我，我也没法产生信任感。\n2. 二是做市场调研。考察不同地段的房租价格和小区情况。\n3. 三是尽可能的往前做细致的规划。因为我们总觉得施工队耽误了我们至少40天的进度，我们要把它补回来。从现在来看，其实当时的种种设想，并没有什么卵用。**因为现实总是以一种新的匪夷所思的形态展现在你面前，让一切准备都黯然失色。要说那时天马行空的准备方案有什么用的话，就是：提醒了我们在哪些地方需要注意。世界上最可怕的事情不是不知道，而是不知道自己不知道。**至少，我们还不是可怕的。\n\n\n# 第一位员工\n\n终于，在变更了谈话场所，并改善了自身形象之后，我们迎来了第一位“签约选手”：一位来自魅族的设计师。其实这位设计师我们在年前已经交涉了很久了，当时也打算加入我们。开年后，他又显得很犹豫，我们又苦口婆心的动之以情晓之以理的忽悠过来。但最终，他还是走了，前后不过一个月时间。可能是因为看我们连个场地都没有显得很山寨，也可能是其他原因。但最终我意识到：**创业这种事，还是要一开始就你情我愿的比较好，如果需要你一直给他加油打气，那也长久不了**\n\n我们正式入职的第一位员工是一位大哥，一位40来岁但很有活力的地产销售经理。他在广州做过10几年地产，可以说经验十分丰富，同时又是一个很有意思的大哥。我觉得我和熊强的穿着已经够学生气了，结果这位大哥经常一身运动灰的阿迪，时不时还操着鄂西北风味的粤语，非常好玩。我们三个第一眼就对上了眼，也从来没有担心过他会离开我们。事实上，感觉总是对的，一直到今天，我们仍然合作的很好。\n\n\n# 第一版网站\n\n![](first-version-web.png)\n\n这是我们第一版网站上线时发的微博，当时已经凌晨1点多了。原以为17点就可以上线，结果因为各种小插曲，弄到凌晨。很欣慰的是，幸苦了一个多月的兄弟们，也都是一种不完美上线不罢休的态度。我真的很感动，一直都是。我们大胆猜测那个时间点还在营业的除了夜店，也就只有白石洲烧烤了。我们很自然的选择了后者。\n\n上线的喜悦连一天都没有持续到就消失了，当然不是因为系统不稳定宕机之类的事情，而是**根本没有人访问我们的网站。我们做的全方位的压力测试、精心准备的抗压措施，就像一套无比精美的大型玩具，华丽而不适用。**\n\n我觉得我们很牛逼，因为只用了一个月，就完成了网站的设计、编码、部署和信息录入，视觉效果也远超同行。一直到现在，主要结构和框架都未曾改过。**但这有什么用呢？你的房子都还空在那里。做事情，不是看你的长处有多长，而是你的短板有多短。**\n\n\n# 第一个租客\n\n终于等到你，5月26日，我们迎来第一个租客：一个娇小可人的妹子。\n\n任何生意，first blood 总是有着不一样的意义。我们合了一张影（如下），来纪念这意义深远的一刻。我们想，如果5年后Color公寓还在，不管天涯海角我也要把这个妹子请过来参加我们的周年庆。我要郑重的告诉她：是她开启了我们的事业，也是我们的幸运星。如果我们在她所在的城市有分部，我要给她永久免费居住权。。。我们yy了很多，到最后聊到敲钟要不要请她来，越来越离谱，但我们越来越起劲。**我觉得不停的yy未来也是我们的文化，因为人总是要有梦想不断的去激励你，你才有持续的动力。有了这些yy我们面对困难的才会更加坚定，因为有一股力量在牵引着我们。**有人说互联网从业者离职的原因力，70%是因为觉得没有前途、没有梦想、混混度日。你看“梦想”是多么重要的因素啊！\n\n![](%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A7%9F%E5%AE%A2.JPG)\n\n\n\n# 关注社交\n\n渐渐的租客多起来了，同行业也多起来了。我觉得除了房屋质量，是时候把我们的核心竞争力拿出来了，就是“租客社交”。\n\n我刚提出这个想法的时候，我们被很多朋友狂喷，很多人觉得这个根本就是伪需求，总结起来有以下说法：\n\n1. 一群屌丝在一起，是不能产生更大的价值的。只有资源不对等的双方才更容易产生价值。\n2. 没有人会为公寓提供的社交环境而埋单。硬件环境才是刚需。 \n\n刚开始，我没办法说服他们，我坚持做下去的原动力就是来自于我的亲身体验。我有过4年的租房经历，室友们一回家就房门紧闭，空荡的客厅死寂无人。这种死寂偶尔会被我煮的火锅打破，但不久，又恢复原状。我恨死了这种单调的生活：租房不应该仅仅是睡觉之地，还应该有生活的气息。当我们下班归来，有像美剧《friends》那样的“家人”的关照，我们才真正属于这个城市。    \n\n于是我们积极的帮租客们牵线搭桥，用租房优惠券鼓励他们一起搓饭，组织集体活动让大家参加。两次活动后，大家都成了朋友。大家互相依赖和帮助，都融进了彼此的生活。下面是我们租客群里常发生的一些对话：\n\n<img style=\"display:inline\" src=\"chat_log_1.PNG\"/><img style=\"display:inline\" src=\"chat_log_2.PNG\"/><img style=\"display:inline\" src=\"chat_log_5.PNG\"/><img style=\"display:inline\" src=\"chat_log_6.PNG\"/>\n\n还有更多，约跑步、约打球、修电脑、代外卖、一起做饭等等，无法一一截图。我看到很多大学宿舍的交流方式延续到了Color公寓，这让我觉得很幸福，很有成就，**我觉得是color公寓让他们打心眼里在深圳安了家**。\n\n现在，对于Color公寓社交元素的认识越来越深刻，我更坚定我当初的想法：\n\n1. 90后更加看重自我实现和追求，程度远超过我们的认识。**90后是更加依赖网络的一代，网络成为了他们赖以生存的空气；但他们的生活并不沉迷和局限于网络，他们的兴趣和追求更加大胆和丰富。同时，他们的个性需要在一个平台中得意展现和自我标定，而我们，正是给他们提供了一个舞台。在工作之外的，更加生活的，舞台。**\n2. 这是一个更加扁平的时代，合作的双方并不一定是两个社会阶层的人的资源互换。同龄人，同社会阶层的人，只要技能互补，都有合作的可能，都能实现共赢。我在租客群里见过好几次成功的合作。\n3. 我们把租房这个产品和汽车来相比较，房子的硬件条件相当于汽车的动力和舒适性，这些是汽车最根本的属性。**但是，愈来愈流弊的人们并不局限于一台更快更舒适的车，它们甚至在车上装了互联网。回过来看，居住硬件环境是租房最根本的体验，基础体验至上，人与人之间的关系对心情（即体验）构成了更大的影响。收入标准之上的人都会追求一台有互联网的车，也会去追求一间有人情味的公寓。**\n\n\n# 我们将来会做什么\n\n我们将来会做：\n\n1. 集中式公寓。更广阔而有吸引力的公共空间，让租客间的交流更加平滑自然。（Color公寓西丽茶光店正在紧张筹备中，计划4月11日开放）\n2. 社交加强。让人情味来的更猛烈一些吧~\n3. 构建完善的网上租售体验。让租房像淘宝一样简单。\n\n有人告诉我租赁产品不适合网上销售。原因大致有几种：太贵；太重要；太不容易描述。我觉得，前两点都没抓住重点：人们在网上买相机、汽车、奢侈品，都比一年房租要贵；人们治病的药，孩子的奶粉都可以在网上买，这些都跟生命息息相关，比住房要重要。\n\n根据调研，我觉得，**商品是否合适网上交易，取决于三个因素：信任，信息标准化，方便退出。**\n\n1. **信任**。卖家必须先认可你的品牌，或者相信你有基本的职业素养，才有可能在没见到实物时购买你的产品。这种信任包括：对方不会只收钱不送货，对方不会不处理质量问题等。\n2. **信息标准化**，指的是商品信息可否通过现有的互联网技术完整的展现出来。汽车、奢侈品、电子产品都是标准化的，只要知道品牌和型号，就可以99%确定他的属性。住房，标准化的难度稍大，但也不是不可。我们通过对室内和小区拍摄高清360度全景图，手动整理和归纳小区周边的吃喝玩乐地点，计算通勤时间，给出交通建议等等等手段，是可以把用户关心的因素都囊括进来的，也就完成了信息的标注化。这也是我们正在努力的事情。 \n3. **方便退出**，即在不满意的时候有“反悔”按钮（哪怕有一些代价也可以）。这一点是相当重要的，它甚至可以有效弥补前两个属性的不足。比如我们在淘宝买衣服，衣服是最难标准化的，我们永远都不可能知道模特身上那件光彩照人的衣服穿在自己身上会不会丑态百出，但我永远知道，我只要一趟快递钱就可以退掉不喜欢的衣服。如果我们做公寓，也允许3天试住，那也会大大促进网络交易。\n\n如果有一间在网上能看到全貌的公寓，入住和结算都可以在手机上搞定，你是否会更愿意入住一点呢？\n\n# 最后\n\n**一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。**\n\n**我们该高兴，因为我们还活着；我们也该警惕，因为我们只是活着。**\n\n","source":"_posts/扯淡/Color公寓一周岁了.md","raw":"---\ntags: \n- color \ntitle: 创业一年，苟且偷生\ndescription: 一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。\ncategories: \n- 扯淡\n---\n\n摘要：一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。\n\n在这个忙碌的世界，我们往往容易忘记自己生日。若不是LinkedIn的入职一周年提醒，我恐怕也想不起来，这一年来我投入时间最多的Color公寓，也一岁了。  \n猛然意识到一年光景如白驹过隙，有种青春被浪费掉的遗憾。于是我想来回忆下近一年点滴，好向自己证明并没有浑噩度日。 \n\n\n# 从办公楼说起\n\n第一次进入我身处的这座大楼，这里还在装修，各种切割机、抛光机、装修耗材散落遍地，油漆味十分刺鼻。我们每隔几天都要穿过荆棘和硝烟来确定装修进度。熊强（我的合伙人小伙伴兼首席打杂官）在跟装修队交涉的时候，甚至被一根钢钉戳穿了脚掌。当时我开玩笑说：“通过这一戳，我觉得我们要发。你把坏运气都用在不重要的事情上，重要的事情必有好运。”**那时我们经常这样互谑打气。因为我们心里很没底，尽管在互联网行业里我和熊强都有自己的绝活，但在这里，一切从零开始。**\n\n因为大楼施工延期，我们有长达两个月的时间不得不在家里办公。我在南油租了一间30平米的单身公寓，白天摆一张桌子，我和熊强一人坐一边，就开始了一天的工作。有时候房间安静的像太平间，有时候又争吵的像菜市场，一个多月的紧张工作我们主要做了三件事：\n\n1. 一是注册公司、搭建团队。说到招人，当时很无奈：办公地不正规，两个创始人的打扮又是那种年轻无极限又红又骚类型的，好几个人聊了一次就消失在微信通讯里了。后来想想，也不怪他们，换做我，我也没法产生信任感。\n2. 二是做市场调研。考察不同地段的房租价格和小区情况。\n3. 三是尽可能的往前做细致的规划。因为我们总觉得施工队耽误了我们至少40天的进度，我们要把它补回来。从现在来看，其实当时的种种设想，并没有什么卵用。**因为现实总是以一种新的匪夷所思的形态展现在你面前，让一切准备都黯然失色。要说那时天马行空的准备方案有什么用的话，就是：提醒了我们在哪些地方需要注意。世界上最可怕的事情不是不知道，而是不知道自己不知道。**至少，我们还不是可怕的。\n\n\n# 第一位员工\n\n终于，在变更了谈话场所，并改善了自身形象之后，我们迎来了第一位“签约选手”：一位来自魅族的设计师。其实这位设计师我们在年前已经交涉了很久了，当时也打算加入我们。开年后，他又显得很犹豫，我们又苦口婆心的动之以情晓之以理的忽悠过来。但最终，他还是走了，前后不过一个月时间。可能是因为看我们连个场地都没有显得很山寨，也可能是其他原因。但最终我意识到：**创业这种事，还是要一开始就你情我愿的比较好，如果需要你一直给他加油打气，那也长久不了**\n\n我们正式入职的第一位员工是一位大哥，一位40来岁但很有活力的地产销售经理。他在广州做过10几年地产，可以说经验十分丰富，同时又是一个很有意思的大哥。我觉得我和熊强的穿着已经够学生气了，结果这位大哥经常一身运动灰的阿迪，时不时还操着鄂西北风味的粤语，非常好玩。我们三个第一眼就对上了眼，也从来没有担心过他会离开我们。事实上，感觉总是对的，一直到今天，我们仍然合作的很好。\n\n\n# 第一版网站\n\n![](first-version-web.png)\n\n这是我们第一版网站上线时发的微博，当时已经凌晨1点多了。原以为17点就可以上线，结果因为各种小插曲，弄到凌晨。很欣慰的是，幸苦了一个多月的兄弟们，也都是一种不完美上线不罢休的态度。我真的很感动，一直都是。我们大胆猜测那个时间点还在营业的除了夜店，也就只有白石洲烧烤了。我们很自然的选择了后者。\n\n上线的喜悦连一天都没有持续到就消失了，当然不是因为系统不稳定宕机之类的事情，而是**根本没有人访问我们的网站。我们做的全方位的压力测试、精心准备的抗压措施，就像一套无比精美的大型玩具，华丽而不适用。**\n\n我觉得我们很牛逼，因为只用了一个月，就完成了网站的设计、编码、部署和信息录入，视觉效果也远超同行。一直到现在，主要结构和框架都未曾改过。**但这有什么用呢？你的房子都还空在那里。做事情，不是看你的长处有多长，而是你的短板有多短。**\n\n\n# 第一个租客\n\n终于等到你，5月26日，我们迎来第一个租客：一个娇小可人的妹子。\n\n任何生意，first blood 总是有着不一样的意义。我们合了一张影（如下），来纪念这意义深远的一刻。我们想，如果5年后Color公寓还在，不管天涯海角我也要把这个妹子请过来参加我们的周年庆。我要郑重的告诉她：是她开启了我们的事业，也是我们的幸运星。如果我们在她所在的城市有分部，我要给她永久免费居住权。。。我们yy了很多，到最后聊到敲钟要不要请她来，越来越离谱，但我们越来越起劲。**我觉得不停的yy未来也是我们的文化，因为人总是要有梦想不断的去激励你，你才有持续的动力。有了这些yy我们面对困难的才会更加坚定，因为有一股力量在牵引着我们。**有人说互联网从业者离职的原因力，70%是因为觉得没有前途、没有梦想、混混度日。你看“梦想”是多么重要的因素啊！\n\n![](%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A7%9F%E5%AE%A2.JPG)\n\n\n\n# 关注社交\n\n渐渐的租客多起来了，同行业也多起来了。我觉得除了房屋质量，是时候把我们的核心竞争力拿出来了，就是“租客社交”。\n\n我刚提出这个想法的时候，我们被很多朋友狂喷，很多人觉得这个根本就是伪需求，总结起来有以下说法：\n\n1. 一群屌丝在一起，是不能产生更大的价值的。只有资源不对等的双方才更容易产生价值。\n2. 没有人会为公寓提供的社交环境而埋单。硬件环境才是刚需。 \n\n刚开始，我没办法说服他们，我坚持做下去的原动力就是来自于我的亲身体验。我有过4年的租房经历，室友们一回家就房门紧闭，空荡的客厅死寂无人。这种死寂偶尔会被我煮的火锅打破，但不久，又恢复原状。我恨死了这种单调的生活：租房不应该仅仅是睡觉之地，还应该有生活的气息。当我们下班归来，有像美剧《friends》那样的“家人”的关照，我们才真正属于这个城市。    \n\n于是我们积极的帮租客们牵线搭桥，用租房优惠券鼓励他们一起搓饭，组织集体活动让大家参加。两次活动后，大家都成了朋友。大家互相依赖和帮助，都融进了彼此的生活。下面是我们租客群里常发生的一些对话：\n\n<img style=\"display:inline\" src=\"chat_log_1.PNG\"/><img style=\"display:inline\" src=\"chat_log_2.PNG\"/><img style=\"display:inline\" src=\"chat_log_5.PNG\"/><img style=\"display:inline\" src=\"chat_log_6.PNG\"/>\n\n还有更多，约跑步、约打球、修电脑、代外卖、一起做饭等等，无法一一截图。我看到很多大学宿舍的交流方式延续到了Color公寓，这让我觉得很幸福，很有成就，**我觉得是color公寓让他们打心眼里在深圳安了家**。\n\n现在，对于Color公寓社交元素的认识越来越深刻，我更坚定我当初的想法：\n\n1. 90后更加看重自我实现和追求，程度远超过我们的认识。**90后是更加依赖网络的一代，网络成为了他们赖以生存的空气；但他们的生活并不沉迷和局限于网络，他们的兴趣和追求更加大胆和丰富。同时，他们的个性需要在一个平台中得意展现和自我标定，而我们，正是给他们提供了一个舞台。在工作之外的，更加生活的，舞台。**\n2. 这是一个更加扁平的时代，合作的双方并不一定是两个社会阶层的人的资源互换。同龄人，同社会阶层的人，只要技能互补，都有合作的可能，都能实现共赢。我在租客群里见过好几次成功的合作。\n3. 我们把租房这个产品和汽车来相比较，房子的硬件条件相当于汽车的动力和舒适性，这些是汽车最根本的属性。**但是，愈来愈流弊的人们并不局限于一台更快更舒适的车，它们甚至在车上装了互联网。回过来看，居住硬件环境是租房最根本的体验，基础体验至上，人与人之间的关系对心情（即体验）构成了更大的影响。收入标准之上的人都会追求一台有互联网的车，也会去追求一间有人情味的公寓。**\n\n\n# 我们将来会做什么\n\n我们将来会做：\n\n1. 集中式公寓。更广阔而有吸引力的公共空间，让租客间的交流更加平滑自然。（Color公寓西丽茶光店正在紧张筹备中，计划4月11日开放）\n2. 社交加强。让人情味来的更猛烈一些吧~\n3. 构建完善的网上租售体验。让租房像淘宝一样简单。\n\n有人告诉我租赁产品不适合网上销售。原因大致有几种：太贵；太重要；太不容易描述。我觉得，前两点都没抓住重点：人们在网上买相机、汽车、奢侈品，都比一年房租要贵；人们治病的药，孩子的奶粉都可以在网上买，这些都跟生命息息相关，比住房要重要。\n\n根据调研，我觉得，**商品是否合适网上交易，取决于三个因素：信任，信息标准化，方便退出。**\n\n1. **信任**。卖家必须先认可你的品牌，或者相信你有基本的职业素养，才有可能在没见到实物时购买你的产品。这种信任包括：对方不会只收钱不送货，对方不会不处理质量问题等。\n2. **信息标准化**，指的是商品信息可否通过现有的互联网技术完整的展现出来。汽车、奢侈品、电子产品都是标准化的，只要知道品牌和型号，就可以99%确定他的属性。住房，标准化的难度稍大，但也不是不可。我们通过对室内和小区拍摄高清360度全景图，手动整理和归纳小区周边的吃喝玩乐地点，计算通勤时间，给出交通建议等等等手段，是可以把用户关心的因素都囊括进来的，也就完成了信息的标注化。这也是我们正在努力的事情。 \n3. **方便退出**，即在不满意的时候有“反悔”按钮（哪怕有一些代价也可以）。这一点是相当重要的，它甚至可以有效弥补前两个属性的不足。比如我们在淘宝买衣服，衣服是最难标准化的，我们永远都不可能知道模特身上那件光彩照人的衣服穿在自己身上会不会丑态百出，但我永远知道，我只要一趟快递钱就可以退掉不喜欢的衣服。如果我们做公寓，也允许3天试住，那也会大大促进网络交易。\n\n如果有一间在网上能看到全貌的公寓，入住和结算都可以在手机上搞定，你是否会更愿意入住一点呢？\n\n# 最后\n\n**一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。**\n\n**我们该高兴，因为我们还活着；我们也该警惕，因为我们只是活着。**\n\n","slug":"扯淡/Color公寓一周岁了","published":1,"date":"2016-12-12T17:02:43.000Z","updated":"2017-07-26T16:16:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kn3002dq0d43eyazze3","content":"<p>摘要：一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。</p>\n<p>在这个忙碌的世界，我们往往容易忘记自己生日。若不是LinkedIn的入职一周年提醒，我恐怕也想不起来，这一年来我投入时间最多的Color公寓，也一岁了。<br>猛然意识到一年光景如白驹过隙，有种青春被浪费掉的遗憾。于是我想来回忆下近一年点滴，好向自己证明并没有浑噩度日。 </p>\n<h1 id=\"从办公楼说起\"><a href=\"#从办公楼说起\" class=\"headerlink\" title=\"从办公楼说起\"></a>从办公楼说起</h1><p>第一次进入我身处的这座大楼，这里还在装修，各种切割机、抛光机、装修耗材散落遍地，油漆味十分刺鼻。我们每隔几天都要穿过荆棘和硝烟来确定装修进度。熊强（我的合伙人小伙伴兼首席打杂官）在跟装修队交涉的时候，甚至被一根钢钉戳穿了脚掌。当时我开玩笑说：“通过这一戳，我觉得我们要发。你把坏运气都用在不重要的事情上，重要的事情必有好运。”<strong>那时我们经常这样互谑打气。因为我们心里很没底，尽管在互联网行业里我和熊强都有自己的绝活，但在这里，一切从零开始。</strong></p>\n<p>因为大楼施工延期，我们有长达两个月的时间不得不在家里办公。我在南油租了一间30平米的单身公寓，白天摆一张桌子，我和熊强一人坐一边，就开始了一天的工作。有时候房间安静的像太平间，有时候又争吵的像菜市场，一个多月的紧张工作我们主要做了三件事：</p>\n<ol>\n<li>一是注册公司、搭建团队。说到招人，当时很无奈：办公地不正规，两个创始人的打扮又是那种年轻无极限又红又骚类型的，好几个人聊了一次就消失在微信通讯里了。后来想想，也不怪他们，换做我，我也没法产生信任感。</li>\n<li>二是做市场调研。考察不同地段的房租价格和小区情况。</li>\n<li>三是尽可能的往前做细致的规划。因为我们总觉得施工队耽误了我们至少40天的进度，我们要把它补回来。从现在来看，其实当时的种种设想，并没有什么卵用。<strong>因为现实总是以一种新的匪夷所思的形态展现在你面前，让一切准备都黯然失色。要说那时天马行空的准备方案有什么用的话，就是：提醒了我们在哪些地方需要注意。世界上最可怕的事情不是不知道，而是不知道自己不知道。</strong>至少，我们还不是可怕的。</li>\n</ol>\n<h1 id=\"第一位员工\"><a href=\"#第一位员工\" class=\"headerlink\" title=\"第一位员工\"></a>第一位员工</h1><p>终于，在变更了谈话场所，并改善了自身形象之后，我们迎来了第一位“签约选手”：一位来自魅族的设计师。其实这位设计师我们在年前已经交涉了很久了，当时也打算加入我们。开年后，他又显得很犹豫，我们又苦口婆心的动之以情晓之以理的忽悠过来。但最终，他还是走了，前后不过一个月时间。可能是因为看我们连个场地都没有显得很山寨，也可能是其他原因。但最终我意识到：<strong>创业这种事，还是要一开始就你情我愿的比较好，如果需要你一直给他加油打气，那也长久不了</strong></p>\n<p>我们正式入职的第一位员工是一位大哥，一位40来岁但很有活力的地产销售经理。他在广州做过10几年地产，可以说经验十分丰富，同时又是一个很有意思的大哥。我觉得我和熊强的穿着已经够学生气了，结果这位大哥经常一身运动灰的阿迪，时不时还操着鄂西北风味的粤语，非常好玩。我们三个第一眼就对上了眼，也从来没有担心过他会离开我们。事实上，感觉总是对的，一直到今天，我们仍然合作的很好。</p>\n<h1 id=\"第一版网站\"><a href=\"#第一版网站\" class=\"headerlink\" title=\"第一版网站\"></a>第一版网站</h1><p><img src=\"first-version-web.png\" alt=\"\"></p>\n<p>这是我们第一版网站上线时发的微博，当时已经凌晨1点多了。原以为17点就可以上线，结果因为各种小插曲，弄到凌晨。很欣慰的是，幸苦了一个多月的兄弟们，也都是一种不完美上线不罢休的态度。我真的很感动，一直都是。我们大胆猜测那个时间点还在营业的除了夜店，也就只有白石洲烧烤了。我们很自然的选择了后者。</p>\n<p>上线的喜悦连一天都没有持续到就消失了，当然不是因为系统不稳定宕机之类的事情，而是<strong>根本没有人访问我们的网站。我们做的全方位的压力测试、精心准备的抗压措施，就像一套无比精美的大型玩具，华丽而不适用。</strong></p>\n<p>我觉得我们很牛逼，因为只用了一个月，就完成了网站的设计、编码、部署和信息录入，视觉效果也远超同行。一直到现在，主要结构和框架都未曾改过。<strong>但这有什么用呢？你的房子都还空在那里。做事情，不是看你的长处有多长，而是你的短板有多短。</strong></p>\n<h1 id=\"第一个租客\"><a href=\"#第一个租客\" class=\"headerlink\" title=\"第一个租客\"></a>第一个租客</h1><p>终于等到你，5月26日，我们迎来第一个租客：一个娇小可人的妹子。</p>\n<p>任何生意，first blood 总是有着不一样的意义。我们合了一张影（如下），来纪念这意义深远的一刻。我们想，如果5年后Color公寓还在，不管天涯海角我也要把这个妹子请过来参加我们的周年庆。我要郑重的告诉她：是她开启了我们的事业，也是我们的幸运星。如果我们在她所在的城市有分部，我要给她永久免费居住权。。。我们yy了很多，到最后聊到敲钟要不要请她来，越来越离谱，但我们越来越起劲。<strong>我觉得不停的yy未来也是我们的文化，因为人总是要有梦想不断的去激励你，你才有持续的动力。有了这些yy我们面对困难的才会更加坚定，因为有一股力量在牵引着我们。</strong>有人说互联网从业者离职的原因力，70%是因为觉得没有前途、没有梦想、混混度日。你看“梦想”是多么重要的因素啊！</p>\n<p><img src=\"%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A7%9F%E5%AE%A2.JPG\" alt=\"\"></p>\n<h1 id=\"关注社交\"><a href=\"#关注社交\" class=\"headerlink\" title=\"关注社交\"></a>关注社交</h1><p>渐渐的租客多起来了，同行业也多起来了。我觉得除了房屋质量，是时候把我们的核心竞争力拿出来了，就是“租客社交”。</p>\n<p>我刚提出这个想法的时候，我们被很多朋友狂喷，很多人觉得这个根本就是伪需求，总结起来有以下说法：</p>\n<ol>\n<li>一群屌丝在一起，是不能产生更大的价值的。只有资源不对等的双方才更容易产生价值。</li>\n<li>没有人会为公寓提供的社交环境而埋单。硬件环境才是刚需。 </li>\n</ol>\n<p>刚开始，我没办法说服他们，我坚持做下去的原动力就是来自于我的亲身体验。我有过4年的租房经历，室友们一回家就房门紧闭，空荡的客厅死寂无人。这种死寂偶尔会被我煮的火锅打破，但不久，又恢复原状。我恨死了这种单调的生活：租房不应该仅仅是睡觉之地，还应该有生活的气息。当我们下班归来，有像美剧《friends》那样的“家人”的关照，我们才真正属于这个城市。    </p>\n<p>于是我们积极的帮租客们牵线搭桥，用租房优惠券鼓励他们一起搓饭，组织集体活动让大家参加。两次活动后，大家都成了朋友。大家互相依赖和帮助，都融进了彼此的生活。下面是我们租客群里常发生的一些对话：</p>\n<p><img style=\"display:inline\" src=\"chat_log_1.PNG\"><img style=\"display:inline\" src=\"chat_log_2.PNG\"><img style=\"display:inline\" src=\"chat_log_5.PNG\"><img style=\"display:inline\" src=\"chat_log_6.PNG\"></p>\n<p>还有更多，约跑步、约打球、修电脑、代外卖、一起做饭等等，无法一一截图。我看到很多大学宿舍的交流方式延续到了Color公寓，这让我觉得很幸福，很有成就，<strong>我觉得是color公寓让他们打心眼里在深圳安了家</strong>。</p>\n<p>现在，对于Color公寓社交元素的认识越来越深刻，我更坚定我当初的想法：</p>\n<ol>\n<li>90后更加看重自我实现和追求，程度远超过我们的认识。<strong>90后是更加依赖网络的一代，网络成为了他们赖以生存的空气；但他们的生活并不沉迷和局限于网络，他们的兴趣和追求更加大胆和丰富。同时，他们的个性需要在一个平台中得意展现和自我标定，而我们，正是给他们提供了一个舞台。在工作之外的，更加生活的，舞台。</strong></li>\n<li>这是一个更加扁平的时代，合作的双方并不一定是两个社会阶层的人的资源互换。同龄人，同社会阶层的人，只要技能互补，都有合作的可能，都能实现共赢。我在租客群里见过好几次成功的合作。</li>\n<li>我们把租房这个产品和汽车来相比较，房子的硬件条件相当于汽车的动力和舒适性，这些是汽车最根本的属性。<strong>但是，愈来愈流弊的人们并不局限于一台更快更舒适的车，它们甚至在车上装了互联网。回过来看，居住硬件环境是租房最根本的体验，基础体验至上，人与人之间的关系对心情（即体验）构成了更大的影响。收入标准之上的人都会追求一台有互联网的车，也会去追求一间有人情味的公寓。</strong></li>\n</ol>\n<h1 id=\"我们将来会做什么\"><a href=\"#我们将来会做什么\" class=\"headerlink\" title=\"我们将来会做什么\"></a>我们将来会做什么</h1><p>我们将来会做：</p>\n<ol>\n<li>集中式公寓。更广阔而有吸引力的公共空间，让租客间的交流更加平滑自然。（Color公寓西丽茶光店正在紧张筹备中，计划4月11日开放）</li>\n<li>社交加强。让人情味来的更猛烈一些吧~</li>\n<li>构建完善的网上租售体验。让租房像淘宝一样简单。</li>\n</ol>\n<p>有人告诉我租赁产品不适合网上销售。原因大致有几种：太贵；太重要；太不容易描述。我觉得，前两点都没抓住重点：人们在网上买相机、汽车、奢侈品，都比一年房租要贵；人们治病的药，孩子的奶粉都可以在网上买，这些都跟生命息息相关，比住房要重要。</p>\n<p>根据调研，我觉得，<strong>商品是否合适网上交易，取决于三个因素：信任，信息标准化，方便退出。</strong></p>\n<ol>\n<li><strong>信任</strong>。卖家必须先认可你的品牌，或者相信你有基本的职业素养，才有可能在没见到实物时购买你的产品。这种信任包括：对方不会只收钱不送货，对方不会不处理质量问题等。</li>\n<li><strong>信息标准化</strong>，指的是商品信息可否通过现有的互联网技术完整的展现出来。汽车、奢侈品、电子产品都是标准化的，只要知道品牌和型号，就可以99%确定他的属性。住房，标准化的难度稍大，但也不是不可。我们通过对室内和小区拍摄高清360度全景图，手动整理和归纳小区周边的吃喝玩乐地点，计算通勤时间，给出交通建议等等等手段，是可以把用户关心的因素都囊括进来的，也就完成了信息的标注化。这也是我们正在努力的事情。 </li>\n<li><strong>方便退出</strong>，即在不满意的时候有“反悔”按钮（哪怕有一些代价也可以）。这一点是相当重要的，它甚至可以有效弥补前两个属性的不足。比如我们在淘宝买衣服，衣服是最难标准化的，我们永远都不可能知道模特身上那件光彩照人的衣服穿在自己身上会不会丑态百出，但我永远知道，我只要一趟快递钱就可以退掉不喜欢的衣服。如果我们做公寓，也允许3天试住，那也会大大促进网络交易。</li>\n</ol>\n<p>如果有一间在网上能看到全貌的公寓，入住和结算都可以在手机上搞定，你是否会更愿意入住一点呢？</p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p><strong>一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。</strong></p>\n<p><strong>我们该高兴，因为我们还活着；我们也该警惕，因为我们只是活着。</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。</p>\n<p>在这个忙碌的世界，我们往往容易忘记自己生日。若不是LinkedIn的入职一周年提醒，我恐怕也想不起来，这一年来我投入时间最多的Color公寓，也一岁了。<br>猛然意识到一年光景如白驹过隙，有种青春被浪费掉的遗憾。于是我想来回忆下近一年点滴，好向自己证明并没有浑噩度日。 </p>\n<h1 id=\"从办公楼说起\"><a href=\"#从办公楼说起\" class=\"headerlink\" title=\"从办公楼说起\"></a>从办公楼说起</h1><p>第一次进入我身处的这座大楼，这里还在装修，各种切割机、抛光机、装修耗材散落遍地，油漆味十分刺鼻。我们每隔几天都要穿过荆棘和硝烟来确定装修进度。熊强（我的合伙人小伙伴兼首席打杂官）在跟装修队交涉的时候，甚至被一根钢钉戳穿了脚掌。当时我开玩笑说：“通过这一戳，我觉得我们要发。你把坏运气都用在不重要的事情上，重要的事情必有好运。”<strong>那时我们经常这样互谑打气。因为我们心里很没底，尽管在互联网行业里我和熊强都有自己的绝活，但在这里，一切从零开始。</strong></p>\n<p>因为大楼施工延期，我们有长达两个月的时间不得不在家里办公。我在南油租了一间30平米的单身公寓，白天摆一张桌子，我和熊强一人坐一边，就开始了一天的工作。有时候房间安静的像太平间，有时候又争吵的像菜市场，一个多月的紧张工作我们主要做了三件事：</p>\n<ol>\n<li>一是注册公司、搭建团队。说到招人，当时很无奈：办公地不正规，两个创始人的打扮又是那种年轻无极限又红又骚类型的，好几个人聊了一次就消失在微信通讯里了。后来想想，也不怪他们，换做我，我也没法产生信任感。</li>\n<li>二是做市场调研。考察不同地段的房租价格和小区情况。</li>\n<li>三是尽可能的往前做细致的规划。因为我们总觉得施工队耽误了我们至少40天的进度，我们要把它补回来。从现在来看，其实当时的种种设想，并没有什么卵用。<strong>因为现实总是以一种新的匪夷所思的形态展现在你面前，让一切准备都黯然失色。要说那时天马行空的准备方案有什么用的话，就是：提醒了我们在哪些地方需要注意。世界上最可怕的事情不是不知道，而是不知道自己不知道。</strong>至少，我们还不是可怕的。</li>\n</ol>\n<h1 id=\"第一位员工\"><a href=\"#第一位员工\" class=\"headerlink\" title=\"第一位员工\"></a>第一位员工</h1><p>终于，在变更了谈话场所，并改善了自身形象之后，我们迎来了第一位“签约选手”：一位来自魅族的设计师。其实这位设计师我们在年前已经交涉了很久了，当时也打算加入我们。开年后，他又显得很犹豫，我们又苦口婆心的动之以情晓之以理的忽悠过来。但最终，他还是走了，前后不过一个月时间。可能是因为看我们连个场地都没有显得很山寨，也可能是其他原因。但最终我意识到：<strong>创业这种事，还是要一开始就你情我愿的比较好，如果需要你一直给他加油打气，那也长久不了</strong></p>\n<p>我们正式入职的第一位员工是一位大哥，一位40来岁但很有活力的地产销售经理。他在广州做过10几年地产，可以说经验十分丰富，同时又是一个很有意思的大哥。我觉得我和熊强的穿着已经够学生气了，结果这位大哥经常一身运动灰的阿迪，时不时还操着鄂西北风味的粤语，非常好玩。我们三个第一眼就对上了眼，也从来没有担心过他会离开我们。事实上，感觉总是对的，一直到今天，我们仍然合作的很好。</p>\n<h1 id=\"第一版网站\"><a href=\"#第一版网站\" class=\"headerlink\" title=\"第一版网站\"></a>第一版网站</h1><p><img src=\"first-version-web.png\" alt=\"\"></p>\n<p>这是我们第一版网站上线时发的微博，当时已经凌晨1点多了。原以为17点就可以上线，结果因为各种小插曲，弄到凌晨。很欣慰的是，幸苦了一个多月的兄弟们，也都是一种不完美上线不罢休的态度。我真的很感动，一直都是。我们大胆猜测那个时间点还在营业的除了夜店，也就只有白石洲烧烤了。我们很自然的选择了后者。</p>\n<p>上线的喜悦连一天都没有持续到就消失了，当然不是因为系统不稳定宕机之类的事情，而是<strong>根本没有人访问我们的网站。我们做的全方位的压力测试、精心准备的抗压措施，就像一套无比精美的大型玩具，华丽而不适用。</strong></p>\n<p>我觉得我们很牛逼，因为只用了一个月，就完成了网站的设计、编码、部署和信息录入，视觉效果也远超同行。一直到现在，主要结构和框架都未曾改过。<strong>但这有什么用呢？你的房子都还空在那里。做事情，不是看你的长处有多长，而是你的短板有多短。</strong></p>\n<h1 id=\"第一个租客\"><a href=\"#第一个租客\" class=\"headerlink\" title=\"第一个租客\"></a>第一个租客</h1><p>终于等到你，5月26日，我们迎来第一个租客：一个娇小可人的妹子。</p>\n<p>任何生意，first blood 总是有着不一样的意义。我们合了一张影（如下），来纪念这意义深远的一刻。我们想，如果5年后Color公寓还在，不管天涯海角我也要把这个妹子请过来参加我们的周年庆。我要郑重的告诉她：是她开启了我们的事业，也是我们的幸运星。如果我们在她所在的城市有分部，我要给她永久免费居住权。。。我们yy了很多，到最后聊到敲钟要不要请她来，越来越离谱，但我们越来越起劲。<strong>我觉得不停的yy未来也是我们的文化，因为人总是要有梦想不断的去激励你，你才有持续的动力。有了这些yy我们面对困难的才会更加坚定，因为有一股力量在牵引着我们。</strong>有人说互联网从业者离职的原因力，70%是因为觉得没有前途、没有梦想、混混度日。你看“梦想”是多么重要的因素啊！</p>\n<p><img src=\"%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A7%9F%E5%AE%A2.JPG\" alt=\"\"></p>\n<h1 id=\"关注社交\"><a href=\"#关注社交\" class=\"headerlink\" title=\"关注社交\"></a>关注社交</h1><p>渐渐的租客多起来了，同行业也多起来了。我觉得除了房屋质量，是时候把我们的核心竞争力拿出来了，就是“租客社交”。</p>\n<p>我刚提出这个想法的时候，我们被很多朋友狂喷，很多人觉得这个根本就是伪需求，总结起来有以下说法：</p>\n<ol>\n<li>一群屌丝在一起，是不能产生更大的价值的。只有资源不对等的双方才更容易产生价值。</li>\n<li>没有人会为公寓提供的社交环境而埋单。硬件环境才是刚需。 </li>\n</ol>\n<p>刚开始，我没办法说服他们，我坚持做下去的原动力就是来自于我的亲身体验。我有过4年的租房经历，室友们一回家就房门紧闭，空荡的客厅死寂无人。这种死寂偶尔会被我煮的火锅打破，但不久，又恢复原状。我恨死了这种单调的生活：租房不应该仅仅是睡觉之地，还应该有生活的气息。当我们下班归来，有像美剧《friends》那样的“家人”的关照，我们才真正属于这个城市。    </p>\n<p>于是我们积极的帮租客们牵线搭桥，用租房优惠券鼓励他们一起搓饭，组织集体活动让大家参加。两次活动后，大家都成了朋友。大家互相依赖和帮助，都融进了彼此的生活。下面是我们租客群里常发生的一些对话：</p>\n<p><img style=\"display:inline\" src=\"chat_log_1.PNG\"><img style=\"display:inline\" src=\"chat_log_2.PNG\"><img style=\"display:inline\" src=\"chat_log_5.PNG\"><img style=\"display:inline\" src=\"chat_log_6.PNG\"></p>\n<p>还有更多，约跑步、约打球、修电脑、代外卖、一起做饭等等，无法一一截图。我看到很多大学宿舍的交流方式延续到了Color公寓，这让我觉得很幸福，很有成就，<strong>我觉得是color公寓让他们打心眼里在深圳安了家</strong>。</p>\n<p>现在，对于Color公寓社交元素的认识越来越深刻，我更坚定我当初的想法：</p>\n<ol>\n<li>90后更加看重自我实现和追求，程度远超过我们的认识。<strong>90后是更加依赖网络的一代，网络成为了他们赖以生存的空气；但他们的生活并不沉迷和局限于网络，他们的兴趣和追求更加大胆和丰富。同时，他们的个性需要在一个平台中得意展现和自我标定，而我们，正是给他们提供了一个舞台。在工作之外的，更加生活的，舞台。</strong></li>\n<li>这是一个更加扁平的时代，合作的双方并不一定是两个社会阶层的人的资源互换。同龄人，同社会阶层的人，只要技能互补，都有合作的可能，都能实现共赢。我在租客群里见过好几次成功的合作。</li>\n<li>我们把租房这个产品和汽车来相比较，房子的硬件条件相当于汽车的动力和舒适性，这些是汽车最根本的属性。<strong>但是，愈来愈流弊的人们并不局限于一台更快更舒适的车，它们甚至在车上装了互联网。回过来看，居住硬件环境是租房最根本的体验，基础体验至上，人与人之间的关系对心情（即体验）构成了更大的影响。收入标准之上的人都会追求一台有互联网的车，也会去追求一间有人情味的公寓。</strong></li>\n</ol>\n<h1 id=\"我们将来会做什么\"><a href=\"#我们将来会做什么\" class=\"headerlink\" title=\"我们将来会做什么\"></a>我们将来会做什么</h1><p>我们将来会做：</p>\n<ol>\n<li>集中式公寓。更广阔而有吸引力的公共空间，让租客间的交流更加平滑自然。（Color公寓西丽茶光店正在紧张筹备中，计划4月11日开放）</li>\n<li>社交加强。让人情味来的更猛烈一些吧~</li>\n<li>构建完善的网上租售体验。让租房像淘宝一样简单。</li>\n</ol>\n<p>有人告诉我租赁产品不适合网上销售。原因大致有几种：太贵；太重要；太不容易描述。我觉得，前两点都没抓住重点：人们在网上买相机、汽车、奢侈品，都比一年房租要贵；人们治病的药，孩子的奶粉都可以在网上买，这些都跟生命息息相关，比住房要重要。</p>\n<p>根据调研，我觉得，<strong>商品是否合适网上交易，取决于三个因素：信任，信息标准化，方便退出。</strong></p>\n<ol>\n<li><strong>信任</strong>。卖家必须先认可你的品牌，或者相信你有基本的职业素养，才有可能在没见到实物时购买你的产品。这种信任包括：对方不会只收钱不送货，对方不会不处理质量问题等。</li>\n<li><strong>信息标准化</strong>，指的是商品信息可否通过现有的互联网技术完整的展现出来。汽车、奢侈品、电子产品都是标准化的，只要知道品牌和型号，就可以99%确定他的属性。住房，标准化的难度稍大，但也不是不可。我们通过对室内和小区拍摄高清360度全景图，手动整理和归纳小区周边的吃喝玩乐地点，计算通勤时间，给出交通建议等等等手段，是可以把用户关心的因素都囊括进来的，也就完成了信息的标注化。这也是我们正在努力的事情。 </li>\n<li><strong>方便退出</strong>，即在不满意的时候有“反悔”按钮（哪怕有一些代价也可以）。这一点是相当重要的，它甚至可以有效弥补前两个属性的不足。比如我们在淘宝买衣服，衣服是最难标准化的，我们永远都不可能知道模特身上那件光彩照人的衣服穿在自己身上会不会丑态百出，但我永远知道，我只要一趟快递钱就可以退掉不喜欢的衣服。如果我们做公寓，也允许3天试住，那也会大大促进网络交易。</li>\n</ol>\n<p>如果有一间在网上能看到全貌的公寓，入住和结算都可以在手机上搞定，你是否会更愿意入住一点呢？</p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p><strong>一周年了，我们的境况，不像媒体里风光无限的明星公司那样手握几亿融资，也不像媒体里创业失败潮里死寂的灰烬。其实这像极了普罗大众的人生，不是风光无限，也不是家徒四壁，只是走着自己的平凡之路。</strong></p>\n<p><strong>我们该高兴，因为我们还活着；我们也该警惕，因为我们只是活着。</strong></p>\n"},{"title":"Color团队自我介绍","_content":"\n\n1. 我们是个O2O公司，线上和线下同样重要。\n2. 利用互联网思维和装备，管理线下团队，是一个挑战。 \n3. 线上团队的创建：我们只找“最贵的人，最贵的人一般都是性价比最高的人。多一个人就多很多沟通成本，沟通成本和人数的平方成正比。\n4. 我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。\n4. 我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。\n5. 用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。\n5. 打算用一些黑科技来带动公寓行业的发展。比如，全程自助看房，VR看房，线上直接租房。门卡和账单绑定。\n6. 真诚、亲和力是我们的服务态度。我们不要酒店式毕恭毕敬的服务方式，我们的管家和租客都是朋友关系，一起吃喝玩乐、一起分享心情，是我们最希望看到的画面。\n7. 我们公寓最大的特色就是社交，官方的彩客日（我们把COLOR公寓的租客叫做“彩客”，彩客狂欢的日子叫“彩客日”）、民间的兴趣小组，让我们的公寓变得更有人情味。","source":"_posts/扯淡/介绍我们.md","raw":"---\ntitle: 'Color团队自我介绍'\ncategories: \n- 扯淡\ntags: \n- color\n- 团队管理\n---\n\n\n1. 我们是个O2O公司，线上和线下同样重要。\n2. 利用互联网思维和装备，管理线下团队，是一个挑战。 \n3. 线上团队的创建：我们只找“最贵的人，最贵的人一般都是性价比最高的人。多一个人就多很多沟通成本，沟通成本和人数的平方成正比。\n4. 我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。\n4. 我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。\n5. 用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。\n5. 打算用一些黑科技来带动公寓行业的发展。比如，全程自助看房，VR看房，线上直接租房。门卡和账单绑定。\n6. 真诚、亲和力是我们的服务态度。我们不要酒店式毕恭毕敬的服务方式，我们的管家和租客都是朋友关系，一起吃喝玩乐、一起分享心情，是我们最希望看到的画面。\n7. 我们公寓最大的特色就是社交，官方的彩客日（我们把COLOR公寓的租客叫做“彩客”，彩客狂欢的日子叫“彩客日”）、民间的兴趣小组，让我们的公寓变得更有人情味。","slug":"扯淡/介绍我们","published":1,"date":"2016-04-06T09:49:06.000Z","updated":"2017-07-26T16:21:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6knb002hq0d489i8btgf","content":"<ol>\n<li>我们是个O2O公司，线上和线下同样重要。</li>\n<li>利用互联网思维和装备，管理线下团队，是一个挑战。 </li>\n<li>线上团队的创建：我们只找“最贵的人，最贵的人一般都是性价比最高的人。多一个人就多很多沟通成本，沟通成本和人数的平方成正比。</li>\n<li>我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。</li>\n<li>我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。</li>\n<li>用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。</li>\n<li>打算用一些黑科技来带动公寓行业的发展。比如，全程自助看房，VR看房，线上直接租房。门卡和账单绑定。</li>\n<li>真诚、亲和力是我们的服务态度。我们不要酒店式毕恭毕敬的服务方式，我们的管家和租客都是朋友关系，一起吃喝玩乐、一起分享心情，是我们最希望看到的画面。</li>\n<li>我们公寓最大的特色就是社交，官方的彩客日（我们把COLOR公寓的租客叫做“彩客”，彩客狂欢的日子叫“彩客日”）、民间的兴趣小组，让我们的公寓变得更有人情味。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>我们是个O2O公司，线上和线下同样重要。</li>\n<li>利用互联网思维和装备，管理线下团队，是一个挑战。 </li>\n<li>线上团队的创建：我们只找“最贵的人，最贵的人一般都是性价比最高的人。多一个人就多很多沟通成本，沟通成本和人数的平方成正比。</li>\n<li>我们研发团队就4个人，一个设计，3个开发。只花了3个月，但是我们网站的质量在租房行业也是屈指可数的。</li>\n<li>我们用Axure做原型设计，Worktile做任务管理。跟纯线上团队不同，我们有大量规章制度的文档，有道云笔记做文档管理，还挺方便，学习成本很低。</li>\n<li>用Scrum极限编程来管理团队。每日站立会议，来增进成员间的沟通，排查困难和阻碍。冲刺计划会议和冲刺总结会议，标志着一个冲刺周期的开始和结束，让团队时刻都有一个目标。</li>\n<li>打算用一些黑科技来带动公寓行业的发展。比如，全程自助看房，VR看房，线上直接租房。门卡和账单绑定。</li>\n<li>真诚、亲和力是我们的服务态度。我们不要酒店式毕恭毕敬的服务方式，我们的管家和租客都是朋友关系，一起吃喝玩乐、一起分享心情，是我们最希望看到的画面。</li>\n<li>我们公寓最大的特色就是社交，官方的彩客日（我们把COLOR公寓的租客叫做“彩客”，彩客狂欢的日子叫“彩客日”）、民间的兴趣小组，让我们的公寓变得更有人情味。</li>\n</ol>\n"},{"_content":"Layout:slide\ntags: 创业,演讲\ndescription: 一个PPT，用来阐述创业精神\ndate: 2016-1-19 14:20\nStatus: hide\n\n# 这一页用来干啥\n\n## 子页面\n\n### 三级页面\n\n只能怪文\n\n```jade:n\nhead\n        +mobile_meta()\n        meta(name=\"keywords\", content=site.configs.keywords.escaped)\n        meta(name=\"description\", content=site.raw_content.escaped)\n        block title\n            title= request.args.s or post.title or tags.join('+') or category.title or site.title\n        +get_resource(\"blog_basic.css\")\n        +load('pure#0.5.0')\n        +load('/service/static_3rd/staticfile/ajax/libs/pure/0.5.0/grids-responsive-min.css')\n        +load('/template/style.scss')\n```\n\n### 三级页面\n\n\n# 一级页面","source":"_posts/扯淡/ppt.md","raw":"Layout:slide\ntags: 创业,演讲\ndescription: 一个PPT，用来阐述创业精神\ndate: 2016-1-19 14:20\nStatus: hide\n\n# 这一页用来干啥\n\n## 子页面\n\n### 三级页面\n\n只能怪文\n\n```jade:n\nhead\n        +mobile_meta()\n        meta(name=\"keywords\", content=site.configs.keywords.escaped)\n        meta(name=\"description\", content=site.raw_content.escaped)\n        block title\n            title= request.args.s or post.title or tags.join('+') or category.title or site.title\n        +get_resource(\"blog_basic.css\")\n        +load('pure#0.5.0')\n        +load('/service/static_3rd/staticfile/ajax/libs/pure/0.5.0/grids-responsive-min.css')\n        +load('/template/style.scss')\n```\n\n### 三级页面\n\n\n# 一级页面","slug":"扯淡/ppt","published":1,"date":"2016-01-19T10:37:07.000Z","updated":"2017-07-26T13:11:29.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kni002kq0d4vtbqfyo1","content":"<p>Layout:slide<br>tags: 创业,演讲<br>description: 一个PPT，用来阐述创业精神<br>date: 2016-1-19 14:20<br>Status: hide</p>\n<h1 id=\"这一页用来干啥\"><a href=\"#这一页用来干啥\" class=\"headerlink\" title=\"这一页用来干啥\"></a>这一页用来干啥</h1><h2 id=\"子页面\"><a href=\"#子页面\" class=\"headerlink\" title=\"子页面\"></a>子页面</h2><h3 id=\"三级页面\"><a href=\"#三级页面\" class=\"headerlink\" title=\"三级页面\"></a>三级页面</h3><p>只能怪文</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">head</div><div class=\"line\">        +mobile_meta()</div><div class=\"line\">        meta(name=&quot;keywords&quot;, content=site.configs.keywords.escaped)</div><div class=\"line\">        meta(name=&quot;description&quot;, content=site.raw_content.escaped)</div><div class=\"line\">        block title</div><div class=\"line\">            title= request.args.s or post.title or tags.join(&apos;+&apos;) or category.title or site.title</div><div class=\"line\">        +get_resource(&quot;blog_basic.css&quot;)</div><div class=\"line\">        +load(&apos;pure#0.5.0&apos;)</div><div class=\"line\">        +load(&apos;/service/static_3rd/staticfile/ajax/libs/pure/0.5.0/grids-responsive-min.css&apos;)</div><div class=\"line\">        +load(&apos;/template/style.scss&apos;)</div></pre></td></tr></table></figure>\n<h3 id=\"三级页面-1\"><a href=\"#三级页面-1\" class=\"headerlink\" title=\"三级页面\"></a>三级页面</h3><h1 id=\"一级页面\"><a href=\"#一级页面\" class=\"headerlink\" title=\"一级页面\"></a>一级页面</h1>","site":{"data":{}},"excerpt":"","more":"<p>Layout:slide<br>tags: 创业,演讲<br>description: 一个PPT，用来阐述创业精神<br>date: 2016-1-19 14:20<br>Status: hide</p>\n<h1 id=\"这一页用来干啥\"><a href=\"#这一页用来干啥\" class=\"headerlink\" title=\"这一页用来干啥\"></a>这一页用来干啥</h1><h2 id=\"子页面\"><a href=\"#子页面\" class=\"headerlink\" title=\"子页面\"></a>子页面</h2><h3 id=\"三级页面\"><a href=\"#三级页面\" class=\"headerlink\" title=\"三级页面\"></a>三级页面</h3><p>只能怪文</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">head</div><div class=\"line\">        +mobile_meta()</div><div class=\"line\">        meta(name=&quot;keywords&quot;, content=site.configs.keywords.escaped)</div><div class=\"line\">        meta(name=&quot;description&quot;, content=site.raw_content.escaped)</div><div class=\"line\">        block title</div><div class=\"line\">            title= request.args.s or post.title or tags.join(&apos;+&apos;) or category.title or site.title</div><div class=\"line\">        +get_resource(&quot;blog_basic.css&quot;)</div><div class=\"line\">        +load(&apos;pure#0.5.0&apos;)</div><div class=\"line\">        +load(&apos;/service/static_3rd/staticfile/ajax/libs/pure/0.5.0/grids-responsive-min.css&apos;)</div><div class=\"line\">        +load(&apos;/template/style.scss&apos;)</div></pre></td></tr></table></figure>\n<h3 id=\"三级页面-1\"><a href=\"#三级页面-1\" class=\"headerlink\" title=\"三级页面\"></a>三级页面</h3><h1 id=\"一级页面\"><a href=\"#一级页面\" class=\"headerlink\" title=\"一级页面\"></a>一级页面</h1>"},{"title":"不算春节，你有多久没有回过家？","date":"2017-02-05T16:00:00.000Z","_content":"\n\n不算春节，你有多久没有回过家？3～5年？之所以不把春节算上，是因为春节期间的家乡，笼罩着团圆的气氛，充斥着归乡的人群；而这些，在大多数时间都不属于家乡。\n而你，有多久没有看过，常态下的家乡？\n\n\n岳父大人不远千里来机场接机，对老婆来说，从小到大，这也是第一次。我想，大概是因为，我们越长大，回家的时间就越“宝贵”，“宝贵”到父母驱车200公里也要多争取两个小时时间在一起。\n\n\n回程路上，岳父大人执意要开车。见他路上渐现疲态，我换到驾驶座，车速刚加速到100码，他已睡着。\n\n\n接近凌晨到家，岳父大人乐此不彼的带我们展示他为我们精心修葺的千尺豪宅。他为两个宝贝女儿每人装修了一间卧室。说是卧室，比深圳的“精装50平单身公寓”还要大。卧室外面，60平米的阳台，像大海一样宽阔，我傻了眼。我走到阳台边，周围安静得只剩下蛐蛐声，一辆车的声音都没有。我仰望天空，星空清澈无比，心里顿时五味杂陈。见到在土地上如此铺张挥霍的家，再想到深圳那个精打细算的家，不禁怀疑起自己：是哪里不对？一路参观，所到之处，各种细节，处处透露着二老的良苦用心。即便款式有些老套，但一点也不妨碍我感动得一塌糊涂。想到这样宽敞精致、良苦用心的房子，使用率不到1%，又为二老感到不值。\n\n\n回到自己家，好多年没吃过樱桃，就带上爸妈一起上山摘樱桃。\n\n\n\n","source":"_posts/扯淡/不算春节，你有多久没有回过家？.md","raw":"---\ntitle: '不算春节，你有多久没有回过家？'\ndate: 2017-02-06\ntags: \n- 感悟 \n- 家乡 \n- 人生\ncategories: \n- 扯淡\n---\n\n\n不算春节，你有多久没有回过家？3～5年？之所以不把春节算上，是因为春节期间的家乡，笼罩着团圆的气氛，充斥着归乡的人群；而这些，在大多数时间都不属于家乡。\n而你，有多久没有看过，常态下的家乡？\n\n\n岳父大人不远千里来机场接机，对老婆来说，从小到大，这也是第一次。我想，大概是因为，我们越长大，回家的时间就越“宝贵”，“宝贵”到父母驱车200公里也要多争取两个小时时间在一起。\n\n\n回程路上，岳父大人执意要开车。见他路上渐现疲态，我换到驾驶座，车速刚加速到100码，他已睡着。\n\n\n接近凌晨到家，岳父大人乐此不彼的带我们展示他为我们精心修葺的千尺豪宅。他为两个宝贝女儿每人装修了一间卧室。说是卧室，比深圳的“精装50平单身公寓”还要大。卧室外面，60平米的阳台，像大海一样宽阔，我傻了眼。我走到阳台边，周围安静得只剩下蛐蛐声，一辆车的声音都没有。我仰望天空，星空清澈无比，心里顿时五味杂陈。见到在土地上如此铺张挥霍的家，再想到深圳那个精打细算的家，不禁怀疑起自己：是哪里不对？一路参观，所到之处，各种细节，处处透露着二老的良苦用心。即便款式有些老套，但一点也不妨碍我感动得一塌糊涂。想到这样宽敞精致、良苦用心的房子，使用率不到1%，又为二老感到不值。\n\n\n回到自己家，好多年没吃过樱桃，就带上爸妈一起上山摘樱桃。\n\n\n\n","slug":"扯淡/不算春节，你有多久没有回过家？","published":1,"updated":"2017-07-26T16:20:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6knn002nq0d436mwkcx6","content":"<p>不算春节，你有多久没有回过家？3～5年？之所以不把春节算上，是因为春节期间的家乡，笼罩着团圆的气氛，充斥着归乡的人群；而这些，在大多数时间都不属于家乡。<br>而你，有多久没有看过，常态下的家乡？</p>\n<p>岳父大人不远千里来机场接机，对老婆来说，从小到大，这也是第一次。我想，大概是因为，我们越长大，回家的时间就越“宝贵”，“宝贵”到父母驱车200公里也要多争取两个小时时间在一起。</p>\n<p>回程路上，岳父大人执意要开车。见他路上渐现疲态，我换到驾驶座，车速刚加速到100码，他已睡着。</p>\n<p>接近凌晨到家，岳父大人乐此不彼的带我们展示他为我们精心修葺的千尺豪宅。他为两个宝贝女儿每人装修了一间卧室。说是卧室，比深圳的“精装50平单身公寓”还要大。卧室外面，60平米的阳台，像大海一样宽阔，我傻了眼。我走到阳台边，周围安静得只剩下蛐蛐声，一辆车的声音都没有。我仰望天空，星空清澈无比，心里顿时五味杂陈。见到在土地上如此铺张挥霍的家，再想到深圳那个精打细算的家，不禁怀疑起自己：是哪里不对？一路参观，所到之处，各种细节，处处透露着二老的良苦用心。即便款式有些老套，但一点也不妨碍我感动得一塌糊涂。想到这样宽敞精致、良苦用心的房子，使用率不到1%，又为二老感到不值。</p>\n<p>回到自己家，好多年没吃过樱桃，就带上爸妈一起上山摘樱桃。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>不算春节，你有多久没有回过家？3～5年？之所以不把春节算上，是因为春节期间的家乡，笼罩着团圆的气氛，充斥着归乡的人群；而这些，在大多数时间都不属于家乡。<br>而你，有多久没有看过，常态下的家乡？</p>\n<p>岳父大人不远千里来机场接机，对老婆来说，从小到大，这也是第一次。我想，大概是因为，我们越长大，回家的时间就越“宝贵”，“宝贵”到父母驱车200公里也要多争取两个小时时间在一起。</p>\n<p>回程路上，岳父大人执意要开车。见他路上渐现疲态，我换到驾驶座，车速刚加速到100码，他已睡着。</p>\n<p>接近凌晨到家，岳父大人乐此不彼的带我们展示他为我们精心修葺的千尺豪宅。他为两个宝贝女儿每人装修了一间卧室。说是卧室，比深圳的“精装50平单身公寓”还要大。卧室外面，60平米的阳台，像大海一样宽阔，我傻了眼。我走到阳台边，周围安静得只剩下蛐蛐声，一辆车的声音都没有。我仰望天空，星空清澈无比，心里顿时五味杂陈。见到在土地上如此铺张挥霍的家，再想到深圳那个精打细算的家，不禁怀疑起自己：是哪里不对？一路参观，所到之处，各种细节，处处透露着二老的良苦用心。即便款式有些老套，但一点也不妨碍我感动得一塌糊涂。想到这样宽敞精致、良苦用心的房子，使用率不到1%，又为二老感到不值。</p>\n<p>回到自己家，好多年没吃过樱桃，就带上爸妈一起上山摘樱桃。</p>\n"},{"date":"2016-08-04T16:00:00.000Z","title":"别轻易打开微信","_content":"\n摘要: 别轻易打开微信APP，你的iPhone电量会被它耗干。\n\n\n\n\n\n\n\n\n\n","source":"_posts/扯淡/别轻易打开微信APP.md","raw":"---\ndate: 2016-08-05\ntitle: 别轻易打开微信\ntags: \n- iOS\n- Wechat\n- 微信\n- power\n- energy\n---\n\n摘要: 别轻易打开微信APP，你的iPhone电量会被它耗干。\n\n\n\n\n\n\n\n\n\n","slug":"扯淡/别轻易打开微信APP","published":1,"updated":"2017-07-26T16:19:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6knz002pq0d4o2ba7lzg","content":"<p>摘要: 别轻易打开微信APP，你的iPhone电量会被它耗干。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: 别轻易打开微信APP，你的iPhone电量会被它耗干。</p>\n"},{"date":"2014-08-04T16:00:00.000Z","title":"我为什么写博客","description":"屌丝程序员的逆袭一般分两步：让自己变得牛逼, 让别人知道你牛逼. 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任某份工作.","_content":"\n\n# 牛人都这么干\n\n\n**时间**: 2011年\n**人物:** 初出茅庐的臭小子, 臭石头一般坚硬的相信我将来一定会成为富二代他爹. \n\n我来到一个大型互联网公司, 同事很nice, 管理很自由, 在这里开始了我的码农生涯.\n\n我很敬重部门老大, 但更相信我将来一定比他强. 我看到30岁左右的公司前辈们, 为了家庭奔波, 为了孩子操劳, 心里或许拂过一丝轻谑. ( 当我写这句话, 我是在对自己幼稚的轻谑 )\n\n当然我并不是毫无基础的就有了这些脆弱的自信. 我一直相信, **只要我每一天都在进步, 总会有到达成功的那一天**.  所以, 每次游戏碰到大家都不熟悉的领域, 我都自告奋勇去领命, 然后在前辈们都回家 陪老婆孩子的时候, 我却在钻研这些小众歪门的技术, 自以为这是能力的体现. 事实也证明了它的确代表了我的一部分能力, 也让它在上级面前得到了彰显, 但远没有我想象的那么重要. 因为, 如果真的有那么重要, 为什么旁边独立办公室里没有我. \n\n那时天真的以为月入N万, 能在北京好好生存, 便是成功. 于是我很开心, 因为那\"成功\"是如此的可以触摸, 就在眼前. 我随便搞搞5,6年也就达到了, 稍微使点劲儿也许就3,4年. 而在那之后, 我就可以放心的做很多自己想做的事情, 旅游, 摄影, 吃喝玩乐之类. \n\n而现在, 我缺找不到对\"成功\"的定义了. **人生最大的无耐就在于, 当马上就达到终点却发现自己看走了眼**. 让我开始怀疑它的因素有很多: 比如发现即使月入2N万也没法过得上我上面提到的体面的生活, 比如北京的空气和气候总是把出门散心的想法扼杀在摇篮里, 再比如北京复杂的生存环境.\n\n一方面,我对新的社会各种无知; 另一方面却坚定不移的相信努力就会比别人强. 我见过很多牛人写博客, 就以为这是牛人谓之牛人的原因. 我如果坚持照做, 就会成为牛人. 说白了, 这从头至尾就是一种低级的模仿, 不明所以的跟随.\n\n# 写一年后还能看懂的博客\n尝试和接触的知识一多, 便发现自己的脑袋跟硬盘相比, 速度和精准度上都差得不止一星半点. 事情越来越多, 且没有交集, 所有的知识点都零散的分布在脑袋的不同次元, 想要回忆起来特别困难. 一度让我觉得, 学越来越多的东西根本就是一个错误, 正确的方式应该是瞅准一个东西, 精益求精. 虽然这么想, 但是工作不是你想不做就不做的. \n\n于是我有了两个转变: \n\n* 一是, **我不再那么乐于去学新的注定不会成为体系的东西了**, 因为它除了能展示一下小聪明, 时间回报率特别小. \n* 二是, 如果我决定去深究一个东西, **我一定要完全搞懂, 并认真总结一篇博客让我以后能在短时间拾起来** ( 因为不搞懂你很难写一篇半年后还能理解的博客 ). \n\n我并不百分百的确定这些转变都是好的, 因为在这种问题上时间已经打过我很多次脸了.所以我会想, “转变一\"是不是跟我\"追求不断进步”的想法冲突. 直到我看到另一句话, “三十岁之前, 想学啥就学啥, **三十岁之后请用金钱解决你不擅长的问题**”, 给了我一些安慰. 但这句话又丢给我更大的问号: 怎么界定”擅长”与否, 怎么界定”时间”. Anyway, **并不是所有问题都有合理答案, 但你开始意识到这个问题, 就有不一样的收获**.\n\n\n\n# 把经验变成不可替代性\n\n到现在, 我经历了三个公司, 四个项目, 两个由我负责. \n\n**从产品角度讲**, 我出色的完成了策划(/产品)的需求; 在共事过的同事上司面前, 我为自己留下了最真实的, 品质不错的, 名片. \n\n\n**从技术角度讲**, 它们并没有太大的难度. 大学<自动机理论>的老师向我们提供了一种衡量人生价值(/或意义)的方式: **你的不可替代性**. 若依这个理论, 近三年的工作是没有什么意义可言的. 这让我如鲠在喉: 我的努力怎么就变成了没有意义. \n\n我先后写 `AS3(+Flex)`, `iOS`(用`UIKit`做应用) 和 `cocos2dx`, 他们看起来相差万里, 但**本质上都是图像显示引擎和通用UI逻辑组成的工具库**. \n\n* **图像显示引擎**, 提供最基础的图像绘制, 常见的图像显示引擎都大同小异, 都包括绘制点, 线, 形状, 照片, 文字等基本绘制接口(详见我的博客:[iOS是怎么\"绘画\"的?](http://www.cnblogs.com/jhzhu/p/3498979.html) ). \n* **通用UI逻辑**, 虽各个平台功能千差万别, 但理论上都是为了让常用的交互或布局组件被更高效遍历的应用, 而对底层`图像显示引擎`的封装.\n\n*( 打算写一篇关于通用前端框架的博客, 这里就不多讲了. )*\n\n接触新框架的时间成本越来越小, 我也渐渐发现: 基础工作的长期积累会自动的帮你总结这些事物的共有原理. 本来, 我做的四件事情, 任何一件都有1万个人可以替代我. 但是它们给我带来的经验和理论的升华, 让我可以hold住那些只有一千个人能hold住的事情. 也就是, 我的不可替代性增加了.\n\n\n# 收入不受时间限制的职业\n\n最近在看[<黑天鹅-如何应对不可知的未来>](http://book.douban.com/subject/3025921/), 不妨简单的罗列一下作者的观点:\n\n\n> 1. 世界上的事情可简单的分为两种: **平均斯坦和极端斯坦**.\n1. 平均斯坦里，个体对结果的影响不大，只有大量的个体才对结果有影响。极端斯坦里，个体能够对整体产生不可思议的影响。\n2. 举两个例子：随机取一百个人，得到平均身高，这个数不会因为某一两个人而出现大的变动，这属于平均斯坦；如果把身高换成财富，结果就大不相同了，可能因为比尔盖茨的加入而使得平均数成万倍的增长，这属于极端斯坦。\n3. 绝大多数社会问题属于极端斯坦，换句话说社会变量是信息化的，不是物理的。\n4. 有一位朋友建议我，寻找一份报酬不受时间限制的工作。面包师必须不断的烘烤面包才能得到更多的收入; 而 J.K.罗琳 不用在每次读者购买哈利波特的时候再写一遍。这也是脑力劳动与体力劳动的分界线。\n\n按照这个理论, Coder也分为两种: 幸苦搬砖型和一劳永逸型. 对号入座的事情我就不做了, 显然我属于前者.\n\n\n## 程序员的抽象化修养\n一般来说, **程序员的思维总是抽象化的思维, 善于从事物中总结规律, 同时特别特别特别讨厌特例**. ( 想象一下产品让你为新手用户添加不一样的行为规范的时候你的心情吧. ) 抽象化的能力也决定了在程序员这一行当里的高度: 更擅长归纳事物本质的程序员渐渐都成了构架师, 而剩下的人完成了项目80%的工作却领到20%的报酬. \n\n\n## 程序员的名片\n\n前面我提到自己在前同事上司那里留下的名片, 它同时也是一张可以预支的信用卡. \n\n**在程序员跳槽的代价里, 标价最高的一条便是: 你需要重新证明自己**. 每次初到一个环境, 不管ceo是你的同学还是以前的老板, 你必须在短时间里证明自己的能力, 因为第一印象决定了很多. 不管在上级,下级,还是平级同事里, 它都影响着你的工作或收入. \n\n* 从金钱上讲, 试用期你是拿不到全额薪水的. 老板必须先看到你的能力, 才会涨你的薪水, 也就是说证明自己的过程越短, 能越早拿到与你能力相配的薪水. \n* 从工作上讲, 证明自己的过程, 你不能完全按照自己最擅长的方式去做事情, 完成同样的工作你需要花费更多的时间. \n\n\n诚然, 你在前同事那里得到的信用额度比较大, 他们在后来的工作中能经常记起你, 不用面试和试用便可给你不错的报酬和职位. 但是, **这并不是一张通用的信用卡, 你只能在非常有限的几家公司预支你的能力**. 如果你需要更多公司的承认, 便要在这家公司证明. 听起来像是面包师的工作, 对吧? 于是, 我写博客.\n\n\n\n\n# 总结\n\n**屌丝程序员的逆袭一般分两步: 让自己变得牛逼, 让别人知道你牛逼.** 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任一工作.\n\n\n\n\n","source":"_posts/扯淡/我为什么写博客.md","raw":"---\ndate: 2014-08-05\ntitle: 我为什么写博客\ntags: \n- 博客\n- 为什么写博客\n- 人生感悟\ncategories: \n- 扯淡\ndescription: 屌丝程序员的逆袭一般分两步：让自己变得牛逼, 让别人知道你牛逼. 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任某份工作.\n---\n\n\n# 牛人都这么干\n\n\n**时间**: 2011年\n**人物:** 初出茅庐的臭小子, 臭石头一般坚硬的相信我将来一定会成为富二代他爹. \n\n我来到一个大型互联网公司, 同事很nice, 管理很自由, 在这里开始了我的码农生涯.\n\n我很敬重部门老大, 但更相信我将来一定比他强. 我看到30岁左右的公司前辈们, 为了家庭奔波, 为了孩子操劳, 心里或许拂过一丝轻谑. ( 当我写这句话, 我是在对自己幼稚的轻谑 )\n\n当然我并不是毫无基础的就有了这些脆弱的自信. 我一直相信, **只要我每一天都在进步, 总会有到达成功的那一天**.  所以, 每次游戏碰到大家都不熟悉的领域, 我都自告奋勇去领命, 然后在前辈们都回家 陪老婆孩子的时候, 我却在钻研这些小众歪门的技术, 自以为这是能力的体现. 事实也证明了它的确代表了我的一部分能力, 也让它在上级面前得到了彰显, 但远没有我想象的那么重要. 因为, 如果真的有那么重要, 为什么旁边独立办公室里没有我. \n\n那时天真的以为月入N万, 能在北京好好生存, 便是成功. 于是我很开心, 因为那\"成功\"是如此的可以触摸, 就在眼前. 我随便搞搞5,6年也就达到了, 稍微使点劲儿也许就3,4年. 而在那之后, 我就可以放心的做很多自己想做的事情, 旅游, 摄影, 吃喝玩乐之类. \n\n而现在, 我缺找不到对\"成功\"的定义了. **人生最大的无耐就在于, 当马上就达到终点却发现自己看走了眼**. 让我开始怀疑它的因素有很多: 比如发现即使月入2N万也没法过得上我上面提到的体面的生活, 比如北京的空气和气候总是把出门散心的想法扼杀在摇篮里, 再比如北京复杂的生存环境.\n\n一方面,我对新的社会各种无知; 另一方面却坚定不移的相信努力就会比别人强. 我见过很多牛人写博客, 就以为这是牛人谓之牛人的原因. 我如果坚持照做, 就会成为牛人. 说白了, 这从头至尾就是一种低级的模仿, 不明所以的跟随.\n\n# 写一年后还能看懂的博客\n尝试和接触的知识一多, 便发现自己的脑袋跟硬盘相比, 速度和精准度上都差得不止一星半点. 事情越来越多, 且没有交集, 所有的知识点都零散的分布在脑袋的不同次元, 想要回忆起来特别困难. 一度让我觉得, 学越来越多的东西根本就是一个错误, 正确的方式应该是瞅准一个东西, 精益求精. 虽然这么想, 但是工作不是你想不做就不做的. \n\n于是我有了两个转变: \n\n* 一是, **我不再那么乐于去学新的注定不会成为体系的东西了**, 因为它除了能展示一下小聪明, 时间回报率特别小. \n* 二是, 如果我决定去深究一个东西, **我一定要完全搞懂, 并认真总结一篇博客让我以后能在短时间拾起来** ( 因为不搞懂你很难写一篇半年后还能理解的博客 ). \n\n我并不百分百的确定这些转变都是好的, 因为在这种问题上时间已经打过我很多次脸了.所以我会想, “转变一\"是不是跟我\"追求不断进步”的想法冲突. 直到我看到另一句话, “三十岁之前, 想学啥就学啥, **三十岁之后请用金钱解决你不擅长的问题**”, 给了我一些安慰. 但这句话又丢给我更大的问号: 怎么界定”擅长”与否, 怎么界定”时间”. Anyway, **并不是所有问题都有合理答案, 但你开始意识到这个问题, 就有不一样的收获**.\n\n\n\n# 把经验变成不可替代性\n\n到现在, 我经历了三个公司, 四个项目, 两个由我负责. \n\n**从产品角度讲**, 我出色的完成了策划(/产品)的需求; 在共事过的同事上司面前, 我为自己留下了最真实的, 品质不错的, 名片. \n\n\n**从技术角度讲**, 它们并没有太大的难度. 大学<自动机理论>的老师向我们提供了一种衡量人生价值(/或意义)的方式: **你的不可替代性**. 若依这个理论, 近三年的工作是没有什么意义可言的. 这让我如鲠在喉: 我的努力怎么就变成了没有意义. \n\n我先后写 `AS3(+Flex)`, `iOS`(用`UIKit`做应用) 和 `cocos2dx`, 他们看起来相差万里, 但**本质上都是图像显示引擎和通用UI逻辑组成的工具库**. \n\n* **图像显示引擎**, 提供最基础的图像绘制, 常见的图像显示引擎都大同小异, 都包括绘制点, 线, 形状, 照片, 文字等基本绘制接口(详见我的博客:[iOS是怎么\"绘画\"的?](http://www.cnblogs.com/jhzhu/p/3498979.html) ). \n* **通用UI逻辑**, 虽各个平台功能千差万别, 但理论上都是为了让常用的交互或布局组件被更高效遍历的应用, 而对底层`图像显示引擎`的封装.\n\n*( 打算写一篇关于通用前端框架的博客, 这里就不多讲了. )*\n\n接触新框架的时间成本越来越小, 我也渐渐发现: 基础工作的长期积累会自动的帮你总结这些事物的共有原理. 本来, 我做的四件事情, 任何一件都有1万个人可以替代我. 但是它们给我带来的经验和理论的升华, 让我可以hold住那些只有一千个人能hold住的事情. 也就是, 我的不可替代性增加了.\n\n\n# 收入不受时间限制的职业\n\n最近在看[<黑天鹅-如何应对不可知的未来>](http://book.douban.com/subject/3025921/), 不妨简单的罗列一下作者的观点:\n\n\n> 1. 世界上的事情可简单的分为两种: **平均斯坦和极端斯坦**.\n1. 平均斯坦里，个体对结果的影响不大，只有大量的个体才对结果有影响。极端斯坦里，个体能够对整体产生不可思议的影响。\n2. 举两个例子：随机取一百个人，得到平均身高，这个数不会因为某一两个人而出现大的变动，这属于平均斯坦；如果把身高换成财富，结果就大不相同了，可能因为比尔盖茨的加入而使得平均数成万倍的增长，这属于极端斯坦。\n3. 绝大多数社会问题属于极端斯坦，换句话说社会变量是信息化的，不是物理的。\n4. 有一位朋友建议我，寻找一份报酬不受时间限制的工作。面包师必须不断的烘烤面包才能得到更多的收入; 而 J.K.罗琳 不用在每次读者购买哈利波特的时候再写一遍。这也是脑力劳动与体力劳动的分界线。\n\n按照这个理论, Coder也分为两种: 幸苦搬砖型和一劳永逸型. 对号入座的事情我就不做了, 显然我属于前者.\n\n\n## 程序员的抽象化修养\n一般来说, **程序员的思维总是抽象化的思维, 善于从事物中总结规律, 同时特别特别特别讨厌特例**. ( 想象一下产品让你为新手用户添加不一样的行为规范的时候你的心情吧. ) 抽象化的能力也决定了在程序员这一行当里的高度: 更擅长归纳事物本质的程序员渐渐都成了构架师, 而剩下的人完成了项目80%的工作却领到20%的报酬. \n\n\n## 程序员的名片\n\n前面我提到自己在前同事上司那里留下的名片, 它同时也是一张可以预支的信用卡. \n\n**在程序员跳槽的代价里, 标价最高的一条便是: 你需要重新证明自己**. 每次初到一个环境, 不管ceo是你的同学还是以前的老板, 你必须在短时间里证明自己的能力, 因为第一印象决定了很多. 不管在上级,下级,还是平级同事里, 它都影响着你的工作或收入. \n\n* 从金钱上讲, 试用期你是拿不到全额薪水的. 老板必须先看到你的能力, 才会涨你的薪水, 也就是说证明自己的过程越短, 能越早拿到与你能力相配的薪水. \n* 从工作上讲, 证明自己的过程, 你不能完全按照自己最擅长的方式去做事情, 完成同样的工作你需要花费更多的时间. \n\n\n诚然, 你在前同事那里得到的信用额度比较大, 他们在后来的工作中能经常记起你, 不用面试和试用便可给你不错的报酬和职位. 但是, **这并不是一张通用的信用卡, 你只能在非常有限的几家公司预支你的能力**. 如果你需要更多公司的承认, 便要在这家公司证明. 听起来像是面包师的工作, 对吧? 于是, 我写博客.\n\n\n\n\n# 总结\n\n**屌丝程序员的逆袭一般分两步: 让自己变得牛逼, 让别人知道你牛逼.** 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任一工作.\n\n\n\n\n","slug":"扯淡/我为什么写博客","published":1,"updated":"2017-07-26T16:25:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kob002sq0d4vdyd7zqa","content":"<h1 id=\"牛人都这么干\"><a href=\"#牛人都这么干\" class=\"headerlink\" title=\"牛人都这么干\"></a>牛人都这么干</h1><p><strong>时间</strong>: 2011年<br><strong>人物:</strong> 初出茅庐的臭小子, 臭石头一般坚硬的相信我将来一定会成为富二代他爹. </p>\n<p>我来到一个大型互联网公司, 同事很nice, 管理很自由, 在这里开始了我的码农生涯.</p>\n<p>我很敬重部门老大, 但更相信我将来一定比他强. 我看到30岁左右的公司前辈们, 为了家庭奔波, 为了孩子操劳, 心里或许拂过一丝轻谑. ( 当我写这句话, 我是在对自己幼稚的轻谑 )</p>\n<p>当然我并不是毫无基础的就有了这些脆弱的自信. 我一直相信, <strong>只要我每一天都在进步, 总会有到达成功的那一天</strong>.  所以, 每次游戏碰到大家都不熟悉的领域, 我都自告奋勇去领命, 然后在前辈们都回家 陪老婆孩子的时候, 我却在钻研这些小众歪门的技术, 自以为这是能力的体现. 事实也证明了它的确代表了我的一部分能力, 也让它在上级面前得到了彰显, 但远没有我想象的那么重要. 因为, 如果真的有那么重要, 为什么旁边独立办公室里没有我. </p>\n<p>那时天真的以为月入N万, 能在北京好好生存, 便是成功. 于是我很开心, 因为那”成功”是如此的可以触摸, 就在眼前. 我随便搞搞5,6年也就达到了, 稍微使点劲儿也许就3,4年. 而在那之后, 我就可以放心的做很多自己想做的事情, 旅游, 摄影, 吃喝玩乐之类. </p>\n<p>而现在, 我缺找不到对”成功”的定义了. <strong>人生最大的无耐就在于, 当马上就达到终点却发现自己看走了眼</strong>. 让我开始怀疑它的因素有很多: 比如发现即使月入2N万也没法过得上我上面提到的体面的生活, 比如北京的空气和气候总是把出门散心的想法扼杀在摇篮里, 再比如北京复杂的生存环境.</p>\n<p>一方面,我对新的社会各种无知; 另一方面却坚定不移的相信努力就会比别人强. 我见过很多牛人写博客, 就以为这是牛人谓之牛人的原因. 我如果坚持照做, 就会成为牛人. 说白了, 这从头至尾就是一种低级的模仿, 不明所以的跟随.</p>\n<h1 id=\"写一年后还能看懂的博客\"><a href=\"#写一年后还能看懂的博客\" class=\"headerlink\" title=\"写一年后还能看懂的博客\"></a>写一年后还能看懂的博客</h1><p>尝试和接触的知识一多, 便发现自己的脑袋跟硬盘相比, 速度和精准度上都差得不止一星半点. 事情越来越多, 且没有交集, 所有的知识点都零散的分布在脑袋的不同次元, 想要回忆起来特别困难. 一度让我觉得, 学越来越多的东西根本就是一个错误, 正确的方式应该是瞅准一个东西, 精益求精. 虽然这么想, 但是工作不是你想不做就不做的. </p>\n<p>于是我有了两个转变: </p>\n<ul>\n<li>一是, <strong>我不再那么乐于去学新的注定不会成为体系的东西了</strong>, 因为它除了能展示一下小聪明, 时间回报率特别小. </li>\n<li>二是, 如果我决定去深究一个东西, <strong>我一定要完全搞懂, 并认真总结一篇博客让我以后能在短时间拾起来</strong> ( 因为不搞懂你很难写一篇半年后还能理解的博客 ). </li>\n</ul>\n<p>我并不百分百的确定这些转变都是好的, 因为在这种问题上时间已经打过我很多次脸了.所以我会想, “转变一”是不是跟我”追求不断进步”的想法冲突. 直到我看到另一句话, “三十岁之前, 想学啥就学啥, <strong>三十岁之后请用金钱解决你不擅长的问题</strong>”, 给了我一些安慰. 但这句话又丢给我更大的问号: 怎么界定”擅长”与否, 怎么界定”时间”. Anyway, <strong>并不是所有问题都有合理答案, 但你开始意识到这个问题, 就有不一样的收获</strong>.</p>\n<h1 id=\"把经验变成不可替代性\"><a href=\"#把经验变成不可替代性\" class=\"headerlink\" title=\"把经验变成不可替代性\"></a>把经验变成不可替代性</h1><p>到现在, 我经历了三个公司, 四个项目, 两个由我负责. </p>\n<p><strong>从产品角度讲</strong>, 我出色的完成了策划(/产品)的需求; 在共事过的同事上司面前, 我为自己留下了最真实的, 品质不错的, 名片. </p>\n<p><strong>从技术角度讲</strong>, 它们并没有太大的难度. 大学&lt;自动机理论&gt;的老师向我们提供了一种衡量人生价值(/或意义)的方式: <strong>你的不可替代性</strong>. 若依这个理论, 近三年的工作是没有什么意义可言的. 这让我如鲠在喉: 我的努力怎么就变成了没有意义. </p>\n<p>我先后写 <code>AS3(+Flex)</code>, <code>iOS</code>(用<code>UIKit</code>做应用) 和 <code>cocos2dx</code>, 他们看起来相差万里, 但<strong>本质上都是图像显示引擎和通用UI逻辑组成的工具库</strong>. </p>\n<ul>\n<li><strong>图像显示引擎</strong>, 提供最基础的图像绘制, 常见的图像显示引擎都大同小异, 都包括绘制点, 线, 形状, 照片, 文字等基本绘制接口(详见我的博客:<a href=\"http://www.cnblogs.com/jhzhu/p/3498979.html\" target=\"_blank\" rel=\"external\">iOS是怎么”绘画”的?</a> ). </li>\n<li><strong>通用UI逻辑</strong>, 虽各个平台功能千差万别, 但理论上都是为了让常用的交互或布局组件被更高效遍历的应用, 而对底层<code>图像显示引擎</code>的封装.</li>\n</ul>\n<p><em>( 打算写一篇关于通用前端框架的博客, 这里就不多讲了. )</em></p>\n<p>接触新框架的时间成本越来越小, 我也渐渐发现: 基础工作的长期积累会自动的帮你总结这些事物的共有原理. 本来, 我做的四件事情, 任何一件都有1万个人可以替代我. 但是它们给我带来的经验和理论的升华, 让我可以hold住那些只有一千个人能hold住的事情. 也就是, 我的不可替代性增加了.</p>\n<h1 id=\"收入不受时间限制的职业\"><a href=\"#收入不受时间限制的职业\" class=\"headerlink\" title=\"收入不受时间限制的职业\"></a>收入不受时间限制的职业</h1><p>最近在看<a href=\"http://book.douban.com/subject/3025921/\" target=\"_blank\" rel=\"external\">&lt;黑天鹅-如何应对不可知的未来&gt;</a>, 不妨简单的罗列一下作者的观点:</p>\n<blockquote>\n<ol>\n<li>世界上的事情可简单的分为两种: <strong>平均斯坦和极端斯坦</strong>.</li>\n<li>平均斯坦里，个体对结果的影响不大，只有大量的个体才对结果有影响。极端斯坦里，个体能够对整体产生不可思议的影响。</li>\n<li>举两个例子：随机取一百个人，得到平均身高，这个数不会因为某一两个人而出现大的变动，这属于平均斯坦；如果把身高换成财富，结果就大不相同了，可能因为比尔盖茨的加入而使得平均数成万倍的增长，这属于极端斯坦。</li>\n<li>绝大多数社会问题属于极端斯坦，换句话说社会变量是信息化的，不是物理的。</li>\n<li>有一位朋友建议我，寻找一份报酬不受时间限制的工作。面包师必须不断的烘烤面包才能得到更多的收入; 而 J.K.罗琳 不用在每次读者购买哈利波特的时候再写一遍。这也是脑力劳动与体力劳动的分界线。</li>\n</ol>\n</blockquote>\n<p>按照这个理论, Coder也分为两种: 幸苦搬砖型和一劳永逸型. 对号入座的事情我就不做了, 显然我属于前者.</p>\n<h2 id=\"程序员的抽象化修养\"><a href=\"#程序员的抽象化修养\" class=\"headerlink\" title=\"程序员的抽象化修养\"></a>程序员的抽象化修养</h2><p>一般来说, <strong>程序员的思维总是抽象化的思维, 善于从事物中总结规律, 同时特别特别特别讨厌特例</strong>. ( 想象一下产品让你为新手用户添加不一样的行为规范的时候你的心情吧. ) 抽象化的能力也决定了在程序员这一行当里的高度: 更擅长归纳事物本质的程序员渐渐都成了构架师, 而剩下的人完成了项目80%的工作却领到20%的报酬. </p>\n<h2 id=\"程序员的名片\"><a href=\"#程序员的名片\" class=\"headerlink\" title=\"程序员的名片\"></a>程序员的名片</h2><p>前面我提到自己在前同事上司那里留下的名片, 它同时也是一张可以预支的信用卡. </p>\n<p><strong>在程序员跳槽的代价里, 标价最高的一条便是: 你需要重新证明自己</strong>. 每次初到一个环境, 不管ceo是你的同学还是以前的老板, 你必须在短时间里证明自己的能力, 因为第一印象决定了很多. 不管在上级,下级,还是平级同事里, 它都影响着你的工作或收入. </p>\n<ul>\n<li>从金钱上讲, 试用期你是拿不到全额薪水的. 老板必须先看到你的能力, 才会涨你的薪水, 也就是说证明自己的过程越短, 能越早拿到与你能力相配的薪水. </li>\n<li>从工作上讲, 证明自己的过程, 你不能完全按照自己最擅长的方式去做事情, 完成同样的工作你需要花费更多的时间. </li>\n</ul>\n<p>诚然, 你在前同事那里得到的信用额度比较大, 他们在后来的工作中能经常记起你, 不用面试和试用便可给你不错的报酬和职位. 但是, <strong>这并不是一张通用的信用卡, 你只能在非常有限的几家公司预支你的能力</strong>. 如果你需要更多公司的承认, 便要在这家公司证明. 听起来像是面包师的工作, 对吧? 于是, 我写博客.</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p><strong>屌丝程序员的逆袭一般分两步: 让自己变得牛逼, 让别人知道你牛逼.</strong> 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任一工作.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"牛人都这么干\"><a href=\"#牛人都这么干\" class=\"headerlink\" title=\"牛人都这么干\"></a>牛人都这么干</h1><p><strong>时间</strong>: 2011年<br><strong>人物:</strong> 初出茅庐的臭小子, 臭石头一般坚硬的相信我将来一定会成为富二代他爹. </p>\n<p>我来到一个大型互联网公司, 同事很nice, 管理很自由, 在这里开始了我的码农生涯.</p>\n<p>我很敬重部门老大, 但更相信我将来一定比他强. 我看到30岁左右的公司前辈们, 为了家庭奔波, 为了孩子操劳, 心里或许拂过一丝轻谑. ( 当我写这句话, 我是在对自己幼稚的轻谑 )</p>\n<p>当然我并不是毫无基础的就有了这些脆弱的自信. 我一直相信, <strong>只要我每一天都在进步, 总会有到达成功的那一天</strong>.  所以, 每次游戏碰到大家都不熟悉的领域, 我都自告奋勇去领命, 然后在前辈们都回家 陪老婆孩子的时候, 我却在钻研这些小众歪门的技术, 自以为这是能力的体现. 事实也证明了它的确代表了我的一部分能力, 也让它在上级面前得到了彰显, 但远没有我想象的那么重要. 因为, 如果真的有那么重要, 为什么旁边独立办公室里没有我. </p>\n<p>那时天真的以为月入N万, 能在北京好好生存, 便是成功. 于是我很开心, 因为那”成功”是如此的可以触摸, 就在眼前. 我随便搞搞5,6年也就达到了, 稍微使点劲儿也许就3,4年. 而在那之后, 我就可以放心的做很多自己想做的事情, 旅游, 摄影, 吃喝玩乐之类. </p>\n<p>而现在, 我缺找不到对”成功”的定义了. <strong>人生最大的无耐就在于, 当马上就达到终点却发现自己看走了眼</strong>. 让我开始怀疑它的因素有很多: 比如发现即使月入2N万也没法过得上我上面提到的体面的生活, 比如北京的空气和气候总是把出门散心的想法扼杀在摇篮里, 再比如北京复杂的生存环境.</p>\n<p>一方面,我对新的社会各种无知; 另一方面却坚定不移的相信努力就会比别人强. 我见过很多牛人写博客, 就以为这是牛人谓之牛人的原因. 我如果坚持照做, 就会成为牛人. 说白了, 这从头至尾就是一种低级的模仿, 不明所以的跟随.</p>\n<h1 id=\"写一年后还能看懂的博客\"><a href=\"#写一年后还能看懂的博客\" class=\"headerlink\" title=\"写一年后还能看懂的博客\"></a>写一年后还能看懂的博客</h1><p>尝试和接触的知识一多, 便发现自己的脑袋跟硬盘相比, 速度和精准度上都差得不止一星半点. 事情越来越多, 且没有交集, 所有的知识点都零散的分布在脑袋的不同次元, 想要回忆起来特别困难. 一度让我觉得, 学越来越多的东西根本就是一个错误, 正确的方式应该是瞅准一个东西, 精益求精. 虽然这么想, 但是工作不是你想不做就不做的. </p>\n<p>于是我有了两个转变: </p>\n<ul>\n<li>一是, <strong>我不再那么乐于去学新的注定不会成为体系的东西了</strong>, 因为它除了能展示一下小聪明, 时间回报率特别小. </li>\n<li>二是, 如果我决定去深究一个东西, <strong>我一定要完全搞懂, 并认真总结一篇博客让我以后能在短时间拾起来</strong> ( 因为不搞懂你很难写一篇半年后还能理解的博客 ). </li>\n</ul>\n<p>我并不百分百的确定这些转变都是好的, 因为在这种问题上时间已经打过我很多次脸了.所以我会想, “转变一”是不是跟我”追求不断进步”的想法冲突. 直到我看到另一句话, “三十岁之前, 想学啥就学啥, <strong>三十岁之后请用金钱解决你不擅长的问题</strong>”, 给了我一些安慰. 但这句话又丢给我更大的问号: 怎么界定”擅长”与否, 怎么界定”时间”. Anyway, <strong>并不是所有问题都有合理答案, 但你开始意识到这个问题, 就有不一样的收获</strong>.</p>\n<h1 id=\"把经验变成不可替代性\"><a href=\"#把经验变成不可替代性\" class=\"headerlink\" title=\"把经验变成不可替代性\"></a>把经验变成不可替代性</h1><p>到现在, 我经历了三个公司, 四个项目, 两个由我负责. </p>\n<p><strong>从产品角度讲</strong>, 我出色的完成了策划(/产品)的需求; 在共事过的同事上司面前, 我为自己留下了最真实的, 品质不错的, 名片. </p>\n<p><strong>从技术角度讲</strong>, 它们并没有太大的难度. 大学&lt;自动机理论&gt;的老师向我们提供了一种衡量人生价值(/或意义)的方式: <strong>你的不可替代性</strong>. 若依这个理论, 近三年的工作是没有什么意义可言的. 这让我如鲠在喉: 我的努力怎么就变成了没有意义. </p>\n<p>我先后写 <code>AS3(+Flex)</code>, <code>iOS</code>(用<code>UIKit</code>做应用) 和 <code>cocos2dx</code>, 他们看起来相差万里, 但<strong>本质上都是图像显示引擎和通用UI逻辑组成的工具库</strong>. </p>\n<ul>\n<li><strong>图像显示引擎</strong>, 提供最基础的图像绘制, 常见的图像显示引擎都大同小异, 都包括绘制点, 线, 形状, 照片, 文字等基本绘制接口(详见我的博客:<a href=\"http://www.cnblogs.com/jhzhu/p/3498979.html\" target=\"_blank\" rel=\"external\">iOS是怎么”绘画”的?</a> ). </li>\n<li><strong>通用UI逻辑</strong>, 虽各个平台功能千差万别, 但理论上都是为了让常用的交互或布局组件被更高效遍历的应用, 而对底层<code>图像显示引擎</code>的封装.</li>\n</ul>\n<p><em>( 打算写一篇关于通用前端框架的博客, 这里就不多讲了. )</em></p>\n<p>接触新框架的时间成本越来越小, 我也渐渐发现: 基础工作的长期积累会自动的帮你总结这些事物的共有原理. 本来, 我做的四件事情, 任何一件都有1万个人可以替代我. 但是它们给我带来的经验和理论的升华, 让我可以hold住那些只有一千个人能hold住的事情. 也就是, 我的不可替代性增加了.</p>\n<h1 id=\"收入不受时间限制的职业\"><a href=\"#收入不受时间限制的职业\" class=\"headerlink\" title=\"收入不受时间限制的职业\"></a>收入不受时间限制的职业</h1><p>最近在看<a href=\"http://book.douban.com/subject/3025921/\" target=\"_blank\" rel=\"external\">&lt;黑天鹅-如何应对不可知的未来&gt;</a>, 不妨简单的罗列一下作者的观点:</p>\n<blockquote>\n<ol>\n<li>世界上的事情可简单的分为两种: <strong>平均斯坦和极端斯坦</strong>.</li>\n<li>平均斯坦里，个体对结果的影响不大，只有大量的个体才对结果有影响。极端斯坦里，个体能够对整体产生不可思议的影响。</li>\n<li>举两个例子：随机取一百个人，得到平均身高，这个数不会因为某一两个人而出现大的变动，这属于平均斯坦；如果把身高换成财富，结果就大不相同了，可能因为比尔盖茨的加入而使得平均数成万倍的增长，这属于极端斯坦。</li>\n<li>绝大多数社会问题属于极端斯坦，换句话说社会变量是信息化的，不是物理的。</li>\n<li>有一位朋友建议我，寻找一份报酬不受时间限制的工作。面包师必须不断的烘烤面包才能得到更多的收入; 而 J.K.罗琳 不用在每次读者购买哈利波特的时候再写一遍。这也是脑力劳动与体力劳动的分界线。</li>\n</ol>\n</blockquote>\n<p>按照这个理论, Coder也分为两种: 幸苦搬砖型和一劳永逸型. 对号入座的事情我就不做了, 显然我属于前者.</p>\n<h2 id=\"程序员的抽象化修养\"><a href=\"#程序员的抽象化修养\" class=\"headerlink\" title=\"程序员的抽象化修养\"></a>程序员的抽象化修养</h2><p>一般来说, <strong>程序员的思维总是抽象化的思维, 善于从事物中总结规律, 同时特别特别特别讨厌特例</strong>. ( 想象一下产品让你为新手用户添加不一样的行为规范的时候你的心情吧. ) 抽象化的能力也决定了在程序员这一行当里的高度: 更擅长归纳事物本质的程序员渐渐都成了构架师, 而剩下的人完成了项目80%的工作却领到20%的报酬. </p>\n<h2 id=\"程序员的名片\"><a href=\"#程序员的名片\" class=\"headerlink\" title=\"程序员的名片\"></a>程序员的名片</h2><p>前面我提到自己在前同事上司那里留下的名片, 它同时也是一张可以预支的信用卡. </p>\n<p><strong>在程序员跳槽的代价里, 标价最高的一条便是: 你需要重新证明自己</strong>. 每次初到一个环境, 不管ceo是你的同学还是以前的老板, 你必须在短时间里证明自己的能力, 因为第一印象决定了很多. 不管在上级,下级,还是平级同事里, 它都影响着你的工作或收入. </p>\n<ul>\n<li>从金钱上讲, 试用期你是拿不到全额薪水的. 老板必须先看到你的能力, 才会涨你的薪水, 也就是说证明自己的过程越短, 能越早拿到与你能力相配的薪水. </li>\n<li>从工作上讲, 证明自己的过程, 你不能完全按照自己最擅长的方式去做事情, 完成同样的工作你需要花费更多的时间. </li>\n</ul>\n<p>诚然, 你在前同事那里得到的信用额度比较大, 他们在后来的工作中能经常记起你, 不用面试和试用便可给你不错的报酬和职位. 但是, <strong>这并不是一张通用的信用卡, 你只能在非常有限的几家公司预支你的能力</strong>. 如果你需要更多公司的承认, 便要在这家公司证明. 听起来像是面包师的工作, 对吧? 于是, 我写博客.</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p><strong>屌丝程序员的逆袭一般分两步: 让自己变得牛逼, 让别人知道你牛逼.</strong> 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任一工作.</p>\n"},{"title":"我的技术栈","_content":"\n摘要: 2011年毕业至今，上线过大大小小六七个项目，每个项目的平台都各不同，也都是自己主导。扛着API文档一路走来，填坑无数，也给自己带来不少自信。对，自信来源于千百遍的重复，直到闭着眼睛也能做好。\n\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a>\n\n\n","source":"_posts/扯淡/我的技能树.md","raw":"---\ncategories: \n- 扯淡\ntags: \n- iOS\n- Android\n- cocos2d-x\n- Yii\n- PHP\n- MySQL\n- RDB\n- java\n- C/C++\n- Objective-C\n- scrum\ntitle: 我的技术栈\n---\n\n摘要: 2011年毕业至今，上线过大大小小六七个项目，每个项目的平台都各不同，也都是自己主导。扛着API文档一路走来，填坑无数，也给自己带来不少自信。对，自信来源于千百遍的重复，直到闭着眼睛也能做好。\n\n\n<a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\">\n<img src=\"%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\">\n</a>\n\n\n","slug":"扯淡/我的技能树","published":1,"date":"2016-01-20T05:30:35.000Z","updated":"2017-07-26T16:24:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6koh002uq0d4so266cp1","content":"<p>摘要: 2011年毕业至今，上线过大大小小六七个项目，每个项目的平台都各不同，也都是自己主导。扛着API文档一路走来，填坑无数，也给自己带来不少自信。对，自信来源于千百遍的重复，直到闭着眼睛也能做好。</p>\n<p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: 2011年毕业至今，上线过大大小小六七个项目，每个项目的平台都各不同，也都是自己主导。扛着API文档一路走来，填坑无数，也给自己带来不少自信。对，自信来源于千百遍的重复，直到闭着眼睛也能做好。</p>\n<p><a href=\"https://www.processon.com/view/link/569e3167e4b0f1e8b16d659c\" target=\"_blank\" rel=\"external\"><br><img src=\"%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.png\" alt=\"我的技能树\"><br></a></p>\n"},{"title":"摄影O2O行业调研","_content":"\n\n# 市场分析\n\n* **婚嫁摄影**。2011-2014年，国内每年平均有 1115万对新人结婚。假设有60%的人会拍摄婚纱照，客单价为3000元，则婚嫁市场大小为：1115w\\*60%\\*3000=200.7亿。\n* **亲子摄影**。2014年，全年出生人口1687万人。假设有40%的人会拍摄满月、周岁、三岁照，客单价为400。则每年市场大小为：80.876亿。\n* **商业活动摄影**。根据[活动行](http://www.huodongxing.com/calendar?month=2016-01)上的数据，1月份有2887个活动，分布在北京、上海、广州、深圳等14个一、二线城市。假设活动行上发布的活动只覆盖到实际发生商业活动的1/10，则每年有12*2887*10=346440个活动，假设个活动拍摄单价为400，则市场大小为：1.3858亿。\n\n\n\n\n# 摄影O2O企业盘点\n\n<iframe width=\"700\" height=\"600\" frameborder=\"0\" scrolling=\"no\" src=\"https://onedrive.live.com/embed?cid=291833EB38AA4FA0&resid=291833EB38AA4FA0%2124513&authkey=AAMO2Cqxdw4Uyeg&em=2&wdAllowInteractivity=False&Item='%E5%B7%A5%E4%BD%9C%E8%A1%A8%201'!A1%3AG14&wdHideGridlines=True&wdDownloadButton=True\"></iframe>\n\n\n# 我的看法\n\n以上摄影O2O里的13个企业，主营业务为婚嫁摄影的有8家，亲子摄影的有2家，面向食品商业摄影的是随食拍，面向电商商品拍摄的是约约，还有最后一家，专注人像摄影的月亮盒子。\n\nO2O最主要的一类是：连接消费者与直接服务者。河狸家连接了用户与美甲师，正在改变美甲这一传统行业。除此之外还有做家政的阿姨帮，连接了用户与阿姨；做代驾的e代驾，连接了用户与司机等等。这类企业所做的行业更侧重手艺人，即**一个有手艺的人不需要别人配合，也不需要提供固定的服务场所、大型设施，因此更适合连接消费者与直接的服务者**。\n\n\n根据我们自身的情况，分析如下：\n\n1. 婚纱摄影竞争很大，我们也没有类似经验，难以切入。\n2. 亲子摄影，市场很大，竞争相对较小，跟人像摄影有很多通用的技能，但需要道具繁琐，不太适合Uber平台模式。\n3. Uber模式的面向商业活动的摄影，目前无竞争对手，可尝试。初期可从活动行上发掘用户，后期可从各种商业活动场地、会议中心处获取用户。\n4. Uber模式的专注人像摄影的服务，跟月亮盒子非常相似。但是，这类型产品并不存在大量的刚需的精准客户群，所以很难定向精准推广。\n\n综上，面向商业活动的摄影，可作为切入点。\n","source":"_posts/扯淡/摄影O2O行业调研.md","raw":"---\ntitle: 摄影O2O行业调研\ncategories: \n- 扯淡\ntags: \n- O2O\n- 摄影\n- 市场调研\n---\n\n\n# 市场分析\n\n* **婚嫁摄影**。2011-2014年，国内每年平均有 1115万对新人结婚。假设有60%的人会拍摄婚纱照，客单价为3000元，则婚嫁市场大小为：1115w\\*60%\\*3000=200.7亿。\n* **亲子摄影**。2014年，全年出生人口1687万人。假设有40%的人会拍摄满月、周岁、三岁照，客单价为400。则每年市场大小为：80.876亿。\n* **商业活动摄影**。根据[活动行](http://www.huodongxing.com/calendar?month=2016-01)上的数据，1月份有2887个活动，分布在北京、上海、广州、深圳等14个一、二线城市。假设活动行上发布的活动只覆盖到实际发生商业活动的1/10，则每年有12*2887*10=346440个活动，假设个活动拍摄单价为400，则市场大小为：1.3858亿。\n\n\n\n\n# 摄影O2O企业盘点\n\n<iframe width=\"700\" height=\"600\" frameborder=\"0\" scrolling=\"no\" src=\"https://onedrive.live.com/embed?cid=291833EB38AA4FA0&resid=291833EB38AA4FA0%2124513&authkey=AAMO2Cqxdw4Uyeg&em=2&wdAllowInteractivity=False&Item='%E5%B7%A5%E4%BD%9C%E8%A1%A8%201'!A1%3AG14&wdHideGridlines=True&wdDownloadButton=True\"></iframe>\n\n\n# 我的看法\n\n以上摄影O2O里的13个企业，主营业务为婚嫁摄影的有8家，亲子摄影的有2家，面向食品商业摄影的是随食拍，面向电商商品拍摄的是约约，还有最后一家，专注人像摄影的月亮盒子。\n\nO2O最主要的一类是：连接消费者与直接服务者。河狸家连接了用户与美甲师，正在改变美甲这一传统行业。除此之外还有做家政的阿姨帮，连接了用户与阿姨；做代驾的e代驾，连接了用户与司机等等。这类企业所做的行业更侧重手艺人，即**一个有手艺的人不需要别人配合，也不需要提供固定的服务场所、大型设施，因此更适合连接消费者与直接的服务者**。\n\n\n根据我们自身的情况，分析如下：\n\n1. 婚纱摄影竞争很大，我们也没有类似经验，难以切入。\n2. 亲子摄影，市场很大，竞争相对较小，跟人像摄影有很多通用的技能，但需要道具繁琐，不太适合Uber平台模式。\n3. Uber模式的面向商业活动的摄影，目前无竞争对手，可尝试。初期可从活动行上发掘用户，后期可从各种商业活动场地、会议中心处获取用户。\n4. Uber模式的专注人像摄影的服务，跟月亮盒子非常相似。但是，这类型产品并不存在大量的刚需的精准客户群，所以很难定向精准推广。\n\n综上，面向商业活动的摄影，可作为切入点。\n","slug":"扯淡/摄影O2O行业调研","published":1,"date":"2016-02-17T11:32:35.000Z","updated":"2017-07-26T16:23:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kop002wq0d4g7vu5lab","content":"<h1 id=\"市场分析\"><a href=\"#市场分析\" class=\"headerlink\" title=\"市场分析\"></a>市场分析</h1><ul>\n<li><strong>婚嫁摄影</strong>。2011-2014年，国内每年平均有 1115万对新人结婚。假设有60%的人会拍摄婚纱照，客单价为3000元，则婚嫁市场大小为：1115w*60%*3000=200.7亿。</li>\n<li><strong>亲子摄影</strong>。2014年，全年出生人口1687万人。假设有40%的人会拍摄满月、周岁、三岁照，客单价为400。则每年市场大小为：80.876亿。</li>\n<li><strong>商业活动摄影</strong>。根据<a href=\"http://www.huodongxing.com/calendar?month=2016-01\" target=\"_blank\" rel=\"external\">活动行</a>上的数据，1月份有2887个活动，分布在北京、上海、广州、深圳等14个一、二线城市。假设活动行上发布的活动只覆盖到实际发生商业活动的1/10，则每年有12<em>2887</em>10=346440个活动，假设个活动拍摄单价为400，则市场大小为：1.3858亿。</li>\n</ul>\n<h1 id=\"摄影O2O企业盘点\"><a href=\"#摄影O2O企业盘点\" class=\"headerlink\" title=\"摄影O2O企业盘点\"></a>摄影O2O企业盘点</h1><iframe width=\"700\" height=\"600\" frameborder=\"0\" scrolling=\"no\" src=\"https://onedrive.live.com/embed?cid=291833EB38AA4FA0&resid=291833EB38AA4FA0%2124513&authkey=AAMO2Cqxdw4Uyeg&em=2&wdAllowInteractivity=False&Item='%E5%B7%A5%E4%BD%9C%E8%A1%A8%201'!A1%3AG14&wdHideGridlines=True&wdDownloadButton=True\"></iframe>\n\n\n<h1 id=\"我的看法\"><a href=\"#我的看法\" class=\"headerlink\" title=\"我的看法\"></a>我的看法</h1><p>以上摄影O2O里的13个企业，主营业务为婚嫁摄影的有8家，亲子摄影的有2家，面向食品商业摄影的是随食拍，面向电商商品拍摄的是约约，还有最后一家，专注人像摄影的月亮盒子。</p>\n<p>O2O最主要的一类是：连接消费者与直接服务者。河狸家连接了用户与美甲师，正在改变美甲这一传统行业。除此之外还有做家政的阿姨帮，连接了用户与阿姨；做代驾的e代驾，连接了用户与司机等等。这类企业所做的行业更侧重手艺人，即<strong>一个有手艺的人不需要别人配合，也不需要提供固定的服务场所、大型设施，因此更适合连接消费者与直接的服务者</strong>。</p>\n<p>根据我们自身的情况，分析如下：</p>\n<ol>\n<li>婚纱摄影竞争很大，我们也没有类似经验，难以切入。</li>\n<li>亲子摄影，市场很大，竞争相对较小，跟人像摄影有很多通用的技能，但需要道具繁琐，不太适合Uber平台模式。</li>\n<li>Uber模式的面向商业活动的摄影，目前无竞争对手，可尝试。初期可从活动行上发掘用户，后期可从各种商业活动场地、会议中心处获取用户。</li>\n<li>Uber模式的专注人像摄影的服务，跟月亮盒子非常相似。但是，这类型产品并不存在大量的刚需的精准客户群，所以很难定向精准推广。</li>\n</ol>\n<p>综上，面向商业活动的摄影，可作为切入点。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"市场分析\"><a href=\"#市场分析\" class=\"headerlink\" title=\"市场分析\"></a>市场分析</h1><ul>\n<li><strong>婚嫁摄影</strong>。2011-2014年，国内每年平均有 1115万对新人结婚。假设有60%的人会拍摄婚纱照，客单价为3000元，则婚嫁市场大小为：1115w*60%*3000=200.7亿。</li>\n<li><strong>亲子摄影</strong>。2014年，全年出生人口1687万人。假设有40%的人会拍摄满月、周岁、三岁照，客单价为400。则每年市场大小为：80.876亿。</li>\n<li><strong>商业活动摄影</strong>。根据<a href=\"http://www.huodongxing.com/calendar?month=2016-01\" target=\"_blank\" rel=\"external\">活动行</a>上的数据，1月份有2887个活动，分布在北京、上海、广州、深圳等14个一、二线城市。假设活动行上发布的活动只覆盖到实际发生商业活动的1/10，则每年有12<em>2887</em>10=346440个活动，假设个活动拍摄单价为400，则市场大小为：1.3858亿。</li>\n</ul>\n<h1 id=\"摄影O2O企业盘点\"><a href=\"#摄影O2O企业盘点\" class=\"headerlink\" title=\"摄影O2O企业盘点\"></a>摄影O2O企业盘点</h1><iframe width=\"700\" height=\"600\" frameborder=\"0\" scrolling=\"no\" src=\"https://onedrive.live.com/embed?cid=291833EB38AA4FA0&resid=291833EB38AA4FA0%2124513&authkey=AAMO2Cqxdw4Uyeg&em=2&wdAllowInteractivity=False&Item='%E5%B7%A5%E4%BD%9C%E8%A1%A8%201'!A1%3AG14&wdHideGridlines=True&wdDownloadButton=True\"></iframe>\n\n\n<h1 id=\"我的看法\"><a href=\"#我的看法\" class=\"headerlink\" title=\"我的看法\"></a>我的看法</h1><p>以上摄影O2O里的13个企业，主营业务为婚嫁摄影的有8家，亲子摄影的有2家，面向食品商业摄影的是随食拍，面向电商商品拍摄的是约约，还有最后一家，专注人像摄影的月亮盒子。</p>\n<p>O2O最主要的一类是：连接消费者与直接服务者。河狸家连接了用户与美甲师，正在改变美甲这一传统行业。除此之外还有做家政的阿姨帮，连接了用户与阿姨；做代驾的e代驾，连接了用户与司机等等。这类企业所做的行业更侧重手艺人，即<strong>一个有手艺的人不需要别人配合，也不需要提供固定的服务场所、大型设施，因此更适合连接消费者与直接的服务者</strong>。</p>\n<p>根据我们自身的情况，分析如下：</p>\n<ol>\n<li>婚纱摄影竞争很大，我们也没有类似经验，难以切入。</li>\n<li>亲子摄影，市场很大，竞争相对较小，跟人像摄影有很多通用的技能，但需要道具繁琐，不太适合Uber平台模式。</li>\n<li>Uber模式的面向商业活动的摄影，目前无竞争对手，可尝试。初期可从活动行上发掘用户，后期可从各种商业活动场地、会议中心处获取用户。</li>\n<li>Uber模式的专注人像摄影的服务，跟月亮盒子非常相似。但是，这类型产品并不存在大量的刚需的精准客户群，所以很难定向精准推广。</li>\n</ol>\n<p>综上，面向商业活动的摄影，可作为切入点。</p>\n"},{"title":"是否有生机勃勃的人的活动是评价公寓好坏的唯一标准","description":"为什么步行街的背靠背的座椅中，朝向道路的总是坐满人，而背向道路的没有人？为什么你走在马路上，接连100米，旁边是摩天大楼一面水泥涂墙，你觉得厌烦，把衣领竖起来，只想快点走完？为什么有些广场上总有停留的人群，而有些广场空空如也？","_content":"\n\n为什么步行街的背靠背的座椅中，朝向道路的总是坐满人，而背向道路的没有人？\n\n![阿甘](./_huodong/u18.jpg)\n\n为什么你走在马路上，接连100米，旁边是摩天大楼一面水泥涂墙，你觉得厌烦，把衣领竖起来，只想快点走完？\n\n![wall](./_huodong/u28.png)\n\n为什么有些广场上总有停留的人群，而有些广场空空如也？\n\n![film](./_huodong/u16.jpg)\n\n因为\n**人的最大兴趣是看其他人**\n所以面朝人行道的座椅面总是座无虚席，而面对空荡道旁树的没有人。\n\n![film2](./_huodong/u24.jpg)\n\n## 来自Jan Gehl的启发\n\n>已有的建筑传统和时代因袭的城建方式具有许多重要而美好的质量，在我们的社会不断工业化的发展进程中，这些质量总是有被冷落和埋没的危险。\n>我们可曾想过，人造环境是如何支持--或者扼杀--公共空间中各种类型的生活的？\n\n## 公共空间的三类活动\n\n公共空间中的户外活动可以划分为三类：\n\n* **必要性活动**\n* **自发性活动**\n* **社会性活动**\n\n每一类活动类型对于物质环境的要求都大不相同。\n\n### 必要性活动\n\n![happiness](./_huodong/u32.png)\n\n必要性活动包括了那些多少有点不自主的活动，如上学、上班呢、购物、等人、候车、出差、收送快件等。也就是日常工作和生活的必要活动。\n\n因为这些活动是必要的，它们的发生很少受到物质构成的影响，一年四季在各种条件下都可能进行，相对来说与公共空间的环境关系不大，参与者没有选择余地。\n\n### 自发性活动\n\n![ring](./_huodong/u48.jpg)\n\n自发性活动是另一种全然不同的活动，只有在人们有参与的医院，并且在时间、地点可能的情况下才会发生。这一类型的活动包括了散步、呼吸新鲜空气、驻足观望有趣的事情以及坐下来晒太阳。\n\n这些活动只在外部条件适宜、光线、声音等条件都具有吸引力的时候才会发生。\n\n**当户外空间的质量不理想时，就只能发生必要性活动。**\n\n### 社交性活动\n\n![ring2](./_huodong/u52.jpg)\n\n社会性活动指的是在公共空间中有赖于他人参与的各种活动，包括互相打招呼、交谈、各类公共活动以及最广泛的社会活动--被动式接触，即仅以试听来感受他人。\n\n这些活动一般由前两类活动发展而来，是一种连锁反应。\n\n人们在同一空间中徜徉、休息，自然就会引发各种社会性活动。在集中式公寓中，洗衣房、咖啡厅、阅览室、休息室都为社会性活动创造了接触的机会。\n\n![coffee](./_huodong/u50.jpg)\n\n低强度的接触也是进一步发展其他交往形式的起点，这种发展不是实现规划好的，而是自然发生的，难以预测的。\n\n**如果租客常常互相从别人的门前经过，特别是在公共空间见面，或因为共同的工作地点而频繁相见，那顺路探访、“串门”、“邀约”乃至筹划一些共同感兴趣的活动，也就是顺理成章的事情了。**\n\n\n## 公共活动与空间的质量\n\n公共活动的内容和特点很容易受到物质规划的的影响。通过材料、色彩的选择可以在公共空间中创造出五光十色的情调；同样，通过规划决策可以影响活动的类型。\n\n典型的现代塔楼小区，电梯是主流的交通工具，大家在闭塞的电梯间里，很难产生愉快的生活交流。\n\n![90's](./_huodong/u66.jpg)\n\n而在90年代主流的低层小区里，适用于步行交通的城镇，周围都有供人们逗留的场所。可以看到，这些住宅区，充满了活力和生机。\n\n**对于新型社交型公寓而言，开发充足优美的公共空间，并在这个公共空间中有意分布几个小型“驻足点”，会大大提高它的“人气”。**\n\n## 小结\n\n综上，对于社交型公寓而言，大规模的节目并不是研究的重点；相反，日常生活所以来的空间才是应受到重视和关心的焦点。它对公共空间的要求并不太高，但是相对广泛：\n\n1.　**能方便而自由的进出；**\n2.　**能在公寓内以及其周边流连；**\n3.　**能从建筑和装饰本身得到愉悦；**\n4.　**能与人见面和聚会－－不管是正式的还是临时的，都很关键。**\n\n上述是社交型公寓最基本的要求，他们正式要求为日常生活提供更好、更适用的环境，是公寓居住体验中最重要的一环。\n\n\n\n中国如雨后春笋般的互联网公寓中，私人空间成了最大的营销点和开发商重点投入对象，然。。。\n\n![inception](./_huodong/u79.png)\n  \n\n\n_-- Color公寓·居住体验研究中心_\n","source":"_posts/扯淡/活动是评价公寓好坏的唯一标准.md","raw":"---\ntags: \n- color \n- 社交 \n- 公寓\ntitle: 是否有生机勃勃的人的活动是评价公寓好坏的唯一标准\ndescription: 为什么步行街的背靠背的座椅中，朝向道路的总是坐满人，而背向道路的没有人？为什么你走在马路上，接连100米，旁边是摩天大楼一面水泥涂墙，你觉得厌烦，把衣领竖起来，只想快点走完？为什么有些广场上总有停留的人群，而有些广场空空如也？\ncategories: \n- 扯淡\n---\n\n\n为什么步行街的背靠背的座椅中，朝向道路的总是坐满人，而背向道路的没有人？\n\n![阿甘](./_huodong/u18.jpg)\n\n为什么你走在马路上，接连100米，旁边是摩天大楼一面水泥涂墙，你觉得厌烦，把衣领竖起来，只想快点走完？\n\n![wall](./_huodong/u28.png)\n\n为什么有些广场上总有停留的人群，而有些广场空空如也？\n\n![film](./_huodong/u16.jpg)\n\n因为\n**人的最大兴趣是看其他人**\n所以面朝人行道的座椅面总是座无虚席，而面对空荡道旁树的没有人。\n\n![film2](./_huodong/u24.jpg)\n\n## 来自Jan Gehl的启发\n\n>已有的建筑传统和时代因袭的城建方式具有许多重要而美好的质量，在我们的社会不断工业化的发展进程中，这些质量总是有被冷落和埋没的危险。\n>我们可曾想过，人造环境是如何支持--或者扼杀--公共空间中各种类型的生活的？\n\n## 公共空间的三类活动\n\n公共空间中的户外活动可以划分为三类：\n\n* **必要性活动**\n* **自发性活动**\n* **社会性活动**\n\n每一类活动类型对于物质环境的要求都大不相同。\n\n### 必要性活动\n\n![happiness](./_huodong/u32.png)\n\n必要性活动包括了那些多少有点不自主的活动，如上学、上班呢、购物、等人、候车、出差、收送快件等。也就是日常工作和生活的必要活动。\n\n因为这些活动是必要的，它们的发生很少受到物质构成的影响，一年四季在各种条件下都可能进行，相对来说与公共空间的环境关系不大，参与者没有选择余地。\n\n### 自发性活动\n\n![ring](./_huodong/u48.jpg)\n\n自发性活动是另一种全然不同的活动，只有在人们有参与的医院，并且在时间、地点可能的情况下才会发生。这一类型的活动包括了散步、呼吸新鲜空气、驻足观望有趣的事情以及坐下来晒太阳。\n\n这些活动只在外部条件适宜、光线、声音等条件都具有吸引力的时候才会发生。\n\n**当户外空间的质量不理想时，就只能发生必要性活动。**\n\n### 社交性活动\n\n![ring2](./_huodong/u52.jpg)\n\n社会性活动指的是在公共空间中有赖于他人参与的各种活动，包括互相打招呼、交谈、各类公共活动以及最广泛的社会活动--被动式接触，即仅以试听来感受他人。\n\n这些活动一般由前两类活动发展而来，是一种连锁反应。\n\n人们在同一空间中徜徉、休息，自然就会引发各种社会性活动。在集中式公寓中，洗衣房、咖啡厅、阅览室、休息室都为社会性活动创造了接触的机会。\n\n![coffee](./_huodong/u50.jpg)\n\n低强度的接触也是进一步发展其他交往形式的起点，这种发展不是实现规划好的，而是自然发生的，难以预测的。\n\n**如果租客常常互相从别人的门前经过，特别是在公共空间见面，或因为共同的工作地点而频繁相见，那顺路探访、“串门”、“邀约”乃至筹划一些共同感兴趣的活动，也就是顺理成章的事情了。**\n\n\n## 公共活动与空间的质量\n\n公共活动的内容和特点很容易受到物质规划的的影响。通过材料、色彩的选择可以在公共空间中创造出五光十色的情调；同样，通过规划决策可以影响活动的类型。\n\n典型的现代塔楼小区，电梯是主流的交通工具，大家在闭塞的电梯间里，很难产生愉快的生活交流。\n\n![90's](./_huodong/u66.jpg)\n\n而在90年代主流的低层小区里，适用于步行交通的城镇，周围都有供人们逗留的场所。可以看到，这些住宅区，充满了活力和生机。\n\n**对于新型社交型公寓而言，开发充足优美的公共空间，并在这个公共空间中有意分布几个小型“驻足点”，会大大提高它的“人气”。**\n\n## 小结\n\n综上，对于社交型公寓而言，大规模的节目并不是研究的重点；相反，日常生活所以来的空间才是应受到重视和关心的焦点。它对公共空间的要求并不太高，但是相对广泛：\n\n1.　**能方便而自由的进出；**\n2.　**能在公寓内以及其周边流连；**\n3.　**能从建筑和装饰本身得到愉悦；**\n4.　**能与人见面和聚会－－不管是正式的还是临时的，都很关键。**\n\n上述是社交型公寓最基本的要求，他们正式要求为日常生活提供更好、更适用的环境，是公寓居住体验中最重要的一环。\n\n\n\n中国如雨后春笋般的互联网公寓中，私人空间成了最大的营销点和开发商重点投入对象，然。。。\n\n![inception](./_huodong/u79.png)\n  \n\n\n_-- Color公寓·居住体验研究中心_\n","slug":"扯淡/活动是评价公寓好坏的唯一标准","published":1,"date":"2016-12-12T17:01:53.000Z","updated":"2017-07-26T16:20:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kou002yq0d4cgddwox6","content":"<p>为什么步行街的背靠背的座椅中，朝向道路的总是坐满人，而背向道路的没有人？</p>\n<p><img src=\"./_huodong/u18.jpg\" alt=\"阿甘\"></p>\n<p>为什么你走在马路上，接连100米，旁边是摩天大楼一面水泥涂墙，你觉得厌烦，把衣领竖起来，只想快点走完？</p>\n<p><img src=\"./_huodong/u28.png\" alt=\"wall\"></p>\n<p>为什么有些广场上总有停留的人群，而有些广场空空如也？</p>\n<p><img src=\"./_huodong/u16.jpg\" alt=\"film\"></p>\n<p>因为<br><strong>人的最大兴趣是看其他人</strong><br>所以面朝人行道的座椅面总是座无虚席，而面对空荡道旁树的没有人。</p>\n<p><img src=\"./_huodong/u24.jpg\" alt=\"film2\"></p>\n<h2 id=\"来自Jan-Gehl的启发\"><a href=\"#来自Jan-Gehl的启发\" class=\"headerlink\" title=\"来自Jan Gehl的启发\"></a>来自Jan Gehl的启发</h2><blockquote>\n<p>已有的建筑传统和时代因袭的城建方式具有许多重要而美好的质量，在我们的社会不断工业化的发展进程中，这些质量总是有被冷落和埋没的危险。<br>我们可曾想过，人造环境是如何支持–或者扼杀–公共空间中各种类型的生活的？</p>\n</blockquote>\n<h2 id=\"公共空间的三类活动\"><a href=\"#公共空间的三类活动\" class=\"headerlink\" title=\"公共空间的三类活动\"></a>公共空间的三类活动</h2><p>公共空间中的户外活动可以划分为三类：</p>\n<ul>\n<li><strong>必要性活动</strong></li>\n<li><strong>自发性活动</strong></li>\n<li><strong>社会性活动</strong></li>\n</ul>\n<p>每一类活动类型对于物质环境的要求都大不相同。</p>\n<h3 id=\"必要性活动\"><a href=\"#必要性活动\" class=\"headerlink\" title=\"必要性活动\"></a>必要性活动</h3><p><img src=\"./_huodong/u32.png\" alt=\"happiness\"></p>\n<p>必要性活动包括了那些多少有点不自主的活动，如上学、上班呢、购物、等人、候车、出差、收送快件等。也就是日常工作和生活的必要活动。</p>\n<p>因为这些活动是必要的，它们的发生很少受到物质构成的影响，一年四季在各种条件下都可能进行，相对来说与公共空间的环境关系不大，参与者没有选择余地。</p>\n<h3 id=\"自发性活动\"><a href=\"#自发性活动\" class=\"headerlink\" title=\"自发性活动\"></a>自发性活动</h3><p><img src=\"./_huodong/u48.jpg\" alt=\"ring\"></p>\n<p>自发性活动是另一种全然不同的活动，只有在人们有参与的医院，并且在时间、地点可能的情况下才会发生。这一类型的活动包括了散步、呼吸新鲜空气、驻足观望有趣的事情以及坐下来晒太阳。</p>\n<p>这些活动只在外部条件适宜、光线、声音等条件都具有吸引力的时候才会发生。</p>\n<p><strong>当户外空间的质量不理想时，就只能发生必要性活动。</strong></p>\n<h3 id=\"社交性活动\"><a href=\"#社交性活动\" class=\"headerlink\" title=\"社交性活动\"></a>社交性活动</h3><p><img src=\"./_huodong/u52.jpg\" alt=\"ring2\"></p>\n<p>社会性活动指的是在公共空间中有赖于他人参与的各种活动，包括互相打招呼、交谈、各类公共活动以及最广泛的社会活动–被动式接触，即仅以试听来感受他人。</p>\n<p>这些活动一般由前两类活动发展而来，是一种连锁反应。</p>\n<p>人们在同一空间中徜徉、休息，自然就会引发各种社会性活动。在集中式公寓中，洗衣房、咖啡厅、阅览室、休息室都为社会性活动创造了接触的机会。</p>\n<p><img src=\"./_huodong/u50.jpg\" alt=\"coffee\"></p>\n<p>低强度的接触也是进一步发展其他交往形式的起点，这种发展不是实现规划好的，而是自然发生的，难以预测的。</p>\n<p><strong>如果租客常常互相从别人的门前经过，特别是在公共空间见面，或因为共同的工作地点而频繁相见，那顺路探访、“串门”、“邀约”乃至筹划一些共同感兴趣的活动，也就是顺理成章的事情了。</strong></p>\n<h2 id=\"公共活动与空间的质量\"><a href=\"#公共活动与空间的质量\" class=\"headerlink\" title=\"公共活动与空间的质量\"></a>公共活动与空间的质量</h2><p>公共活动的内容和特点很容易受到物质规划的的影响。通过材料、色彩的选择可以在公共空间中创造出五光十色的情调；同样，通过规划决策可以影响活动的类型。</p>\n<p>典型的现代塔楼小区，电梯是主流的交通工具，大家在闭塞的电梯间里，很难产生愉快的生活交流。</p>\n<p><img src=\"./_huodong/u66.jpg\" alt=\"90&#39;s\"></p>\n<p>而在90年代主流的低层小区里，适用于步行交通的城镇，周围都有供人们逗留的场所。可以看到，这些住宅区，充满了活力和生机。</p>\n<p><strong>对于新型社交型公寓而言，开发充足优美的公共空间，并在这个公共空间中有意分布几个小型“驻足点”，会大大提高它的“人气”。</strong></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>综上，对于社交型公寓而言，大规模的节目并不是研究的重点；相反，日常生活所以来的空间才是应受到重视和关心的焦点。它对公共空间的要求并不太高，但是相对广泛：</p>\n<p>1.　<strong>能方便而自由的进出；</strong><br>2.　<strong>能在公寓内以及其周边流连；</strong><br>3.　<strong>能从建筑和装饰本身得到愉悦；</strong><br>4.　<strong>能与人见面和聚会－－不管是正式的还是临时的，都很关键。</strong></p>\n<p>上述是社交型公寓最基本的要求，他们正式要求为日常生活提供更好、更适用的环境，是公寓居住体验中最重要的一环。</p>\n<p>中国如雨后春笋般的互联网公寓中，私人空间成了最大的营销点和开发商重点投入对象，然。。。</p>\n<p><img src=\"./_huodong/u79.png\" alt=\"inception\"></p>\n<p><em>– Color公寓·居住体验研究中心</em></p>\n","site":{"data":{}},"excerpt":"","more":"<p>为什么步行街的背靠背的座椅中，朝向道路的总是坐满人，而背向道路的没有人？</p>\n<p><img src=\"./_huodong/u18.jpg\" alt=\"阿甘\"></p>\n<p>为什么你走在马路上，接连100米，旁边是摩天大楼一面水泥涂墙，你觉得厌烦，把衣领竖起来，只想快点走完？</p>\n<p><img src=\"./_huodong/u28.png\" alt=\"wall\"></p>\n<p>为什么有些广场上总有停留的人群，而有些广场空空如也？</p>\n<p><img src=\"./_huodong/u16.jpg\" alt=\"film\"></p>\n<p>因为<br><strong>人的最大兴趣是看其他人</strong><br>所以面朝人行道的座椅面总是座无虚席，而面对空荡道旁树的没有人。</p>\n<p><img src=\"./_huodong/u24.jpg\" alt=\"film2\"></p>\n<h2 id=\"来自Jan-Gehl的启发\"><a href=\"#来自Jan-Gehl的启发\" class=\"headerlink\" title=\"来自Jan Gehl的启发\"></a>来自Jan Gehl的启发</h2><blockquote>\n<p>已有的建筑传统和时代因袭的城建方式具有许多重要而美好的质量，在我们的社会不断工业化的发展进程中，这些质量总是有被冷落和埋没的危险。<br>我们可曾想过，人造环境是如何支持–或者扼杀–公共空间中各种类型的生活的？</p>\n</blockquote>\n<h2 id=\"公共空间的三类活动\"><a href=\"#公共空间的三类活动\" class=\"headerlink\" title=\"公共空间的三类活动\"></a>公共空间的三类活动</h2><p>公共空间中的户外活动可以划分为三类：</p>\n<ul>\n<li><strong>必要性活动</strong></li>\n<li><strong>自发性活动</strong></li>\n<li><strong>社会性活动</strong></li>\n</ul>\n<p>每一类活动类型对于物质环境的要求都大不相同。</p>\n<h3 id=\"必要性活动\"><a href=\"#必要性活动\" class=\"headerlink\" title=\"必要性活动\"></a>必要性活动</h3><p><img src=\"./_huodong/u32.png\" alt=\"happiness\"></p>\n<p>必要性活动包括了那些多少有点不自主的活动，如上学、上班呢、购物、等人、候车、出差、收送快件等。也就是日常工作和生活的必要活动。</p>\n<p>因为这些活动是必要的，它们的发生很少受到物质构成的影响，一年四季在各种条件下都可能进行，相对来说与公共空间的环境关系不大，参与者没有选择余地。</p>\n<h3 id=\"自发性活动\"><a href=\"#自发性活动\" class=\"headerlink\" title=\"自发性活动\"></a>自发性活动</h3><p><img src=\"./_huodong/u48.jpg\" alt=\"ring\"></p>\n<p>自发性活动是另一种全然不同的活动，只有在人们有参与的医院，并且在时间、地点可能的情况下才会发生。这一类型的活动包括了散步、呼吸新鲜空气、驻足观望有趣的事情以及坐下来晒太阳。</p>\n<p>这些活动只在外部条件适宜、光线、声音等条件都具有吸引力的时候才会发生。</p>\n<p><strong>当户外空间的质量不理想时，就只能发生必要性活动。</strong></p>\n<h3 id=\"社交性活动\"><a href=\"#社交性活动\" class=\"headerlink\" title=\"社交性活动\"></a>社交性活动</h3><p><img src=\"./_huodong/u52.jpg\" alt=\"ring2\"></p>\n<p>社会性活动指的是在公共空间中有赖于他人参与的各种活动，包括互相打招呼、交谈、各类公共活动以及最广泛的社会活动–被动式接触，即仅以试听来感受他人。</p>\n<p>这些活动一般由前两类活动发展而来，是一种连锁反应。</p>\n<p>人们在同一空间中徜徉、休息，自然就会引发各种社会性活动。在集中式公寓中，洗衣房、咖啡厅、阅览室、休息室都为社会性活动创造了接触的机会。</p>\n<p><img src=\"./_huodong/u50.jpg\" alt=\"coffee\"></p>\n<p>低强度的接触也是进一步发展其他交往形式的起点，这种发展不是实现规划好的，而是自然发生的，难以预测的。</p>\n<p><strong>如果租客常常互相从别人的门前经过，特别是在公共空间见面，或因为共同的工作地点而频繁相见，那顺路探访、“串门”、“邀约”乃至筹划一些共同感兴趣的活动，也就是顺理成章的事情了。</strong></p>\n<h2 id=\"公共活动与空间的质量\"><a href=\"#公共活动与空间的质量\" class=\"headerlink\" title=\"公共活动与空间的质量\"></a>公共活动与空间的质量</h2><p>公共活动的内容和特点很容易受到物质规划的的影响。通过材料、色彩的选择可以在公共空间中创造出五光十色的情调；同样，通过规划决策可以影响活动的类型。</p>\n<p>典型的现代塔楼小区，电梯是主流的交通工具，大家在闭塞的电梯间里，很难产生愉快的生活交流。</p>\n<p><img src=\"./_huodong/u66.jpg\" alt=\"90&#39;s\"></p>\n<p>而在90年代主流的低层小区里，适用于步行交通的城镇，周围都有供人们逗留的场所。可以看到，这些住宅区，充满了活力和生机。</p>\n<p><strong>对于新型社交型公寓而言，开发充足优美的公共空间，并在这个公共空间中有意分布几个小型“驻足点”，会大大提高它的“人气”。</strong></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>综上，对于社交型公寓而言，大规模的节目并不是研究的重点；相反，日常生活所以来的空间才是应受到重视和关心的焦点。它对公共空间的要求并不太高，但是相对广泛：</p>\n<p>1.　<strong>能方便而自由的进出；</strong><br>2.　<strong>能在公寓内以及其周边流连；</strong><br>3.　<strong>能从建筑和装饰本身得到愉悦；</strong><br>4.　<strong>能与人见面和聚会－－不管是正式的还是临时的，都很关键。</strong></p>\n<p>上述是社交型公寓最基本的要求，他们正式要求为日常生活提供更好、更适用的环境，是公寓居住体验中最重要的一环。</p>\n<p>中国如雨后春笋般的互联网公寓中，私人空间成了最大的营销点和开发商重点投入对象，然。。。</p>\n<p><img src=\"./_huodong/u79.png\" alt=\"inception\"></p>\n<p><em>– Color公寓·居住体验研究中心</em></p>\n"},{"date":"2016-03-07T16:00:00.000Z","title":"程序员的自我修养","_content":"\n摘要：这并不是一份全方位的修养提升建议，只是把我擅长的地方总结下来，一起学习。\n\n\n## 写在前面\n\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n## 关于设计模式\n\n1. 设计模式本身是没有存在意义的，这种层级的抽象，它的价值只有在具体应用中才能体现。\n2. 一个程序员，学习过OO基本思想，有一年生产性编码经验，即使没专门学习过**设计模式**，必定已经用过其中的很多种。常见的框架或平台，比如Android、iOS、Mina，本身都处处有设计模式的影子，只要你写代码，它就无处不在。\n3. 不懂设计模式你仍然可以写好代码，因为人们也是在实际编码中“发现”这样写比较方便，当这种情况发生过很多次，便成了**设计模式**。\n4. 基于以上，一个初级程序员，不可能在深入学习了23种设计模式的原理和背景之后，就能立马使用。设计模式的使用，必然要基于大量的编码经验和对代码结构的理解。最常见的学习过程是：你已经在编码中使用过很多次->发现跟某种设计模式很像->理解应用场景->熟练使用。\n5. 基于以上，两年以内的程序员，学习设计模式并不需要太用力，更不要希望立马让千丝万缕的代码变得井井有条。理解OO基本思想，多写代码，多看正在使用的框架的源码，再结合设计模式，才是合理的道路。\n\n## 关于图形框架\n\n1. 这里的**图形框架**指的是，前端编程中，负责渲染图像和处理用户动作的模块。两个核心：**渲染图像，处理动作**。不管是AS3,cocos2d-x,iOS cocosUI,Android UI都是在解决这两个问题。\n2. \n\n## 关于算法\n\n## 关于网络\n\n\n\n","source":"_posts/扯淡/程序员的自我修养.md","raw":"---\ndate: 2016-03-08\ntags: \n- 技术 \n- 内功 \n- 外功\ntitle: 程序员的自我修养\ncategories: \n- 扯淡\n---\n\n摘要：这并不是一份全方位的修养提升建议，只是把我擅长的地方总结下来，一起学习。\n\n\n## 写在前面\n\n\n1. 程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为**特定技能**；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为**普适技能**。\n2. **特定技能是可速成的**。举个例子，对于**任何特定技能**，我只需一份Official Develop Guide，一本O'realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括`iOS,Android,cocos2d-x,PHP`应用。这并不是什么了不起的技能，因为从根本上说，学习**特定技能**就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。\n3. **普适技能是内功**。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门**特定技能**。内功不会凭空而来，也不会仅仅因为你对某一种**特定技能**精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。\n4. **普适技能和特定技能是相辅相成，不可分割的**。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。\n\n\n## 关于设计模式\n\n1. 设计模式本身是没有存在意义的，这种层级的抽象，它的价值只有在具体应用中才能体现。\n2. 一个程序员，学习过OO基本思想，有一年生产性编码经验，即使没专门学习过**设计模式**，必定已经用过其中的很多种。常见的框架或平台，比如Android、iOS、Mina，本身都处处有设计模式的影子，只要你写代码，它就无处不在。\n3. 不懂设计模式你仍然可以写好代码，因为人们也是在实际编码中“发现”这样写比较方便，当这种情况发生过很多次，便成了**设计模式**。\n4. 基于以上，一个初级程序员，不可能在深入学习了23种设计模式的原理和背景之后，就能立马使用。设计模式的使用，必然要基于大量的编码经验和对代码结构的理解。最常见的学习过程是：你已经在编码中使用过很多次->发现跟某种设计模式很像->理解应用场景->熟练使用。\n5. 基于以上，两年以内的程序员，学习设计模式并不需要太用力，更不要希望立马让千丝万缕的代码变得井井有条。理解OO基本思想，多写代码，多看正在使用的框架的源码，再结合设计模式，才是合理的道路。\n\n## 关于图形框架\n\n1. 这里的**图形框架**指的是，前端编程中，负责渲染图像和处理用户动作的模块。两个核心：**渲染图像，处理动作**。不管是AS3,cocos2d-x,iOS cocosUI,Android UI都是在解决这两个问题。\n2. \n\n## 关于算法\n\n## 关于网络\n\n\n\n","slug":"扯淡/程序员的自我修养","published":1,"updated":"2017-07-26T16:20:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kox0030q0d4hh5e7b46","content":"<p>摘要：这并不是一份全方位的修养提升建议，只是把我擅长的地方总结下来，一起学习。</p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<h2 id=\"关于设计模式\"><a href=\"#关于设计模式\" class=\"headerlink\" title=\"关于设计模式\"></a>关于设计模式</h2><ol>\n<li>设计模式本身是没有存在意义的，这种层级的抽象，它的价值只有在具体应用中才能体现。</li>\n<li>一个程序员，学习过OO基本思想，有一年生产性编码经验，即使没专门学习过<strong>设计模式</strong>，必定已经用过其中的很多种。常见的框架或平台，比如Android、iOS、Mina，本身都处处有设计模式的影子，只要你写代码，它就无处不在。</li>\n<li>不懂设计模式你仍然可以写好代码，因为人们也是在实际编码中“发现”这样写比较方便，当这种情况发生过很多次，便成了<strong>设计模式</strong>。</li>\n<li>基于以上，一个初级程序员，不可能在深入学习了23种设计模式的原理和背景之后，就能立马使用。设计模式的使用，必然要基于大量的编码经验和对代码结构的理解。最常见的学习过程是：你已经在编码中使用过很多次-&gt;发现跟某种设计模式很像-&gt;理解应用场景-&gt;熟练使用。</li>\n<li>基于以上，两年以内的程序员，学习设计模式并不需要太用力，更不要希望立马让千丝万缕的代码变得井井有条。理解OO基本思想，多写代码，多看正在使用的框架的源码，再结合设计模式，才是合理的道路。</li>\n</ol>\n<h2 id=\"关于图形框架\"><a href=\"#关于图形框架\" class=\"headerlink\" title=\"关于图形框架\"></a>关于图形框架</h2><ol>\n<li>这里的<strong>图形框架</strong>指的是，前端编程中，负责渲染图像和处理用户动作的模块。两个核心：<strong>渲染图像，处理动作</strong>。不管是AS3,cocos2d-x,iOS cocosUI,Android UI都是在解决这两个问题。</li>\n<li></li>\n</ol>\n<h2 id=\"关于算法\"><a href=\"#关于算法\" class=\"headerlink\" title=\"关于算法\"></a>关于算法</h2><h2 id=\"关于网络\"><a href=\"#关于网络\" class=\"headerlink\" title=\"关于网络\"></a>关于网络</h2>","site":{"data":{}},"excerpt":"","more":"<p>摘要：这并不是一份全方位的修养提升建议，只是把我擅长的地方总结下来，一起学习。</p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><ol>\n<li>程序员的技能要求有两方面：一是，针对特定平台的特定技能，比如Android开发、cocos2d-x开发、mysql数据库设计等，以下简称为<strong>特定技能</strong>；二是，所有平台通用的、普适的技术原理或思维方式，比如数据结构、算法、设计模式、网络、数据库、图形框架、多线程等，以下简称为<strong>普适技能</strong>。</li>\n<li><strong>特定技能是可速成的</strong>。举个例子，对于<strong>任何特定技能</strong>，我只需一份Official Develop Guide，一本O’realy的cookbook，几份Github用例代码，都可在1个月内成为合格的前线程序员。我这么说是因为我成功过很多次，包括<code>iOS,Android,cocos2d-x,PHP</code>应用。这并不是什么了不起的技能，因为从根本上说，学习<strong>特定技能</strong>就是熟悉API、使用API的过程，都是不需要消化的死的知识。稍微需要一点思考的是此平台的设计思想，但这只占一小部分。我见过月薪15k的iOS程序员，在不了解框架原理的情况下仍然能把功能完成的很好。</li>\n<li><strong>普适技能是内功</strong>。它体现了程序员的思维能力，决定着程序员的上限，也决定着是否能快速适应另一门<strong>特定技能</strong>。内功不会凭空而来，也不会仅仅因为你对某一种<strong>特定技能</strong>精通就内功大增。这中间必须有一个“博览群书”的过程，一种设计思想或技巧，在一个地方出现过你不会注意到，也不知道哪些是核心哪些是辅助。如果在很多平台都出现，你就会发现核心在哪里，以后大有所用，而哪些只是辅助代码。</li>\n<li><strong>普适技能和特定技能是相辅相成，不可分割的</strong>。对普适技能更深刻的理解，能促进程序员更好更快的学习新的特定技能；而普适技能也必须在学习和使用特定技能的过程中，才能理解的更深刻，特别对于设计模式、数据库等普适技能，书本上的原理是远远不够的，没有大量的生产经验，不可能充分理解。</li>\n</ol>\n<h2 id=\"关于设计模式\"><a href=\"#关于设计模式\" class=\"headerlink\" title=\"关于设计模式\"></a>关于设计模式</h2><ol>\n<li>设计模式本身是没有存在意义的，这种层级的抽象，它的价值只有在具体应用中才能体现。</li>\n<li>一个程序员，学习过OO基本思想，有一年生产性编码经验，即使没专门学习过<strong>设计模式</strong>，必定已经用过其中的很多种。常见的框架或平台，比如Android、iOS、Mina，本身都处处有设计模式的影子，只要你写代码，它就无处不在。</li>\n<li>不懂设计模式你仍然可以写好代码，因为人们也是在实际编码中“发现”这样写比较方便，当这种情况发生过很多次，便成了<strong>设计模式</strong>。</li>\n<li>基于以上，一个初级程序员，不可能在深入学习了23种设计模式的原理和背景之后，就能立马使用。设计模式的使用，必然要基于大量的编码经验和对代码结构的理解。最常见的学习过程是：你已经在编码中使用过很多次-&gt;发现跟某种设计模式很像-&gt;理解应用场景-&gt;熟练使用。</li>\n<li>基于以上，两年以内的程序员，学习设计模式并不需要太用力，更不要希望立马让千丝万缕的代码变得井井有条。理解OO基本思想，多写代码，多看正在使用的框架的源码，再结合设计模式，才是合理的道路。</li>\n</ol>\n<h2 id=\"关于图形框架\"><a href=\"#关于图形框架\" class=\"headerlink\" title=\"关于图形框架\"></a>关于图形框架</h2><ol>\n<li>这里的<strong>图形框架</strong>指的是，前端编程中，负责渲染图像和处理用户动作的模块。两个核心：<strong>渲染图像，处理动作</strong>。不管是AS3,cocos2d-x,iOS cocosUI,Android UI都是在解决这两个问题。</li>\n<li></li>\n</ol>\n<h2 id=\"关于算法\"><a href=\"#关于算法\" class=\"headerlink\" title=\"关于算法\"></a>关于算法</h2><h2 id=\"关于网络\"><a href=\"#关于网络\" class=\"headerlink\" title=\"关于网络\"></a>关于网络</h2>"},{"title":"自省","_content":"\n\n# Principles：\n\n  1. 爱抱怨的人一般都不受欢迎。停止抱怨，给别人带来恒能量，自己也能收获正能量。\n  2. 有想法，勇敢去做，否则永远只是个loser。\n  3. 坦然接受别人不同的价值观。不要以自己狭隘的眼光去要求别人，以为世界上只有你是对的。\n  4. 不自信？那说明历史数据给自己带来的正反馈不够多。培养自信？就是不断的做成功一件事，直到闭着眼睛也能做好。\n  5. 开玩笑要注意话题。不要在别人敏感的话题上开玩笑，注：90%的人都对金钱敏感。\n  6. 选择比努力重要。但大多时候你看不清选择，那就先努力吧。\n  7. 想结交和利用牛人，先给他提供帮助。如果你不能帮到他，他为什么要帮助你？\n\n\n\n\n# 我有哪些缺点：\n\n  1. 有准备的演讲还可以，无准备的演讲很弱。表达能力弱主要体现在词汇经常短暂性遗忘，找不到合适的词汇。\n  2. 对跟陌生人谈事情有一种发自内心的恐惧，因为不自信。经常导致应该有的交流，因为恐惧而搁置了，最终衍生出更严重的问题。\n  3. 无法集中精力做完一件事情，经常半途而废。有两部分原因：意志力；腰部有劳损。\n  4. 跟陌生人聊天时，表现得比较无趣，既不幽默也无法抵达别人内心深处。\n\n","source":"_posts/扯淡/自省.md","raw":"---\ntags: \n- 自省\ntitle: 自省\ncategories: \n- 扯淡\n---\n\n\n# Principles：\n\n  1. 爱抱怨的人一般都不受欢迎。停止抱怨，给别人带来恒能量，自己也能收获正能量。\n  2. 有想法，勇敢去做，否则永远只是个loser。\n  3. 坦然接受别人不同的价值观。不要以自己狭隘的眼光去要求别人，以为世界上只有你是对的。\n  4. 不自信？那说明历史数据给自己带来的正反馈不够多。培养自信？就是不断的做成功一件事，直到闭着眼睛也能做好。\n  5. 开玩笑要注意话题。不要在别人敏感的话题上开玩笑，注：90%的人都对金钱敏感。\n  6. 选择比努力重要。但大多时候你看不清选择，那就先努力吧。\n  7. 想结交和利用牛人，先给他提供帮助。如果你不能帮到他，他为什么要帮助你？\n\n\n\n\n# 我有哪些缺点：\n\n  1. 有准备的演讲还可以，无准备的演讲很弱。表达能力弱主要体现在词汇经常短暂性遗忘，找不到合适的词汇。\n  2. 对跟陌生人谈事情有一种发自内心的恐惧，因为不自信。经常导致应该有的交流，因为恐惧而搁置了，最终衍生出更严重的问题。\n  3. 无法集中精力做完一件事情，经常半途而废。有两部分原因：意志力；腰部有劳损。\n  4. 跟陌生人聊天时，表现得比较无趣，既不幽默也无法抵达别人内心深处。\n\n","slug":"扯淡/自省","published":1,"date":"2016-03-15T09:13:46.000Z","updated":"2017-07-26T16:25:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6koy0034q0d41hj4x3ma","content":"<h1 id=\"Principles：\"><a href=\"#Principles：\" class=\"headerlink\" title=\"Principles：\"></a>Principles：</h1><ol>\n<li>爱抱怨的人一般都不受欢迎。停止抱怨，给别人带来恒能量，自己也能收获正能量。</li>\n<li>有想法，勇敢去做，否则永远只是个loser。</li>\n<li>坦然接受别人不同的价值观。不要以自己狭隘的眼光去要求别人，以为世界上只有你是对的。</li>\n<li>不自信？那说明历史数据给自己带来的正反馈不够多。培养自信？就是不断的做成功一件事，直到闭着眼睛也能做好。</li>\n<li>开玩笑要注意话题。不要在别人敏感的话题上开玩笑，注：90%的人都对金钱敏感。</li>\n<li>选择比努力重要。但大多时候你看不清选择，那就先努力吧。</li>\n<li>想结交和利用牛人，先给他提供帮助。如果你不能帮到他，他为什么要帮助你？</li>\n</ol>\n<h1 id=\"我有哪些缺点：\"><a href=\"#我有哪些缺点：\" class=\"headerlink\" title=\"我有哪些缺点：\"></a>我有哪些缺点：</h1><ol>\n<li>有准备的演讲还可以，无准备的演讲很弱。表达能力弱主要体现在词汇经常短暂性遗忘，找不到合适的词汇。</li>\n<li>对跟陌生人谈事情有一种发自内心的恐惧，因为不自信。经常导致应该有的交流，因为恐惧而搁置了，最终衍生出更严重的问题。</li>\n<li>无法集中精力做完一件事情，经常半途而废。有两部分原因：意志力；腰部有劳损。</li>\n<li>跟陌生人聊天时，表现得比较无趣，既不幽默也无法抵达别人内心深处。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Principles：\"><a href=\"#Principles：\" class=\"headerlink\" title=\"Principles：\"></a>Principles：</h1><ol>\n<li>爱抱怨的人一般都不受欢迎。停止抱怨，给别人带来恒能量，自己也能收获正能量。</li>\n<li>有想法，勇敢去做，否则永远只是个loser。</li>\n<li>坦然接受别人不同的价值观。不要以自己狭隘的眼光去要求别人，以为世界上只有你是对的。</li>\n<li>不自信？那说明历史数据给自己带来的正反馈不够多。培养自信？就是不断的做成功一件事，直到闭着眼睛也能做好。</li>\n<li>开玩笑要注意话题。不要在别人敏感的话题上开玩笑，注：90%的人都对金钱敏感。</li>\n<li>选择比努力重要。但大多时候你看不清选择，那就先努力吧。</li>\n<li>想结交和利用牛人，先给他提供帮助。如果你不能帮到他，他为什么要帮助你？</li>\n</ol>\n<h1 id=\"我有哪些缺点：\"><a href=\"#我有哪些缺点：\" class=\"headerlink\" title=\"我有哪些缺点：\"></a>我有哪些缺点：</h1><ol>\n<li>有准备的演讲还可以，无准备的演讲很弱。表达能力弱主要体现在词汇经常短暂性遗忘，找不到合适的词汇。</li>\n<li>对跟陌生人谈事情有一种发自内心的恐惧，因为不自信。经常导致应该有的交流，因为恐惧而搁置了，最终衍生出更严重的问题。</li>\n<li>无法集中精力做完一件事情，经常半途而废。有两部分原因：意志力；腰部有劳损。</li>\n<li>跟陌生人聊天时，表现得比较无趣，既不幽默也无法抵达别人内心深处。</li>\n</ol>\n"},{"title":"[AS3] 动态加载字体","date":"2013-05-23T09:48:00.000Z","description":"提供一个动态加载字体的更加自由优雅的方式","_content":"\n\n见<http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html>","source":"_posts/技术/[AS3] 动态加载字体.md","raw":"---\ntitle: \"[AS3] 动态加载字体\"\ndate: 2013-05-23 17:48 \ndescription:  提供一个动态加载字体的更加自由优雅的方式\ntags: \n- AS3\n- 字体\n- 动态加载\n- font\n- dynamic\n- load\ncategories: \n- 技术\n---\n\n\n见<http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html>","slug":"技术/[AS3] 动态加载字体","published":1,"updated":"2017-07-26T15:30:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kp40037q0d4mz1chnqd","content":"<p>见<a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>见<a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html</a></p>\n"},{"title":"[node.js] LeanCloud 云引擎的学习和部署","date":"2016-09-26T15:14:24.000Z","_content":"\n摘要：本文是一个流水文，主要记录我在 LeanCloud 云平台上使用 node.js 搭建web服务器的过程。其中遇到的困难和需要记忆的知识点，在此做一个汇总。\n\n\n# 安装node.js\n\n一定要是最新版本，否则各种 warn 和 err。\n安装的时候 warn 一定要处理，否则会导致意想不到的 err。\n\n# 安装 avoscloud 工具\n\n一定要使用最新版本，因为 leanengine 2.0 和 3.0 版本的项目结构发生了变化，老版本的命令行工具不能正确找到对应的文件，无法启动。\n\n# node.js 学习\n\nnode.js 是一个异步事件驱动的 web 框架。\n\n```js\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 1337;\n\nvar server = http.createServer();\nserver.on('request', (req, res) => {\n    var method = request.method;\n    var url = request.url;\n\n    req.on('data', function(chunk) {\n        body.push(chunk);\n    }).on('end', function() {\n        body = Buffer.concat(body).toString();\n        // at this point, `body` has the entire request body stored in it as a string\n    }).on('error', function(err) {\n        // This prints the error message and stack trace to `stderr`.\n        console.error(err.stack);\n    });\n\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    res.end('Hello World\\n');\n});\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n```\n\n# express 学习\n\n## Express的文件结构\n\n```js\n.\n├── app.js\n├── bin\n│   └── www\n├── package.json\n├── public\n│   ├── images\n│   ├── javascripts\n│   └── stylesheets\n│       └── style.css\n├── routes\n│   ├── index.js\n│   └── users.js\n└── views\n    ├── error.jade\n    ├── index.jade\n    └── layout.jade\n```\n\n## routing\n\nRoute definition takes the following structure:\n```js\napp.METHOD(PATH, HANDLER)\n```\n\nWhere:\n\n* `app` is an instance of express.\n* `METHOD` is an HTTP request method.\n* `PATH` is a path on the server.\n* `HANDLER` is the function executed when the route is matched.\n\n\n### PATH 还支持正则表达式：\n\nThis route path will match abcd, abxcd, abRANDOMcd, ab123cd, and so on.\n\n```js\napp.get('/ab*cd', function(req, res) {\n  res.send('ab*cd');\n});\n```\n\nThis route path will match /abe and /abcde.\n\n```js\napp.get('/ab(cd)?e', function(req, res) {\n res.send('ab(cd)?e');\n});\n```\n\n\n### express.Router\n\n利用 express.Router 中间件可以创建一个子应用来响应特定的请求。\n以下的代码，表示把所有 `/birds` 路径下的请求都托付给 `birds.js` 文件处理。\n\n```js\n// birds.js\n\nvar express = require('express');\nvar router = express.Router();\n\n// middleware that is specific to this router\nrouter.use(function timeLog(req, res, next) {\n  console.log('Time: ', Date.now());\n  next();\n});\n// define the home page route\nrouter.get('/', function(req, res) {\n  res.send('Birds home page');\n});\n// define the about route\nrouter.get('/about', function(req, res) {\n  res.send('About birds');\n});\n\nmodule.exports = router;\n\n```\n\napp 中：\n\n```js\n//app.js\nvar birds = require('./birds');\napp.use('/birds', birds);\n```\n\n\n## middleware\n\n<http://expressjs.com/en/guide/using-middleware.html>\n\n中间件可以应用在 app 上，也可以应用在 router 上，可以使所有的请求都必须先经过中间件，最后到达具体的请求处理函数。下面是一个记录请求时间的中间件，可以记录任何请求的请求时间：\n\n```js\nvar express = require('express');\nvar app = express();\n\nvar requestTime = function (req, res, next) {\n  req.requestTime = Date.now();\n  next();\n};\n\napp.use(requestTime);\n\napp.get('/', function (req, res) {\n  var responseText = 'Hello World!';\n  responseText += 'Requested at: ' + req.requestTime + '';\n  res.send(responseText);\n});\n\napp.listen(3000);\n```\n\nexpress有一些自带的中间件，也有很多扩展中间件，最常用的是 static 中间件，用来访问静态资源：\n\n```js\nvar options = {\n  dotfiles: 'ignore',\n  etag: false,\n  extensions: ['htm', 'html'],\n  index: false,\n  maxAge: '1d',\n  redirect: false,\n  setHeaders: function (res, path, stat) {\n    res.set('x-timestamp', Date.now());\n  }\n}\n\napp.use(express.static('public', options));\napp.use(express.static('uploads'));\napp.use(express.static('files'));\n\n```\n\n## template\n\n### jade\n\n```js\n//app.js\napp.set('view engine', 'jade');\napp.get('/', function (req, res) {\n  res.render('index', { title: 'Hey', message: 'Hello there!'});\n});\n```\n\n```js\n//index.jade\nhtml\n  head\n    title= title\n  body\n    h1= message\n```\n\njade 语法非常简单：<http://jade-lang.com>\n\n### ejs\n\n略\n\n","source":"_posts/技术/LeanCloud云引擎的学习和部署.md","raw":"---\ntitle: \"[node.js] LeanCloud 云引擎的学习和部署\"\ndate: 2016-09-26 23:14:24\ntags:\n- nodejs\n- npm\n- express\n- lean\n- avoscloud\ncategories: \n- 技术\n---\n\n摘要：本文是一个流水文，主要记录我在 LeanCloud 云平台上使用 node.js 搭建web服务器的过程。其中遇到的困难和需要记忆的知识点，在此做一个汇总。\n\n\n# 安装node.js\n\n一定要是最新版本，否则各种 warn 和 err。\n安装的时候 warn 一定要处理，否则会导致意想不到的 err。\n\n# 安装 avoscloud 工具\n\n一定要使用最新版本，因为 leanengine 2.0 和 3.0 版本的项目结构发生了变化，老版本的命令行工具不能正确找到对应的文件，无法启动。\n\n# node.js 学习\n\nnode.js 是一个异步事件驱动的 web 框架。\n\n```js\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 1337;\n\nvar server = http.createServer();\nserver.on('request', (req, res) => {\n    var method = request.method;\n    var url = request.url;\n\n    req.on('data', function(chunk) {\n        body.push(chunk);\n    }).on('end', function() {\n        body = Buffer.concat(body).toString();\n        // at this point, `body` has the entire request body stored in it as a string\n    }).on('error', function(err) {\n        // This prints the error message and stack trace to `stderr`.\n        console.error(err.stack);\n    });\n\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    res.end('Hello World\\n');\n});\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n```\n\n# express 学习\n\n## Express的文件结构\n\n```js\n.\n├── app.js\n├── bin\n│   └── www\n├── package.json\n├── public\n│   ├── images\n│   ├── javascripts\n│   └── stylesheets\n│       └── style.css\n├── routes\n│   ├── index.js\n│   └── users.js\n└── views\n    ├── error.jade\n    ├── index.jade\n    └── layout.jade\n```\n\n## routing\n\nRoute definition takes the following structure:\n```js\napp.METHOD(PATH, HANDLER)\n```\n\nWhere:\n\n* `app` is an instance of express.\n* `METHOD` is an HTTP request method.\n* `PATH` is a path on the server.\n* `HANDLER` is the function executed when the route is matched.\n\n\n### PATH 还支持正则表达式：\n\nThis route path will match abcd, abxcd, abRANDOMcd, ab123cd, and so on.\n\n```js\napp.get('/ab*cd', function(req, res) {\n  res.send('ab*cd');\n});\n```\n\nThis route path will match /abe and /abcde.\n\n```js\napp.get('/ab(cd)?e', function(req, res) {\n res.send('ab(cd)?e');\n});\n```\n\n\n### express.Router\n\n利用 express.Router 中间件可以创建一个子应用来响应特定的请求。\n以下的代码，表示把所有 `/birds` 路径下的请求都托付给 `birds.js` 文件处理。\n\n```js\n// birds.js\n\nvar express = require('express');\nvar router = express.Router();\n\n// middleware that is specific to this router\nrouter.use(function timeLog(req, res, next) {\n  console.log('Time: ', Date.now());\n  next();\n});\n// define the home page route\nrouter.get('/', function(req, res) {\n  res.send('Birds home page');\n});\n// define the about route\nrouter.get('/about', function(req, res) {\n  res.send('About birds');\n});\n\nmodule.exports = router;\n\n```\n\napp 中：\n\n```js\n//app.js\nvar birds = require('./birds');\napp.use('/birds', birds);\n```\n\n\n## middleware\n\n<http://expressjs.com/en/guide/using-middleware.html>\n\n中间件可以应用在 app 上，也可以应用在 router 上，可以使所有的请求都必须先经过中间件，最后到达具体的请求处理函数。下面是一个记录请求时间的中间件，可以记录任何请求的请求时间：\n\n```js\nvar express = require('express');\nvar app = express();\n\nvar requestTime = function (req, res, next) {\n  req.requestTime = Date.now();\n  next();\n};\n\napp.use(requestTime);\n\napp.get('/', function (req, res) {\n  var responseText = 'Hello World!';\n  responseText += 'Requested at: ' + req.requestTime + '';\n  res.send(responseText);\n});\n\napp.listen(3000);\n```\n\nexpress有一些自带的中间件，也有很多扩展中间件，最常用的是 static 中间件，用来访问静态资源：\n\n```js\nvar options = {\n  dotfiles: 'ignore',\n  etag: false,\n  extensions: ['htm', 'html'],\n  index: false,\n  maxAge: '1d',\n  redirect: false,\n  setHeaders: function (res, path, stat) {\n    res.set('x-timestamp', Date.now());\n  }\n}\n\napp.use(express.static('public', options));\napp.use(express.static('uploads'));\napp.use(express.static('files'));\n\n```\n\n## template\n\n### jade\n\n```js\n//app.js\napp.set('view engine', 'jade');\napp.get('/', function (req, res) {\n  res.render('index', { title: 'Hey', message: 'Hello there!'});\n});\n```\n\n```js\n//index.jade\nhtml\n  head\n    title= title\n  body\n    h1= message\n```\n\njade 语法非常简单：<http://jade-lang.com>\n\n### ejs\n\n略\n\n","slug":"技术/LeanCloud云引擎的学习和部署","published":1,"updated":"2017-07-26T16:15:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kp7003bq0d4dwcqpt7s","content":"<p>摘要：本文是一个流水文，主要记录我在 LeanCloud 云平台上使用 node.js 搭建web服务器的过程。其中遇到的困难和需要记忆的知识点，在此做一个汇总。</p>\n<h1 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h1><p>一定要是最新版本，否则各种 warn 和 err。<br>安装的时候 warn 一定要处理，否则会导致意想不到的 err。</p>\n<h1 id=\"安装-avoscloud-工具\"><a href=\"#安装-avoscloud-工具\" class=\"headerlink\" title=\"安装 avoscloud 工具\"></a>安装 avoscloud 工具</h1><p>一定要使用最新版本，因为 leanengine 2.0 和 3.0 版本的项目结构发生了变化，老版本的命令行工具不能正确找到对应的文件，无法启动。</p>\n<h1 id=\"node-js-学习\"><a href=\"#node-js-学习\" class=\"headerlink\" title=\"node.js 学习\"></a>node.js 学习</h1><p>node.js 是一个异步事件驱动的 web 框架。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"string\">'127.0.0.1'</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">1337</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = http.createServer();</div><div class=\"line\">server.on(<span class=\"string\">'request'</span>, (req, res) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> method = request.method;</div><div class=\"line\">    <span class=\"keyword\">var</span> url = request.url;</div><div class=\"line\"></div><div class=\"line\">    req.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">chunk</span>) </span>&#123;</div><div class=\"line\">        body.push(chunk);</div><div class=\"line\">    &#125;).on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        body = Buffer.concat(body).toString();</div><div class=\"line\">        <span class=\"comment\">// at this point, `body` has the entire request body stored in it as a string</span></div><div class=\"line\">    &#125;).on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// This prints the error message and stack trace to `stderr`.</span></div><div class=\"line\">        <span class=\"built_in\">console</span>.error(err.stack);</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    res.writeHead(<span class=\"number\">200</span>, &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/plain'</span> &#125;);</div><div class=\"line\">    res.end(<span class=\"string\">'Hello World\\n'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\">server.listen(port, hostname, () =&gt; &#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Server running at http://<span class=\"subst\">$&#123;hostname&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>/`</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h1 id=\"express-学习\"><a href=\"#express-学习\" class=\"headerlink\" title=\"express 学习\"></a>express 学习</h1><h2 id=\"Express的文件结构\"><a href=\"#Express的文件结构\" class=\"headerlink\" title=\"Express的文件结构\"></a>Express的文件结构</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── app.js</div><div class=\"line\">├── bin</div><div class=\"line\">│   └── www</div><div class=\"line\">├── package.json</div><div class=\"line\">├── public</div><div class=\"line\">│   ├── images</div><div class=\"line\">│   ├── javascripts</div><div class=\"line\">│   └── stylesheets</div><div class=\"line\">│       └── style.css</div><div class=\"line\">├── routes</div><div class=\"line\">│   ├── index.js</div><div class=\"line\">│   └── users.js</div><div class=\"line\">└── views</div><div class=\"line\">    ├── error.jade</div><div class=\"line\">    ├── index.jade</div><div class=\"line\">    └── layout.jade</div></pre></td></tr></table></figure>\n<h2 id=\"routing\"><a href=\"#routing\" class=\"headerlink\" title=\"routing\"></a>routing</h2><p>Route definition takes the following structure:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.METHOD(PATH, HANDLER)</div></pre></td></tr></table></figure></p>\n<p>Where:</p>\n<ul>\n<li><code>app</code> is an instance of express.</li>\n<li><code>METHOD</code> is an HTTP request method.</li>\n<li><code>PATH</code> is a path on the server.</li>\n<li><code>HANDLER</code> is the function executed when the route is matched.</li>\n</ul>\n<h3 id=\"PATH-还支持正则表达式：\"><a href=\"#PATH-还支持正则表达式：\" class=\"headerlink\" title=\"PATH 还支持正则表达式：\"></a>PATH 还支持正则表达式：</h3><p>This route path will match abcd, abxcd, abRANDOMcd, ab123cd, and so on.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/ab*cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'ab*cd'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>This route path will match /abe and /abcde.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/ab(cd)?e'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\"> res.send(<span class=\"string\">'ab(cd)?e'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"express-Router\"><a href=\"#express-Router\" class=\"headerlink\" title=\"express.Router\"></a>express.Router</h3><p>利用 express.Router 中间件可以创建一个子应用来响应特定的请求。<br>以下的代码，表示把所有 <code>/birds</code> 路径下的请求都托付给 <code>birds.js</code> 文件处理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// birds.js</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// middleware that is specific to this router</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeLog</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time: '</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// define the home page route</span></div><div class=\"line\">router.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'Birds home page'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// define the about route</span></div><div class=\"line\">router.get(<span class=\"string\">'/about'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'About birds'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>app 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//app.js</span></div><div class=\"line\"><span class=\"keyword\">var</span> birds = <span class=\"built_in\">require</span>(<span class=\"string\">'./birds'</span>);</div><div class=\"line\">app.use(<span class=\"string\">'/birds'</span>, birds);</div></pre></td></tr></table></figure>\n<h2 id=\"middleware\"><a href=\"#middleware\" class=\"headerlink\" title=\"middleware\"></a>middleware</h2><p><a href=\"http://expressjs.com/en/guide/using-middleware.html\" target=\"_blank\" rel=\"external\">http://expressjs.com/en/guide/using-middleware.html</a></p>\n<p>中间件可以应用在 app 上，也可以应用在 router 上，可以使所有的请求都必须先经过中间件，最后到达具体的请求处理函数。下面是一个记录请求时间的中间件，可以记录任何请求的请求时间：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> requestTime = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  req.requestTime = <span class=\"built_in\">Date</span>.now();</div><div class=\"line\">  next();</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">app.use(requestTime);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> responseText = <span class=\"string\">'Hello World!'</span>;</div><div class=\"line\">  responseText += <span class=\"string\">'Requested at: '</span> + req.requestTime + <span class=\"string\">''</span>;</div><div class=\"line\">  res.send(responseText);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.listen(<span class=\"number\">3000</span>);</div></pre></td></tr></table></figure>\n<p>express有一些自带的中间件，也有很多扩展中间件，最常用的是 static 中间件，用来访问静态资源：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> options = &#123;</div><div class=\"line\">  <span class=\"attr\">dotfiles</span>: <span class=\"string\">'ignore'</span>,</div><div class=\"line\">  <span class=\"attr\">etag</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"attr\">extensions</span>: [<span class=\"string\">'htm'</span>, <span class=\"string\">'html'</span>],</div><div class=\"line\">  <span class=\"attr\">index</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"attr\">maxAge</span>: <span class=\"string\">'1d'</span>,</div><div class=\"line\">  <span class=\"attr\">redirect</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"attr\">setHeaders</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res, path, stat</span>) </span>&#123;</div><div class=\"line\">    res.set(<span class=\"string\">'x-timestamp'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">app.use(express.static(<span class=\"string\">'public'</span>, options));</div><div class=\"line\">app.use(express.static(<span class=\"string\">'uploads'</span>));</div><div class=\"line\">app.use(express.static(<span class=\"string\">'files'</span>));</div></pre></td></tr></table></figure>\n<h2 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h2><h3 id=\"jade\"><a href=\"#jade\" class=\"headerlink\" title=\"jade\"></a>jade</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//app.js</span></div><div class=\"line\">app.set(<span class=\"string\">'view engine'</span>, <span class=\"string\">'jade'</span>);</div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.render(<span class=\"string\">'index'</span>, &#123; <span class=\"attr\">title</span>: <span class=\"string\">'Hey'</span>, <span class=\"attr\">message</span>: <span class=\"string\">'Hello there!'</span>&#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//index.jade</span></div><div class=\"line\">html</div><div class=\"line\">  head</div><div class=\"line\">    title= title</div><div class=\"line\">  body</div><div class=\"line\">    h1= message</div></pre></td></tr></table></figure>\n<p>jade 语法非常简单：<a href=\"http://jade-lang.com\" target=\"_blank\" rel=\"external\">http://jade-lang.com</a></p>\n<h3 id=\"ejs\"><a href=\"#ejs\" class=\"headerlink\" title=\"ejs\"></a>ejs</h3><p>略</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：本文是一个流水文，主要记录我在 LeanCloud 云平台上使用 node.js 搭建web服务器的过程。其中遇到的困难和需要记忆的知识点，在此做一个汇总。</p>\n<h1 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h1><p>一定要是最新版本，否则各种 warn 和 err。<br>安装的时候 warn 一定要处理，否则会导致意想不到的 err。</p>\n<h1 id=\"安装-avoscloud-工具\"><a href=\"#安装-avoscloud-工具\" class=\"headerlink\" title=\"安装 avoscloud 工具\"></a>安装 avoscloud 工具</h1><p>一定要使用最新版本，因为 leanengine 2.0 和 3.0 版本的项目结构发生了变化，老版本的命令行工具不能正确找到对应的文件，无法启动。</p>\n<h1 id=\"node-js-学习\"><a href=\"#node-js-学习\" class=\"headerlink\" title=\"node.js 学习\"></a>node.js 学习</h1><p>node.js 是一个异步事件驱动的 web 框架。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"string\">'127.0.0.1'</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">1337</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = http.createServer();</div><div class=\"line\">server.on(<span class=\"string\">'request'</span>, (req, res) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> method = request.method;</div><div class=\"line\">    <span class=\"keyword\">var</span> url = request.url;</div><div class=\"line\"></div><div class=\"line\">    req.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">chunk</span>) </span>&#123;</div><div class=\"line\">        body.push(chunk);</div><div class=\"line\">    &#125;).on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        body = Buffer.concat(body).toString();</div><div class=\"line\">        <span class=\"comment\">// at this point, `body` has the entire request body stored in it as a string</span></div><div class=\"line\">    &#125;).on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// This prints the error message and stack trace to `stderr`.</span></div><div class=\"line\">        <span class=\"built_in\">console</span>.error(err.stack);</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    res.writeHead(<span class=\"number\">200</span>, &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/plain'</span> &#125;);</div><div class=\"line\">    res.end(<span class=\"string\">'Hello World\\n'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\">server.listen(port, hostname, () =&gt; &#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Server running at http://<span class=\"subst\">$&#123;hostname&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>/`</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h1 id=\"express-学习\"><a href=\"#express-学习\" class=\"headerlink\" title=\"express 学习\"></a>express 学习</h1><h2 id=\"Express的文件结构\"><a href=\"#Express的文件结构\" class=\"headerlink\" title=\"Express的文件结构\"></a>Express的文件结构</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── app.js</div><div class=\"line\">├── bin</div><div class=\"line\">│   └── www</div><div class=\"line\">├── package.json</div><div class=\"line\">├── public</div><div class=\"line\">│   ├── images</div><div class=\"line\">│   ├── javascripts</div><div class=\"line\">│   └── stylesheets</div><div class=\"line\">│       └── style.css</div><div class=\"line\">├── routes</div><div class=\"line\">│   ├── index.js</div><div class=\"line\">│   └── users.js</div><div class=\"line\">└── views</div><div class=\"line\">    ├── error.jade</div><div class=\"line\">    ├── index.jade</div><div class=\"line\">    └── layout.jade</div></pre></td></tr></table></figure>\n<h2 id=\"routing\"><a href=\"#routing\" class=\"headerlink\" title=\"routing\"></a>routing</h2><p>Route definition takes the following structure:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.METHOD(PATH, HANDLER)</div></pre></td></tr></table></figure></p>\n<p>Where:</p>\n<ul>\n<li><code>app</code> is an instance of express.</li>\n<li><code>METHOD</code> is an HTTP request method.</li>\n<li><code>PATH</code> is a path on the server.</li>\n<li><code>HANDLER</code> is the function executed when the route is matched.</li>\n</ul>\n<h3 id=\"PATH-还支持正则表达式：\"><a href=\"#PATH-还支持正则表达式：\" class=\"headerlink\" title=\"PATH 还支持正则表达式：\"></a>PATH 还支持正则表达式：</h3><p>This route path will match abcd, abxcd, abRANDOMcd, ab123cd, and so on.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/ab*cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'ab*cd'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>This route path will match /abe and /abcde.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/ab(cd)?e'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\"> res.send(<span class=\"string\">'ab(cd)?e'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"express-Router\"><a href=\"#express-Router\" class=\"headerlink\" title=\"express.Router\"></a>express.Router</h3><p>利用 express.Router 中间件可以创建一个子应用来响应特定的请求。<br>以下的代码，表示把所有 <code>/birds</code> 路径下的请求都托付给 <code>birds.js</code> 文件处理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// birds.js</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// middleware that is specific to this router</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeLog</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time: '</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// define the home page route</span></div><div class=\"line\">router.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'Birds home page'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// define the about route</span></div><div class=\"line\">router.get(<span class=\"string\">'/about'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'About birds'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>app 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//app.js</span></div><div class=\"line\"><span class=\"keyword\">var</span> birds = <span class=\"built_in\">require</span>(<span class=\"string\">'./birds'</span>);</div><div class=\"line\">app.use(<span class=\"string\">'/birds'</span>, birds);</div></pre></td></tr></table></figure>\n<h2 id=\"middleware\"><a href=\"#middleware\" class=\"headerlink\" title=\"middleware\"></a>middleware</h2><p><a href=\"http://expressjs.com/en/guide/using-middleware.html\" target=\"_blank\" rel=\"external\">http://expressjs.com/en/guide/using-middleware.html</a></p>\n<p>中间件可以应用在 app 上，也可以应用在 router 上，可以使所有的请求都必须先经过中间件，最后到达具体的请求处理函数。下面是一个记录请求时间的中间件，可以记录任何请求的请求时间：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> requestTime = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  req.requestTime = <span class=\"built_in\">Date</span>.now();</div><div class=\"line\">  next();</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">app.use(requestTime);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> responseText = <span class=\"string\">'Hello World!'</span>;</div><div class=\"line\">  responseText += <span class=\"string\">'Requested at: '</span> + req.requestTime + <span class=\"string\">''</span>;</div><div class=\"line\">  res.send(responseText);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.listen(<span class=\"number\">3000</span>);</div></pre></td></tr></table></figure>\n<p>express有一些自带的中间件，也有很多扩展中间件，最常用的是 static 中间件，用来访问静态资源：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> options = &#123;</div><div class=\"line\">  <span class=\"attr\">dotfiles</span>: <span class=\"string\">'ignore'</span>,</div><div class=\"line\">  <span class=\"attr\">etag</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"attr\">extensions</span>: [<span class=\"string\">'htm'</span>, <span class=\"string\">'html'</span>],</div><div class=\"line\">  <span class=\"attr\">index</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"attr\">maxAge</span>: <span class=\"string\">'1d'</span>,</div><div class=\"line\">  <span class=\"attr\">redirect</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">  <span class=\"attr\">setHeaders</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res, path, stat</span>) </span>&#123;</div><div class=\"line\">    res.set(<span class=\"string\">'x-timestamp'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">app.use(express.static(<span class=\"string\">'public'</span>, options));</div><div class=\"line\">app.use(express.static(<span class=\"string\">'uploads'</span>));</div><div class=\"line\">app.use(express.static(<span class=\"string\">'files'</span>));</div></pre></td></tr></table></figure>\n<h2 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h2><h3 id=\"jade\"><a href=\"#jade\" class=\"headerlink\" title=\"jade\"></a>jade</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//app.js</span></div><div class=\"line\">app.set(<span class=\"string\">'view engine'</span>, <span class=\"string\">'jade'</span>);</div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.render(<span class=\"string\">'index'</span>, &#123; <span class=\"attr\">title</span>: <span class=\"string\">'Hey'</span>, <span class=\"attr\">message</span>: <span class=\"string\">'Hello there!'</span>&#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//index.jade</span></div><div class=\"line\">html</div><div class=\"line\">  head</div><div class=\"line\">    title= title</div><div class=\"line\">  body</div><div class=\"line\">    h1= message</div></pre></td></tr></table></figure>\n<p>jade 语法非常简单：<a href=\"http://jade-lang.com\" target=\"_blank\" rel=\"external\">http://jade-lang.com</a></p>\n<h3 id=\"ejs\"><a href=\"#ejs\" class=\"headerlink\" title=\"ejs\"></a>ejs</h3><p>略</p>\n"},{"title":"[AS3]精简字体打包成SWF","date":"2013-05-23T09:48:00.000Z","_content":"\n简介: 自制 FontCreater. 方便的把字体文件中需要用到的字体打包到swf里.把字体文件精简到最小\n\n见<http://www.cnblogs.com/jhzhu/archive/2013/05/23/3094902.html>","source":"_posts/技术/[AS3]精简字体打包成SWF.md","raw":"---\ntitle: \"[AS3]精简字体打包成SWF\"\ndate: 2013-05-23 17:48 \ntags: \n- AS3\n- 字体\n- swf\ncategories: \n- 技术\n---\n\n简介: 自制 FontCreater. 方便的把字体文件中需要用到的字体打包到swf里.把字体文件精简到最小\n\n见<http://www.cnblogs.com/jhzhu/archive/2013/05/23/3094902.html>","slug":"技术/[AS3]精简字体打包成SWF","published":1,"updated":"2017-07-26T15:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpc003fq0d4amr5s79o","content":"<p>简介: 自制 FontCreater. 方便的把字体文件中需要用到的字体打包到swf里.把字体文件精简到最小</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/23/3094902.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/archive/2013/05/23/3094902.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介: 自制 FontCreater. 方便的把字体文件中需要用到的字体打包到swf里.把字体文件精简到最小</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/23/3094902.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/archive/2013/05/23/3094902.html</a></p>\n"},{"title":"[AS3]语法性能差异分析报告","date":"2013-05-19T04:29:00.000Z","_content":"\n简介: 此篇博文主要来用数据证明：AS3 语言中, 一样的逻辑, 用不同的语句表达方式来实现, 最终体现在性能上的差异.\n\n见<http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html>","source":"_posts/技术/[AS3]语法性能差异分析报告.md","raw":"---\ntitle: \"[AS3]语法性能差异分析报告\"\ndate: 2013-05-19 12:29 \ntags: \n- AS3\n- 性能\ncategories: \n- 技术\n---\n\n简介: 此篇博文主要来用数据证明：AS3 语言中, 一样的逻辑, 用不同的语句表达方式来实现, 最终体现在性能上的差异.\n\n见<http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html>","slug":"技术/[AS3]语法性能差异分析报告","published":1,"updated":"2017-07-26T15:33:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpd003iq0d4at83qrl9","content":"<p>简介: 此篇博文主要来用数据证明：AS3 语言中, 一样的逻辑, 用不同的语句表达方式来实现, 最终体现在性能上的差异.</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介: 此篇博文主要来用数据证明：AS3 语言中, 一样的逻辑, 用不同的语句表达方式来实现, 最终体现在性能上的差异.</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/archive/2013/05/23/3095283.html</a></p>\n"},{"title":"[OAuth]一张图理解OAuth2.0","date":"2016-02-29T06:13:00.000Z","description":"用一张详细解剖图阐述了OAuth的验证流程，希望可以帮到大家理解。","_content":"\n\n如果你想全面的了解OAuth，请先参考阮一峰的博客[理解OAuth 2.0](http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html)。阮先生的博客全面精炼、条理清楚，但OAuth的整个流程涉及到多端，所以理解起来需要很专注。此篇博文只是针对阮先生的博文中提到的OAuth协议的实现方式中的“授权码模式”进行了傻瓜似的图解。\n\n图中的名词解释：\n\n* 浏览器（User Agent）：表示用户的浏览器。\n* Client（应用服务器）：表示用户当前访问的服务器。假设我们正在访问client.com，有一个功能需要注册才能用。在注册界面，我发现，可以用auth.com的账号来登录，这样，client.com就能获取到auth.com中关于我的很多信息了，比如头像、邮箱、ID等。而恰好我以前注册过auth.com网站的账号。此时，client.com所在的服务器就代表应用服务器。\n* Auth Server：在上个例子中，表示client.com的服务器中负责OAuth授权的部分。\n* Resource Server：在上个例子中，表示client.com服务器中负责提供用户信息的部分。\n\n\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:100%; height:1000px;\" src=\"https://www.processon.com/embed/56d3d11fe4b0d06b7057a9ff\"></iframe>","source":"_posts/技术/[OAuth]一张图理解OAuth2.0.md","raw":"---\ntitle: '[OAuth]一张图理解OAuth2.0'\ndate: 2016-02-29 14:13 \ndescription: 用一张详细解剖图阐述了OAuth的验证流程，希望可以帮到大家理解。\ntags: \n- OAuth\n- PHP\n- Server\ncategories: \n- 技术\n---\n\n\n如果你想全面的了解OAuth，请先参考阮一峰的博客[理解OAuth 2.0](http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html)。阮先生的博客全面精炼、条理清楚，但OAuth的整个流程涉及到多端，所以理解起来需要很专注。此篇博文只是针对阮先生的博文中提到的OAuth协议的实现方式中的“授权码模式”进行了傻瓜似的图解。\n\n图中的名词解释：\n\n* 浏览器（User Agent）：表示用户的浏览器。\n* Client（应用服务器）：表示用户当前访问的服务器。假设我们正在访问client.com，有一个功能需要注册才能用。在注册界面，我发现，可以用auth.com的账号来登录，这样，client.com就能获取到auth.com中关于我的很多信息了，比如头像、邮箱、ID等。而恰好我以前注册过auth.com网站的账号。此时，client.com所在的服务器就代表应用服务器。\n* Auth Server：在上个例子中，表示client.com的服务器中负责OAuth授权的部分。\n* Resource Server：在上个例子中，表示client.com服务器中负责提供用户信息的部分。\n\n\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:100%; height:1000px;\" src=\"https://www.processon.com/embed/56d3d11fe4b0d06b7057a9ff\"></iframe>","slug":"技术/[OAuth]一张图理解OAuth2.0","published":1,"updated":"2017-07-26T16:02:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpe003kq0d475rusflk","content":"<p>如果你想全面的了解OAuth，请先参考阮一峰的博客<a href=\"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\" target=\"_blank\" rel=\"external\">理解OAuth 2.0</a>。阮先生的博客全面精炼、条理清楚，但OAuth的整个流程涉及到多端，所以理解起来需要很专注。此篇博文只是针对阮先生的博文中提到的OAuth协议的实现方式中的“授权码模式”进行了傻瓜似的图解。</p>\n<p>图中的名词解释：</p>\n<ul>\n<li>浏览器（User Agent）：表示用户的浏览器。</li>\n<li>Client（应用服务器）：表示用户当前访问的服务器。假设我们正在访问client.com，有一个功能需要注册才能用。在注册界面，我发现，可以用auth.com的账号来登录，这样，client.com就能获取到auth.com中关于我的很多信息了，比如头像、邮箱、ID等。而恰好我以前注册过auth.com网站的账号。此时，client.com所在的服务器就代表应用服务器。</li>\n<li>Auth Server：在上个例子中，表示client.com的服务器中负责OAuth授权的部分。</li>\n<li>Resource Server：在上个例子中，表示client.com服务器中负责提供用户信息的部分。</li>\n</ul>\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:100%; height:1000px;\" src=\"https://www.processon.com/embed/56d3d11fe4b0d06b7057a9ff\"></iframe>","site":{"data":{}},"excerpt":"","more":"<p>如果你想全面的了解OAuth，请先参考阮一峰的博客<a href=\"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\" target=\"_blank\" rel=\"external\">理解OAuth 2.0</a>。阮先生的博客全面精炼、条理清楚，但OAuth的整个流程涉及到多端，所以理解起来需要很专注。此篇博文只是针对阮先生的博文中提到的OAuth协议的实现方式中的“授权码模式”进行了傻瓜似的图解。</p>\n<p>图中的名词解释：</p>\n<ul>\n<li>浏览器（User Agent）：表示用户的浏览器。</li>\n<li>Client（应用服务器）：表示用户当前访问的服务器。假设我们正在访问client.com，有一个功能需要注册才能用。在注册界面，我发现，可以用auth.com的账号来登录，这样，client.com就能获取到auth.com中关于我的很多信息了，比如头像、邮箱、ID等。而恰好我以前注册过auth.com网站的账号。此时，client.com所在的服务器就代表应用服务器。</li>\n<li>Auth Server：在上个例子中，表示client.com的服务器中负责OAuth授权的部分。</li>\n<li>Resource Server：在上个例子中，表示client.com服务器中负责提供用户信息的部分。</li>\n</ul>\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:100%; height:1000px;\" src=\"https://www.processon.com/embed/56d3d11fe4b0d06b7057a9ff\"></iframe>"},{"title":"[PHP]深入理解Yii2的ActiveRecord","date":"2016-03-07T04:23:00.000Z","_content":"\n摘要：`ActiveRecord`、`QueryCommand`的原理和关系。\n\n\n\n# ","source":"_posts/技术/[PHP]深入理解Yii2的ActiveRecord.md","raw":"---\ntags: \n- yii2 \n- ActiveRecord \n- db \n- mysql\ntitle: '[PHP]深入理解Yii2的ActiveRecord'\ndate: 2016-03-07 12:23\ncategories: \n- 技术\n---\n\n摘要：`ActiveRecord`、`QueryCommand`的原理和关系。\n\n\n\n# ","slug":"技术/[PHP]深入理解Yii2的ActiveRecord","published":1,"updated":"2017-07-26T16:10:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpg003oq0d4epex8uil","content":"<p>摘要：<code>ActiveRecord</code>、<code>QueryCommand</code>的原理和关系。</p>\n<p># </p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：<code>ActiveRecord</code>、<code>QueryCommand</code>的原理和关系。</p>\n<p># </p>\n"},{"date":"2015-08-26T07:33:00.000Z","title":"[PHP]swoole_server进程的分工","_content":"\n\n\n摘要：Swoole是一个PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。强大的功能，由背后若干个分工明确的进程来实现，这里详细介绍下几个进程的分工，以便入门者更快速的理解Swoole框架。\n\n## 目录\n[TOC]\n\n## Swoole简介 \n\n[Swoole官网](http://www.swoole.com/)\n\n### Swoole：重新定义PHP\nSwoole：PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。\nSwoole虽然是标准的PHP扩展，实际上与普通的扩展不同。普通的扩展只是提供一个库函数。而swoole扩展在运行后会接管PHP的控制权，进入事件循环。当IO事件发生后，swoole会自动回调指定的PHP函数。\n\n\n### 功能展示代码片段\n\n#### TCP Server\n\n```php\n$serv = new swoole_server(\"127.0.0.1\", 9501);\n$serv->set(array(\n    'worker_num' => 8,   //工作进程数量\n    'daemonize' => true, //是否作为守护进程\n));\n$serv->on('connect', function ($serv, $fd){\n    echo \"Client:Connect.\\n\";\n});\n$serv->on('receive', function ($serv, $fd, $from_id, $data) {\n    $serv->send($fd, 'Swoole: '.$data);\n    $serv->close($fd);\n});\n$serv->on('close', function ($serv, $fd) {\n    echo \"Client: Close.\\n\";\n});\n$serv->start();\n```\n\n\n\n#### TCP Client\n\n```php\n$client = new swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC);\n//设置事件回调函数\n$client->on(\"connect\", function($cli) {\n    $cli->send(\"hello world\\n\");\n});\n$client->on(\"receive\", function($cli, $data){\n    echo \"Received: \".$data.\"\\n\";\n});\n$client->on(\"error\", function($cli){\n    echo \"Connect failed\\n\";\n});\n$client->on(\"close\", function($cli){\n    echo \"Connection close\\n\";\n});\n//发起网络连接\n$client->connect('127.0.0.1', 9501, 0.5);\n```\n更多代码片段请见[swoole官网](http://www.swoole.com/)。\n\n\n## 主要进程分析\n\n### Master进程\n\nMaster进程主要用来保证Swoole框架机制的运行。它会创建几个功能性的线程：\n\n* Reactor线程:就是真正处理TCP连接，收发数据的线程。swoole的主线程在Accept新的连接后，会将这个连接分配给一个固定的Reactor线程，并由这个线程负责监听此socket。在socket可读时读取数据，并进行协议解析，将请求投递到Worker进程。在socket可写时将数据发送给TCP客户端。\n* Master线程(主线程）: 负责：Accept新的连接、UNIX PROXI信号处理、定时器任务。\n* 心跳包检测线程：（略）\n* UDP收包线程：（略）\n\n### Manager进程\n\nswoole中Worker/Task进程都是由Manager进程Fork并管理的。\n\n* 子进程结束运行时，manager进程负责回收此子进程，避免成为僵尸进程。并创建新的子进程\n* 服务器关闭时，manager进程将发送信号给所有子进程，通知子进程关闭服务\n* 服务器reload时，manager进程会逐个关闭/重启子进程\n\n>为什么不是Master进程呢，主要原因是Master进程是多线程的，不能安全的执行fork操作。\n\n### Worker进程\n\n* 接受由Reactor线程投递的请求数据包，并执行PHP回调函数处理数据\n* 生成响应数据并发给Reactor线程，由Reactor线程发送给TCP客户端\n* 可以是异步非阻塞模式，也可以是同步阻塞模式\n* Worker以多进程的方式运行\n\n>Swoole提供了完善的进程管理机制，当Worker进程异常退出，如发生PHP的致命错误、被其他程序误杀，或达到max_request次数之后正常退出。主进程会重新拉起新的Worker进程。 Worker进程内可以像普通的apache+php或者php-fpm中写代码。不需要像Node.js那样写异步回调的代码。\n\n\n### Task进程\n\n* 接受由Worker进程通过swoole_server->task/taskwait方法投递的任务\n* 处理任务，并将结果数据返回给Worker进程\n* 完全是同步阻塞模式\n* Task以多进程的方式运行\n\nTask进程的全称是task_worker进程，是一种特殊的worker进程。所以`onWorkerStart`在task进程中也会被调用。当`$worker_id >= $serv->setting['worker_num']`时表示这个进程是task_worker，否则，代表此进程是worker进程。\n\n## 进程与事件回调的对应关系\n\n### Master进程内的回调函数\n\n```php\nonStart\nonShutdown\nonMasterConnect\nonMasterClose\nonTimer\n```\n\n### Worker进程内的回调函数\n\n```php\nonWorkerStart\nonWorkerStop\nonConnect\nonClose\nonReceive\nonTimer\nonFinish\n```\n\n### Task进程内的回调函数\n\n```php\nonTask\nonWorkerStart\n```\n\n### Manager进程内的回调函数\n\n```php\nonManagerStart\nonManagerStop\n```\n\n\n\n","source":"_posts/技术/[PHP]swoole_server几个进程的分工.md","raw":"---\ndate: 2015-08-26 15:33\ntitle: '[PHP]swoole_server进程的分工'\ncategories: \n- 技术\ntags: \n- php\n- swoole\n- swoole_server\n- worker\n- manager\n- process\n- 进程\n- 线程\n---\n\n\n\n摘要：Swoole是一个PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。强大的功能，由背后若干个分工明确的进程来实现，这里详细介绍下几个进程的分工，以便入门者更快速的理解Swoole框架。\n\n## 目录\n[TOC]\n\n## Swoole简介 \n\n[Swoole官网](http://www.swoole.com/)\n\n### Swoole：重新定义PHP\nSwoole：PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。\nSwoole虽然是标准的PHP扩展，实际上与普通的扩展不同。普通的扩展只是提供一个库函数。而swoole扩展在运行后会接管PHP的控制权，进入事件循环。当IO事件发生后，swoole会自动回调指定的PHP函数。\n\n\n### 功能展示代码片段\n\n#### TCP Server\n\n```php\n$serv = new swoole_server(\"127.0.0.1\", 9501);\n$serv->set(array(\n    'worker_num' => 8,   //工作进程数量\n    'daemonize' => true, //是否作为守护进程\n));\n$serv->on('connect', function ($serv, $fd){\n    echo \"Client:Connect.\\n\";\n});\n$serv->on('receive', function ($serv, $fd, $from_id, $data) {\n    $serv->send($fd, 'Swoole: '.$data);\n    $serv->close($fd);\n});\n$serv->on('close', function ($serv, $fd) {\n    echo \"Client: Close.\\n\";\n});\n$serv->start();\n```\n\n\n\n#### TCP Client\n\n```php\n$client = new swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC);\n//设置事件回调函数\n$client->on(\"connect\", function($cli) {\n    $cli->send(\"hello world\\n\");\n});\n$client->on(\"receive\", function($cli, $data){\n    echo \"Received: \".$data.\"\\n\";\n});\n$client->on(\"error\", function($cli){\n    echo \"Connect failed\\n\";\n});\n$client->on(\"close\", function($cli){\n    echo \"Connection close\\n\";\n});\n//发起网络连接\n$client->connect('127.0.0.1', 9501, 0.5);\n```\n更多代码片段请见[swoole官网](http://www.swoole.com/)。\n\n\n## 主要进程分析\n\n### Master进程\n\nMaster进程主要用来保证Swoole框架机制的运行。它会创建几个功能性的线程：\n\n* Reactor线程:就是真正处理TCP连接，收发数据的线程。swoole的主线程在Accept新的连接后，会将这个连接分配给一个固定的Reactor线程，并由这个线程负责监听此socket。在socket可读时读取数据，并进行协议解析，将请求投递到Worker进程。在socket可写时将数据发送给TCP客户端。\n* Master线程(主线程）: 负责：Accept新的连接、UNIX PROXI信号处理、定时器任务。\n* 心跳包检测线程：（略）\n* UDP收包线程：（略）\n\n### Manager进程\n\nswoole中Worker/Task进程都是由Manager进程Fork并管理的。\n\n* 子进程结束运行时，manager进程负责回收此子进程，避免成为僵尸进程。并创建新的子进程\n* 服务器关闭时，manager进程将发送信号给所有子进程，通知子进程关闭服务\n* 服务器reload时，manager进程会逐个关闭/重启子进程\n\n>为什么不是Master进程呢，主要原因是Master进程是多线程的，不能安全的执行fork操作。\n\n### Worker进程\n\n* 接受由Reactor线程投递的请求数据包，并执行PHP回调函数处理数据\n* 生成响应数据并发给Reactor线程，由Reactor线程发送给TCP客户端\n* 可以是异步非阻塞模式，也可以是同步阻塞模式\n* Worker以多进程的方式运行\n\n>Swoole提供了完善的进程管理机制，当Worker进程异常退出，如发生PHP的致命错误、被其他程序误杀，或达到max_request次数之后正常退出。主进程会重新拉起新的Worker进程。 Worker进程内可以像普通的apache+php或者php-fpm中写代码。不需要像Node.js那样写异步回调的代码。\n\n\n### Task进程\n\n* 接受由Worker进程通过swoole_server->task/taskwait方法投递的任务\n* 处理任务，并将结果数据返回给Worker进程\n* 完全是同步阻塞模式\n* Task以多进程的方式运行\n\nTask进程的全称是task_worker进程，是一种特殊的worker进程。所以`onWorkerStart`在task进程中也会被调用。当`$worker_id >= $serv->setting['worker_num']`时表示这个进程是task_worker，否则，代表此进程是worker进程。\n\n## 进程与事件回调的对应关系\n\n### Master进程内的回调函数\n\n```php\nonStart\nonShutdown\nonMasterConnect\nonMasterClose\nonTimer\n```\n\n### Worker进程内的回调函数\n\n```php\nonWorkerStart\nonWorkerStop\nonConnect\nonClose\nonReceive\nonTimer\nonFinish\n```\n\n### Task进程内的回调函数\n\n```php\nonTask\nonWorkerStart\n```\n\n### Manager进程内的回调函数\n\n```php\nonManagerStart\nonManagerStop\n```\n\n\n\n","slug":"技术/[PHP]swoole_server几个进程的分工","published":1,"updated":"2017-07-26T16:11:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpk003qq0d435aj26yk","content":"<p>摘要：Swoole是一个PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。强大的功能，由背后若干个分工明确的进程来实现，这里详细介绍下几个进程的分工，以便入门者更快速的理解Swoole框架。</p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>[TOC]</p>\n<h2 id=\"Swoole简介\"><a href=\"#Swoole简介\" class=\"headerlink\" title=\"Swoole简介\"></a>Swoole简介</h2><p><a href=\"http://www.swoole.com/\" target=\"_blank\" rel=\"external\">Swoole官网</a></p>\n<h3 id=\"Swoole：重新定义PHP\"><a href=\"#Swoole：重新定义PHP\" class=\"headerlink\" title=\"Swoole：重新定义PHP\"></a>Swoole：重新定义PHP</h3><p>Swoole：PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。<br>Swoole虽然是标准的PHP扩展，实际上与普通的扩展不同。普通的扩展只是提供一个库函数。而swoole扩展在运行后会接管PHP的控制权，进入事件循环。当IO事件发生后，swoole会自动回调指定的PHP函数。</p>\n<h3 id=\"功能展示代码片段\"><a href=\"#功能展示代码片段\" class=\"headerlink\" title=\"功能展示代码片段\"></a>功能展示代码片段</h3><h4 id=\"TCP-Server\"><a href=\"#TCP-Server\" class=\"headerlink\" title=\"TCP Server\"></a>TCP Server</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">$serv = <span class=\"keyword\">new</span> swoole_server(<span class=\"string\">\"127.0.0.1\"</span>, <span class=\"number\">9501</span>);</div><div class=\"line\">$serv-&gt;set(<span class=\"keyword\">array</span>(</div><div class=\"line\">    <span class=\"string\">'worker_num'</span> =&gt; <span class=\"number\">8</span>,   <span class=\"comment\">//工作进程数量</span></div><div class=\"line\">    <span class=\"string\">'daemonize'</span> =&gt; <span class=\"keyword\">true</span>, <span class=\"comment\">//是否作为守护进程</span></div><div class=\"line\">));</div><div class=\"line\">$serv-&gt;on(<span class=\"string\">'connect'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($serv, $fd)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Client:Connect.\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$serv-&gt;on(<span class=\"string\">'receive'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($serv, $fd, $from_id, $data)</span> </span>&#123;</div><div class=\"line\">    $serv-&gt;send($fd, <span class=\"string\">'Swoole: '</span>.$data);</div><div class=\"line\">    $serv-&gt;close($fd);</div><div class=\"line\">&#125;);</div><div class=\"line\">$serv-&gt;on(<span class=\"string\">'close'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($serv, $fd)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Client: Close.\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$serv-&gt;start();</div></pre></td></tr></table></figure>\n<h4 id=\"TCP-Client\"><a href=\"#TCP-Client\" class=\"headerlink\" title=\"TCP Client\"></a>TCP Client</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">$client = <span class=\"keyword\">new</span> swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC);</div><div class=\"line\"><span class=\"comment\">//设置事件回调函数</span></div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"connect\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli)</span> </span>&#123;</div><div class=\"line\">    $cli-&gt;send(<span class=\"string\">\"hello world\\n\"</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"receive\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli, $data)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Received: \"</span>.$data.<span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"error\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Connect failed\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"close\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Connection close\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//发起网络连接</span></div><div class=\"line\">$client-&gt;connect(<span class=\"string\">'127.0.0.1'</span>, <span class=\"number\">9501</span>, <span class=\"number\">0.5</span>);</div></pre></td></tr></table></figure>\n<p>更多代码片段请见<a href=\"http://www.swoole.com/\" target=\"_blank\" rel=\"external\">swoole官网</a>。</p>\n<h2 id=\"主要进程分析\"><a href=\"#主要进程分析\" class=\"headerlink\" title=\"主要进程分析\"></a>主要进程分析</h2><h3 id=\"Master进程\"><a href=\"#Master进程\" class=\"headerlink\" title=\"Master进程\"></a>Master进程</h3><p>Master进程主要用来保证Swoole框架机制的运行。它会创建几个功能性的线程：</p>\n<ul>\n<li>Reactor线程:就是真正处理TCP连接，收发数据的线程。swoole的主线程在Accept新的连接后，会将这个连接分配给一个固定的Reactor线程，并由这个线程负责监听此socket。在socket可读时读取数据，并进行协议解析，将请求投递到Worker进程。在socket可写时将数据发送给TCP客户端。</li>\n<li>Master线程(主线程）: 负责：Accept新的连接、UNIX PROXI信号处理、定时器任务。</li>\n<li>心跳包检测线程：（略）</li>\n<li>UDP收包线程：（略）</li>\n</ul>\n<h3 id=\"Manager进程\"><a href=\"#Manager进程\" class=\"headerlink\" title=\"Manager进程\"></a>Manager进程</h3><p>swoole中Worker/Task进程都是由Manager进程Fork并管理的。</p>\n<ul>\n<li>子进程结束运行时，manager进程负责回收此子进程，避免成为僵尸进程。并创建新的子进程</li>\n<li>服务器关闭时，manager进程将发送信号给所有子进程，通知子进程关闭服务</li>\n<li>服务器reload时，manager进程会逐个关闭/重启子进程</li>\n</ul>\n<blockquote>\n<p>为什么不是Master进程呢，主要原因是Master进程是多线程的，不能安全的执行fork操作。</p>\n</blockquote>\n<h3 id=\"Worker进程\"><a href=\"#Worker进程\" class=\"headerlink\" title=\"Worker进程\"></a>Worker进程</h3><ul>\n<li>接受由Reactor线程投递的请求数据包，并执行PHP回调函数处理数据</li>\n<li>生成响应数据并发给Reactor线程，由Reactor线程发送给TCP客户端</li>\n<li>可以是异步非阻塞模式，也可以是同步阻塞模式</li>\n<li>Worker以多进程的方式运行</li>\n</ul>\n<blockquote>\n<p>Swoole提供了完善的进程管理机制，当Worker进程异常退出，如发生PHP的致命错误、被其他程序误杀，或达到max_request次数之后正常退出。主进程会重新拉起新的Worker进程。 Worker进程内可以像普通的apache+php或者php-fpm中写代码。不需要像Node.js那样写异步回调的代码。</p>\n</blockquote>\n<h3 id=\"Task进程\"><a href=\"#Task进程\" class=\"headerlink\" title=\"Task进程\"></a>Task进程</h3><ul>\n<li>接受由Worker进程通过swoole_server-&gt;task/taskwait方法投递的任务</li>\n<li>处理任务，并将结果数据返回给Worker进程</li>\n<li>完全是同步阻塞模式</li>\n<li>Task以多进程的方式运行</li>\n</ul>\n<p>Task进程的全称是task_worker进程，是一种特殊的worker进程。所以<code>onWorkerStart</code>在task进程中也会被调用。当<code>$worker_id &gt;= $serv-&gt;setting[&#39;worker_num&#39;]</code>时表示这个进程是task_worker，否则，代表此进程是worker进程。</p>\n<h2 id=\"进程与事件回调的对应关系\"><a href=\"#进程与事件回调的对应关系\" class=\"headerlink\" title=\"进程与事件回调的对应关系\"></a>进程与事件回调的对应关系</h2><h3 id=\"Master进程内的回调函数\"><a href=\"#Master进程内的回调函数\" class=\"headerlink\" title=\"Master进程内的回调函数\"></a>Master进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onStart</div><div class=\"line\">onShutdown</div><div class=\"line\">onMasterConnect</div><div class=\"line\">onMasterClose</div><div class=\"line\">onTimer</div></pre></td></tr></table></figure>\n<h3 id=\"Worker进程内的回调函数\"><a href=\"#Worker进程内的回调函数\" class=\"headerlink\" title=\"Worker进程内的回调函数\"></a>Worker进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">onWorkerStart</div><div class=\"line\">onWorkerStop</div><div class=\"line\">onConnect</div><div class=\"line\">onClose</div><div class=\"line\">onReceive</div><div class=\"line\">onTimer</div><div class=\"line\">onFinish</div></pre></td></tr></table></figure>\n<h3 id=\"Task进程内的回调函数\"><a href=\"#Task进程内的回调函数\" class=\"headerlink\" title=\"Task进程内的回调函数\"></a>Task进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">onTask</div><div class=\"line\">onWorkerStart</div></pre></td></tr></table></figure>\n<h3 id=\"Manager进程内的回调函数\"><a href=\"#Manager进程内的回调函数\" class=\"headerlink\" title=\"Manager进程内的回调函数\"></a>Manager进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">onManagerStart</div><div class=\"line\">onManagerStop</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：Swoole是一个PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。强大的功能，由背后若干个分工明确的进程来实现，这里详细介绍下几个进程的分工，以便入门者更快速的理解Swoole框架。</p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>[TOC]</p>\n<h2 id=\"Swoole简介\"><a href=\"#Swoole简介\" class=\"headerlink\" title=\"Swoole简介\"></a>Swoole简介</h2><p><a href=\"http://www.swoole.com/\" target=\"_blank\" rel=\"external\">Swoole官网</a></p>\n<h3 id=\"Swoole：重新定义PHP\"><a href=\"#Swoole：重新定义PHP\" class=\"headerlink\" title=\"Swoole：重新定义PHP\"></a>Swoole：重新定义PHP</h3><p>Swoole：PHP语言的高性能网络通信框架，提供了PHP语言的异步多线程服务器，异步TCP/UDP网络客户端，异步MySQL，数据库连接池，AsyncTask，消息队列，毫秒定时器，异步文件读写，异步DNS查询。<br>Swoole虽然是标准的PHP扩展，实际上与普通的扩展不同。普通的扩展只是提供一个库函数。而swoole扩展在运行后会接管PHP的控制权，进入事件循环。当IO事件发生后，swoole会自动回调指定的PHP函数。</p>\n<h3 id=\"功能展示代码片段\"><a href=\"#功能展示代码片段\" class=\"headerlink\" title=\"功能展示代码片段\"></a>功能展示代码片段</h3><h4 id=\"TCP-Server\"><a href=\"#TCP-Server\" class=\"headerlink\" title=\"TCP Server\"></a>TCP Server</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">$serv = <span class=\"keyword\">new</span> swoole_server(<span class=\"string\">\"127.0.0.1\"</span>, <span class=\"number\">9501</span>);</div><div class=\"line\">$serv-&gt;set(<span class=\"keyword\">array</span>(</div><div class=\"line\">    <span class=\"string\">'worker_num'</span> =&gt; <span class=\"number\">8</span>,   <span class=\"comment\">//工作进程数量</span></div><div class=\"line\">    <span class=\"string\">'daemonize'</span> =&gt; <span class=\"keyword\">true</span>, <span class=\"comment\">//是否作为守护进程</span></div><div class=\"line\">));</div><div class=\"line\">$serv-&gt;on(<span class=\"string\">'connect'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($serv, $fd)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Client:Connect.\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$serv-&gt;on(<span class=\"string\">'receive'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($serv, $fd, $from_id, $data)</span> </span>&#123;</div><div class=\"line\">    $serv-&gt;send($fd, <span class=\"string\">'Swoole: '</span>.$data);</div><div class=\"line\">    $serv-&gt;close($fd);</div><div class=\"line\">&#125;);</div><div class=\"line\">$serv-&gt;on(<span class=\"string\">'close'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($serv, $fd)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Client: Close.\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$serv-&gt;start();</div></pre></td></tr></table></figure>\n<h4 id=\"TCP-Client\"><a href=\"#TCP-Client\" class=\"headerlink\" title=\"TCP Client\"></a>TCP Client</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">$client = <span class=\"keyword\">new</span> swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC);</div><div class=\"line\"><span class=\"comment\">//设置事件回调函数</span></div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"connect\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli)</span> </span>&#123;</div><div class=\"line\">    $cli-&gt;send(<span class=\"string\">\"hello world\\n\"</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"receive\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli, $data)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Received: \"</span>.$data.<span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"error\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Connect failed\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">$client-&gt;on(<span class=\"string\">\"close\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($cli)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Connection close\\n\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//发起网络连接</span></div><div class=\"line\">$client-&gt;connect(<span class=\"string\">'127.0.0.1'</span>, <span class=\"number\">9501</span>, <span class=\"number\">0.5</span>);</div></pre></td></tr></table></figure>\n<p>更多代码片段请见<a href=\"http://www.swoole.com/\" target=\"_blank\" rel=\"external\">swoole官网</a>。</p>\n<h2 id=\"主要进程分析\"><a href=\"#主要进程分析\" class=\"headerlink\" title=\"主要进程分析\"></a>主要进程分析</h2><h3 id=\"Master进程\"><a href=\"#Master进程\" class=\"headerlink\" title=\"Master进程\"></a>Master进程</h3><p>Master进程主要用来保证Swoole框架机制的运行。它会创建几个功能性的线程：</p>\n<ul>\n<li>Reactor线程:就是真正处理TCP连接，收发数据的线程。swoole的主线程在Accept新的连接后，会将这个连接分配给一个固定的Reactor线程，并由这个线程负责监听此socket。在socket可读时读取数据，并进行协议解析，将请求投递到Worker进程。在socket可写时将数据发送给TCP客户端。</li>\n<li>Master线程(主线程）: 负责：Accept新的连接、UNIX PROXI信号处理、定时器任务。</li>\n<li>心跳包检测线程：（略）</li>\n<li>UDP收包线程：（略）</li>\n</ul>\n<h3 id=\"Manager进程\"><a href=\"#Manager进程\" class=\"headerlink\" title=\"Manager进程\"></a>Manager进程</h3><p>swoole中Worker/Task进程都是由Manager进程Fork并管理的。</p>\n<ul>\n<li>子进程结束运行时，manager进程负责回收此子进程，避免成为僵尸进程。并创建新的子进程</li>\n<li>服务器关闭时，manager进程将发送信号给所有子进程，通知子进程关闭服务</li>\n<li>服务器reload时，manager进程会逐个关闭/重启子进程</li>\n</ul>\n<blockquote>\n<p>为什么不是Master进程呢，主要原因是Master进程是多线程的，不能安全的执行fork操作。</p>\n</blockquote>\n<h3 id=\"Worker进程\"><a href=\"#Worker进程\" class=\"headerlink\" title=\"Worker进程\"></a>Worker进程</h3><ul>\n<li>接受由Reactor线程投递的请求数据包，并执行PHP回调函数处理数据</li>\n<li>生成响应数据并发给Reactor线程，由Reactor线程发送给TCP客户端</li>\n<li>可以是异步非阻塞模式，也可以是同步阻塞模式</li>\n<li>Worker以多进程的方式运行</li>\n</ul>\n<blockquote>\n<p>Swoole提供了完善的进程管理机制，当Worker进程异常退出，如发生PHP的致命错误、被其他程序误杀，或达到max_request次数之后正常退出。主进程会重新拉起新的Worker进程。 Worker进程内可以像普通的apache+php或者php-fpm中写代码。不需要像Node.js那样写异步回调的代码。</p>\n</blockquote>\n<h3 id=\"Task进程\"><a href=\"#Task进程\" class=\"headerlink\" title=\"Task进程\"></a>Task进程</h3><ul>\n<li>接受由Worker进程通过swoole_server-&gt;task/taskwait方法投递的任务</li>\n<li>处理任务，并将结果数据返回给Worker进程</li>\n<li>完全是同步阻塞模式</li>\n<li>Task以多进程的方式运行</li>\n</ul>\n<p>Task进程的全称是task_worker进程，是一种特殊的worker进程。所以<code>onWorkerStart</code>在task进程中也会被调用。当<code>$worker_id &gt;= $serv-&gt;setting[&#39;worker_num&#39;]</code>时表示这个进程是task_worker，否则，代表此进程是worker进程。</p>\n<h2 id=\"进程与事件回调的对应关系\"><a href=\"#进程与事件回调的对应关系\" class=\"headerlink\" title=\"进程与事件回调的对应关系\"></a>进程与事件回调的对应关系</h2><h3 id=\"Master进程内的回调函数\"><a href=\"#Master进程内的回调函数\" class=\"headerlink\" title=\"Master进程内的回调函数\"></a>Master进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onStart</div><div class=\"line\">onShutdown</div><div class=\"line\">onMasterConnect</div><div class=\"line\">onMasterClose</div><div class=\"line\">onTimer</div></pre></td></tr></table></figure>\n<h3 id=\"Worker进程内的回调函数\"><a href=\"#Worker进程内的回调函数\" class=\"headerlink\" title=\"Worker进程内的回调函数\"></a>Worker进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">onWorkerStart</div><div class=\"line\">onWorkerStop</div><div class=\"line\">onConnect</div><div class=\"line\">onClose</div><div class=\"line\">onReceive</div><div class=\"line\">onTimer</div><div class=\"line\">onFinish</div></pre></td></tr></table></figure>\n<h3 id=\"Task进程内的回调函数\"><a href=\"#Task进程内的回调函数\" class=\"headerlink\" title=\"Task进程内的回调函数\"></a>Task进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">onTask</div><div class=\"line\">onWorkerStart</div></pre></td></tr></table></figure>\n<h3 id=\"Manager进程内的回调函数\"><a href=\"#Manager进程内的回调函数\" class=\"headerlink\" title=\"Manager进程内的回调函数\"></a>Manager进程内的回调函数</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">onManagerStart</div><div class=\"line\">onManagerStop</div></pre></td></tr></table></figure>\n"},{"date":"2015-08-19T09:37:00.000Z","title":"[PHP]Yii2框架的几个隐蔽的坑","_content":"\n\n\n摘要：Yii2是一款优秀的通用Web后端框架，结构简单优雅、实用功能丰富、扩展性强、性能搞是他最突出的优点。它优秀的地方你在使用过程中总能轻易的发现，无须赘述。而这些隐蔽的小瑕疵，显得更有必要告诉大家。\n\n\n## 目录\n[TOC]\n\n## 说点闲话\n\n距离上次写博客，已经有三个月了。在动手写之前，总是带着深深的罪恶感。被它折磨许久，终于，还是，动手了。\n\n**值得庆祝的一件事**：最近开始，每天早上8：30起来健身了。有两个视频很好用，只需8分钟，照着做一遍保证你（生）爽（不）到（如）爆（死）。（[8分钟腹肌锻炼第2级-下载](http://pan.baidu.com/s/1eQpU4Lk)，[8分钟胸肌锻炼第2级-下载](http://pan.baidu.com/s/1i3KW4T3)）\n\n**值得反思的一件事**：最近看了《叔本华美学随笔》，改变了我一直以来对阅读的看法。我曾经以为阅读是进步的源动力，却被这本书深深的打脸了。来，先给大家分享一段：\n\n>我们只管所见的外在环境并不像阅读物那样，把某已确定的见解强加给我们的头脑，而只是为我们提供了素材和机会。去思考与我们的头脑能力相称、与当下的情绪相符的事情。所以，太多的阅读会是我们的精神失去弹性，就像把一重物持续压在一条弹簧上面就会是弹簧失去弹性一样；而让自己没有自己思想的最稳妥的办法就是在空闲的每一分钟马上随手拿起一本书。\n\n**思考才是进步的源动力**！\n\n好了，扯淡完毕，步入正题。\n\n\n## ActiveRecord被莫名写入？\n\n### 准备知识\n\n1. `ActiveRecord`的基本用法。如果不理解，可参考[这里](http://www.yiiframework.com/doc-2.0/guide-db-active-record.html)。\n\n### 代码现场\n\n\n```php\n/**\n * @property integer $id\n * @property string $name\n * @property string $detail\n * @property double $price\n * @property integer $area\n **/\nclass OcRoom extends ActivieRecord\n{\n    ...\n}\n\n$room = OcRoom::find()      //先取出一个对象。\n    ->select(['id'])        //只取出'id'列\n    ->where(['id'=>20])\n    ->one();\n$room->save();              //保存，会发现此行的其它字段都被写成默认值了。\n```\n\n\n### 总结问题\n\n这个例子的问题在于：\n\n1. 我从数据库中取出了一行，也就是代码中的`$room`，但是只取出了`id`字段，而其他字段自然就是默认值。\n2. 当我`$room->save()`的时候，那些是默认值的字段也被保存到数据库里去了。what!?\n3. 也就是说，当你想节约资源，不取出所有字段的时候，**一定要注意不能保存，否则，很多数据会被莫名修改为默认值。**\n\n### 解决方法\n\n然而，我们有什么解决办法呢？提供几种思路：\n\n1. 自己时刻注意，避免未完全取出的`ActiveRecord`的保存。\n2. 修改或继承`ActiveRecord`, 使得，当此对象由`find()`新建，且字段没有完全取出，调用`save()`方法，抛出异常。\n3. 修改或继承`ActiveRecord`，使得，当此对象由`find()`新建，且字段没有完全取出，调用`save()`方法时，只保存取出过的字段，其他字段被忽略。\n\n\n## 你的Transaction生效了吗？\n\n### 代码现场\n\n```php\n/**\n * @property integer $id\n * @property string $name\n **/\nclass OcRoom extends ActiveRecord\n{\n    public function rules()\n    {\n        return [['name','string','min'=>2,'max'=>10]];\n    }\n    ...\n}\nclass OcHouse extends ActiveRecord\n{\n    public function rules()\n    {\n        return [['name','string','max'=>10]];\n    }\n    ...\n}\n\n$a = new OcRoom();\n$a->name = '';                //name为空字符串，不满足rules()条件。\n\n$b = new OcHouse();\n$b->name = '我的房间';         //name合法，可以保存。\n\n$transaction = Yii::$app->db->beginTransaction();\ntry{\n    $a->save();               //name字段不合法，无法验证通过，在validate()阶段已经返回false,不会进行数据库存储的步骤，所以也不会抛出异常。\n    $b->save();               //name字段合法，可以正常保存。\n\n    $transaction->commit();   //提交后，发现$a保存失败，而$b保存成功。\n}\ncatch (Exception $e) \n{\n    Yii::error($e->getTraceAsString(),__METHOD__);\n    $transaction->rollBack();\n}\n```\n\n### 问题总结\n\n这段代码的问题在于：\n\n1. 大家知道`$transaction`的存在意义是保证整段数据库存储代码要么全成功，要么全失败。\n2. 显然，在这个例子中，`transaction`并没有达到我们想要的效果：`$a`因为`validate()`都没过，所以`$transation->commit()`的时候并不会报错。\n\n### 解决方法\n\n在`$transation`块内，所有的`save()`都要判断下返回值，如果为`false`，则直接抛出异常。\n\n\n## 'Y-m-d'不被识别？\n\n### 代码现场\n\n```php\nOcRenterBill extends ActiveRecord\n{\n    public function rules()\n    {\n        return [\n            ['start_time','date','format'=>'Y-m-d'],\n        ];\n    }\n}\n\n$a = new OcRenterBill();\n$a = '2015-09-12';\n$a->save();                 //会报错，说格式不对。\n```\n\n### 问题总结\n\n如果一开始，Yii框架就报错，这个还不算坑。坑的是我在Mac上开发时，这个可以完全正常的工作，而发布到线上环境（Ubuntu）后，就弹出“属性start_time格式无效”的错误。而参考官方文档，发现这种格式是允许的[官方文档](http://www.yiiframework.com/doc-2.0/yii-validators-datevalidator.html)。\n\n啊啊啊。各种试错，最后发现如果改成`php:Y-m-d`，世界就清净了。所以，如果你遇到这种问题，感激我吧。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/技术/[PHP]Yii2框架的坑.md","raw":"---\ndate:  2015-08-19 17:37\ntitle: '[PHP]Yii2框架的几个隐蔽的坑'\ntags: \n- php\n- Yii2\n- ActiveRecord\n- web\n- db\n- mysql\ncategories: \n- 技术\n---\n\n\n\n摘要：Yii2是一款优秀的通用Web后端框架，结构简单优雅、实用功能丰富、扩展性强、性能搞是他最突出的优点。它优秀的地方你在使用过程中总能轻易的发现，无须赘述。而这些隐蔽的小瑕疵，显得更有必要告诉大家。\n\n\n## 目录\n[TOC]\n\n## 说点闲话\n\n距离上次写博客，已经有三个月了。在动手写之前，总是带着深深的罪恶感。被它折磨许久，终于，还是，动手了。\n\n**值得庆祝的一件事**：最近开始，每天早上8：30起来健身了。有两个视频很好用，只需8分钟，照着做一遍保证你（生）爽（不）到（如）爆（死）。（[8分钟腹肌锻炼第2级-下载](http://pan.baidu.com/s/1eQpU4Lk)，[8分钟胸肌锻炼第2级-下载](http://pan.baidu.com/s/1i3KW4T3)）\n\n**值得反思的一件事**：最近看了《叔本华美学随笔》，改变了我一直以来对阅读的看法。我曾经以为阅读是进步的源动力，却被这本书深深的打脸了。来，先给大家分享一段：\n\n>我们只管所见的外在环境并不像阅读物那样，把某已确定的见解强加给我们的头脑，而只是为我们提供了素材和机会。去思考与我们的头脑能力相称、与当下的情绪相符的事情。所以，太多的阅读会是我们的精神失去弹性，就像把一重物持续压在一条弹簧上面就会是弹簧失去弹性一样；而让自己没有自己思想的最稳妥的办法就是在空闲的每一分钟马上随手拿起一本书。\n\n**思考才是进步的源动力**！\n\n好了，扯淡完毕，步入正题。\n\n\n## ActiveRecord被莫名写入？\n\n### 准备知识\n\n1. `ActiveRecord`的基本用法。如果不理解，可参考[这里](http://www.yiiframework.com/doc-2.0/guide-db-active-record.html)。\n\n### 代码现场\n\n\n```php\n/**\n * @property integer $id\n * @property string $name\n * @property string $detail\n * @property double $price\n * @property integer $area\n **/\nclass OcRoom extends ActivieRecord\n{\n    ...\n}\n\n$room = OcRoom::find()      //先取出一个对象。\n    ->select(['id'])        //只取出'id'列\n    ->where(['id'=>20])\n    ->one();\n$room->save();              //保存，会发现此行的其它字段都被写成默认值了。\n```\n\n\n### 总结问题\n\n这个例子的问题在于：\n\n1. 我从数据库中取出了一行，也就是代码中的`$room`，但是只取出了`id`字段，而其他字段自然就是默认值。\n2. 当我`$room->save()`的时候，那些是默认值的字段也被保存到数据库里去了。what!?\n3. 也就是说，当你想节约资源，不取出所有字段的时候，**一定要注意不能保存，否则，很多数据会被莫名修改为默认值。**\n\n### 解决方法\n\n然而，我们有什么解决办法呢？提供几种思路：\n\n1. 自己时刻注意，避免未完全取出的`ActiveRecord`的保存。\n2. 修改或继承`ActiveRecord`, 使得，当此对象由`find()`新建，且字段没有完全取出，调用`save()`方法，抛出异常。\n3. 修改或继承`ActiveRecord`，使得，当此对象由`find()`新建，且字段没有完全取出，调用`save()`方法时，只保存取出过的字段，其他字段被忽略。\n\n\n## 你的Transaction生效了吗？\n\n### 代码现场\n\n```php\n/**\n * @property integer $id\n * @property string $name\n **/\nclass OcRoom extends ActiveRecord\n{\n    public function rules()\n    {\n        return [['name','string','min'=>2,'max'=>10]];\n    }\n    ...\n}\nclass OcHouse extends ActiveRecord\n{\n    public function rules()\n    {\n        return [['name','string','max'=>10]];\n    }\n    ...\n}\n\n$a = new OcRoom();\n$a->name = '';                //name为空字符串，不满足rules()条件。\n\n$b = new OcHouse();\n$b->name = '我的房间';         //name合法，可以保存。\n\n$transaction = Yii::$app->db->beginTransaction();\ntry{\n    $a->save();               //name字段不合法，无法验证通过，在validate()阶段已经返回false,不会进行数据库存储的步骤，所以也不会抛出异常。\n    $b->save();               //name字段合法，可以正常保存。\n\n    $transaction->commit();   //提交后，发现$a保存失败，而$b保存成功。\n}\ncatch (Exception $e) \n{\n    Yii::error($e->getTraceAsString(),__METHOD__);\n    $transaction->rollBack();\n}\n```\n\n### 问题总结\n\n这段代码的问题在于：\n\n1. 大家知道`$transaction`的存在意义是保证整段数据库存储代码要么全成功，要么全失败。\n2. 显然，在这个例子中，`transaction`并没有达到我们想要的效果：`$a`因为`validate()`都没过，所以`$transation->commit()`的时候并不会报错。\n\n### 解决方法\n\n在`$transation`块内，所有的`save()`都要判断下返回值，如果为`false`，则直接抛出异常。\n\n\n## 'Y-m-d'不被识别？\n\n### 代码现场\n\n```php\nOcRenterBill extends ActiveRecord\n{\n    public function rules()\n    {\n        return [\n            ['start_time','date','format'=>'Y-m-d'],\n        ];\n    }\n}\n\n$a = new OcRenterBill();\n$a = '2015-09-12';\n$a->save();                 //会报错，说格式不对。\n```\n\n### 问题总结\n\n如果一开始，Yii框架就报错，这个还不算坑。坑的是我在Mac上开发时，这个可以完全正常的工作，而发布到线上环境（Ubuntu）后，就弹出“属性start_time格式无效”的错误。而参考官方文档，发现这种格式是允许的[官方文档](http://www.yiiframework.com/doc-2.0/yii-validators-datevalidator.html)。\n\n啊啊啊。各种试错，最后发现如果改成`php:Y-m-d`，世界就清净了。所以，如果你遇到这种问题，感激我吧。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"技术/[PHP]Yii2框架的坑","published":1,"updated":"2017-07-26T16:13:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpn003tq0d4s04q9rok","content":"<p>摘要：Yii2是一款优秀的通用Web后端框架，结构简单优雅、实用功能丰富、扩展性强、性能搞是他最突出的优点。它优秀的地方你在使用过程中总能轻易的发现，无须赘述。而这些隐蔽的小瑕疵，显得更有必要告诉大家。</p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>[TOC]</p>\n<h2 id=\"说点闲话\"><a href=\"#说点闲话\" class=\"headerlink\" title=\"说点闲话\"></a>说点闲话</h2><p>距离上次写博客，已经有三个月了。在动手写之前，总是带着深深的罪恶感。被它折磨许久，终于，还是，动手了。</p>\n<p><strong>值得庆祝的一件事</strong>：最近开始，每天早上8：30起来健身了。有两个视频很好用，只需8分钟，照着做一遍保证你（生）爽（不）到（如）爆（死）。（<a href=\"http://pan.baidu.com/s/1eQpU4Lk\" target=\"_blank\" rel=\"external\">8分钟腹肌锻炼第2级-下载</a>，<a href=\"http://pan.baidu.com/s/1i3KW4T3\" target=\"_blank\" rel=\"external\">8分钟胸肌锻炼第2级-下载</a>）</p>\n<p><strong>值得反思的一件事</strong>：最近看了《叔本华美学随笔》，改变了我一直以来对阅读的看法。我曾经以为阅读是进步的源动力，却被这本书深深的打脸了。来，先给大家分享一段：</p>\n<blockquote>\n<p>我们只管所见的外在环境并不像阅读物那样，把某已确定的见解强加给我们的头脑，而只是为我们提供了素材和机会。去思考与我们的头脑能力相称、与当下的情绪相符的事情。所以，太多的阅读会是我们的精神失去弹性，就像把一重物持续压在一条弹簧上面就会是弹簧失去弹性一样；而让自己没有自己思想的最稳妥的办法就是在空闲的每一分钟马上随手拿起一本书。</p>\n</blockquote>\n<p><strong>思考才是进步的源动力</strong>！</p>\n<p>好了，扯淡完毕，步入正题。</p>\n<h2 id=\"ActiveRecord被莫名写入？\"><a href=\"#ActiveRecord被莫名写入？\" class=\"headerlink\" title=\"ActiveRecord被莫名写入？\"></a>ActiveRecord被莫名写入？</h2><h3 id=\"准备知识\"><a href=\"#准备知识\" class=\"headerlink\" title=\"准备知识\"></a>准备知识</h3><ol>\n<li><code>ActiveRecord</code>的基本用法。如果不理解，可参考<a href=\"http://www.yiiframework.com/doc-2.0/guide-db-active-record.html\" target=\"_blank\" rel=\"external\">这里</a>。</li>\n</ol>\n<h3 id=\"代码现场\"><a href=\"#代码现场\" class=\"headerlink\" title=\"代码现场\"></a>代码现场</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * <span class=\"doctag\">@property</span> integer $id</div><div class=\"line\"> * <span class=\"doctag\">@property</span> string $name</div><div class=\"line\"> * <span class=\"doctag\">@property</span> string $detail</div><div class=\"line\"> * <span class=\"doctag\">@property</span> double $price</div><div class=\"line\"> * <span class=\"doctag\">@property</span> integer $area</div><div class=\"line\"> **/</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OcRoom</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivieRecord</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$room = OcRoom::find()      <span class=\"comment\">//先取出一个对象。</span></div><div class=\"line\">    -&gt;select([<span class=\"string\">'id'</span>])        <span class=\"comment\">//只取出'id'列</span></div><div class=\"line\">    -&gt;where([<span class=\"string\">'id'</span>=&gt;<span class=\"number\">20</span>])</div><div class=\"line\">    -&gt;one();</div><div class=\"line\">$room-&gt;save();              <span class=\"comment\">//保存，会发现此行的其它字段都被写成默认值了。</span></div></pre></td></tr></table></figure>\n<h3 id=\"总结问题\"><a href=\"#总结问题\" class=\"headerlink\" title=\"总结问题\"></a>总结问题</h3><p>这个例子的问题在于：</p>\n<ol>\n<li>我从数据库中取出了一行，也就是代码中的<code>$room</code>，但是只取出了<code>id</code>字段，而其他字段自然就是默认值。</li>\n<li>当我<code>$room-&gt;save()</code>的时候，那些是默认值的字段也被保存到数据库里去了。what!?</li>\n<li>也就是说，当你想节约资源，不取出所有字段的时候，<strong>一定要注意不能保存，否则，很多数据会被莫名修改为默认值。</strong></li>\n</ol>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>然而，我们有什么解决办法呢？提供几种思路：</p>\n<ol>\n<li>自己时刻注意，避免未完全取出的<code>ActiveRecord</code>的保存。</li>\n<li>修改或继承<code>ActiveRecord</code>, 使得，当此对象由<code>find()</code>新建，且字段没有完全取出，调用<code>save()</code>方法，抛出异常。</li>\n<li>修改或继承<code>ActiveRecord</code>，使得，当此对象由<code>find()</code>新建，且字段没有完全取出，调用<code>save()</code>方法时，只保存取出过的字段，其他字段被忽略。</li>\n</ol>\n<h2 id=\"你的Transaction生效了吗？\"><a href=\"#你的Transaction生效了吗？\" class=\"headerlink\" title=\"你的Transaction生效了吗？\"></a>你的Transaction生效了吗？</h2><h3 id=\"代码现场-1\"><a href=\"#代码现场-1\" class=\"headerlink\" title=\"代码现场\"></a>代码现场</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * <span class=\"doctag\">@property</span> integer $id</div><div class=\"line\"> * <span class=\"doctag\">@property</span> string $name</div><div class=\"line\"> **/</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OcRoom</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActiveRecord</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rules</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [[<span class=\"string\">'name'</span>,<span class=\"string\">'string'</span>,<span class=\"string\">'min'</span>=&gt;<span class=\"number\">2</span>,<span class=\"string\">'max'</span>=&gt;<span class=\"number\">10</span>]];</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OcHouse</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActiveRecord</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rules</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [[<span class=\"string\">'name'</span>,<span class=\"string\">'string'</span>,<span class=\"string\">'max'</span>=&gt;<span class=\"number\">10</span>]];</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$a = <span class=\"keyword\">new</span> OcRoom();</div><div class=\"line\">$a-&gt;name = <span class=\"string\">''</span>;                <span class=\"comment\">//name为空字符串，不满足rules()条件。</span></div><div class=\"line\"></div><div class=\"line\">$b = <span class=\"keyword\">new</span> OcHouse();</div><div class=\"line\">$b-&gt;name = <span class=\"string\">'我的房间'</span>;         <span class=\"comment\">//name合法，可以保存。</span></div><div class=\"line\"></div><div class=\"line\">$transaction = Yii::$app-&gt;db-&gt;beginTransaction();</div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    $a-&gt;save();               <span class=\"comment\">//name字段不合法，无法验证通过，在validate()阶段已经返回false,不会进行数据库存储的步骤，所以也不会抛出异常。</span></div><div class=\"line\">    $b-&gt;save();               <span class=\"comment\">//name字段合法，可以正常保存。</span></div><div class=\"line\"></div><div class=\"line\">    $transaction-&gt;commit();   <span class=\"comment\">//提交后，发现$a保存失败，而$b保存成功。</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) </div><div class=\"line\">&#123;</div><div class=\"line\">    Yii::error($e-&gt;getTraceAsString(),<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">    $transaction-&gt;rollBack();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"问题总结\"><a href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h3><p>这段代码的问题在于：</p>\n<ol>\n<li>大家知道<code>$transaction</code>的存在意义是保证整段数据库存储代码要么全成功，要么全失败。</li>\n<li>显然，在这个例子中，<code>transaction</code>并没有达到我们想要的效果：<code>$a</code>因为<code>validate()</code>都没过，所以<code>$transation-&gt;commit()</code>的时候并不会报错。</li>\n</ol>\n<h3 id=\"解决方法-1\"><a href=\"#解决方法-1\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>在<code>$transation</code>块内，所有的<code>save()</code>都要判断下返回值，如果为<code>false</code>，则直接抛出异常。</p>\n<h2 id=\"‘Y-m-d’不被识别？\"><a href=\"#‘Y-m-d’不被识别？\" class=\"headerlink\" title=\"‘Y-m-d’不被识别？\"></a>‘Y-m-d’不被识别？</h2><h3 id=\"代码现场-2\"><a href=\"#代码现场-2\" class=\"headerlink\" title=\"代码现场\"></a>代码现场</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">OcRenterBill extends ActiveRecord</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rules</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [</div><div class=\"line\">            [<span class=\"string\">'start_time'</span>,<span class=\"string\">'date'</span>,<span class=\"string\">'format'</span>=&gt;<span class=\"string\">'Y-m-d'</span>],</div><div class=\"line\">        ];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$a = <span class=\"keyword\">new</span> OcRenterBill();</div><div class=\"line\">$a = <span class=\"string\">'2015-09-12'</span>;</div><div class=\"line\">$a-&gt;save();                 <span class=\"comment\">//会报错，说格式不对。</span></div></pre></td></tr></table></figure>\n<h3 id=\"问题总结-1\"><a href=\"#问题总结-1\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h3><p>如果一开始，Yii框架就报错，这个还不算坑。坑的是我在Mac上开发时，这个可以完全正常的工作，而发布到线上环境（Ubuntu）后，就弹出“属性start_time格式无效”的错误。而参考官方文档，发现这种格式是允许的<a href=\"http://www.yiiframework.com/doc-2.0/yii-validators-datevalidator.html\" target=\"_blank\" rel=\"external\">官方文档</a>。</p>\n<p>啊啊啊。各种试错，最后发现如果改成<code>php:Y-m-d</code>，世界就清净了。所以，如果你遇到这种问题，感激我吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：Yii2是一款优秀的通用Web后端框架，结构简单优雅、实用功能丰富、扩展性强、性能搞是他最突出的优点。它优秀的地方你在使用过程中总能轻易的发现，无须赘述。而这些隐蔽的小瑕疵，显得更有必要告诉大家。</p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>[TOC]</p>\n<h2 id=\"说点闲话\"><a href=\"#说点闲话\" class=\"headerlink\" title=\"说点闲话\"></a>说点闲话</h2><p>距离上次写博客，已经有三个月了。在动手写之前，总是带着深深的罪恶感。被它折磨许久，终于，还是，动手了。</p>\n<p><strong>值得庆祝的一件事</strong>：最近开始，每天早上8：30起来健身了。有两个视频很好用，只需8分钟，照着做一遍保证你（生）爽（不）到（如）爆（死）。（<a href=\"http://pan.baidu.com/s/1eQpU4Lk\" target=\"_blank\" rel=\"external\">8分钟腹肌锻炼第2级-下载</a>，<a href=\"http://pan.baidu.com/s/1i3KW4T3\" target=\"_blank\" rel=\"external\">8分钟胸肌锻炼第2级-下载</a>）</p>\n<p><strong>值得反思的一件事</strong>：最近看了《叔本华美学随笔》，改变了我一直以来对阅读的看法。我曾经以为阅读是进步的源动力，却被这本书深深的打脸了。来，先给大家分享一段：</p>\n<blockquote>\n<p>我们只管所见的外在环境并不像阅读物那样，把某已确定的见解强加给我们的头脑，而只是为我们提供了素材和机会。去思考与我们的头脑能力相称、与当下的情绪相符的事情。所以，太多的阅读会是我们的精神失去弹性，就像把一重物持续压在一条弹簧上面就会是弹簧失去弹性一样；而让自己没有自己思想的最稳妥的办法就是在空闲的每一分钟马上随手拿起一本书。</p>\n</blockquote>\n<p><strong>思考才是进步的源动力</strong>！</p>\n<p>好了，扯淡完毕，步入正题。</p>\n<h2 id=\"ActiveRecord被莫名写入？\"><a href=\"#ActiveRecord被莫名写入？\" class=\"headerlink\" title=\"ActiveRecord被莫名写入？\"></a>ActiveRecord被莫名写入？</h2><h3 id=\"准备知识\"><a href=\"#准备知识\" class=\"headerlink\" title=\"准备知识\"></a>准备知识</h3><ol>\n<li><code>ActiveRecord</code>的基本用法。如果不理解，可参考<a href=\"http://www.yiiframework.com/doc-2.0/guide-db-active-record.html\" target=\"_blank\" rel=\"external\">这里</a>。</li>\n</ol>\n<h3 id=\"代码现场\"><a href=\"#代码现场\" class=\"headerlink\" title=\"代码现场\"></a>代码现场</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * <span class=\"doctag\">@property</span> integer $id</div><div class=\"line\"> * <span class=\"doctag\">@property</span> string $name</div><div class=\"line\"> * <span class=\"doctag\">@property</span> string $detail</div><div class=\"line\"> * <span class=\"doctag\">@property</span> double $price</div><div class=\"line\"> * <span class=\"doctag\">@property</span> integer $area</div><div class=\"line\"> **/</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OcRoom</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivieRecord</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$room = OcRoom::find()      <span class=\"comment\">//先取出一个对象。</span></div><div class=\"line\">    -&gt;select([<span class=\"string\">'id'</span>])        <span class=\"comment\">//只取出'id'列</span></div><div class=\"line\">    -&gt;where([<span class=\"string\">'id'</span>=&gt;<span class=\"number\">20</span>])</div><div class=\"line\">    -&gt;one();</div><div class=\"line\">$room-&gt;save();              <span class=\"comment\">//保存，会发现此行的其它字段都被写成默认值了。</span></div></pre></td></tr></table></figure>\n<h3 id=\"总结问题\"><a href=\"#总结问题\" class=\"headerlink\" title=\"总结问题\"></a>总结问题</h3><p>这个例子的问题在于：</p>\n<ol>\n<li>我从数据库中取出了一行，也就是代码中的<code>$room</code>，但是只取出了<code>id</code>字段，而其他字段自然就是默认值。</li>\n<li>当我<code>$room-&gt;save()</code>的时候，那些是默认值的字段也被保存到数据库里去了。what!?</li>\n<li>也就是说，当你想节约资源，不取出所有字段的时候，<strong>一定要注意不能保存，否则，很多数据会被莫名修改为默认值。</strong></li>\n</ol>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>然而，我们有什么解决办法呢？提供几种思路：</p>\n<ol>\n<li>自己时刻注意，避免未完全取出的<code>ActiveRecord</code>的保存。</li>\n<li>修改或继承<code>ActiveRecord</code>, 使得，当此对象由<code>find()</code>新建，且字段没有完全取出，调用<code>save()</code>方法，抛出异常。</li>\n<li>修改或继承<code>ActiveRecord</code>，使得，当此对象由<code>find()</code>新建，且字段没有完全取出，调用<code>save()</code>方法时，只保存取出过的字段，其他字段被忽略。</li>\n</ol>\n<h2 id=\"你的Transaction生效了吗？\"><a href=\"#你的Transaction生效了吗？\" class=\"headerlink\" title=\"你的Transaction生效了吗？\"></a>你的Transaction生效了吗？</h2><h3 id=\"代码现场-1\"><a href=\"#代码现场-1\" class=\"headerlink\" title=\"代码现场\"></a>代码现场</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * <span class=\"doctag\">@property</span> integer $id</div><div class=\"line\"> * <span class=\"doctag\">@property</span> string $name</div><div class=\"line\"> **/</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OcRoom</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActiveRecord</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rules</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [[<span class=\"string\">'name'</span>,<span class=\"string\">'string'</span>,<span class=\"string\">'min'</span>=&gt;<span class=\"number\">2</span>,<span class=\"string\">'max'</span>=&gt;<span class=\"number\">10</span>]];</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OcHouse</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActiveRecord</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rules</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [[<span class=\"string\">'name'</span>,<span class=\"string\">'string'</span>,<span class=\"string\">'max'</span>=&gt;<span class=\"number\">10</span>]];</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$a = <span class=\"keyword\">new</span> OcRoom();</div><div class=\"line\">$a-&gt;name = <span class=\"string\">''</span>;                <span class=\"comment\">//name为空字符串，不满足rules()条件。</span></div><div class=\"line\"></div><div class=\"line\">$b = <span class=\"keyword\">new</span> OcHouse();</div><div class=\"line\">$b-&gt;name = <span class=\"string\">'我的房间'</span>;         <span class=\"comment\">//name合法，可以保存。</span></div><div class=\"line\"></div><div class=\"line\">$transaction = Yii::$app-&gt;db-&gt;beginTransaction();</div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    $a-&gt;save();               <span class=\"comment\">//name字段不合法，无法验证通过，在validate()阶段已经返回false,不会进行数据库存储的步骤，所以也不会抛出异常。</span></div><div class=\"line\">    $b-&gt;save();               <span class=\"comment\">//name字段合法，可以正常保存。</span></div><div class=\"line\"></div><div class=\"line\">    $transaction-&gt;commit();   <span class=\"comment\">//提交后，发现$a保存失败，而$b保存成功。</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) </div><div class=\"line\">&#123;</div><div class=\"line\">    Yii::error($e-&gt;getTraceAsString(),<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">    $transaction-&gt;rollBack();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"问题总结\"><a href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h3><p>这段代码的问题在于：</p>\n<ol>\n<li>大家知道<code>$transaction</code>的存在意义是保证整段数据库存储代码要么全成功，要么全失败。</li>\n<li>显然，在这个例子中，<code>transaction</code>并没有达到我们想要的效果：<code>$a</code>因为<code>validate()</code>都没过，所以<code>$transation-&gt;commit()</code>的时候并不会报错。</li>\n</ol>\n<h3 id=\"解决方法-1\"><a href=\"#解决方法-1\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>在<code>$transation</code>块内，所有的<code>save()</code>都要判断下返回值，如果为<code>false</code>，则直接抛出异常。</p>\n<h2 id=\"‘Y-m-d’不被识别？\"><a href=\"#‘Y-m-d’不被识别？\" class=\"headerlink\" title=\"‘Y-m-d’不被识别？\"></a>‘Y-m-d’不被识别？</h2><h3 id=\"代码现场-2\"><a href=\"#代码现场-2\" class=\"headerlink\" title=\"代码现场\"></a>代码现场</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">OcRenterBill extends ActiveRecord</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rules</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [</div><div class=\"line\">            [<span class=\"string\">'start_time'</span>,<span class=\"string\">'date'</span>,<span class=\"string\">'format'</span>=&gt;<span class=\"string\">'Y-m-d'</span>],</div><div class=\"line\">        ];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$a = <span class=\"keyword\">new</span> OcRenterBill();</div><div class=\"line\">$a = <span class=\"string\">'2015-09-12'</span>;</div><div class=\"line\">$a-&gt;save();                 <span class=\"comment\">//会报错，说格式不对。</span></div></pre></td></tr></table></figure>\n<h3 id=\"问题总结-1\"><a href=\"#问题总结-1\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h3><p>如果一开始，Yii框架就报错，这个还不算坑。坑的是我在Mac上开发时，这个可以完全正常的工作，而发布到线上环境（Ubuntu）后，就弹出“属性start_time格式无效”的错误。而参考官方文档，发现这种格式是允许的<a href=\"http://www.yiiframework.com/doc-2.0/yii-validators-datevalidator.html\" target=\"_blank\" rel=\"external\">官方文档</a>。</p>\n<p>啊啊啊。各种试错，最后发现如果改成<code>php:Y-m-d</code>，世界就清净了。所以，如果你遇到这种问题，感激我吧。</p>\n"},{"title":"[OO]面向对象的基本原则","date":"2016-03-10T08:40:00.000Z","_content":"\n\n\nThe first five principles are principles of class design. They are:\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr><td><b>SRP</b></td>\n<td><a href=\"https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk\">The Single Responsibility Principle</a></td>\n<td><i>A class should have one, and only one, reason to change.</i></td>\n</tr>\n<tr><td><b>OCP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&amp;hl=en\">The Open Closed Principle</a></td>\n<td><i>You should be able to extend a classes behavior, without modifying it.</i></td>\n</tr>\n<tr><td><b>LSP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&amp;hl=en\">The Liskov Substitution Principle</a></td>\n<td><i>Derived classes must be substitutable for their base classes.</i></td>\n</tr>\n<tr><td><b>ISP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&amp;hl=en\">The Interface Segregation Principle</a></td>\n<td><i>Make fine grained interfaces that are client specific.</i></td>\n</tr>\n<tr><td><b>DIP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&amp;hl=en\">The Dependency Inversion Principle</a></td>\n<td><i>Depend on abstractions, not on concretions.</i></td>\n</tr>\n</tbody></table>\n\nThe next six principles are about packages. In this context a package is a binary deliverable like a .jar file, or a dll as opposed to a namespace like a java package or a C++ namespace.\n\nThe first three package principles are about package cohesion, they tell us what to put inside packages:\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr><td><b>REP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Release Reuse Equivalency Principle</a></td>\n<td><i>The granule of reuse is the granule of release.</i></td>\n</tr>\n<tr><td><b>CCP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Common Closure Principle</a></td>\n<td><i>Classes that change together are packaged together.</i></td>\n</tr>\n<tr><td><b>CRP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Common Reuse Principle</a></td>\n<td><i>Classes that are used together are packaged together.</i></td>\n</tr>\n</tbody></table>\n\n\nThe last three principles are about the couplings between packages, and talk about metrics that evaluate the package structure of a system.\n\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr><td><b>ADP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Acyclic Dependencies Principle</a></td>\n<td><i>The dependency graph of packages must have no cycles.</i></td>\n</tr>\n<tr><td><b>SDP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\">The Stable Dependencies Principle</a></td>\n<td><i>Depend in the direction of stability.</i></td>\n</tr>\n<tr><td><b>SAP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\">The Stable Abstractions Principle</a></td>\n<td><i>Abstractness increases with stability.</i></td>\n</tr>\n</tbody></table>\n\n\n\n中文版：\n\n<table class=\"wikitable\" style=\"width: auto; font-size: 95%; table-layout: fixed; line-height:1.25; margin-left: auto; margin-right: auto;\">\n<tbody><tr>\n<th>首字母</th>\n<th>指代</th>\n<th>概念</th>\n</tr>\n<tr>\n<th>S</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\">单一功能原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\">单一功能原则</a></dt>\n<dd>认为<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%B9%E8%B1%A1_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)\" title=\"对象 (计算机科学)\">对象</a>应该仅具有一种单一功能的概念。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>O</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\">开闭原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\">开闭原则</a></dt>\n<dd>认为“软件体应该是对于扩展开放的，但是对于修改封闭的”的概念。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>L</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\">里氏替换原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\">里氏替换原则</a></dt>\n<dd>认为“程序中的对象应该是可以在不改变程序正确性的前提下被它的子类所替换的”的概念。参考 <a href=\"https://zh.wikipedia.org/wiki/%E5%A5%91%E7%BA%A6%E5%BC%8F%E8%AE%BE%E8%AE%A1\" title=\"契约式设计\">契约式设计</a>。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>I</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\">接口隔离原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\">接口隔离原则</a></dt>\n<dd>认为“多个特定客户端接口要好于一个宽泛用途的接口”<sup id=\"cite_ref-martin-design-principles_5-0\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>D</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\">依赖反转原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\">依赖反转原则</a></dt>\n<dd>认为一个方法应该遵从“依赖于抽象而不是一个实例”<sup id=\"cite_ref-martin-design-principles_5-1\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。<br>\n<a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\" title=\"依赖注入\" class=\"mw-redirect\">依赖注入</a>是该原则的一种实现方式。</dd>\n</dl>\n</td>\n</tr>\n</tbody></table>\n\n","source":"_posts/技术/[OO]面向对象的基本原则.md","raw":"---\ntitle: '[OO]面向对象的基本原则'\ndate: 2016-03-10 16:40\ntags: \n- ood \n- priciple \n- design \ncategories: \n- 技术\n---\n\n\n\nThe first five principles are principles of class design. They are:\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr><td><b>SRP</b></td>\n<td><a href=\"https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk\">The Single Responsibility Principle</a></td>\n<td><i>A class should have one, and only one, reason to change.</i></td>\n</tr>\n<tr><td><b>OCP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&amp;hl=en\">The Open Closed Principle</a></td>\n<td><i>You should be able to extend a classes behavior, without modifying it.</i></td>\n</tr>\n<tr><td><b>LSP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&amp;hl=en\">The Liskov Substitution Principle</a></td>\n<td><i>Derived classes must be substitutable for their base classes.</i></td>\n</tr>\n<tr><td><b>ISP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&amp;hl=en\">The Interface Segregation Principle</a></td>\n<td><i>Make fine grained interfaces that are client specific.</i></td>\n</tr>\n<tr><td><b>DIP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&amp;hl=en\">The Dependency Inversion Principle</a></td>\n<td><i>Depend on abstractions, not on concretions.</i></td>\n</tr>\n</tbody></table>\n\nThe next six principles are about packages. In this context a package is a binary deliverable like a .jar file, or a dll as opposed to a namespace like a java package or a C++ namespace.\n\nThe first three package principles are about package cohesion, they tell us what to put inside packages:\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr><td><b>REP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Release Reuse Equivalency Principle</a></td>\n<td><i>The granule of reuse is the granule of release.</i></td>\n</tr>\n<tr><td><b>CCP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Common Closure Principle</a></td>\n<td><i>Classes that change together are packaged together.</i></td>\n</tr>\n<tr><td><b>CRP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Common Reuse Principle</a></td>\n<td><i>Classes that are used together are packaged together.</i></td>\n</tr>\n</tbody></table>\n\n\nThe last three principles are about the couplings between packages, and talk about metrics that evaluate the package structure of a system.\n\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr><td><b>ADP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\">The Acyclic Dependencies Principle</a></td>\n<td><i>The dependency graph of packages must have no cycles.</i></td>\n</tr>\n<tr><td><b>SDP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\">The Stable Dependencies Principle</a></td>\n<td><i>Depend in the direction of stability.</i></td>\n</tr>\n<tr><td><b>SAP</b></td>\n<td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\">The Stable Abstractions Principle</a></td>\n<td><i>Abstractness increases with stability.</i></td>\n</tr>\n</tbody></table>\n\n\n\n中文版：\n\n<table class=\"wikitable\" style=\"width: auto; font-size: 95%; table-layout: fixed; line-height:1.25; margin-left: auto; margin-right: auto;\">\n<tbody><tr>\n<th>首字母</th>\n<th>指代</th>\n<th>概念</th>\n</tr>\n<tr>\n<th>S</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\">单一功能原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\">单一功能原则</a></dt>\n<dd>认为<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%B9%E8%B1%A1_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)\" title=\"对象 (计算机科学)\">对象</a>应该仅具有一种单一功能的概念。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>O</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\">开闭原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\">开闭原则</a></dt>\n<dd>认为“软件体应该是对于扩展开放的，但是对于修改封闭的”的概念。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>L</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\">里氏替换原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\">里氏替换原则</a></dt>\n<dd>认为“程序中的对象应该是可以在不改变程序正确性的前提下被它的子类所替换的”的概念。参考 <a href=\"https://zh.wikipedia.org/wiki/%E5%A5%91%E7%BA%A6%E5%BC%8F%E8%AE%BE%E8%AE%A1\" title=\"契约式设计\">契约式设计</a>。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>I</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\">接口隔离原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\">接口隔离原则</a></dt>\n<dd>认为“多个特定客户端接口要好于一个宽泛用途的接口”<sup id=\"cite_ref-martin-design-principles_5-0\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。</dd>\n</dl>\n</td>\n</tr>\n<tr>\n<th>D</th>\n<td><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\">依赖反转原则</a></td>\n<td>\n<dl>\n<dt><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\">依赖反转原则</a></dt>\n<dd>认为一个方法应该遵从“依赖于抽象而不是一个实例”<sup id=\"cite_ref-martin-design-principles_5-1\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。<br>\n<a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\" title=\"依赖注入\" class=\"mw-redirect\">依赖注入</a>是该原则的一种实现方式。</dd>\n</dl>\n</td>\n</tr>\n</tbody></table>\n\n","slug":"技术/[OO]面向对象的基本原则","published":1,"updated":"2017-07-26T16:02:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpo003xq0d4wdoe9p0q","content":"<p>The first five principles are principles of class design. They are:</p>\n<table border=\"1\" cellspacing=\"0\"><br><tbody><tr><td><b>SRP</b></td><br><td><a href=\"https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk\" target=\"_blank\" rel=\"external\">The Single Responsibility Principle</a></td><br><td><i>A class should have one, and only one, reason to change.</i></td><br></tr><br><tr><td><b>OCP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&amp;hl=en\" target=\"_blank\" rel=\"external\">The Open Closed Principle</a></td><br><td><i>You should be able to extend a classes behavior, without modifying it.</i></td><br></tr><br><tr><td><b>LSP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&amp;hl=en\" target=\"_blank\" rel=\"external\">The Liskov Substitution Principle</a></td><br><td><i>Derived classes must be substitutable for their base classes.</i></td><br></tr><br><tr><td><b>ISP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&amp;hl=en\" target=\"_blank\" rel=\"external\">The Interface Segregation Principle</a></td><br><td><i>Make fine grained interfaces that are client specific.</i></td><br></tr><br><tr><td><b>DIP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&amp;hl=en\" target=\"_blank\" rel=\"external\">The Dependency Inversion Principle</a></td><br><td><i>Depend on abstractions, not on concretions.</i></td><br></tr><br></tbody></table>\n\n<p>The next six principles are about packages. In this context a package is a binary deliverable like a .jar file, or a dll as opposed to a namespace like a java package or a C++ namespace.</p>\n<p>The first three package principles are about package cohesion, they tell us what to put inside packages:</p>\n<table border=\"1\" cellspacing=\"0\"><br><tbody><tr><td><b>REP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Release Reuse Equivalency Principle</a></td><br><td><i>The granule of reuse is the granule of release.</i></td><br></tr><br><tr><td><b>CCP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Common Closure Principle</a></td><br><td><i>Classes that change together are packaged together.</i></td><br></tr><br><tr><td><b>CRP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Common Reuse Principle</a></td><br><td><i>Classes that are used together are packaged together.</i></td><br></tr><br></tbody></table>\n\n\n<p>The last three principles are about the couplings between packages, and talk about metrics that evaluate the package structure of a system.</p>\n<table border=\"1\" cellspacing=\"0\"><br><tbody><tr><td><b>ADP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Acyclic Dependencies Principle</a></td><br><td><i>The dependency graph of packages must have no cycles.</i></td><br></tr><br><tr><td><b>SDP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\" target=\"_blank\" rel=\"external\">The Stable Dependencies Principle</a></td><br><td><i>Depend in the direction of stability.</i></td><br></tr><br><tr><td><b>SAP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\" target=\"_blank\" rel=\"external\">The Stable Abstractions Principle</a></td><br><td><i>Abstractness increases with stability.</i></td><br></tr><br></tbody></table>\n\n\n\n<p>中文版：</p>\n<table class=\"wikitable\" style=\"width: auto; font-size: 95%; table-layout: fixed; line-height:1.25; margin-left: auto; margin-right: auto;\"><br><tbody><tr><br><th>首字母</th><br><th>指代</th><br><th>概念</th><br></tr><br><tr><br><th>S</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\" target=\"_blank\" rel=\"external\">单一功能原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\" target=\"_blank\" rel=\"external\">单一功能原则</a></dt><br><dd>认为<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%B9%E8%B1%A1_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)\" title=\"对象 (计算机科学)\" target=\"_blank\" rel=\"external\">对象</a>应该仅具有一种单一功能的概念。</dd><br></dl><br></td><br></tr><br><tr><br><th>O</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\" target=\"_blank\" rel=\"external\">开闭原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\" target=\"_blank\" rel=\"external\">开闭原则</a></dt><br><dd>认为“软件体应该是对于扩展开放的，但是对于修改封闭的”的概念。</dd><br></dl><br></td><br></tr><br><tr><br><th>L</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\" target=\"_blank\" rel=\"external\">里氏替换原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\" target=\"_blank\" rel=\"external\">里氏替换原则</a></dt><br><dd>认为“程序中的对象应该是可以在不改变程序正确性的前提下被它的子类所替换的”的概念。参考 <a href=\"https://zh.wikipedia.org/wiki/%E5%A5%91%E7%BA%A6%E5%BC%8F%E8%AE%BE%E8%AE%A1\" title=\"契约式设计\" target=\"_blank\" rel=\"external\">契约式设计</a>。</dd><br></dl><br></td><br></tr><br><tr><br><th>I</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\" target=\"_blank\" rel=\"external\">接口隔离原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\" target=\"_blank\" rel=\"external\">接口隔离原则</a></dt><br><dd>认为“多个特定客户端接口要好于一个宽泛用途的接口”<sup id=\"cite_ref-martin-design-principles_5-0\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。</dd><br></dl><br></td><br></tr><br><tr><br><th>D</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\" target=\"_blank\" rel=\"external\">依赖反转原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\" target=\"_blank\" rel=\"external\">依赖反转原则</a></dt><br><dd>认为一个方法应该遵从“依赖于抽象而不是一个实例”<sup id=\"cite_ref-martin-design-principles_5-1\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。<br><br><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\" title=\"依赖注入\" class=\"mw-redirect\" target=\"_blank\" rel=\"external\">依赖注入</a>是该原则的一种实现方式。</dd><br></dl><br></td><br></tr><br></tbody></table>\n\n","site":{"data":{}},"excerpt":"","more":"<p>The first five principles are principles of class design. They are:</p>\n<table border=\"1\" cellspacing=\"0\"><br><tbody><tr><td><b>SRP</b></td><br><td><a href=\"https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk\" target=\"_blank\" rel=\"external\">The Single Responsibility Principle</a></td><br><td><i>A class should have one, and only one, reason to change.</i></td><br></tr><br><tr><td><b>OCP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&amp;hl=en\" target=\"_blank\" rel=\"external\">The Open Closed Principle</a></td><br><td><i>You should be able to extend a classes behavior, without modifying it.</i></td><br></tr><br><tr><td><b>LSP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&amp;hl=en\" target=\"_blank\" rel=\"external\">The Liskov Substitution Principle</a></td><br><td><i>Derived classes must be substitutable for their base classes.</i></td><br></tr><br><tr><td><b>ISP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&amp;hl=en\" target=\"_blank\" rel=\"external\">The Interface Segregation Principle</a></td><br><td><i>Make fine grained interfaces that are client specific.</i></td><br></tr><br><tr><td><b>DIP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&amp;hl=en\" target=\"_blank\" rel=\"external\">The Dependency Inversion Principle</a></td><br><td><i>Depend on abstractions, not on concretions.</i></td><br></tr><br></tbody></table>\n\n<p>The next six principles are about packages. In this context a package is a binary deliverable like a .jar file, or a dll as opposed to a namespace like a java package or a C++ namespace.</p>\n<p>The first three package principles are about package cohesion, they tell us what to put inside packages:</p>\n<table border=\"1\" cellspacing=\"0\"><br><tbody><tr><td><b>REP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Release Reuse Equivalency Principle</a></td><br><td><i>The granule of reuse is the granule of release.</i></td><br></tr><br><tr><td><b>CCP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Common Closure Principle</a></td><br><td><i>Classes that change together are packaged together.</i></td><br></tr><br><tr><td><b>CRP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Common Reuse Principle</a></td><br><td><i>Classes that are used together are packaged together.</i></td><br></tr><br></tbody></table>\n\n\n<p>The last three principles are about the couplings between packages, and talk about metrics that evaluate the package structure of a system.</p>\n<table border=\"1\" cellspacing=\"0\"><br><tbody><tr><td><b>ADP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOGM2ZGFhNmYtNmE4ZS00OGY5LWFkZTYtMjE0ZGNjODQ0MjEx&amp;hl=en\" target=\"_blank\" rel=\"external\">The Acyclic Dependencies Principle</a></td><br><td><i>The dependency graph of packages must have no cycles.</i></td><br></tr><br><tr><td><b>SDP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\" target=\"_blank\" rel=\"external\">The Stable Dependencies Principle</a></td><br><td><i>Depend in the direction of stability.</i></td><br></tr><br><tr><td><b>SAP</b></td><br><td><a href=\"http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgZjI3OTU4ZTAtYmM4Mi00MWMyLTgxN2YtMzk5YTY1NTViNTBh&amp;hl=en\" target=\"_blank\" rel=\"external\">The Stable Abstractions Principle</a></td><br><td><i>Abstractness increases with stability.</i></td><br></tr><br></tbody></table>\n\n\n\n<p>中文版：</p>\n<table class=\"wikitable\" style=\"width: auto; font-size: 95%; table-layout: fixed; line-height:1.25; margin-left: auto; margin-right: auto;\"><br><tbody><tr><br><th>首字母</th><br><th>指代</th><br><th>概念</th><br></tr><br><tr><br><th>S</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\" target=\"_blank\" rel=\"external\">单一功能原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99\" title=\"单一功能原则\" target=\"_blank\" rel=\"external\">单一功能原则</a></dt><br><dd>认为<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%B9%E8%B1%A1_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)\" title=\"对象 (计算机科学)\" target=\"_blank\" rel=\"external\">对象</a>应该仅具有一种单一功能的概念。</dd><br></dl><br></td><br></tr><br><tr><br><th>O</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\" target=\"_blank\" rel=\"external\">开闭原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99\" title=\"开闭原则\" target=\"_blank\" rel=\"external\">开闭原则</a></dt><br><dd>认为“软件体应该是对于扩展开放的，但是对于修改封闭的”的概念。</dd><br></dl><br></td><br></tr><br><tr><br><th>L</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\" target=\"_blank\" rel=\"external\">里氏替换原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99\" title=\"里氏替换原则\" target=\"_blank\" rel=\"external\">里氏替换原则</a></dt><br><dd>认为“程序中的对象应该是可以在不改变程序正确性的前提下被它的子类所替换的”的概念。参考 <a href=\"https://zh.wikipedia.org/wiki/%E5%A5%91%E7%BA%A6%E5%BC%8F%E8%AE%BE%E8%AE%A1\" title=\"契约式设计\" target=\"_blank\" rel=\"external\">契约式设计</a>。</dd><br></dl><br></td><br></tr><br><tr><br><th>I</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\" target=\"_blank\" rel=\"external\">接口隔离原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99\" title=\"接口隔离原则\" target=\"_blank\" rel=\"external\">接口隔离原则</a></dt><br><dd>认为“多个特定客户端接口要好于一个宽泛用途的接口”<sup id=\"cite_ref-martin-design-principles_5-0\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。</dd><br></dl><br></td><br></tr><br><tr><br><th>D</th><br><td><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\" target=\"_blank\" rel=\"external\">依赖反转原则</a></td><br><td><br><dl><br><dt><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99\" title=\"依赖反转原则\" target=\"_blank\" rel=\"external\">依赖反转原则</a></dt><br><dd>认为一个方法应该遵从“依赖于抽象而不是一个实例”<sup id=\"cite_ref-martin-design-principles_5-1\" class=\"reference\"><a href=\"#cite_note-martin-design-principles-5\">[5]</a></sup> 的概念。<br><br><a href=\"https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\" title=\"依赖注入\" class=\"mw-redirect\" target=\"_blank\" rel=\"external\">依赖注入</a>是该原则的一种实现方式。</dd><br></dl><br></td><br></tr><br></tbody></table>\n\n"},{"title":"[PHP]深入理解Yii2的基础类","date":"2016-03-04T01:12:00.000Z","_content":"\n摘要：了解`Yii2`框架的基础支撑类。\n\n\n# Component\n\n`Component`是`Yii2`框架中非常重要的一个类。它主要实现了三个方面的功能：\n1. `property`: 重写了`__get()`和`__set()`方法，可以直接调用`getter/setter`方法来读写属性，或者读写`behaviors`中的同名属性。\n2. `event`:允许其他实例在`Component`上注册监听事件，当`Component::trigger()`被调用时，对应的回调函数会被调用。\n3. `hehavior`:允许动态的为`Component`添加方法/接口。实现方式是：重写`__call()`方法，如果在`_behaviors`有同名的方法，也可以被调用。相当于扩展了`Component`的方法和属性。\n\n\n## Component::behaviors()\n```php\nclass Component\n    + __call():\n        $this->ensureBehaivors():\n        then call;\n    + ensureBehaviors():\n        $this->attachBehaviorInternal();\n        $this->behaviors();\n```\n\n# Behavior\n\n两个功能：\n1. 把自己的方法注入的`Component`中去，增加`Component`的功能。\n2. 响应`$owner`抛发的事件，做对应的处理。\n\n```php\nclass Behavior\n    + attach($owner);\n    + detach();\n    + events();\n```\n\n\n# ActionFilter\n\n`ActionFilter`可以添加在`Module/Controller`上，监听`Module/Controller`的`beforeAction`和`afterAction`事件，做相应的处理。\n\n```php\nclass ActionFilter extends Behavior:\n    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件\n        $owner->on('beforeAction',[$this, 'beforeFilter']);\n    + beforeFilter($event):\n        $event->isValid = $this->beforeAction($event->action);\n        if $event->$isValid then\n            $this->owner->on('afterAction',[$this,'afterFilter']);\n        else\n            $event->handled = true;\n    + afterFilter($event);\n```\n\n\n# SercieLocator\n\nServiceLocator implements a [service locator](http://en.wikipedia.org/wiki/Service_locator_pattern).\n\n * To use ServiceLocator, you first need to register component IDs with the corresponding component definitions with the locator by calling `set()` or `setComponents()`.\n * You can then call `get()` to retrieve a component with the specified ID. The locator will automatically instantiate and configure the component according to the definition.\n\n`ServiceLocator`重要的方法：\n\n```php\nclass ServiceLocator:\n    + set($id,$defination); //设置某个组件的定义\n    + get($id); //如果未实例化，则根据定义新建。\n```\n\n\n# Controller\n\nMVC的重要组成部分，相当于一个路由，没啥核心功能：\n\n```php\nclass Controller:\n    + run($route,$params); //执行Action\n    + renderXXX(); //渲染输出结果，赋给Response\n```\n\n","source":"_posts/技术/[PHP]深入理解Yii2的基础类.md","raw":"---\ntags: \n- yii2 \n- component \n- action \n- filter\ntitle: '[PHP]深入理解Yii2的基础类'\ndate: 2016-03-04 09:12\ncategories: \n- 技术\n---\n\n摘要：了解`Yii2`框架的基础支撑类。\n\n\n# Component\n\n`Component`是`Yii2`框架中非常重要的一个类。它主要实现了三个方面的功能：\n1. `property`: 重写了`__get()`和`__set()`方法，可以直接调用`getter/setter`方法来读写属性，或者读写`behaviors`中的同名属性。\n2. `event`:允许其他实例在`Component`上注册监听事件，当`Component::trigger()`被调用时，对应的回调函数会被调用。\n3. `hehavior`:允许动态的为`Component`添加方法/接口。实现方式是：重写`__call()`方法，如果在`_behaviors`有同名的方法，也可以被调用。相当于扩展了`Component`的方法和属性。\n\n\n## Component::behaviors()\n```php\nclass Component\n    + __call():\n        $this->ensureBehaivors():\n        then call;\n    + ensureBehaviors():\n        $this->attachBehaviorInternal();\n        $this->behaviors();\n```\n\n# Behavior\n\n两个功能：\n1. 把自己的方法注入的`Component`中去，增加`Component`的功能。\n2. 响应`$owner`抛发的事件，做对应的处理。\n\n```php\nclass Behavior\n    + attach($owner);\n    + detach();\n    + events();\n```\n\n\n# ActionFilter\n\n`ActionFilter`可以添加在`Module/Controller`上，监听`Module/Controller`的`beforeAction`和`afterAction`事件，做相应的处理。\n\n```php\nclass ActionFilter extends Behavior:\n    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件\n        $owner->on('beforeAction',[$this, 'beforeFilter']);\n    + beforeFilter($event):\n        $event->isValid = $this->beforeAction($event->action);\n        if $event->$isValid then\n            $this->owner->on('afterAction',[$this,'afterFilter']);\n        else\n            $event->handled = true;\n    + afterFilter($event);\n```\n\n\n# SercieLocator\n\nServiceLocator implements a [service locator](http://en.wikipedia.org/wiki/Service_locator_pattern).\n\n * To use ServiceLocator, you first need to register component IDs with the corresponding component definitions with the locator by calling `set()` or `setComponents()`.\n * You can then call `get()` to retrieve a component with the specified ID. The locator will automatically instantiate and configure the component according to the definition.\n\n`ServiceLocator`重要的方法：\n\n```php\nclass ServiceLocator:\n    + set($id,$defination); //设置某个组件的定义\n    + get($id); //如果未实例化，则根据定义新建。\n```\n\n\n# Controller\n\nMVC的重要组成部分，相当于一个路由，没啥核心功能：\n\n```php\nclass Controller:\n    + run($route,$params); //执行Action\n    + renderXXX(); //渲染输出结果，赋给Response\n```\n\n","slug":"技术/[PHP]深入理解Yii2的基础类","published":1,"updated":"2017-07-26T16:09:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kps0040q0d4jlgm4pl8","content":"<p>摘要：了解<code>Yii2</code>框架的基础支撑类。</p>\n<h1 id=\"Component\"><a href=\"#Component\" class=\"headerlink\" title=\"Component\"></a>Component</h1><p><code>Component</code>是<code>Yii2</code>框架中非常重要的一个类。它主要实现了三个方面的功能：</p>\n<ol>\n<li><code>property</code>: 重写了<code>__get()</code>和<code>__set()</code>方法，可以直接调用<code>getter/setter</code>方法来读写属性，或者读写<code>behaviors</code>中的同名属性。</li>\n<li><code>event</code>:允许其他实例在<code>Component</code>上注册监听事件，当<code>Component::trigger()</code>被调用时，对应的回调函数会被调用。</li>\n<li><code>hehavior</code>:允许动态的为<code>Component</code>添加方法/接口。实现方式是：重写<code>__call()</code>方法，如果在<code>_behaviors</code>有同名的方法，也可以被调用。相当于扩展了<code>Component</code>的方法和属性。</li>\n</ol>\n<h2 id=\"Component-behaviors\"><a href=\"#Component-behaviors\" class=\"headerlink\" title=\"Component::behaviors()\"></a>Component::behaviors()</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Component</div><div class=\"line\">    + __call():</div><div class=\"line\">        $this-&gt;ensureBehaivors():</div><div class=\"line\">        then call;</div><div class=\"line\">    + ensureBehaviors():</div><div class=\"line\">        $this-&gt;attachBehaviorInternal();</div><div class=\"line\">        $this-&gt;behaviors();</div></pre></td></tr></table></figure>\n<h1 id=\"Behavior\"><a href=\"#Behavior\" class=\"headerlink\" title=\"Behavior\"></a>Behavior</h1><p>两个功能：</p>\n<ol>\n<li>把自己的方法注入的<code>Component</code>中去，增加<code>Component</code>的功能。</li>\n<li>响应<code>$owner</code>抛发的事件，做对应的处理。</li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Behavior</div><div class=\"line\">    + attach($owner);</div><div class=\"line\">    + detach();</div><div class=\"line\">    + events();</div></pre></td></tr></table></figure>\n<h1 id=\"ActionFilter\"><a href=\"#ActionFilter\" class=\"headerlink\" title=\"ActionFilter\"></a>ActionFilter</h1><p><code>ActionFilter</code>可以添加在<code>Module/Controller</code>上，监听<code>Module/Controller</code>的<code>beforeAction</code>和<code>afterAction</code>事件，做相应的处理。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ActionFilter extends Behavior:</div><div class=\"line\">    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件</div><div class=\"line\">        $owner-&gt;on('beforeAction',[$this, 'beforeFilter']);</div><div class=\"line\">    + beforeFilter($event):</div><div class=\"line\">        $event-&gt;isValid = $this-&gt;beforeAction($event-&gt;action);</div><div class=\"line\">        if $event-&gt;$isValid then</div><div class=\"line\">            $this-&gt;owner-&gt;on('afterAction',[$this,'afterFilter']);</div><div class=\"line\">        else</div><div class=\"line\">            $event-&gt;handled = true;</div><div class=\"line\">    + afterFilter($event);</div></pre></td></tr></table></figure>\n<h1 id=\"SercieLocator\"><a href=\"#SercieLocator\" class=\"headerlink\" title=\"SercieLocator\"></a>SercieLocator</h1><p>ServiceLocator implements a <a href=\"http://en.wikipedia.org/wiki/Service_locator_pattern\" target=\"_blank\" rel=\"external\">service locator</a>.</p>\n<ul>\n<li>To use ServiceLocator, you first need to register component IDs with the corresponding component definitions with the locator by calling <code>set()</code> or <code>setComponents()</code>.</li>\n<li>You can then call <code>get()</code> to retrieve a component with the specified ID. The locator will automatically instantiate and configure the component according to the definition.</li>\n</ul>\n<p><code>ServiceLocator</code>重要的方法：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ServiceLocator:</div><div class=\"line\">    + set($id,$defination); //设置某个组件的定义</div><div class=\"line\">    + get($id); //如果未实例化，则根据定义新建。</div></pre></td></tr></table></figure>\n<h1 id=\"Controller\"><a href=\"#Controller\" class=\"headerlink\" title=\"Controller\"></a>Controller</h1><p>MVC的重要组成部分，相当于一个路由，没啥核心功能：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Controller:</div><div class=\"line\">    + run($route,$params); //执行Action</div><div class=\"line\">    + renderXXX(); //渲染输出结果，赋给Response</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：了解<code>Yii2</code>框架的基础支撑类。</p>\n<h1 id=\"Component\"><a href=\"#Component\" class=\"headerlink\" title=\"Component\"></a>Component</h1><p><code>Component</code>是<code>Yii2</code>框架中非常重要的一个类。它主要实现了三个方面的功能：</p>\n<ol>\n<li><code>property</code>: 重写了<code>__get()</code>和<code>__set()</code>方法，可以直接调用<code>getter/setter</code>方法来读写属性，或者读写<code>behaviors</code>中的同名属性。</li>\n<li><code>event</code>:允许其他实例在<code>Component</code>上注册监听事件，当<code>Component::trigger()</code>被调用时，对应的回调函数会被调用。</li>\n<li><code>hehavior</code>:允许动态的为<code>Component</code>添加方法/接口。实现方式是：重写<code>__call()</code>方法，如果在<code>_behaviors</code>有同名的方法，也可以被调用。相当于扩展了<code>Component</code>的方法和属性。</li>\n</ol>\n<h2 id=\"Component-behaviors\"><a href=\"#Component-behaviors\" class=\"headerlink\" title=\"Component::behaviors()\"></a>Component::behaviors()</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Component</div><div class=\"line\">    + __call():</div><div class=\"line\">        $this-&gt;ensureBehaivors():</div><div class=\"line\">        then call;</div><div class=\"line\">    + ensureBehaviors():</div><div class=\"line\">        $this-&gt;attachBehaviorInternal();</div><div class=\"line\">        $this-&gt;behaviors();</div></pre></td></tr></table></figure>\n<h1 id=\"Behavior\"><a href=\"#Behavior\" class=\"headerlink\" title=\"Behavior\"></a>Behavior</h1><p>两个功能：</p>\n<ol>\n<li>把自己的方法注入的<code>Component</code>中去，增加<code>Component</code>的功能。</li>\n<li>响应<code>$owner</code>抛发的事件，做对应的处理。</li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Behavior</div><div class=\"line\">    + attach($owner);</div><div class=\"line\">    + detach();</div><div class=\"line\">    + events();</div></pre></td></tr></table></figure>\n<h1 id=\"ActionFilter\"><a href=\"#ActionFilter\" class=\"headerlink\" title=\"ActionFilter\"></a>ActionFilter</h1><p><code>ActionFilter</code>可以添加在<code>Module/Controller</code>上，监听<code>Module/Controller</code>的<code>beforeAction</code>和<code>afterAction</code>事件，做相应的处理。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ActionFilter extends Behavior:</div><div class=\"line\">    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件</div><div class=\"line\">        $owner-&gt;on('beforeAction',[$this, 'beforeFilter']);</div><div class=\"line\">    + beforeFilter($event):</div><div class=\"line\">        $event-&gt;isValid = $this-&gt;beforeAction($event-&gt;action);</div><div class=\"line\">        if $event-&gt;$isValid then</div><div class=\"line\">            $this-&gt;owner-&gt;on('afterAction',[$this,'afterFilter']);</div><div class=\"line\">        else</div><div class=\"line\">            $event-&gt;handled = true;</div><div class=\"line\">    + afterFilter($event);</div></pre></td></tr></table></figure>\n<h1 id=\"SercieLocator\"><a href=\"#SercieLocator\" class=\"headerlink\" title=\"SercieLocator\"></a>SercieLocator</h1><p>ServiceLocator implements a <a href=\"http://en.wikipedia.org/wiki/Service_locator_pattern\" target=\"_blank\" rel=\"external\">service locator</a>.</p>\n<ul>\n<li>To use ServiceLocator, you first need to register component IDs with the corresponding component definitions with the locator by calling <code>set()</code> or <code>setComponents()</code>.</li>\n<li>You can then call <code>get()</code> to retrieve a component with the specified ID. The locator will automatically instantiate and configure the component according to the definition.</li>\n</ul>\n<p><code>ServiceLocator</code>重要的方法：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ServiceLocator:</div><div class=\"line\">    + set($id,$defination); //设置某个组件的定义</div><div class=\"line\">    + get($id); //如果未实例化，则根据定义新建。</div></pre></td></tr></table></figure>\n<h1 id=\"Controller\"><a href=\"#Controller\" class=\"headerlink\" title=\"Controller\"></a>Controller</h1><p>MVC的重要组成部分，相当于一个路由，没啥核心功能：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Controller:</div><div class=\"line\">    + run($route,$params); //执行Action</div><div class=\"line\">    + renderXXX(); //渲染输出结果，赋给Response</div></pre></td></tr></table></figure>\n"},{"date":"2016-03-02T10:12:00.000Z","title":"[PHP]深入理解Yii2的生命周期","_content":"\n\n摘要：此文章为自己阅读Yii2框架代码的笔记，故不成为一篇完整的文章。如果你也在读Yii2的源码，或对Yii2很熟悉，可以作为参考。否则，可能很难懂。\n\n\n# \\yii\\web\\Application的生命周期\n\n在Yii2中，Application的生命分两步：__contruct()和run()。下面为这两步过程的调用层级关系。每一次缩进代表函数调用栈的增进异步。\n\n```php\nclass Application :\n    + __contruct():\n        preInit($config); //把coreComponents()添加到$config中去\n        registerErrorHandler($config); \n        Component::__coustruct($config):\n            Yii::configure($this,$config):\n                ServiceLocator::set($id,$definition); //设置每个组件的defination\n            Application::init():\n                Application::bootstrap(); //每个extension,每个bootstrap,createObject() AND bootstrap().\n    + run(): //处理request, 抛发一系列事件。\n        handleRequest();\n        reponse->send();\n\n```\n\n\n```php\nclass Application extends \\yii\\base\\Application:\n    + handleRequest():\n        Request::resolve(): //根据URL解析出 [$route, params]\n            UrlManager::parseRequest($this); //根据URL解析出 [$route, params]\n        $response = runAction($route,$params); // inherate from Module::runAction():\n            $controller=Module::createController($route, $params); //根据$route找到并创建Controller\n            $response=$controller->runAction($actionId, $params):\n                $action=Controller::createAction($id):\n                    return new InlineAction($this,$methodName);\n                $action->runWithParams($params):\n                    $controller->bindActionParams(); //为method准备参数\n                    call the method;\n                return $result;\n            return $response;\n        return $response;\n```\n\n\n\n# coreComponents\n\nApplication::coreComponents() 是一个Application必须的component，不管用户有没有在config文件中设置，这些组件都会创建和使用。  \n所有在config文件中设置或者在coreComponents()中的组件，都不需要手动创建，通过Application->get($componentId)都可以自动创建。\n\n\\yii\\base\\Application的核心组件：\n\n```php\npublic function coreComponents()\n{\n    return [\n        'log' => ['class' => 'yii\\log\\Dispatcher'],\n        'view' => ['class' => 'yii\\web\\View'],\n        'formatter' => ['class' => 'yii\\i18n\\Formatter'],\n        'i18n' => ['class' => 'yii\\i18n\\I18N'],\n        'mailer' => ['class' => 'yii\\swiftmailer\\Mailer'],\n        'urlManager' => ['class' => 'yii\\web\\UrlManager'],\n        'assetManager' => ['class' => 'yii\\web\\AssetManager'],\n        'security' => ['class' => 'yii\\base\\Security'],\n    ];\n}\n```\n\n\n\\yii\\web\\Application的必要组件：coreComponents()\n\n```php\npublic function coreComponents()\n{\n    return array_merge(parent::coreComponents(), [\n        'request' => ['class' => 'yii\\web\\Request'],\n        'response' => ['class' => 'yii\\web\\Response'],\n        'session' => ['class' => 'yii\\web\\Session'],\n        'user' => ['class' => 'yii\\web\\User'],\n        'errorHandler' => ['class' => 'yii\\web\\ErrorHandler'],\n    ]);\n}\n```\n\n\n\n\n# \\yii\\BaseYii\n\n`BaseYii`重要的方法：\n\n```php\nclss BaseYii:\n    + createObject($type, array $params = []); //根据配置信息创建Object\n    + configure($object, $properties); // copy properties\n```\n\n\n\n\n\n到此，我们大概了解了Application的生命周期里，主要做了哪些事情。当然，本文只介绍了概要流程。因为，涉及到具体的`coreComponents()`我们涉及的很少，而这些才是真正做事情的类，我们将在[下一篇文章](http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-corecomponents)中介绍。\n","source":"_posts/技术/[PHP]深入理解Yii2的lifecycle.md","raw":"---\ndate: 2016-03-02 18:12\ntitle: '[PHP]深入理解Yii2的生命周期'\ncategories: \n- 技术\ntags:\n- yii2 \n- php \n- application \n- run\n---\n\n\n摘要：此文章为自己阅读Yii2框架代码的笔记，故不成为一篇完整的文章。如果你也在读Yii2的源码，或对Yii2很熟悉，可以作为参考。否则，可能很难懂。\n\n\n# \\yii\\web\\Application的生命周期\n\n在Yii2中，Application的生命分两步：__contruct()和run()。下面为这两步过程的调用层级关系。每一次缩进代表函数调用栈的增进异步。\n\n```php\nclass Application :\n    + __contruct():\n        preInit($config); //把coreComponents()添加到$config中去\n        registerErrorHandler($config); \n        Component::__coustruct($config):\n            Yii::configure($this,$config):\n                ServiceLocator::set($id,$definition); //设置每个组件的defination\n            Application::init():\n                Application::bootstrap(); //每个extension,每个bootstrap,createObject() AND bootstrap().\n    + run(): //处理request, 抛发一系列事件。\n        handleRequest();\n        reponse->send();\n\n```\n\n\n```php\nclass Application extends \\yii\\base\\Application:\n    + handleRequest():\n        Request::resolve(): //根据URL解析出 [$route, params]\n            UrlManager::parseRequest($this); //根据URL解析出 [$route, params]\n        $response = runAction($route,$params); // inherate from Module::runAction():\n            $controller=Module::createController($route, $params); //根据$route找到并创建Controller\n            $response=$controller->runAction($actionId, $params):\n                $action=Controller::createAction($id):\n                    return new InlineAction($this,$methodName);\n                $action->runWithParams($params):\n                    $controller->bindActionParams(); //为method准备参数\n                    call the method;\n                return $result;\n            return $response;\n        return $response;\n```\n\n\n\n# coreComponents\n\nApplication::coreComponents() 是一个Application必须的component，不管用户有没有在config文件中设置，这些组件都会创建和使用。  \n所有在config文件中设置或者在coreComponents()中的组件，都不需要手动创建，通过Application->get($componentId)都可以自动创建。\n\n\\yii\\base\\Application的核心组件：\n\n```php\npublic function coreComponents()\n{\n    return [\n        'log' => ['class' => 'yii\\log\\Dispatcher'],\n        'view' => ['class' => 'yii\\web\\View'],\n        'formatter' => ['class' => 'yii\\i18n\\Formatter'],\n        'i18n' => ['class' => 'yii\\i18n\\I18N'],\n        'mailer' => ['class' => 'yii\\swiftmailer\\Mailer'],\n        'urlManager' => ['class' => 'yii\\web\\UrlManager'],\n        'assetManager' => ['class' => 'yii\\web\\AssetManager'],\n        'security' => ['class' => 'yii\\base\\Security'],\n    ];\n}\n```\n\n\n\\yii\\web\\Application的必要组件：coreComponents()\n\n```php\npublic function coreComponents()\n{\n    return array_merge(parent::coreComponents(), [\n        'request' => ['class' => 'yii\\web\\Request'],\n        'response' => ['class' => 'yii\\web\\Response'],\n        'session' => ['class' => 'yii\\web\\Session'],\n        'user' => ['class' => 'yii\\web\\User'],\n        'errorHandler' => ['class' => 'yii\\web\\ErrorHandler'],\n    ]);\n}\n```\n\n\n\n\n# \\yii\\BaseYii\n\n`BaseYii`重要的方法：\n\n```php\nclss BaseYii:\n    + createObject($type, array $params = []); //根据配置信息创建Object\n    + configure($object, $properties); // copy properties\n```\n\n\n\n\n\n到此，我们大概了解了Application的生命周期里，主要做了哪些事情。当然，本文只介绍了概要流程。因为，涉及到具体的`coreComponents()`我们涉及的很少，而这些才是真正做事情的类，我们将在[下一篇文章](http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-corecomponents)中介绍。\n","slug":"技术/[PHP]深入理解Yii2的lifecycle","published":1,"updated":"2017-07-26T16:11:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpu0044q0d4s4qpbydt","content":"<p>摘要：此文章为自己阅读Yii2框架代码的笔记，故不成为一篇完整的文章。如果你也在读Yii2的源码，或对Yii2很熟悉，可以作为参考。否则，可能很难懂。</p>\n<h1 id=\"yii-web-Application的生命周期\"><a href=\"#yii-web-Application的生命周期\" class=\"headerlink\" title=\"\\yii\\web\\Application的生命周期\"></a>\\yii\\web\\Application的生命周期</h1><p>在Yii2中，Application的生命分两步：__contruct()和run()。下面为这两步过程的调用层级关系。每一次缩进代表函数调用栈的增进异步。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Application :</div><div class=\"line\">    + __contruct():</div><div class=\"line\">        preInit($config); //把coreComponents()添加到$config中去</div><div class=\"line\">        registerErrorHandler($config); </div><div class=\"line\">        Component::__coustruct($config):</div><div class=\"line\">            Yii::configure($this,$config):</div><div class=\"line\">                ServiceLocator::set($id,$definition); //设置每个组件的defination</div><div class=\"line\">            Application::init():</div><div class=\"line\">                Application::bootstrap(); //每个extension,每个bootstrap,createObject() AND bootstrap().</div><div class=\"line\">    + run(): //处理request, 抛发一系列事件。</div><div class=\"line\">        handleRequest();</div><div class=\"line\">        reponse-&gt;send();</div></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Application extends \\yii\\base\\Application:</div><div class=\"line\">    + handleRequest():</div><div class=\"line\">        Request::resolve(): //根据URL解析出 [$route, params]</div><div class=\"line\">            UrlManager::parseRequest($this); //根据URL解析出 [$route, params]</div><div class=\"line\">        $response = runAction($route,$params); // inherate from Module::runAction():</div><div class=\"line\">            $controller=Module::createController($route, $params); //根据$route找到并创建Controller</div><div class=\"line\">            $response=$controller-&gt;runAction($actionId, $params):</div><div class=\"line\">                $action=Controller::createAction($id):</div><div class=\"line\">                    return new InlineAction($this,$methodName);</div><div class=\"line\">                $action-&gt;runWithParams($params):</div><div class=\"line\">                    $controller-&gt;bindActionParams(); //为method准备参数</div><div class=\"line\">                    call the method;</div><div class=\"line\">                return $result;</div><div class=\"line\">            return $response;</div><div class=\"line\">        return $response;</div></pre></td></tr></table></figure>\n<h1 id=\"coreComponents\"><a href=\"#coreComponents\" class=\"headerlink\" title=\"coreComponents\"></a>coreComponents</h1><p>Application::coreComponents() 是一个Application必须的component，不管用户有没有在config文件中设置，这些组件都会创建和使用。<br>所有在config文件中设置或者在coreComponents()中的组件，都不需要手动创建，通过Application-&gt;get($componentId)都可以自动创建。</p>\n<p>\\yii\\base\\Application的核心组件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> [</div><div class=\"line\">        <span class=\"string\">'log'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\log\\Dispatcher'</span>],</div><div class=\"line\">        <span class=\"string\">'view'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\View'</span>],</div><div class=\"line\">        <span class=\"string\">'formatter'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\Formatter'</span>],</div><div class=\"line\">        <span class=\"string\">'i18n'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\I18N'</span>],</div><div class=\"line\">        <span class=\"string\">'mailer'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\swiftmailer\\Mailer'</span>],</div><div class=\"line\">        <span class=\"string\">'urlManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\UrlManager'</span>],</div><div class=\"line\">        <span class=\"string\">'assetManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\AssetManager'</span>],</div><div class=\"line\">        <span class=\"string\">'security'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\base\\Security'</span>],</div><div class=\"line\">    ];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>\\yii\\web\\Application的必要组件：coreComponents()</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> array_merge(<span class=\"keyword\">parent</span>::coreComponents(), [</div><div class=\"line\">        <span class=\"string\">'request'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Request'</span>],</div><div class=\"line\">        <span class=\"string\">'response'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Response'</span>],</div><div class=\"line\">        <span class=\"string\">'session'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Session'</span>],</div><div class=\"line\">        <span class=\"string\">'user'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\User'</span>],</div><div class=\"line\">        <span class=\"string\">'errorHandler'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\ErrorHandler'</span>],</div><div class=\"line\">    ]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"yii-BaseYii\"><a href=\"#yii-BaseYii\" class=\"headerlink\" title=\"\\yii\\BaseYii\"></a>\\yii\\BaseYii</h1><p><code>BaseYii</code>重要的方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">clss BaseYii:</div><div class=\"line\">    + createObject($type, <span class=\"keyword\">array</span> $params = []); <span class=\"comment\">//根据配置信息创建Object</span></div><div class=\"line\">    + configure($object, $properties); <span class=\"comment\">// copy properties</span></div></pre></td></tr></table></figure>\n<p>到此，我们大概了解了Application的生命周期里，主要做了哪些事情。当然，本文只介绍了概要流程。因为，涉及到具体的<code>coreComponents()</code>我们涉及的很少，而这些才是真正做事情的类，我们将在<a href=\"http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-corecomponents\" target=\"_blank\" rel=\"external\">下一篇文章</a>中介绍。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：此文章为自己阅读Yii2框架代码的笔记，故不成为一篇完整的文章。如果你也在读Yii2的源码，或对Yii2很熟悉，可以作为参考。否则，可能很难懂。</p>\n<h1 id=\"yii-web-Application的生命周期\"><a href=\"#yii-web-Application的生命周期\" class=\"headerlink\" title=\"\\yii\\web\\Application的生命周期\"></a>\\yii\\web\\Application的生命周期</h1><p>在Yii2中，Application的生命分两步：__contruct()和run()。下面为这两步过程的调用层级关系。每一次缩进代表函数调用栈的增进异步。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Application :</div><div class=\"line\">    + __contruct():</div><div class=\"line\">        preInit($config); //把coreComponents()添加到$config中去</div><div class=\"line\">        registerErrorHandler($config); </div><div class=\"line\">        Component::__coustruct($config):</div><div class=\"line\">            Yii::configure($this,$config):</div><div class=\"line\">                ServiceLocator::set($id,$definition); //设置每个组件的defination</div><div class=\"line\">            Application::init():</div><div class=\"line\">                Application::bootstrap(); //每个extension,每个bootstrap,createObject() AND bootstrap().</div><div class=\"line\">    + run(): //处理request, 抛发一系列事件。</div><div class=\"line\">        handleRequest();</div><div class=\"line\">        reponse-&gt;send();</div></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Application extends \\yii\\base\\Application:</div><div class=\"line\">    + handleRequest():</div><div class=\"line\">        Request::resolve(): //根据URL解析出 [$route, params]</div><div class=\"line\">            UrlManager::parseRequest($this); //根据URL解析出 [$route, params]</div><div class=\"line\">        $response = runAction($route,$params); // inherate from Module::runAction():</div><div class=\"line\">            $controller=Module::createController($route, $params); //根据$route找到并创建Controller</div><div class=\"line\">            $response=$controller-&gt;runAction($actionId, $params):</div><div class=\"line\">                $action=Controller::createAction($id):</div><div class=\"line\">                    return new InlineAction($this,$methodName);</div><div class=\"line\">                $action-&gt;runWithParams($params):</div><div class=\"line\">                    $controller-&gt;bindActionParams(); //为method准备参数</div><div class=\"line\">                    call the method;</div><div class=\"line\">                return $result;</div><div class=\"line\">            return $response;</div><div class=\"line\">        return $response;</div></pre></td></tr></table></figure>\n<h1 id=\"coreComponents\"><a href=\"#coreComponents\" class=\"headerlink\" title=\"coreComponents\"></a>coreComponents</h1><p>Application::coreComponents() 是一个Application必须的component，不管用户有没有在config文件中设置，这些组件都会创建和使用。<br>所有在config文件中设置或者在coreComponents()中的组件，都不需要手动创建，通过Application-&gt;get($componentId)都可以自动创建。</p>\n<p>\\yii\\base\\Application的核心组件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> [</div><div class=\"line\">        <span class=\"string\">'log'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\log\\Dispatcher'</span>],</div><div class=\"line\">        <span class=\"string\">'view'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\View'</span>],</div><div class=\"line\">        <span class=\"string\">'formatter'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\Formatter'</span>],</div><div class=\"line\">        <span class=\"string\">'i18n'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\I18N'</span>],</div><div class=\"line\">        <span class=\"string\">'mailer'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\swiftmailer\\Mailer'</span>],</div><div class=\"line\">        <span class=\"string\">'urlManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\UrlManager'</span>],</div><div class=\"line\">        <span class=\"string\">'assetManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\AssetManager'</span>],</div><div class=\"line\">        <span class=\"string\">'security'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\base\\Security'</span>],</div><div class=\"line\">    ];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>\\yii\\web\\Application的必要组件：coreComponents()</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> array_merge(<span class=\"keyword\">parent</span>::coreComponents(), [</div><div class=\"line\">        <span class=\"string\">'request'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Request'</span>],</div><div class=\"line\">        <span class=\"string\">'response'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Response'</span>],</div><div class=\"line\">        <span class=\"string\">'session'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Session'</span>],</div><div class=\"line\">        <span class=\"string\">'user'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\User'</span>],</div><div class=\"line\">        <span class=\"string\">'errorHandler'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\ErrorHandler'</span>],</div><div class=\"line\">    ]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"yii-BaseYii\"><a href=\"#yii-BaseYii\" class=\"headerlink\" title=\"\\yii\\BaseYii\"></a>\\yii\\BaseYii</h1><p><code>BaseYii</code>重要的方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">clss BaseYii:</div><div class=\"line\">    + createObject($type, <span class=\"keyword\">array</span> $params = []); <span class=\"comment\">//根据配置信息创建Object</span></div><div class=\"line\">    + configure($object, $properties); <span class=\"comment\">// copy properties</span></div></pre></td></tr></table></figure>\n<p>到此，我们大概了解了Application的生命周期里，主要做了哪些事情。当然，本文只介绍了概要流程。因为，涉及到具体的<code>coreComponents()</code>我们涉及的很少，而这些才是真正做事情的类，我们将在<a href=\"http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-corecomponents\" target=\"_blank\" rel=\"external\">下一篇文章</a>中介绍。</p>\n"},{"date":"2015-05-14T10:46:00.000Z","title":"[PHP]PHP程序员技能站","_content":"\n\n摘要：创业不息、折腾不止，今年跟朋友又折腾了一个新项目：[Color公寓](color520.com)。线上产品主要是一个在线网站，所以不得不把技术栈切换到**网站开发**模式。通过最近一段时间alpha版本的开发，对于PHP开发有一个全面而粗浅的了解。又因为面试需要，在这里做一下总结。\n\n\n<a name=\"写在前面\"></a>\n## 写在前面\n\n当我们谈到**PHP开发**，我们其实是在谈论`网站`，`数据库`，`缓存`，`session`，`负载均衡`等等等等一些列复杂技术的集合。所以，PHP的技能站也比一般得要长很多。\n\n<a name=\"php基础\"></a>\n## PHP基础\n\n在这里，你需要了解的是：\n\n1. 在各个平台安装php并用php内置的web服务器成功的见到“Hello PHP”界面。\n2. PHP函数式编程语法，面向对象语法，命名空间。\n4. PHP标准库的熟悉。\n5. 调试工具：起码要知道xdebug的使用方法。\n6. 依赖包管理工具的安装、使用、原理，最常用的：composer,pear。\n7. 语法性能及原理：\n    8. 万能的array。用法、实现原理、使用注意事项。（关键字：Hash Table）。\n    9. 字符串链接的效率。\n    10. 弱类型的实现原理。（关键字：zval）\n8. Http协议，Get/Post请求的不同。 \n\n<a name=\"php原理\"></a>\n## PHP原理\n\n<a name=\"设计理念及特点\"></a>\n### 设计理念及特点\n\n1. 多线程模型，请求独立。\n2. 弱类型语言。\n3. 引擎（Zend）+组件（ext）的组合模式。\n\n<a name=\"php四层体系\"></a>\n### PHP四层体系\n\n1. **Zend引擎**：Zend整体用纯C实现，是PHP的内核部分，它将PHP代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕Zend实现。\n2. **Extensions**：围绕着Zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的PHP中间层、富文本解析就是extension的典型应用）。\n3. **Sapi**：Sapi全称是Server Application Programming Interface，也就是服务端应用编程接口，Sapi通过一系列钩子函数，使得PHP可以和外围交互数据，这是PHP非常优雅和成功的一个设计，通过sapi成功的将PHP本身和上层应用解耦隔离，PHP可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。\n4. **上层应用**：这就是我们平时编写的PHP程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。\n\n<a name=\"mvc-框架\"></a>\n## MVC 框架\n\n1. MVC理论。\n1. PHP模板。\n2. 常见的开源MVC框架，至少对其中一种有深入研究。 \n\n<a name=\"oop、设计模式、重构\"></a>\n## OOP、设计模式、重构\n\n1. 面向对象编程的基础：继承、封装、多态。\n2. 常见的设计模式及应用场景。[参考](http://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA))\n3. 对代码的坏味道有敏锐的嗅觉，掌握基本的重构方法。\n\n\n<a name=\"web前端技能\"></a>\n## Web前端技能\n\n1. HTML/CSS/JavaScript 基础。\n2. 缓存，Cookie，Session原理和使用。\n\n\n<a name=\"mysql数据库技能\"></a>\n## MySQL数据库技能\n\n1. MySQL安装和配置\n1. MySQL增删改查基本语法\n2. 数据库设计原则和常见的技巧\n3. MySQL性能诊断和优化\n4. 分布式数据库设计、数据库备份和恢复 \n\n<a name=\"服务器架设\"></a>\n## 服务器架设\n\n1. Linux常用命令。\n2. dns,cdn,缓存,带宽等资源的合理利用。\n3. nginx,apache安装和配置。\n4. 图床的架设。（关键字：EvaCloudImage）\n\n<a name=\"引用\"></a>\n## 引用\n\n1. [PHP The Right Way](http://laravel-china.github.io/php-the-right-way/)\n2. [PHP底层的运行机制与原理](http://nonfu.me/p/232.html)\n3. [A Baseline for Front-End Developers](http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers/)\n4. [代码重构](http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84)\n5. [ 一次完整的HTTP事务是怎样一个过程？](http://linux5588.blog.51cto.com/65280/1351007)\n\n<a name=\"广告\"></a>\n## 广告\n\n好吧，下面是广告时间：\n\n【Color国际青年公寓】是麦芒资产旗下的主打项目，一个面向租房市场的O2O项目。  简单来说：就是将现有出租房统一包装之后再分租给客户，统一规范管理；然后利用租客的天然流量优势，打造更加丰富的O2O生活闭环。面向群体是中等以上收入的年轻人。  \n我们的创始团队来自于阿里巴巴、美国雅虎、完美世界、魅族等一线企业，线下也有10多年地产中介经验的人才加盟。核心创始人已多次创业。  \n丰富的创业经验，千万级的天使融资，为您的未来提供了更有力的保证！  \n只要您认同我们的文化，有舍我其谁的自信，就果断向我们砸简历吧：<hr@color520.com>，待遇绝对超过BAT。\n详情见：[Color国际青年公寓](http://www.cnblogs.com/jhzhu/p/4377942.html)\n\n\n","source":"_posts/技术/[PHP]程序员技能栈.md","raw":"---\ndate: 2015-05-14 18:46\ntitle: '[PHP]PHP程序员技能站'\ncategories: \n- 技术\ntags:\n- php\n- mysql\n- cache\n- css\n- xdebug\n- composer\n- pear\n---\n\n\n摘要：创业不息、折腾不止，今年跟朋友又折腾了一个新项目：[Color公寓](color520.com)。线上产品主要是一个在线网站，所以不得不把技术栈切换到**网站开发**模式。通过最近一段时间alpha版本的开发，对于PHP开发有一个全面而粗浅的了解。又因为面试需要，在这里做一下总结。\n\n\n<a name=\"写在前面\"></a>\n## 写在前面\n\n当我们谈到**PHP开发**，我们其实是在谈论`网站`，`数据库`，`缓存`，`session`，`负载均衡`等等等等一些列复杂技术的集合。所以，PHP的技能站也比一般得要长很多。\n\n<a name=\"php基础\"></a>\n## PHP基础\n\n在这里，你需要了解的是：\n\n1. 在各个平台安装php并用php内置的web服务器成功的见到“Hello PHP”界面。\n2. PHP函数式编程语法，面向对象语法，命名空间。\n4. PHP标准库的熟悉。\n5. 调试工具：起码要知道xdebug的使用方法。\n6. 依赖包管理工具的安装、使用、原理，最常用的：composer,pear。\n7. 语法性能及原理：\n    8. 万能的array。用法、实现原理、使用注意事项。（关键字：Hash Table）。\n    9. 字符串链接的效率。\n    10. 弱类型的实现原理。（关键字：zval）\n8. Http协议，Get/Post请求的不同。 \n\n<a name=\"php原理\"></a>\n## PHP原理\n\n<a name=\"设计理念及特点\"></a>\n### 设计理念及特点\n\n1. 多线程模型，请求独立。\n2. 弱类型语言。\n3. 引擎（Zend）+组件（ext）的组合模式。\n\n<a name=\"php四层体系\"></a>\n### PHP四层体系\n\n1. **Zend引擎**：Zend整体用纯C实现，是PHP的内核部分，它将PHP代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕Zend实现。\n2. **Extensions**：围绕着Zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的PHP中间层、富文本解析就是extension的典型应用）。\n3. **Sapi**：Sapi全称是Server Application Programming Interface，也就是服务端应用编程接口，Sapi通过一系列钩子函数，使得PHP可以和外围交互数据，这是PHP非常优雅和成功的一个设计，通过sapi成功的将PHP本身和上层应用解耦隔离，PHP可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。\n4. **上层应用**：这就是我们平时编写的PHP程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。\n\n<a name=\"mvc-框架\"></a>\n## MVC 框架\n\n1. MVC理论。\n1. PHP模板。\n2. 常见的开源MVC框架，至少对其中一种有深入研究。 \n\n<a name=\"oop、设计模式、重构\"></a>\n## OOP、设计模式、重构\n\n1. 面向对象编程的基础：继承、封装、多态。\n2. 常见的设计模式及应用场景。[参考](http://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA))\n3. 对代码的坏味道有敏锐的嗅觉，掌握基本的重构方法。\n\n\n<a name=\"web前端技能\"></a>\n## Web前端技能\n\n1. HTML/CSS/JavaScript 基础。\n2. 缓存，Cookie，Session原理和使用。\n\n\n<a name=\"mysql数据库技能\"></a>\n## MySQL数据库技能\n\n1. MySQL安装和配置\n1. MySQL增删改查基本语法\n2. 数据库设计原则和常见的技巧\n3. MySQL性能诊断和优化\n4. 分布式数据库设计、数据库备份和恢复 \n\n<a name=\"服务器架设\"></a>\n## 服务器架设\n\n1. Linux常用命令。\n2. dns,cdn,缓存,带宽等资源的合理利用。\n3. nginx,apache安装和配置。\n4. 图床的架设。（关键字：EvaCloudImage）\n\n<a name=\"引用\"></a>\n## 引用\n\n1. [PHP The Right Way](http://laravel-china.github.io/php-the-right-way/)\n2. [PHP底层的运行机制与原理](http://nonfu.me/p/232.html)\n3. [A Baseline for Front-End Developers](http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers/)\n4. [代码重构](http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84)\n5. [ 一次完整的HTTP事务是怎样一个过程？](http://linux5588.blog.51cto.com/65280/1351007)\n\n<a name=\"广告\"></a>\n## 广告\n\n好吧，下面是广告时间：\n\n【Color国际青年公寓】是麦芒资产旗下的主打项目，一个面向租房市场的O2O项目。  简单来说：就是将现有出租房统一包装之后再分租给客户，统一规范管理；然后利用租客的天然流量优势，打造更加丰富的O2O生活闭环。面向群体是中等以上收入的年轻人。  \n我们的创始团队来自于阿里巴巴、美国雅虎、完美世界、魅族等一线企业，线下也有10多年地产中介经验的人才加盟。核心创始人已多次创业。  \n丰富的创业经验，千万级的天使融资，为您的未来提供了更有力的保证！  \n只要您认同我们的文化，有舍我其谁的自信，就果断向我们砸简历吧：<hr@color520.com>，待遇绝对超过BAT。\n详情见：[Color国际青年公寓](http://www.cnblogs.com/jhzhu/p/4377942.html)\n\n\n","slug":"技术/[PHP]程序员技能栈","published":1,"updated":"2017-07-26T16:09:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kpv0046q0d4zbbp1kl7","content":"<p>摘要：创业不息、折腾不止，今年跟朋友又折腾了一个新项目：<a href=\"color520.com\">Color公寓</a>。线上产品主要是一个在线网站，所以不得不把技术栈切换到<strong>网站开发</strong>模式。通过最近一段时间alpha版本的开发，对于PHP开发有一个全面而粗浅的了解。又因为面试需要，在这里做一下总结。</p>\n<p><a name=\"写在前面\"></a></p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>当我们谈到<strong>PHP开发</strong>，我们其实是在谈论<code>网站</code>，<code>数据库</code>，<code>缓存</code>，<code>session</code>，<code>负载均衡</code>等等等等一些列复杂技术的集合。所以，PHP的技能站也比一般得要长很多。</p>\n<p><a name=\"php基础\"></a></p>\n<h2 id=\"PHP基础\"><a href=\"#PHP基础\" class=\"headerlink\" title=\"PHP基础\"></a>PHP基础</h2><p>在这里，你需要了解的是：</p>\n<ol>\n<li>在各个平台安装php并用php内置的web服务器成功的见到“Hello PHP”界面。</li>\n<li>PHP函数式编程语法，面向对象语法，命名空间。</li>\n<li>PHP标准库的熟悉。</li>\n<li>调试工具：起码要知道xdebug的使用方法。</li>\n<li>依赖包管理工具的安装、使用、原理，最常用的：composer,pear。</li>\n<li>语法性能及原理：<ol>\n<li>万能的array。用法、实现原理、使用注意事项。（关键字：Hash Table）。</li>\n<li>字符串链接的效率。</li>\n<li>弱类型的实现原理。（关键字：zval）</li>\n</ol>\n</li>\n<li>Http协议，Get/Post请求的不同。 </li>\n</ol>\n<p><a name=\"php原理\"></a></p>\n<h2 id=\"PHP原理\"><a href=\"#PHP原理\" class=\"headerlink\" title=\"PHP原理\"></a>PHP原理</h2><p><a name=\"设计理念及特点\"></a></p>\n<h3 id=\"设计理念及特点\"><a href=\"#设计理念及特点\" class=\"headerlink\" title=\"设计理念及特点\"></a>设计理念及特点</h3><ol>\n<li>多线程模型，请求独立。</li>\n<li>弱类型语言。</li>\n<li>引擎（Zend）+组件（ext）的组合模式。</li>\n</ol>\n<p><a name=\"php四层体系\"></a></p>\n<h3 id=\"PHP四层体系\"><a href=\"#PHP四层体系\" class=\"headerlink\" title=\"PHP四层体系\"></a>PHP四层体系</h3><ol>\n<li><strong>Zend引擎</strong>：Zend整体用纯C实现，是PHP的内核部分，它将PHP代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕Zend实现。</li>\n<li><strong>Extensions</strong>：围绕着Zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的PHP中间层、富文本解析就是extension的典型应用）。</li>\n<li><strong>Sapi</strong>：Sapi全称是Server Application Programming Interface，也就是服务端应用编程接口，Sapi通过一系列钩子函数，使得PHP可以和外围交互数据，这是PHP非常优雅和成功的一个设计，通过sapi成功的将PHP本身和上层应用解耦隔离，PHP可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。</li>\n<li><strong>上层应用</strong>：这就是我们平时编写的PHP程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。</li>\n</ol>\n<p><a name=\"mvc-框架\"></a></p>\n<h2 id=\"MVC-框架\"><a href=\"#MVC-框架\" class=\"headerlink\" title=\"MVC 框架\"></a>MVC 框架</h2><ol>\n<li>MVC理论。</li>\n<li>PHP模板。</li>\n<li>常见的开源MVC框架，至少对其中一种有深入研究。 </li>\n</ol>\n<p><a name=\"oop、设计模式、重构\"></a></p>\n<h2 id=\"OOP、设计模式、重构\"><a href=\"#OOP、设计模式、重构\" class=\"headerlink\" title=\"OOP、设计模式、重构\"></a>OOP、设计模式、重构</h2><ol>\n<li>面向对象编程的基础：继承、封装、多态。</li>\n<li>常见的设计模式及应用场景。<a href=\"http://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA\" target=\"_blank\" rel=\"external\">参考</a>)</li>\n<li>对代码的坏味道有敏锐的嗅觉，掌握基本的重构方法。</li>\n</ol>\n<p><a name=\"web前端技能\"></a></p>\n<h2 id=\"Web前端技能\"><a href=\"#Web前端技能\" class=\"headerlink\" title=\"Web前端技能\"></a>Web前端技能</h2><ol>\n<li>HTML/CSS/JavaScript 基础。</li>\n<li>缓存，Cookie，Session原理和使用。</li>\n</ol>\n<p><a name=\"mysql数据库技能\"></a></p>\n<h2 id=\"MySQL数据库技能\"><a href=\"#MySQL数据库技能\" class=\"headerlink\" title=\"MySQL数据库技能\"></a>MySQL数据库技能</h2><ol>\n<li>MySQL安装和配置</li>\n<li>MySQL增删改查基本语法</li>\n<li>数据库设计原则和常见的技巧</li>\n<li>MySQL性能诊断和优化</li>\n<li>分布式数据库设计、数据库备份和恢复 </li>\n</ol>\n<p><a name=\"服务器架设\"></a></p>\n<h2 id=\"服务器架设\"><a href=\"#服务器架设\" class=\"headerlink\" title=\"服务器架设\"></a>服务器架设</h2><ol>\n<li>Linux常用命令。</li>\n<li>dns,cdn,缓存,带宽等资源的合理利用。</li>\n<li>nginx,apache安装和配置。</li>\n<li>图床的架设。（关键字：EvaCloudImage）</li>\n</ol>\n<p><a name=\"引用\"></a></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ol>\n<li><a href=\"http://laravel-china.github.io/php-the-right-way/\" target=\"_blank\" rel=\"external\">PHP The Right Way</a></li>\n<li><a href=\"http://nonfu.me/p/232.html\" target=\"_blank\" rel=\"external\">PHP底层的运行机制与原理</a></li>\n<li><a href=\"http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers/\" target=\"_blank\" rel=\"external\">A Baseline for Front-End Developers</a></li>\n<li><a href=\"http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84\" target=\"_blank\" rel=\"external\">代码重构</a></li>\n<li><a href=\"http://linux5588.blog.51cto.com/65280/1351007\" target=\"_blank\" rel=\"external\"> 一次完整的HTTP事务是怎样一个过程？</a></li>\n</ol>\n<p><a name=\"广告\"></a></p>\n<h2 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h2><p>好吧，下面是广告时间：</p>\n<p>【Color国际青年公寓】是麦芒资产旗下的主打项目，一个面向租房市场的O2O项目。  简单来说：就是将现有出租房统一包装之后再分租给客户，统一规范管理；然后利用租客的天然流量优势，打造更加丰富的O2O生活闭环。面向群体是中等以上收入的年轻人。<br>我们的创始团队来自于阿里巴巴、美国雅虎、完美世界、魅族等一线企业，线下也有10多年地产中介经验的人才加盟。核心创始人已多次创业。<br>丰富的创业经验，千万级的天使融资，为您的未来提供了更有力的保证！<br>只要您认同我们的文化，有舍我其谁的自信，就果断向我们砸简历吧：<a href=\"&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x68;&#114;&#x40;&#x63;&#x6f;&#x6c;&#111;&#x72;&#53;&#x32;&#48;&#46;&#99;&#x6f;&#109;\">&#x68;&#114;&#x40;&#x63;&#x6f;&#x6c;&#111;&#x72;&#53;&#x32;&#48;&#46;&#99;&#x6f;&#109;</a>，待遇绝对超过BAT。<br>详情见：<a href=\"http://www.cnblogs.com/jhzhu/p/4377942.html\" target=\"_blank\" rel=\"external\">Color国际青年公寓</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：创业不息、折腾不止，今年跟朋友又折腾了一个新项目：<a href=\"color520.com\">Color公寓</a>。线上产品主要是一个在线网站，所以不得不把技术栈切换到<strong>网站开发</strong>模式。通过最近一段时间alpha版本的开发，对于PHP开发有一个全面而粗浅的了解。又因为面试需要，在这里做一下总结。</p>\n<p><a name=\"写在前面\"></a></p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>当我们谈到<strong>PHP开发</strong>，我们其实是在谈论<code>网站</code>，<code>数据库</code>，<code>缓存</code>，<code>session</code>，<code>负载均衡</code>等等等等一些列复杂技术的集合。所以，PHP的技能站也比一般得要长很多。</p>\n<p><a name=\"php基础\"></a></p>\n<h2 id=\"PHP基础\"><a href=\"#PHP基础\" class=\"headerlink\" title=\"PHP基础\"></a>PHP基础</h2><p>在这里，你需要了解的是：</p>\n<ol>\n<li>在各个平台安装php并用php内置的web服务器成功的见到“Hello PHP”界面。</li>\n<li>PHP函数式编程语法，面向对象语法，命名空间。</li>\n<li>PHP标准库的熟悉。</li>\n<li>调试工具：起码要知道xdebug的使用方法。</li>\n<li>依赖包管理工具的安装、使用、原理，最常用的：composer,pear。</li>\n<li>语法性能及原理：<ol>\n<li>万能的array。用法、实现原理、使用注意事项。（关键字：Hash Table）。</li>\n<li>字符串链接的效率。</li>\n<li>弱类型的实现原理。（关键字：zval）</li>\n</ol>\n</li>\n<li>Http协议，Get/Post请求的不同。 </li>\n</ol>\n<p><a name=\"php原理\"></a></p>\n<h2 id=\"PHP原理\"><a href=\"#PHP原理\" class=\"headerlink\" title=\"PHP原理\"></a>PHP原理</h2><p><a name=\"设计理念及特点\"></a></p>\n<h3 id=\"设计理念及特点\"><a href=\"#设计理念及特点\" class=\"headerlink\" title=\"设计理念及特点\"></a>设计理念及特点</h3><ol>\n<li>多线程模型，请求独立。</li>\n<li>弱类型语言。</li>\n<li>引擎（Zend）+组件（ext）的组合模式。</li>\n</ol>\n<p><a name=\"php四层体系\"></a></p>\n<h3 id=\"PHP四层体系\"><a href=\"#PHP四层体系\" class=\"headerlink\" title=\"PHP四层体系\"></a>PHP四层体系</h3><ol>\n<li><strong>Zend引擎</strong>：Zend整体用纯C实现，是PHP的内核部分，它将PHP代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕Zend实现。</li>\n<li><strong>Extensions</strong>：围绕着Zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的PHP中间层、富文本解析就是extension的典型应用）。</li>\n<li><strong>Sapi</strong>：Sapi全称是Server Application Programming Interface，也就是服务端应用编程接口，Sapi通过一系列钩子函数，使得PHP可以和外围交互数据，这是PHP非常优雅和成功的一个设计，通过sapi成功的将PHP本身和上层应用解耦隔离，PHP可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。</li>\n<li><strong>上层应用</strong>：这就是我们平时编写的PHP程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。</li>\n</ol>\n<p><a name=\"mvc-框架\"></a></p>\n<h2 id=\"MVC-框架\"><a href=\"#MVC-框架\" class=\"headerlink\" title=\"MVC 框架\"></a>MVC 框架</h2><ol>\n<li>MVC理论。</li>\n<li>PHP模板。</li>\n<li>常见的开源MVC框架，至少对其中一种有深入研究。 </li>\n</ol>\n<p><a name=\"oop、设计模式、重构\"></a></p>\n<h2 id=\"OOP、设计模式、重构\"><a href=\"#OOP、设计模式、重构\" class=\"headerlink\" title=\"OOP、设计模式、重构\"></a>OOP、设计模式、重构</h2><ol>\n<li>面向对象编程的基础：继承、封装、多态。</li>\n<li>常见的设计模式及应用场景。<a href=\"http://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA\" target=\"_blank\" rel=\"external\">参考</a>)</li>\n<li>对代码的坏味道有敏锐的嗅觉，掌握基本的重构方法。</li>\n</ol>\n<p><a name=\"web前端技能\"></a></p>\n<h2 id=\"Web前端技能\"><a href=\"#Web前端技能\" class=\"headerlink\" title=\"Web前端技能\"></a>Web前端技能</h2><ol>\n<li>HTML/CSS/JavaScript 基础。</li>\n<li>缓存，Cookie，Session原理和使用。</li>\n</ol>\n<p><a name=\"mysql数据库技能\"></a></p>\n<h2 id=\"MySQL数据库技能\"><a href=\"#MySQL数据库技能\" class=\"headerlink\" title=\"MySQL数据库技能\"></a>MySQL数据库技能</h2><ol>\n<li>MySQL安装和配置</li>\n<li>MySQL增删改查基本语法</li>\n<li>数据库设计原则和常见的技巧</li>\n<li>MySQL性能诊断和优化</li>\n<li>分布式数据库设计、数据库备份和恢复 </li>\n</ol>\n<p><a name=\"服务器架设\"></a></p>\n<h2 id=\"服务器架设\"><a href=\"#服务器架设\" class=\"headerlink\" title=\"服务器架设\"></a>服务器架设</h2><ol>\n<li>Linux常用命令。</li>\n<li>dns,cdn,缓存,带宽等资源的合理利用。</li>\n<li>nginx,apache安装和配置。</li>\n<li>图床的架设。（关键字：EvaCloudImage）</li>\n</ol>\n<p><a name=\"引用\"></a></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ol>\n<li><a href=\"http://laravel-china.github.io/php-the-right-way/\" target=\"_blank\" rel=\"external\">PHP The Right Way</a></li>\n<li><a href=\"http://nonfu.me/p/232.html\" target=\"_blank\" rel=\"external\">PHP底层的运行机制与原理</a></li>\n<li><a href=\"http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers/\" target=\"_blank\" rel=\"external\">A Baseline for Front-End Developers</a></li>\n<li><a href=\"http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84\" target=\"_blank\" rel=\"external\">代码重构</a></li>\n<li><a href=\"http://linux5588.blog.51cto.com/65280/1351007\" target=\"_blank\" rel=\"external\"> 一次完整的HTTP事务是怎样一个过程？</a></li>\n</ol>\n<p><a name=\"广告\"></a></p>\n<h2 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h2><p>好吧，下面是广告时间：</p>\n<p>【Color国际青年公寓】是麦芒资产旗下的主打项目，一个面向租房市场的O2O项目。  简单来说：就是将现有出租房统一包装之后再分租给客户，统一规范管理；然后利用租客的天然流量优势，打造更加丰富的O2O生活闭环。面向群体是中等以上收入的年轻人。<br>我们的创始团队来自于阿里巴巴、美国雅虎、完美世界、魅族等一线企业，线下也有10多年地产中介经验的人才加盟。核心创始人已多次创业。<br>丰富的创业经验，千万级的天使融资，为您的未来提供了更有力的保证！<br>只要您认同我们的文化，有舍我其谁的自信，就果断向我们砸简历吧：<a href=\"&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x68;&#114;&#x40;&#x63;&#x6f;&#x6c;&#111;&#x72;&#53;&#x32;&#48;&#46;&#99;&#x6f;&#109;\">&#x68;&#114;&#x40;&#x63;&#x6f;&#x6c;&#111;&#x72;&#53;&#x32;&#48;&#46;&#99;&#x6f;&#109;</a>，待遇绝对超过BAT。<br>详情见：<a href=\"http://www.cnblogs.com/jhzhu/p/4377942.html\" target=\"_blank\" rel=\"external\">Color国际青年公寓</a></p>\n"},{"title":"[PHP]深入理解Yii2的核心组件","date":"2016-03-03T03:12:00.000Z","_content":"\n摘要：[上一篇文章](http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-lifecycle)中，我们了解了`Appliction`的生命周期大概做了哪些事情，在其中我们提到核心组件`Appliction::coreComponents`但未深入讲解。我将在此文中挑选一些重要的组件详细讲解。\n\n\n# coreComponents\n\n`Application::coreComponents()` 是一个`Application`运行过程中必须的`component`，不管用户有没有在`config`文件中设置，这些组件都会创建和使用。  \n所有在`config`文件中设置或者在`coreComponents()`中的组件，都不需要手动创建，通过`Application->get($componentId)`都可以自动创建。\n\n`\\yii\\base\\Application`的核心组件：\n\n```php\npublic function coreComponents()\n{\n    return [\n        'log' => ['class' => 'yii\\log\\Dispatcher'],\n        'view' => ['class' => 'yii\\web\\View'],\n        'formatter' => ['class' => 'yii\\i18n\\Formatter'],\n        'i18n' => ['class' => 'yii\\i18n\\I18N'],\n        'mailer' => ['class' => 'yii\\swiftmailer\\Mailer'],\n        'urlManager' => ['class' => 'yii\\web\\UrlManager'],\n        'assetManager' => ['class' => 'yii\\web\\AssetManager'],\n        'security' => ['class' => 'yii\\base\\Security'],\n    ];\n}\n```\n\n\n`\\yii\\web\\Application`的必要组件：\n\n```php\npublic function coreComponents()\n{\n    return array_merge(parent::coreComponents(), [\n        'request' => ['class' => 'yii\\web\\Request'],\n        'response' => ['class' => 'yii\\web\\Response'],\n        'session' => ['class' => 'yii\\web\\Session'],\n        'user' => ['class' => 'yii\\web\\User'],\n        'errorHandler' => ['class' => 'yii\\web\\ErrorHandler'],\n    ]);\n}\n```\n\n\n\n下文，我们将对`view,urlManager,assetManager,security,request,response,session,user`这几个组件做详细讲解。\n\n# yii\\web\\Request\n\n`Request`代表着一次HTTP请求，它封装了`$_SERVER`的大多数变量，并且对不同平台的浏览器做了兼容处理。同时，它还封装了一些方便的访问接口来访问诸如`$_POST`，`$_GET`，`$_COOKIES`，`_REST`的参数。\n\n\n\n```php\nclass Request\n{\n    validateCsrfToken($token); //验证csrf码是否合法。\n}\n```\n\n## 关于CSRF验证\n\n服务器在接受一次请求，都会向前端发送两个字符串：一个在返回的HTML的`head`中；另一个在cookie中。这两个字符串是互相匹配的，可通过某种算法得到另一个。当用户发送非安全的请求时，需要在请求中把head中的那个字符串附带上，这样，服务器会判断这两个字符串是否匹配。\n\n\n\n## Component::behaviors()\n\n```php\nclass Component\n    + __call() / \n        + $this->ensureBehaivors();\n            + $this->attachBehaviorInternal();\n            + $this->behaviors();\n\n\n```\n\n## ActionFilter\n\n`ActionFilter`可以添加在`Module/Controller`上，监听`Module/Controller`的`beforeAction`和`afterAction`事件，做相应的处理。\n\n```php\nclass ActionFilter:\n    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件\n        $owner->on('beforeAction',[$this, 'beforeFilter']);\n    + beforeFilter($event):\n        $event->isValid = $this->beforeAction($event->action);\n        if $event->$isValid then\n            $this->owner->on('afterAction',[$this,'afterFilter']);\n        else\n            $event->handled = true;\n    + afterFilter($event);\n```\n\n\n# yii\\web\\Session\n\n\n\n\n# \\yii\\web\\User\n\n`\\yii\\web\\User`是用来处理用户验证和用户登录状态的类。\n\n```php\n//定义：\nclass User:\n    + login(); //调用switchIdentify()，抛发一系列事件。\n    + loginByAccessToken($token,$type); //如果findIdentityByAccessToken()成功，则login()\n    + loginByCookie(); //如果Cookie中，id+authKey+duration都能对的上，则登陆成功，调用switchIdentify()\n    + switchIdentify(); //setIdentify()，然后设置session和cookie\n\n    + renewAuthStatus(); //根据SessionId获得Identify。如果已经过期，则logout()；如果enableAutoLogin，则loginByCookie()；如果autoRenewCookie，则renewIdentifyCookie()。\n    + renewIdentityCookie(); //更新Cookie的过期时间为从当前开始。\n    + getIdentify($autoRenew = true); //if $enableSession && $autoRenew then renewAuthStatus(). 最终返回Identify.\n\n```\n\n","source":"_posts/技术/[PHP]深入理解Yii2的coreComponents.md","raw":"---\ntitle: '[PHP]深入理解Yii2的核心组件'\ndate: 2016-03-03 11:12\ncategories: \n- 技术\ntags: \n- yii2 \n- coreComponents \n- php  \n---\n\n摘要：[上一篇文章](http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-lifecycle)中，我们了解了`Appliction`的生命周期大概做了哪些事情，在其中我们提到核心组件`Appliction::coreComponents`但未深入讲解。我将在此文中挑选一些重要的组件详细讲解。\n\n\n# coreComponents\n\n`Application::coreComponents()` 是一个`Application`运行过程中必须的`component`，不管用户有没有在`config`文件中设置，这些组件都会创建和使用。  \n所有在`config`文件中设置或者在`coreComponents()`中的组件，都不需要手动创建，通过`Application->get($componentId)`都可以自动创建。\n\n`\\yii\\base\\Application`的核心组件：\n\n```php\npublic function coreComponents()\n{\n    return [\n        'log' => ['class' => 'yii\\log\\Dispatcher'],\n        'view' => ['class' => 'yii\\web\\View'],\n        'formatter' => ['class' => 'yii\\i18n\\Formatter'],\n        'i18n' => ['class' => 'yii\\i18n\\I18N'],\n        'mailer' => ['class' => 'yii\\swiftmailer\\Mailer'],\n        'urlManager' => ['class' => 'yii\\web\\UrlManager'],\n        'assetManager' => ['class' => 'yii\\web\\AssetManager'],\n        'security' => ['class' => 'yii\\base\\Security'],\n    ];\n}\n```\n\n\n`\\yii\\web\\Application`的必要组件：\n\n```php\npublic function coreComponents()\n{\n    return array_merge(parent::coreComponents(), [\n        'request' => ['class' => 'yii\\web\\Request'],\n        'response' => ['class' => 'yii\\web\\Response'],\n        'session' => ['class' => 'yii\\web\\Session'],\n        'user' => ['class' => 'yii\\web\\User'],\n        'errorHandler' => ['class' => 'yii\\web\\ErrorHandler'],\n    ]);\n}\n```\n\n\n\n下文，我们将对`view,urlManager,assetManager,security,request,response,session,user`这几个组件做详细讲解。\n\n# yii\\web\\Request\n\n`Request`代表着一次HTTP请求，它封装了`$_SERVER`的大多数变量，并且对不同平台的浏览器做了兼容处理。同时，它还封装了一些方便的访问接口来访问诸如`$_POST`，`$_GET`，`$_COOKIES`，`_REST`的参数。\n\n\n\n```php\nclass Request\n{\n    validateCsrfToken($token); //验证csrf码是否合法。\n}\n```\n\n## 关于CSRF验证\n\n服务器在接受一次请求，都会向前端发送两个字符串：一个在返回的HTML的`head`中；另一个在cookie中。这两个字符串是互相匹配的，可通过某种算法得到另一个。当用户发送非安全的请求时，需要在请求中把head中的那个字符串附带上，这样，服务器会判断这两个字符串是否匹配。\n\n\n\n## Component::behaviors()\n\n```php\nclass Component\n    + __call() / \n        + $this->ensureBehaivors();\n            + $this->attachBehaviorInternal();\n            + $this->behaviors();\n\n\n```\n\n## ActionFilter\n\n`ActionFilter`可以添加在`Module/Controller`上，监听`Module/Controller`的`beforeAction`和`afterAction`事件，做相应的处理。\n\n```php\nclass ActionFilter:\n    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件\n        $owner->on('beforeAction',[$this, 'beforeFilter']);\n    + beforeFilter($event):\n        $event->isValid = $this->beforeAction($event->action);\n        if $event->$isValid then\n            $this->owner->on('afterAction',[$this,'afterFilter']);\n        else\n            $event->handled = true;\n    + afterFilter($event);\n```\n\n\n# yii\\web\\Session\n\n\n\n\n# \\yii\\web\\User\n\n`\\yii\\web\\User`是用来处理用户验证和用户登录状态的类。\n\n```php\n//定义：\nclass User:\n    + login(); //调用switchIdentify()，抛发一系列事件。\n    + loginByAccessToken($token,$type); //如果findIdentityByAccessToken()成功，则login()\n    + loginByCookie(); //如果Cookie中，id+authKey+duration都能对的上，则登陆成功，调用switchIdentify()\n    + switchIdentify(); //setIdentify()，然后设置session和cookie\n\n    + renewAuthStatus(); //根据SessionId获得Identify。如果已经过期，则logout()；如果enableAutoLogin，则loginByCookie()；如果autoRenewCookie，则renewIdentifyCookie()。\n    + renewIdentityCookie(); //更新Cookie的过期时间为从当前开始。\n    + getIdentify($autoRenew = true); //if $enableSession && $autoRenew then renewAuthStatus(). 最终返回Identify.\n\n```\n\n","slug":"技术/[PHP]深入理解Yii2的coreComponents","published":1,"updated":"2017-07-26T16:10:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kq10049q0d4xmd5kis8","content":"<p>摘要：<a href=\"http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-lifecycle\" target=\"_blank\" rel=\"external\">上一篇文章</a>中，我们了解了<code>Appliction</code>的生命周期大概做了哪些事情，在其中我们提到核心组件<code>Appliction::coreComponents</code>但未深入讲解。我将在此文中挑选一些重要的组件详细讲解。</p>\n<h1 id=\"coreComponents\"><a href=\"#coreComponents\" class=\"headerlink\" title=\"coreComponents\"></a>coreComponents</h1><p><code>Application::coreComponents()</code> 是一个<code>Application</code>运行过程中必须的<code>component</code>，不管用户有没有在<code>config</code>文件中设置，这些组件都会创建和使用。<br>所有在<code>config</code>文件中设置或者在<code>coreComponents()</code>中的组件，都不需要手动创建，通过<code>Application-&gt;get($componentId)</code>都可以自动创建。</p>\n<p><code>\\yii\\base\\Application</code>的核心组件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> [</div><div class=\"line\">        <span class=\"string\">'log'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\log\\Dispatcher'</span>],</div><div class=\"line\">        <span class=\"string\">'view'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\View'</span>],</div><div class=\"line\">        <span class=\"string\">'formatter'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\Formatter'</span>],</div><div class=\"line\">        <span class=\"string\">'i18n'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\I18N'</span>],</div><div class=\"line\">        <span class=\"string\">'mailer'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\swiftmailer\\Mailer'</span>],</div><div class=\"line\">        <span class=\"string\">'urlManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\UrlManager'</span>],</div><div class=\"line\">        <span class=\"string\">'assetManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\AssetManager'</span>],</div><div class=\"line\">        <span class=\"string\">'security'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\base\\Security'</span>],</div><div class=\"line\">    ];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>\\yii\\web\\Application</code>的必要组件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> array_merge(<span class=\"keyword\">parent</span>::coreComponents(), [</div><div class=\"line\">        <span class=\"string\">'request'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Request'</span>],</div><div class=\"line\">        <span class=\"string\">'response'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Response'</span>],</div><div class=\"line\">        <span class=\"string\">'session'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Session'</span>],</div><div class=\"line\">        <span class=\"string\">'user'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\User'</span>],</div><div class=\"line\">        <span class=\"string\">'errorHandler'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\ErrorHandler'</span>],</div><div class=\"line\">    ]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>下文，我们将对<code>view,urlManager,assetManager,security,request,response,session,user</code>这几个组件做详细讲解。</p>\n<h1 id=\"yii-web-Request\"><a href=\"#yii-web-Request\" class=\"headerlink\" title=\"yii\\web\\Request\"></a>yii\\web\\Request</h1><p><code>Request</code>代表着一次HTTP请求，它封装了<code>$_SERVER</code>的大多数变量，并且对不同平台的浏览器做了兼容处理。同时，它还封装了一些方便的访问接口来访问诸如<code>$_POST</code>，<code>$_GET</code>，<code>$_COOKIES</code>，<code>_REST</code>的参数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    validateCsrfToken($token); <span class=\"comment\">//验证csrf码是否合法。</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"关于CSRF验证\"><a href=\"#关于CSRF验证\" class=\"headerlink\" title=\"关于CSRF验证\"></a>关于CSRF验证</h2><p>服务器在接受一次请求，都会向前端发送两个字符串：一个在返回的HTML的<code>head</code>中；另一个在cookie中。这两个字符串是互相匹配的，可通过某种算法得到另一个。当用户发送非安全的请求时，需要在请求中把head中的那个字符串附带上，这样，服务器会判断这两个字符串是否匹配。</p>\n<h2 id=\"Component-behaviors\"><a href=\"#Component-behaviors\" class=\"headerlink\" title=\"Component::behaviors()\"></a>Component::behaviors()</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Component</div><div class=\"line\">    + __call() / </div><div class=\"line\">        + $this-&gt;ensureBehaivors();</div><div class=\"line\">            + $this-&gt;attachBehaviorInternal();</div><div class=\"line\">            + $this-&gt;behaviors();</div></pre></td></tr></table></figure>\n<h2 id=\"ActionFilter\"><a href=\"#ActionFilter\" class=\"headerlink\" title=\"ActionFilter\"></a>ActionFilter</h2><p><code>ActionFilter</code>可以添加在<code>Module/Controller</code>上，监听<code>Module/Controller</code>的<code>beforeAction</code>和<code>afterAction</code>事件，做相应的处理。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ActionFilter:</div><div class=\"line\">    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件</div><div class=\"line\">        $owner-&gt;on('beforeAction',[$this, 'beforeFilter']);</div><div class=\"line\">    + beforeFilter($event):</div><div class=\"line\">        $event-&gt;isValid = $this-&gt;beforeAction($event-&gt;action);</div><div class=\"line\">        if $event-&gt;$isValid then</div><div class=\"line\">            $this-&gt;owner-&gt;on('afterAction',[$this,'afterFilter']);</div><div class=\"line\">        else</div><div class=\"line\">            $event-&gt;handled = true;</div><div class=\"line\">    + afterFilter($event);</div></pre></td></tr></table></figure>\n<h1 id=\"yii-web-Session\"><a href=\"#yii-web-Session\" class=\"headerlink\" title=\"yii\\web\\Session\"></a>yii\\web\\Session</h1><h1 id=\"yii-web-User\"><a href=\"#yii-web-User\" class=\"headerlink\" title=\"\\yii\\web\\User\"></a>\\yii\\web\\User</h1><p><code>\\yii\\web\\User</code>是用来处理用户验证和用户登录状态的类。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//定义：</div><div class=\"line\">class User:</div><div class=\"line\">    + login(); //调用switchIdentify()，抛发一系列事件。</div><div class=\"line\">    + loginByAccessToken($token,$type); //如果findIdentityByAccessToken()成功，则login()</div><div class=\"line\">    + loginByCookie(); //如果Cookie中，id+authKey+duration都能对的上，则登陆成功，调用switchIdentify()</div><div class=\"line\">    + switchIdentify(); //setIdentify()，然后设置session和cookie</div><div class=\"line\"></div><div class=\"line\">    + renewAuthStatus(); //根据SessionId获得Identify。如果已经过期，则logout()；如果enableAutoLogin，则loginByCookie()；如果autoRenewCookie，则renewIdentifyCookie()。</div><div class=\"line\">    + renewIdentityCookie(); //更新Cookie的过期时间为从当前开始。</div><div class=\"line\">    + getIdentify($autoRenew = true); //if $enableSession &amp;&amp; $autoRenew then renewAuthStatus(). 最终返回Identify.</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：<a href=\"http://blog.bookbook.in/ji-zhu/-php-shen-ru-li-jie-yii2de-lifecycle\" target=\"_blank\" rel=\"external\">上一篇文章</a>中，我们了解了<code>Appliction</code>的生命周期大概做了哪些事情，在其中我们提到核心组件<code>Appliction::coreComponents</code>但未深入讲解。我将在此文中挑选一些重要的组件详细讲解。</p>\n<h1 id=\"coreComponents\"><a href=\"#coreComponents\" class=\"headerlink\" title=\"coreComponents\"></a>coreComponents</h1><p><code>Application::coreComponents()</code> 是一个<code>Application</code>运行过程中必须的<code>component</code>，不管用户有没有在<code>config</code>文件中设置，这些组件都会创建和使用。<br>所有在<code>config</code>文件中设置或者在<code>coreComponents()</code>中的组件，都不需要手动创建，通过<code>Application-&gt;get($componentId)</code>都可以自动创建。</p>\n<p><code>\\yii\\base\\Application</code>的核心组件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> [</div><div class=\"line\">        <span class=\"string\">'log'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\log\\Dispatcher'</span>],</div><div class=\"line\">        <span class=\"string\">'view'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\View'</span>],</div><div class=\"line\">        <span class=\"string\">'formatter'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\Formatter'</span>],</div><div class=\"line\">        <span class=\"string\">'i18n'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\i18n\\I18N'</span>],</div><div class=\"line\">        <span class=\"string\">'mailer'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\swiftmailer\\Mailer'</span>],</div><div class=\"line\">        <span class=\"string\">'urlManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\UrlManager'</span>],</div><div class=\"line\">        <span class=\"string\">'assetManager'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\AssetManager'</span>],</div><div class=\"line\">        <span class=\"string\">'security'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\base\\Security'</span>],</div><div class=\"line\">    ];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>\\yii\\web\\Application</code>的必要组件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coreComponents</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> array_merge(<span class=\"keyword\">parent</span>::coreComponents(), [</div><div class=\"line\">        <span class=\"string\">'request'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Request'</span>],</div><div class=\"line\">        <span class=\"string\">'response'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Response'</span>],</div><div class=\"line\">        <span class=\"string\">'session'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\Session'</span>],</div><div class=\"line\">        <span class=\"string\">'user'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\User'</span>],</div><div class=\"line\">        <span class=\"string\">'errorHandler'</span> =&gt; [<span class=\"string\">'class'</span> =&gt; <span class=\"string\">'yii\\web\\ErrorHandler'</span>],</div><div class=\"line\">    ]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>下文，我们将对<code>view,urlManager,assetManager,security,request,response,session,user</code>这几个组件做详细讲解。</p>\n<h1 id=\"yii-web-Request\"><a href=\"#yii-web-Request\" class=\"headerlink\" title=\"yii\\web\\Request\"></a>yii\\web\\Request</h1><p><code>Request</code>代表着一次HTTP请求，它封装了<code>$_SERVER</code>的大多数变量，并且对不同平台的浏览器做了兼容处理。同时，它还封装了一些方便的访问接口来访问诸如<code>$_POST</code>，<code>$_GET</code>，<code>$_COOKIES</code>，<code>_REST</code>的参数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    validateCsrfToken($token); <span class=\"comment\">//验证csrf码是否合法。</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"关于CSRF验证\"><a href=\"#关于CSRF验证\" class=\"headerlink\" title=\"关于CSRF验证\"></a>关于CSRF验证</h2><p>服务器在接受一次请求，都会向前端发送两个字符串：一个在返回的HTML的<code>head</code>中；另一个在cookie中。这两个字符串是互相匹配的，可通过某种算法得到另一个。当用户发送非安全的请求时，需要在请求中把head中的那个字符串附带上，这样，服务器会判断这两个字符串是否匹配。</p>\n<h2 id=\"Component-behaviors\"><a href=\"#Component-behaviors\" class=\"headerlink\" title=\"Component::behaviors()\"></a>Component::behaviors()</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Component</div><div class=\"line\">    + __call() / </div><div class=\"line\">        + $this-&gt;ensureBehaivors();</div><div class=\"line\">            + $this-&gt;attachBehaviorInternal();</div><div class=\"line\">            + $this-&gt;behaviors();</div></pre></td></tr></table></figure>\n<h2 id=\"ActionFilter\"><a href=\"#ActionFilter\" class=\"headerlink\" title=\"ActionFilter\"></a>ActionFilter</h2><p><code>ActionFilter</code>可以添加在<code>Module/Controller</code>上，监听<code>Module/Controller</code>的<code>beforeAction</code>和<code>afterAction</code>事件，做相应的处理。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ActionFilter:</div><div class=\"line\">    + attach($owner): //当被添加到$owner上时，绑定$owner的'beforeAction'事件</div><div class=\"line\">        $owner-&gt;on('beforeAction',[$this, 'beforeFilter']);</div><div class=\"line\">    + beforeFilter($event):</div><div class=\"line\">        $event-&gt;isValid = $this-&gt;beforeAction($event-&gt;action);</div><div class=\"line\">        if $event-&gt;$isValid then</div><div class=\"line\">            $this-&gt;owner-&gt;on('afterAction',[$this,'afterFilter']);</div><div class=\"line\">        else</div><div class=\"line\">            $event-&gt;handled = true;</div><div class=\"line\">    + afterFilter($event);</div></pre></td></tr></table></figure>\n<h1 id=\"yii-web-Session\"><a href=\"#yii-web-Session\" class=\"headerlink\" title=\"yii\\web\\Session\"></a>yii\\web\\Session</h1><h1 id=\"yii-web-User\"><a href=\"#yii-web-User\" class=\"headerlink\" title=\"\\yii\\web\\User\"></a>\\yii\\web\\User</h1><p><code>\\yii\\web\\User</code>是用来处理用户验证和用户登录状态的类。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//定义：</div><div class=\"line\">class User:</div><div class=\"line\">    + login(); //调用switchIdentify()，抛发一系列事件。</div><div class=\"line\">    + loginByAccessToken($token,$type); //如果findIdentityByAccessToken()成功，则login()</div><div class=\"line\">    + loginByCookie(); //如果Cookie中，id+authKey+duration都能对的上，则登陆成功，调用switchIdentify()</div><div class=\"line\">    + switchIdentify(); //setIdentify()，然后设置session和cookie</div><div class=\"line\"></div><div class=\"line\">    + renewAuthStatus(); //根据SessionId获得Identify。如果已经过期，则logout()；如果enableAutoLogin，则loginByCookie()；如果autoRenewCookie，则renewIdentifyCookie()。</div><div class=\"line\">    + renewIdentityCookie(); //更新Cookie的过期时间为从当前开始。</div><div class=\"line\">    + getIdentify($autoRenew = true); //if $enableSession &amp;&amp; $autoRenew then renewAuthStatus(). 最终返回Identify.</div></pre></td></tr></table></figure>\n"},{"title":"[UML]构架师要熟练使用UML","date":"2016-03-04T05:52:00.000Z","_content":"\n摘要：我学习`UML`，是为了利用前人已经定义好的符号，来协助整理我的思路。人类用简单的符号来代替大段复杂的含义，已经有好几千年的历史了。但人类每一天都在发明新事物，通用语言根本无法跟上这个速度，就导致我们经常需要用一大段话来表达一个经常使用的含义。所以，我需要学习一门抽象化层次更高的语言：UML。\n\n\n\n上个时代的软件工程书，总教育我们要多去采访客户，了解他们在工作场景中的各种需求，总结Use Case。因为那个时代，软件只是一种为其它事情服务的工具，一种辅助角色的存在。但是现在，软件有更大的主动性。我们创造的软件，是要通过以往完全没有过的方式来满足人们炫耀、沟通、分享的需求。在产品问世之前，根本没有人对它有过操作经历，根本没有用户可以了解。时代变了，软件的角色变了，软件管理的方式也要改变。\n\n\n\n\n","source":"_posts/技术/[UML]构架师要熟练使用UML.md","raw":"---\ntitle: '[UML]构架师要熟练使用UML'\ntags: \n- uml \n- 构架\ndate: 2016-03-04 13:52\ncategories: \n- 技术\n---\n\n摘要：我学习`UML`，是为了利用前人已经定义好的符号，来协助整理我的思路。人类用简单的符号来代替大段复杂的含义，已经有好几千年的历史了。但人类每一天都在发明新事物，通用语言根本无法跟上这个速度，就导致我们经常需要用一大段话来表达一个经常使用的含义。所以，我需要学习一门抽象化层次更高的语言：UML。\n\n\n\n上个时代的软件工程书，总教育我们要多去采访客户，了解他们在工作场景中的各种需求，总结Use Case。因为那个时代，软件只是一种为其它事情服务的工具，一种辅助角色的存在。但是现在，软件有更大的主动性。我们创造的软件，是要通过以往完全没有过的方式来满足人们炫耀、沟通、分享的需求。在产品问世之前，根本没有人对它有过操作经历，根本没有用户可以了解。时代变了，软件的角色变了，软件管理的方式也要改变。\n\n\n\n\n","slug":"技术/[UML]构架师要熟练使用UML","published":1,"updated":"2017-07-26T16:15:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kq3004bq0d4np1zra85","content":"<p>摘要：我学习<code>UML</code>，是为了利用前人已经定义好的符号，来协助整理我的思路。人类用简单的符号来代替大段复杂的含义，已经有好几千年的历史了。但人类每一天都在发明新事物，通用语言根本无法跟上这个速度，就导致我们经常需要用一大段话来表达一个经常使用的含义。所以，我需要学习一门抽象化层次更高的语言：UML。</p>\n<p>上个时代的软件工程书，总教育我们要多去采访客户，了解他们在工作场景中的各种需求，总结Use Case。因为那个时代，软件只是一种为其它事情服务的工具，一种辅助角色的存在。但是现在，软件有更大的主动性。我们创造的软件，是要通过以往完全没有过的方式来满足人们炫耀、沟通、分享的需求。在产品问世之前，根本没有人对它有过操作经历，根本没有用户可以了解。时代变了，软件的角色变了，软件管理的方式也要改变。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：我学习<code>UML</code>，是为了利用前人已经定义好的符号，来协助整理我的思路。人类用简单的符号来代替大段复杂的含义，已经有好几千年的历史了。但人类每一天都在发明新事物，通用语言根本无法跟上这个速度，就导致我们经常需要用一大段话来表达一个经常使用的含义。所以，我需要学习一门抽象化层次更高的语言：UML。</p>\n<p>上个时代的软件工程书，总教育我们要多去采访客户，了解他们在工作场景中的各种需求，总结Use Case。因为那个时代，软件只是一种为其它事情服务的工具，一种辅助角色的存在。但是现在，软件有更大的主动性。我们创造的软件，是要通过以往完全没有过的方式来满足人们炫耀、沟通、分享的需求。在产品问世之前，根本没有人对它有过操作经历，根本没有用户可以了解。时代变了，软件的角色变了，软件管理的方式也要改变。</p>\n"},{"date":"2016-02-29T16:00:00.000Z","title":"[RESTful]最优雅的RESTful设计","_content":"\n摘要：RESTful设计，着重点在于理解四个概念：资源（resources)、资源的命名(naming)、资源的表达方式(representations)、资源间的链接（Link)。一个设计是否足够RESTful，取决于四个方面的属性：addressability, statelessness,connectedness and the uniform interface。\n\n\n## Web is Simple\n\nREST的全称是Representational State Transfer，翻译过来是“代表性的状态转换”，虽然不知道在说啥，但这并不重要，不必过分关注它晦涩的名字。\n\nREST的初衷，是想从Method和URI两个角度统一Web世界。Method，就是HTTP的那几个固定的方法，GET、PUT、DELETE、POST几兄弟，他们的意义在正常人眼里都是固定的。URI就不多说了，就是资源的门牌号码。我们假设，Web世界里所有的服务提供商都用这一套不仅人类可阅读，而且机器可识别的接口，该有多美好。\n\nWeb是基于HTTP构建的，它其实是一个最简单的协议。想当初HTTP 还是0.9版本的时候，就是一个静态文件读取协议，那么的单纯：\n\n| Client Request | Server Response |\n|----------------|-----------------|\n| GET /hello.txt | Hello, world!   |\n\n在这里，我们看到了HTTP最重要的两个品质：adressability and statelessness。基于他们，HTTP得飞黄腾达、光宗耀祖。\n\n\n## Big Web Services Are Not Simple\n\n常见的 RPC-style 服务，就是把Method、地址、参数都统统塞进HTTP的body里，用envelope封装起来。人们很难看到，这个方法是什么意思，参数是什么意思；也不知道这个方法有没有 side effect, 是否数据安全（safe）；是否有状态（stateness)，在什么样的前置条件下才能得到正确的结果。。。\n\n这一切，都让Web变得不单纯鸟。\n\n\n## How To Design And Implement RESTful Web Service\n\n## What Is Means To Be RESTful\n\n\n## Why Web Service Should be More RESTful\n\n\n","source":"_posts/技术/[RESTful]最优雅的RESTful设计.md","raw":"---\ndate: 2016-03-01\ntitle: '[RESTful]最优雅的RESTful设计'\ntags: \n- restful\n- rest\n- api\n- http\n- get\n- post\n- put\ncategories: \n- 技术\n---\n\n摘要：RESTful设计，着重点在于理解四个概念：资源（resources)、资源的命名(naming)、资源的表达方式(representations)、资源间的链接（Link)。一个设计是否足够RESTful，取决于四个方面的属性：addressability, statelessness,connectedness and the uniform interface。\n\n\n## Web is Simple\n\nREST的全称是Representational State Transfer，翻译过来是“代表性的状态转换”，虽然不知道在说啥，但这并不重要，不必过分关注它晦涩的名字。\n\nREST的初衷，是想从Method和URI两个角度统一Web世界。Method，就是HTTP的那几个固定的方法，GET、PUT、DELETE、POST几兄弟，他们的意义在正常人眼里都是固定的。URI就不多说了，就是资源的门牌号码。我们假设，Web世界里所有的服务提供商都用这一套不仅人类可阅读，而且机器可识别的接口，该有多美好。\n\nWeb是基于HTTP构建的，它其实是一个最简单的协议。想当初HTTP 还是0.9版本的时候，就是一个静态文件读取协议，那么的单纯：\n\n| Client Request | Server Response |\n|----------------|-----------------|\n| GET /hello.txt | Hello, world!   |\n\n在这里，我们看到了HTTP最重要的两个品质：adressability and statelessness。基于他们，HTTP得飞黄腾达、光宗耀祖。\n\n\n## Big Web Services Are Not Simple\n\n常见的 RPC-style 服务，就是把Method、地址、参数都统统塞进HTTP的body里，用envelope封装起来。人们很难看到，这个方法是什么意思，参数是什么意思；也不知道这个方法有没有 side effect, 是否数据安全（safe）；是否有状态（stateness)，在什么样的前置条件下才能得到正确的结果。。。\n\n这一切，都让Web变得不单纯鸟。\n\n\n## How To Design And Implement RESTful Web Service\n\n## What Is Means To Be RESTful\n\n\n## Why Web Service Should be More RESTful\n\n\n","slug":"技术/[RESTful]最优雅的RESTful设计","published":1,"updated":"2017-07-26T16:14:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kq7004eq0d4agu15r5w","content":"<p>摘要：RESTful设计，着重点在于理解四个概念：资源（resources)、资源的命名(naming)、资源的表达方式(representations)、资源间的链接（Link)。一个设计是否足够RESTful，取决于四个方面的属性：addressability, statelessness,connectedness and the uniform interface。</p>\n<h2 id=\"Web-is-Simple\"><a href=\"#Web-is-Simple\" class=\"headerlink\" title=\"Web is Simple\"></a>Web is Simple</h2><p>REST的全称是Representational State Transfer，翻译过来是“代表性的状态转换”，虽然不知道在说啥，但这并不重要，不必过分关注它晦涩的名字。</p>\n<p>REST的初衷，是想从Method和URI两个角度统一Web世界。Method，就是HTTP的那几个固定的方法，GET、PUT、DELETE、POST几兄弟，他们的意义在正常人眼里都是固定的。URI就不多说了，就是资源的门牌号码。我们假设，Web世界里所有的服务提供商都用这一套不仅人类可阅读，而且机器可识别的接口，该有多美好。</p>\n<p>Web是基于HTTP构建的，它其实是一个最简单的协议。想当初HTTP 还是0.9版本的时候，就是一个静态文件读取协议，那么的单纯：</p>\n<table>\n<thead>\n<tr>\n<th>Client Request</th>\n<th>Server Response</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET /hello.txt</td>\n<td>Hello, world!</td>\n</tr>\n</tbody>\n</table>\n<p>在这里，我们看到了HTTP最重要的两个品质：adressability and statelessness。基于他们，HTTP得飞黄腾达、光宗耀祖。</p>\n<h2 id=\"Big-Web-Services-Are-Not-Simple\"><a href=\"#Big-Web-Services-Are-Not-Simple\" class=\"headerlink\" title=\"Big Web Services Are Not Simple\"></a>Big Web Services Are Not Simple</h2><p>常见的 RPC-style 服务，就是把Method、地址、参数都统统塞进HTTP的body里，用envelope封装起来。人们很难看到，这个方法是什么意思，参数是什么意思；也不知道这个方法有没有 side effect, 是否数据安全（safe）；是否有状态（stateness)，在什么样的前置条件下才能得到正确的结果。。。</p>\n<p>这一切，都让Web变得不单纯鸟。</p>\n<h2 id=\"How-To-Design-And-Implement-RESTful-Web-Service\"><a href=\"#How-To-Design-And-Implement-RESTful-Web-Service\" class=\"headerlink\" title=\"How To Design And Implement RESTful Web Service\"></a>How To Design And Implement RESTful Web Service</h2><h2 id=\"What-Is-Means-To-Be-RESTful\"><a href=\"#What-Is-Means-To-Be-RESTful\" class=\"headerlink\" title=\"What Is Means To Be RESTful\"></a>What Is Means To Be RESTful</h2><h2 id=\"Why-Web-Service-Should-be-More-RESTful\"><a href=\"#Why-Web-Service-Should-be-More-RESTful\" class=\"headerlink\" title=\"Why Web Service Should be More RESTful\"></a>Why Web Service Should be More RESTful</h2>","site":{"data":{}},"excerpt":"","more":"<p>摘要：RESTful设计，着重点在于理解四个概念：资源（resources)、资源的命名(naming)、资源的表达方式(representations)、资源间的链接（Link)。一个设计是否足够RESTful，取决于四个方面的属性：addressability, statelessness,connectedness and the uniform interface。</p>\n<h2 id=\"Web-is-Simple\"><a href=\"#Web-is-Simple\" class=\"headerlink\" title=\"Web is Simple\"></a>Web is Simple</h2><p>REST的全称是Representational State Transfer，翻译过来是“代表性的状态转换”，虽然不知道在说啥，但这并不重要，不必过分关注它晦涩的名字。</p>\n<p>REST的初衷，是想从Method和URI两个角度统一Web世界。Method，就是HTTP的那几个固定的方法，GET、PUT、DELETE、POST几兄弟，他们的意义在正常人眼里都是固定的。URI就不多说了，就是资源的门牌号码。我们假设，Web世界里所有的服务提供商都用这一套不仅人类可阅读，而且机器可识别的接口，该有多美好。</p>\n<p>Web是基于HTTP构建的，它其实是一个最简单的协议。想当初HTTP 还是0.9版本的时候，就是一个静态文件读取协议，那么的单纯：</p>\n<table>\n<thead>\n<tr>\n<th>Client Request</th>\n<th>Server Response</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET /hello.txt</td>\n<td>Hello, world!</td>\n</tr>\n</tbody>\n</table>\n<p>在这里，我们看到了HTTP最重要的两个品质：adressability and statelessness。基于他们，HTTP得飞黄腾达、光宗耀祖。</p>\n<h2 id=\"Big-Web-Services-Are-Not-Simple\"><a href=\"#Big-Web-Services-Are-Not-Simple\" class=\"headerlink\" title=\"Big Web Services Are Not Simple\"></a>Big Web Services Are Not Simple</h2><p>常见的 RPC-style 服务，就是把Method、地址、参数都统统塞进HTTP的body里，用envelope封装起来。人们很难看到，这个方法是什么意思，参数是什么意思；也不知道这个方法有没有 side effect, 是否数据安全（safe）；是否有状态（stateness)，在什么样的前置条件下才能得到正确的结果。。。</p>\n<p>这一切，都让Web变得不单纯鸟。</p>\n<h2 id=\"How-To-Design-And-Implement-RESTful-Web-Service\"><a href=\"#How-To-Design-And-Implement-RESTful-Web-Service\" class=\"headerlink\" title=\"How To Design And Implement RESTful Web Service\"></a>How To Design And Implement RESTful Web Service</h2><h2 id=\"What-Is-Means-To-Be-RESTful\"><a href=\"#What-Is-Means-To-Be-RESTful\" class=\"headerlink\" title=\"What Is Means To Be RESTful\"></a>What Is Means To Be RESTful</h2><h2 id=\"Why-Web-Service-Should-be-More-RESTful\"><a href=\"#Why-Web-Service-Should-be-More-RESTful\" class=\"headerlink\" title=\"Why Web Service Should be More RESTful\"></a>Why Web Service Should be More RESTful</h2>"},{"date":"2016-02-23T16:00:00.000Z","title":"[Web]十种方法提高你的网站性能","_content":"\n\n摘要：\n\n\n","source":"_posts/技术/[Web]十种方法提高你的网站性能.md","raw":"---\ndate: 2016-02-24\ntitle: '[Web]十种方法提高你的网站性能'\ntags: \n- Web\n- HTTP\n- JS\n- CSS\n- HTML\ncategories: \n- 技术\n---\n\n\n摘要：\n\n\n","slug":"技术/[Web]十种方法提高你的网站性能","published":1,"updated":"2017-07-26T16:15:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqp004gq0d4pz3vwjmx","content":"<p>摘要：</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：</p>\n"},{"title":"[cocos2dx]2.2到3.1(3.0)升级帮助","date":"2014-07-21T16:00:00.000Z","_content":"\n\n摘要: cocos2dx 是一款**优秀的多平台,专为2D游戏设计的引擎**. 在活跃的开源社区的推进下, 越发稳定和强大. 2.x -> 3.x的更新幅度很大, 性能的提升和功能的丰富也非常明显. 但在享受**进步**的同时,也要承受**迁徙**之苦. 本文主要是总结自己迁徙的经历, 以防大家走弯路.\n\n---\n\n## 基础准备\n\n1. 我一直把VS当作主开发环境, eclipse和xcode作为特定机型的调试环境. 所以, 偷个懒, **假设你也在用VS开发**. 另外两个平台也也都有[正则表达式](http://zh.wikipedia.org/zh-hant/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F)替换功能, 大同小异.\n2. 在这里, **假设你已经搭好了3.x的VS开发环境**, 能正常运行`HelloWorld`演示.\n3. **假设你有一定的正则表达式基础**. 如果没有的话, 可参考这篇速成教程:[正则表达式30分钟入门教程](http://deerchao.net/tutorials/regex/regex.htm)\n\n\n## 进入正题\n\ncocos2dx 3.1的简要feature更新介绍可参考[这里](https://github.com/cocos2d/cocos2d-x#main-features), 详细的`changelog`可参考[这里](https://github.com/cocos2d/cocos2d-x/blob/v3/CHANGELOG).在升级之前, 建议扫一遍`changelog`( 否则都不知道要做啥...).\n\n接下来, 进入正题啦:\n\n### 语法更新\n本文将有非常多字符串替换的步骤, 都在vs2012中进行. vs2012中字符串替换窗口如下:\n![此处是vs窗口截图][1]\n本文将上图代表的替换表示为:( 以后将不特殊说明 )\n\n```\n//regex-replace\n\\bUIImageView\\b ==> ui::ImageView\n```\n#### <a id=\"objc2cpp\"></a>obj-c式命名 ==> c++命名空间式命名\n以下是常见的替换:\n```\n//regex-replace\n//Widget:\n\\bUIWidget\\b                                ==> ui::Widget\n\\bUIImageView\\b                             ==> ui::ImageView\n\\bUIButton\\b                                ==> ui::Button\n...                                     \n\\bUILayout\\b                                ==> ui::Layout\n\\bUILabel\\b                                 ==> ui::Text\n\\bUILayer\\b                                 ==> Layer\n\\bCCObject\\b                                ==> Ref\n...\n\n\\baddTouchEventListener\\s*\\(\\s*(.+)\\s*,\\s*toucheventselector\\s*\\((.*)\\)\\s*\\)  ==> addTouchEventListener( CC_CALLBACK_2( $2, $1 ))\n\\bTouchEventType\\b                          ==> ui::Widget::TouchEventType\n\\bTOUCH_EVENT_([A-Z]+)\\b                    ==> ui::Widget::TouchEventType::$1\n\\baddWidget\\b\\s*\\(                          ==> addChild(\n```\n\n注释: `\\b`代表单词的分割符. `()`代表被标记的内容, `$1` 代表原始字符串中被标记的内容中的第一段. 具体请参考[在 Visual Studio 中使用正则表达式](http://msdn.microsoft.com/query/dev11.query?appId=Dev11IDEF1&l=ZH-CN&k=k(vs.netregularexpressionhelp)&rd=true).\n#### include文件变更\n因为包结构的变化, 所以有些组件的定义会未被include.\n主要用到的head文件有:\n\n|head|描述|\n|--|--|\n|`cocos2d.h`|cocos2dx的基本数据类和Node类都包含在里面|\n|`ui/CocosGUI.h`| cocos2dx 绝大部分的UI类都包含在内. 2.x版本中, UI类都包含在`cocos-ext.h`中. 所以绝大部分原来引用`cocos-ext.h`的地方都需要引用此文件 |\n|`cocostudio/CocoStudio.h`| cocostudio功能相关的类都包含在里面. 最主要的是各种读取json文件的Reader. 其次, 是`Armature`动画. |\n|`cocos-ext.h`|相比2.x的`cocos-ext.h`, 此文件做了非常大的精简. 现在主要包括`CCScrollView`及其子类, 另外还有`EditBox`|\n\n#### std::function作为监听函数\n虽然, 3.1 的版本仍然支持绝大多数老版本的回调函数方式, 比如: `m_btnSubmit->addTouchEventListener (this,toucheventselector(RewardItemCell::onBtnSubmitClick));`仍然能工作. 但是, 不能保证在将来的3.x版本中仍然如此. 所以, 尽量一次搞定吧. 在[obj-c式命名 ==> c++命名空间式命名](#objc2cpp)章节中, 有批量替换的正则表达式,可作为参考.\n\n### 功能更新\n#### 中间层`UILayer`的去除\n在2.x版本, `Widget`需要作为`UILayer`的孩子节点才能响应触摸事件; 而在3.x版本中取消了这个限制, `Widget`的响应机制变为跟`Menu`类似. 目前, 我也没有大量的去掉之前的`UILayer`层, 大部分功能仍然正常工作.\n#### 键盘响应方式变更\n在2.x版本中, 键盘响应的监听是用`CCDirector::sharedDirector()->getKeypadDispatcher()->addDelegate(this);`实现的. 在3.x版本中是这样:\n\n```\nauto keyListener = EventListenerKeyboard::create();\nkeyListener->onKeyReleased = CC_CALLBACK_2(MainScene::keyBackClicked, this);\n_eventDispatcher->addEventListenerWithSceneGraphPriority(keyListener, this);\n```\n监听的取消, 也要做响应的替换.\n\n#### Armature的陷阱\n在2.x版本中, 一般通过下面的方式来监听`Armature`的事件. 在监听到`COMPLETE`的时候, 可以将此`Armature`移出场景.\n```\nCCArmature* swf = CCArmature::create(swfName);\nswf->getAnimation()->setMovementEventCallFunc(this, movementEvent_selector(OutCardEffectHelper::onAnimationEnd));\n```\n\n但是在3.x中, 我们不能在监听事件的回调函数中做任何可能会导致`release`此对象的操作. 否则, 会导野指针错误.\n是不是有点鸡肋? 我们来看看这种情况是怎么发生的:\n\n```sequence\nScheduler->Armature:update(t)\nArmature->ArmatureAnimation:update(t)\nArmatureAnimation->this:告诉监听者\nNote right of this:假设此时触发了COMPLETE事件\nNote right of this: this->remove Armature, release Armature\nArmature->Bone: update(t)\nNote right of Armature: set `_armatureTransformDirty = false`\nNote right of Armature: but now, Armature has been RELEASED!!!\n```\n\n我临时用定时器来移除`Armature`的. 具体过程如下:\n1. 为`ArmatureAnimation`增加一个公开函数:  `virtual MovementData *getMovementData() const { return _movementData; }`\n2. 通过下面的方式来移除: (PS: Lmada 表达式真是好用啊啊啊啊啊 )\n\n```\nauto data = swf->getAnimation()->getMovementData();\nfloat speed = data->scale;\nfloat frames = data->duration;\nfloat delay = frames/60/speed;\nstring id = FORMAT_TEXT( \"%p\", swf );\nDirector::getInstance()->getScheduler()->schedule( [swf](float t){swf->removeFromParent();},this,0,0,delay,false, id);\n```\n#### 更加优雅的anchorPoint\n如果你加载了cocostudio生成的ui json文件, 并改动过内部`Widget`的位置的话, 你会发现, 代码中`x=20`跟cocostudio ui编辑器中`x=20`效果是不一样的.\n问题出在哪里呢?\n简单来说, 2.x版本中的`anchorPoint`对自己在父亲节点的位置和孩子节点在自己中的位置都有影响; 3.x版本中的`anchorPoint`只对自己在父亲节点中的位置有影响.\n\n举个例子. 假设A是父亲节点,B是A的孩子节点. A和B同为10*10的正方形.\n\n```\nA.anchorPoint = Point(0.5,0.5);\nA.setSize(Size(10,10))\nB.anchorPoint = Point(0.5,0.5);\nB.setSize(Size(10,10))\nB.setPosition( Point::ZERO );\nA.addChild(B);\n```\n在2.x版本中: A和B的位置完全重合\n在3.x版本中: B的中心点和A的左下角的点重合.\n\n![此处是位置示意图][2]\n\n\n\n#### Sprite的默认GLProgram\n什么?你没听过`GLProgram`, 那恭喜你, 可以跳过这小节了. 因为你肯定不会出现下面的恼人情况.\n\n`SHADER_NAME_POSITION_TEXTURE_COLOR`是2.x版本中的默认`GLProgram`. 它对应的vect和frag分别是:`ccPositionTextureColor_vert`和`ccPositionTextureColor_frag`. vect用来确定位置,frag用来确定色彩.  \n\n然而, 在3.x版本中,默认的`GLProgram`是`SHADER_NAME_POSITION_TEXTURE_COLOR_NO_MVP`, 对应的vect和frag分别是:`ccPositionTextureColor_noMVP_vert`和`ccPositionTextureColor_noMVP_frag`.\n\n如果你恰好用过`ccPositionTextureColor_vert`的话, 建议改为`ccPositionTextureColor_noMVP_vert`. 否则会出现莫名的位置偏移问题.\n\n\n#### stl::vector的不稳定排序导致的层级问题\n\n2.x版本中, 如果没有对孩子设置过`zOrder`的话, 孩子节点的覆盖顺序为: 后加的节点在上层, 先加的节点在下层.\n\n3.x版本中, win32环境下, 孩子节点的覆盖层级还能保续. 但是在android平台下, `zOrder`相同的孩子, 层级顺序是随机的. 关键在下面的代码:\n\n```\nvoid Node::sortAllChildren()\n{\n    if( _reorderChildDirty ) {\n        std::sort( std::begin(_children), std::end(_children), nodeComparisonLess );\n        _reorderChildDirty = false;\n    }\n}\n```\n\nwin32和android平台对`stl::sort()`的实现不同, android下的排序算法不是稳定的. 解决方法:\n\n1. 修改上述代码, 实现稳定排序\n2. 添加孩子节点的时候手动设置`zOrder`来保证层级顺序.\n\n\n#### umeng等第三方库的更新\n\n第三方库, 也有很多跟cocos2dx版本相关. 注意升级, 否则会闪退.\n\n\n\n\n  [1]: o_Image.png\n  [2]: o_Untitled%20Diagram.png\n\n\n\n\n","source":"_posts/技术/[cocos2dx]2.2到3.1(3.0)升级帮助.md","raw":"---\ntitle: \"[cocos2dx]2.2到3.1(3.0)升级帮助\"\ndate: 2014-07-22\ntags: \n- cocos2dx\n- cocos2dx-3.x\n- anchorPoint\n- vector\n- Sprite\n- GLProgram\n- Armature\n- UILayer\ncategories: \n- 技术\n---\n\n\n摘要: cocos2dx 是一款**优秀的多平台,专为2D游戏设计的引擎**. 在活跃的开源社区的推进下, 越发稳定和强大. 2.x -> 3.x的更新幅度很大, 性能的提升和功能的丰富也非常明显. 但在享受**进步**的同时,也要承受**迁徙**之苦. 本文主要是总结自己迁徙的经历, 以防大家走弯路.\n\n---\n\n## 基础准备\n\n1. 我一直把VS当作主开发环境, eclipse和xcode作为特定机型的调试环境. 所以, 偷个懒, **假设你也在用VS开发**. 另外两个平台也也都有[正则表达式](http://zh.wikipedia.org/zh-hant/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F)替换功能, 大同小异.\n2. 在这里, **假设你已经搭好了3.x的VS开发环境**, 能正常运行`HelloWorld`演示.\n3. **假设你有一定的正则表达式基础**. 如果没有的话, 可参考这篇速成教程:[正则表达式30分钟入门教程](http://deerchao.net/tutorials/regex/regex.htm)\n\n\n## 进入正题\n\ncocos2dx 3.1的简要feature更新介绍可参考[这里](https://github.com/cocos2d/cocos2d-x#main-features), 详细的`changelog`可参考[这里](https://github.com/cocos2d/cocos2d-x/blob/v3/CHANGELOG).在升级之前, 建议扫一遍`changelog`( 否则都不知道要做啥...).\n\n接下来, 进入正题啦:\n\n### 语法更新\n本文将有非常多字符串替换的步骤, 都在vs2012中进行. vs2012中字符串替换窗口如下:\n![此处是vs窗口截图][1]\n本文将上图代表的替换表示为:( 以后将不特殊说明 )\n\n```\n//regex-replace\n\\bUIImageView\\b ==> ui::ImageView\n```\n#### <a id=\"objc2cpp\"></a>obj-c式命名 ==> c++命名空间式命名\n以下是常见的替换:\n```\n//regex-replace\n//Widget:\n\\bUIWidget\\b                                ==> ui::Widget\n\\bUIImageView\\b                             ==> ui::ImageView\n\\bUIButton\\b                                ==> ui::Button\n...                                     \n\\bUILayout\\b                                ==> ui::Layout\n\\bUILabel\\b                                 ==> ui::Text\n\\bUILayer\\b                                 ==> Layer\n\\bCCObject\\b                                ==> Ref\n...\n\n\\baddTouchEventListener\\s*\\(\\s*(.+)\\s*,\\s*toucheventselector\\s*\\((.*)\\)\\s*\\)  ==> addTouchEventListener( CC_CALLBACK_2( $2, $1 ))\n\\bTouchEventType\\b                          ==> ui::Widget::TouchEventType\n\\bTOUCH_EVENT_([A-Z]+)\\b                    ==> ui::Widget::TouchEventType::$1\n\\baddWidget\\b\\s*\\(                          ==> addChild(\n```\n\n注释: `\\b`代表单词的分割符. `()`代表被标记的内容, `$1` 代表原始字符串中被标记的内容中的第一段. 具体请参考[在 Visual Studio 中使用正则表达式](http://msdn.microsoft.com/query/dev11.query?appId=Dev11IDEF1&l=ZH-CN&k=k(vs.netregularexpressionhelp)&rd=true).\n#### include文件变更\n因为包结构的变化, 所以有些组件的定义会未被include.\n主要用到的head文件有:\n\n|head|描述|\n|--|--|\n|`cocos2d.h`|cocos2dx的基本数据类和Node类都包含在里面|\n|`ui/CocosGUI.h`| cocos2dx 绝大部分的UI类都包含在内. 2.x版本中, UI类都包含在`cocos-ext.h`中. 所以绝大部分原来引用`cocos-ext.h`的地方都需要引用此文件 |\n|`cocostudio/CocoStudio.h`| cocostudio功能相关的类都包含在里面. 最主要的是各种读取json文件的Reader. 其次, 是`Armature`动画. |\n|`cocos-ext.h`|相比2.x的`cocos-ext.h`, 此文件做了非常大的精简. 现在主要包括`CCScrollView`及其子类, 另外还有`EditBox`|\n\n#### std::function作为监听函数\n虽然, 3.1 的版本仍然支持绝大多数老版本的回调函数方式, 比如: `m_btnSubmit->addTouchEventListener (this,toucheventselector(RewardItemCell::onBtnSubmitClick));`仍然能工作. 但是, 不能保证在将来的3.x版本中仍然如此. 所以, 尽量一次搞定吧. 在[obj-c式命名 ==> c++命名空间式命名](#objc2cpp)章节中, 有批量替换的正则表达式,可作为参考.\n\n### 功能更新\n#### 中间层`UILayer`的去除\n在2.x版本, `Widget`需要作为`UILayer`的孩子节点才能响应触摸事件; 而在3.x版本中取消了这个限制, `Widget`的响应机制变为跟`Menu`类似. 目前, 我也没有大量的去掉之前的`UILayer`层, 大部分功能仍然正常工作.\n#### 键盘响应方式变更\n在2.x版本中, 键盘响应的监听是用`CCDirector::sharedDirector()->getKeypadDispatcher()->addDelegate(this);`实现的. 在3.x版本中是这样:\n\n```\nauto keyListener = EventListenerKeyboard::create();\nkeyListener->onKeyReleased = CC_CALLBACK_2(MainScene::keyBackClicked, this);\n_eventDispatcher->addEventListenerWithSceneGraphPriority(keyListener, this);\n```\n监听的取消, 也要做响应的替换.\n\n#### Armature的陷阱\n在2.x版本中, 一般通过下面的方式来监听`Armature`的事件. 在监听到`COMPLETE`的时候, 可以将此`Armature`移出场景.\n```\nCCArmature* swf = CCArmature::create(swfName);\nswf->getAnimation()->setMovementEventCallFunc(this, movementEvent_selector(OutCardEffectHelper::onAnimationEnd));\n```\n\n但是在3.x中, 我们不能在监听事件的回调函数中做任何可能会导致`release`此对象的操作. 否则, 会导野指针错误.\n是不是有点鸡肋? 我们来看看这种情况是怎么发生的:\n\n```sequence\nScheduler->Armature:update(t)\nArmature->ArmatureAnimation:update(t)\nArmatureAnimation->this:告诉监听者\nNote right of this:假设此时触发了COMPLETE事件\nNote right of this: this->remove Armature, release Armature\nArmature->Bone: update(t)\nNote right of Armature: set `_armatureTransformDirty = false`\nNote right of Armature: but now, Armature has been RELEASED!!!\n```\n\n我临时用定时器来移除`Armature`的. 具体过程如下:\n1. 为`ArmatureAnimation`增加一个公开函数:  `virtual MovementData *getMovementData() const { return _movementData; }`\n2. 通过下面的方式来移除: (PS: Lmada 表达式真是好用啊啊啊啊啊 )\n\n```\nauto data = swf->getAnimation()->getMovementData();\nfloat speed = data->scale;\nfloat frames = data->duration;\nfloat delay = frames/60/speed;\nstring id = FORMAT_TEXT( \"%p\", swf );\nDirector::getInstance()->getScheduler()->schedule( [swf](float t){swf->removeFromParent();},this,0,0,delay,false, id);\n```\n#### 更加优雅的anchorPoint\n如果你加载了cocostudio生成的ui json文件, 并改动过内部`Widget`的位置的话, 你会发现, 代码中`x=20`跟cocostudio ui编辑器中`x=20`效果是不一样的.\n问题出在哪里呢?\n简单来说, 2.x版本中的`anchorPoint`对自己在父亲节点的位置和孩子节点在自己中的位置都有影响; 3.x版本中的`anchorPoint`只对自己在父亲节点中的位置有影响.\n\n举个例子. 假设A是父亲节点,B是A的孩子节点. A和B同为10*10的正方形.\n\n```\nA.anchorPoint = Point(0.5,0.5);\nA.setSize(Size(10,10))\nB.anchorPoint = Point(0.5,0.5);\nB.setSize(Size(10,10))\nB.setPosition( Point::ZERO );\nA.addChild(B);\n```\n在2.x版本中: A和B的位置完全重合\n在3.x版本中: B的中心点和A的左下角的点重合.\n\n![此处是位置示意图][2]\n\n\n\n#### Sprite的默认GLProgram\n什么?你没听过`GLProgram`, 那恭喜你, 可以跳过这小节了. 因为你肯定不会出现下面的恼人情况.\n\n`SHADER_NAME_POSITION_TEXTURE_COLOR`是2.x版本中的默认`GLProgram`. 它对应的vect和frag分别是:`ccPositionTextureColor_vert`和`ccPositionTextureColor_frag`. vect用来确定位置,frag用来确定色彩.  \n\n然而, 在3.x版本中,默认的`GLProgram`是`SHADER_NAME_POSITION_TEXTURE_COLOR_NO_MVP`, 对应的vect和frag分别是:`ccPositionTextureColor_noMVP_vert`和`ccPositionTextureColor_noMVP_frag`.\n\n如果你恰好用过`ccPositionTextureColor_vert`的话, 建议改为`ccPositionTextureColor_noMVP_vert`. 否则会出现莫名的位置偏移问题.\n\n\n#### stl::vector的不稳定排序导致的层级问题\n\n2.x版本中, 如果没有对孩子设置过`zOrder`的话, 孩子节点的覆盖顺序为: 后加的节点在上层, 先加的节点在下层.\n\n3.x版本中, win32环境下, 孩子节点的覆盖层级还能保续. 但是在android平台下, `zOrder`相同的孩子, 层级顺序是随机的. 关键在下面的代码:\n\n```\nvoid Node::sortAllChildren()\n{\n    if( _reorderChildDirty ) {\n        std::sort( std::begin(_children), std::end(_children), nodeComparisonLess );\n        _reorderChildDirty = false;\n    }\n}\n```\n\nwin32和android平台对`stl::sort()`的实现不同, android下的排序算法不是稳定的. 解决方法:\n\n1. 修改上述代码, 实现稳定排序\n2. 添加孩子节点的时候手动设置`zOrder`来保证层级顺序.\n\n\n#### umeng等第三方库的更新\n\n第三方库, 也有很多跟cocos2dx版本相关. 注意升级, 否则会闪退.\n\n\n\n\n  [1]: o_Image.png\n  [2]: o_Untitled%20Diagram.png\n\n\n\n\n","slug":"技术/[cocos2dx]2.2到3.1(3.0)升级帮助","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqq004iq0d4rvhht6y1","content":"<p>摘要: cocos2dx 是一款<strong>优秀的多平台,专为2D游戏设计的引擎</strong>. 在活跃的开源社区的推进下, 越发稳定和强大. 2.x -&gt; 3.x的更新幅度很大, 性能的提升和功能的丰富也非常明显. 但在享受<strong>进步</strong>的同时,也要承受<strong>迁徙</strong>之苦. 本文主要是总结自己迁徙的经历, 以防大家走弯路.</p>\n<hr>\n<h2 id=\"基础准备\"><a href=\"#基础准备\" class=\"headerlink\" title=\"基础准备\"></a>基础准备</h2><ol>\n<li>我一直把VS当作主开发环境, eclipse和xcode作为特定机型的调试环境. 所以, 偷个懒, <strong>假设你也在用VS开发</strong>. 另外两个平台也也都有<a href=\"http://zh.wikipedia.org/zh-hant/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\" target=\"_blank\" rel=\"external\">正则表达式</a>替换功能, 大同小异.</li>\n<li>在这里, <strong>假设你已经搭好了3.x的VS开发环境</strong>, 能正常运行<code>HelloWorld</code>演示.</li>\n<li><strong>假设你有一定的正则表达式基础</strong>. 如果没有的话, 可参考这篇速成教程:<a href=\"http://deerchao.net/tutorials/regex/regex.htm\" target=\"_blank\" rel=\"external\">正则表达式30分钟入门教程</a></li>\n</ol>\n<h2 id=\"进入正题\"><a href=\"#进入正题\" class=\"headerlink\" title=\"进入正题\"></a>进入正题</h2><p>cocos2dx 3.1的简要feature更新介绍可参考<a href=\"https://github.com/cocos2d/cocos2d-x#main-features\" target=\"_blank\" rel=\"external\">这里</a>, 详细的<code>changelog</code>可参考<a href=\"https://github.com/cocos2d/cocos2d-x/blob/v3/CHANGELOG\" target=\"_blank\" rel=\"external\">这里</a>.在升级之前, 建议扫一遍<code>changelog</code>( 否则都不知道要做啥…).</p>\n<p>接下来, 进入正题啦:</p>\n<h3 id=\"语法更新\"><a href=\"#语法更新\" class=\"headerlink\" title=\"语法更新\"></a>语法更新</h3><p>本文将有非常多字符串替换的步骤, 都在vs2012中进行. vs2012中字符串替换窗口如下:<br><img src=\"o_Image.png\" alt=\"此处是vs窗口截图\"><br>本文将上图代表的替换表示为:( 以后将不特殊说明 )</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//regex-replace</div><div class=\"line\">\\bUIImageView\\b ==&gt; ui::ImageView</div></pre></td></tr></table></figure>\n<h4 id=\"obj-c式命名-gt-c-命名空间式命名\"><a href=\"#obj-c式命名-gt-c-命名空间式命名\" class=\"headerlink\" title=\"obj-c式命名 ==&gt; c++命名空间式命名\"></a><a id=\"objc2cpp\"></a>obj-c式命名 ==&gt; c++命名空间式命名</h4><p>以下是常见的替换:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">//regex-replace</div><div class=\"line\">//Widget:</div><div class=\"line\">\\bUIWidget\\b                                ==&gt; ui::Widget</div><div class=\"line\">\\bUIImageView\\b                             ==&gt; ui::ImageView</div><div class=\"line\">\\bUIButton\\b                                ==&gt; ui::Button</div><div class=\"line\">...                                     </div><div class=\"line\">\\bUILayout\\b                                ==&gt; ui::Layout</div><div class=\"line\">\\bUILabel\\b                                 ==&gt; ui::Text</div><div class=\"line\">\\bUILayer\\b                                 ==&gt; Layer</div><div class=\"line\">\\bCCObject\\b                                ==&gt; Ref</div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\">\\baddTouchEventListener\\s*\\(\\s*(.+)\\s*,\\s*toucheventselector\\s*\\((.*)\\)\\s*\\)  ==&gt; addTouchEventListener( CC_CALLBACK_2( $2, $1 ))</div><div class=\"line\">\\bTouchEventType\\b                          ==&gt; ui::Widget::TouchEventType</div><div class=\"line\">\\bTOUCH_EVENT_([A-Z]+)\\b                    ==&gt; ui::Widget::TouchEventType::$1</div><div class=\"line\">\\baddWidget\\b\\s*\\(                          ==&gt; addChild(</div></pre></td></tr></table></figure></p>\n<p>注释: <code>\\b</code>代表单词的分割符. <code>()</code>代表被标记的内容, <code>$1</code> 代表原始字符串中被标记的内容中的第一段. 具体请参考<a href=\"http://msdn.microsoft.com/query/dev11.query?appId=Dev11IDEF1&amp;l=ZH-CN&amp;k=k(vs.netregularexpressionhelp\" target=\"_blank\" rel=\"external\">在 Visual Studio 中使用正则表达式</a>&amp;rd=true).</p>\n<h4 id=\"include文件变更\"><a href=\"#include文件变更\" class=\"headerlink\" title=\"include文件变更\"></a>include文件变更</h4><p>因为包结构的变化, 所以有些组件的定义会未被include.<br>主要用到的head文件有:</p>\n<table>\n<thead>\n<tr>\n<th>head</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cocos2d.h</code></td>\n<td>cocos2dx的基本数据类和Node类都包含在里面</td>\n</tr>\n<tr>\n<td><code>ui/CocosGUI.h</code></td>\n<td>cocos2dx 绝大部分的UI类都包含在内. 2.x版本中, UI类都包含在<code>cocos-ext.h</code>中. 所以绝大部分原来引用<code>cocos-ext.h</code>的地方都需要引用此文件</td>\n</tr>\n<tr>\n<td><code>cocostudio/CocoStudio.h</code></td>\n<td>cocostudio功能相关的类都包含在里面. 最主要的是各种读取json文件的Reader. 其次, 是<code>Armature</code>动画.</td>\n</tr>\n<tr>\n<td><code>cocos-ext.h</code></td>\n<td>相比2.x的<code>cocos-ext.h</code>, 此文件做了非常大的精简. 现在主要包括<code>CCScrollView</code>及其子类, 另外还有<code>EditBox</code></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"std-function作为监听函数\"><a href=\"#std-function作为监听函数\" class=\"headerlink\" title=\"std::function作为监听函数\"></a>std::function作为监听函数</h4><p>虽然, 3.1 的版本仍然支持绝大多数老版本的回调函数方式, 比如: <code>m_btnSubmit-&gt;addTouchEventListener (this,toucheventselector(RewardItemCell::onBtnSubmitClick));</code>仍然能工作. 但是, 不能保证在将来的3.x版本中仍然如此. 所以, 尽量一次搞定吧. 在<a href=\"#objc2cpp\">obj-c式命名 ==&gt; c++命名空间式命名</a>章节中, 有批量替换的正则表达式,可作为参考.</p>\n<h3 id=\"功能更新\"><a href=\"#功能更新\" class=\"headerlink\" title=\"功能更新\"></a>功能更新</h3><h4 id=\"中间层UILayer的去除\"><a href=\"#中间层UILayer的去除\" class=\"headerlink\" title=\"中间层UILayer的去除\"></a>中间层<code>UILayer</code>的去除</h4><p>在2.x版本, <code>Widget</code>需要作为<code>UILayer</code>的孩子节点才能响应触摸事件; 而在3.x版本中取消了这个限制, <code>Widget</code>的响应机制变为跟<code>Menu</code>类似. 目前, 我也没有大量的去掉之前的<code>UILayer</code>层, 大部分功能仍然正常工作.</p>\n<h4 id=\"键盘响应方式变更\"><a href=\"#键盘响应方式变更\" class=\"headerlink\" title=\"键盘响应方式变更\"></a>键盘响应方式变更</h4><p>在2.x版本中, 键盘响应的监听是用<code>CCDirector::sharedDirector()-&gt;getKeypadDispatcher()-&gt;addDelegate(this);</code>实现的. 在3.x版本中是这样:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">auto keyListener = EventListenerKeyboard::create();</div><div class=\"line\">keyListener-&gt;onKeyReleased = CC_CALLBACK_2(MainScene::keyBackClicked, this);</div><div class=\"line\">_eventDispatcher-&gt;addEventListenerWithSceneGraphPriority(keyListener, this);</div></pre></td></tr></table></figure>\n<p>监听的取消, 也要做响应的替换.</p>\n<h4 id=\"Armature的陷阱\"><a href=\"#Armature的陷阱\" class=\"headerlink\" title=\"Armature的陷阱\"></a>Armature的陷阱</h4><p>在2.x版本中, 一般通过下面的方式来监听<code>Armature</code>的事件. 在监听到<code>COMPLETE</code>的时候, 可以将此<code>Armature</code>移出场景.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CCArmature* swf = CCArmature::create(swfName);</div><div class=\"line\">swf-&gt;getAnimation()-&gt;setMovementEventCallFunc(this, movementEvent_selector(OutCardEffectHelper::onAnimationEnd));</div></pre></td></tr></table></figure></p>\n<p>但是在3.x中, 我们不能在监听事件的回调函数中做任何可能会导致<code>release</code>此对象的操作. 否则, 会导野指针错误.<br>是不是有点鸡肋? 我们来看看这种情况是怎么发生的:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Scheduler-&gt;Armature:update(t)</div><div class=\"line\">Armature-&gt;ArmatureAnimation:update(t)</div><div class=\"line\">ArmatureAnimation-&gt;this:告诉监听者</div><div class=\"line\">Note right of this:假设此时触发了COMPLETE事件</div><div class=\"line\">Note right of this: this-&gt;remove Armature, release Armature</div><div class=\"line\">Armature-&gt;Bone: update(t)</div><div class=\"line\">Note right of Armature: set `_armatureTransformDirty = false`</div><div class=\"line\">Note right of Armature: but now, Armature has been RELEASED!!!</div></pre></td></tr></table></figure>\n<p>我临时用定时器来移除<code>Armature</code>的. 具体过程如下:</p>\n<ol>\n<li>为<code>ArmatureAnimation</code>增加一个公开函数:  <code>virtual MovementData *getMovementData() const { return _movementData; }</code></li>\n<li>通过下面的方式来移除: (PS: Lmada 表达式真是好用啊啊啊啊啊 )</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">auto data = swf-&gt;getAnimation()-&gt;getMovementData();</div><div class=\"line\">float speed = data-&gt;scale;</div><div class=\"line\">float frames = data-&gt;duration;</div><div class=\"line\">float delay = frames/60/speed;</div><div class=\"line\">string id = FORMAT_TEXT( &quot;%p&quot;, swf );</div><div class=\"line\">Director::getInstance()-&gt;getScheduler()-&gt;schedule( [swf](float t)&#123;swf-&gt;removeFromParent();&#125;,this,0,0,delay,false, id);</div></pre></td></tr></table></figure>\n<h4 id=\"更加优雅的anchorPoint\"><a href=\"#更加优雅的anchorPoint\" class=\"headerlink\" title=\"更加优雅的anchorPoint\"></a>更加优雅的anchorPoint</h4><p>如果你加载了cocostudio生成的ui json文件, 并改动过内部<code>Widget</code>的位置的话, 你会发现, 代码中<code>x=20</code>跟cocostudio ui编辑器中<code>x=20</code>效果是不一样的.<br>问题出在哪里呢?<br>简单来说, 2.x版本中的<code>anchorPoint</code>对自己在父亲节点的位置和孩子节点在自己中的位置都有影响; 3.x版本中的<code>anchorPoint</code>只对自己在父亲节点中的位置有影响.</p>\n<p>举个例子. 假设A是父亲节点,B是A的孩子节点. A和B同为10*10的正方形.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">A.anchorPoint = Point(0.5,0.5);</div><div class=\"line\">A.setSize(Size(10,10))</div><div class=\"line\">B.anchorPoint = Point(0.5,0.5);</div><div class=\"line\">B.setSize(Size(10,10))</div><div class=\"line\">B.setPosition( Point::ZERO );</div><div class=\"line\">A.addChild(B);</div></pre></td></tr></table></figure>\n<p>在2.x版本中: A和B的位置完全重合<br>在3.x版本中: B的中心点和A的左下角的点重合.</p>\n<p><img src=\"o_Untitled%20Diagram.png\" alt=\"此处是位置示意图\"></p>\n<h4 id=\"Sprite的默认GLProgram\"><a href=\"#Sprite的默认GLProgram\" class=\"headerlink\" title=\"Sprite的默认GLProgram\"></a>Sprite的默认GLProgram</h4><p>什么?你没听过<code>GLProgram</code>, 那恭喜你, 可以跳过这小节了. 因为你肯定不会出现下面的恼人情况.</p>\n<p><code>SHADER_NAME_POSITION_TEXTURE_COLOR</code>是2.x版本中的默认<code>GLProgram</code>. 它对应的vect和frag分别是:<code>ccPositionTextureColor_vert</code>和<code>ccPositionTextureColor_frag</code>. vect用来确定位置,frag用来确定色彩.  </p>\n<p>然而, 在3.x版本中,默认的<code>GLProgram</code>是<code>SHADER_NAME_POSITION_TEXTURE_COLOR_NO_MVP</code>, 对应的vect和frag分别是:<code>ccPositionTextureColor_noMVP_vert</code>和<code>ccPositionTextureColor_noMVP_frag</code>.</p>\n<p>如果你恰好用过<code>ccPositionTextureColor_vert</code>的话, 建议改为<code>ccPositionTextureColor_noMVP_vert</code>. 否则会出现莫名的位置偏移问题.</p>\n<h4 id=\"stl-vector的不稳定排序导致的层级问题\"><a href=\"#stl-vector的不稳定排序导致的层级问题\" class=\"headerlink\" title=\"stl::vector的不稳定排序导致的层级问题\"></a>stl::vector的不稳定排序导致的层级问题</h4><p>2.x版本中, 如果没有对孩子设置过<code>zOrder</code>的话, 孩子节点的覆盖顺序为: 后加的节点在上层, 先加的节点在下层.</p>\n<p>3.x版本中, win32环境下, 孩子节点的覆盖层级还能保续. 但是在android平台下, <code>zOrder</code>相同的孩子, 层级顺序是随机的. 关键在下面的代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Node::sortAllChildren()</div><div class=\"line\">&#123;</div><div class=\"line\">    if( _reorderChildDirty ) &#123;</div><div class=\"line\">        std::sort( std::begin(_children), std::end(_children), nodeComparisonLess );</div><div class=\"line\">        _reorderChildDirty = false;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>win32和android平台对<code>stl::sort()</code>的实现不同, android下的排序算法不是稳定的. 解决方法:</p>\n<ol>\n<li>修改上述代码, 实现稳定排序</li>\n<li>添加孩子节点的时候手动设置<code>zOrder</code>来保证层级顺序.</li>\n</ol>\n<h4 id=\"umeng等第三方库的更新\"><a href=\"#umeng等第三方库的更新\" class=\"headerlink\" title=\"umeng等第三方库的更新\"></a>umeng等第三方库的更新</h4><p>第三方库, 也有很多跟cocos2dx版本相关. 注意升级, 否则会闪退.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: cocos2dx 是一款<strong>优秀的多平台,专为2D游戏设计的引擎</strong>. 在活跃的开源社区的推进下, 越发稳定和强大. 2.x -&gt; 3.x的更新幅度很大, 性能的提升和功能的丰富也非常明显. 但在享受<strong>进步</strong>的同时,也要承受<strong>迁徙</strong>之苦. 本文主要是总结自己迁徙的经历, 以防大家走弯路.</p>\n<hr>\n<h2 id=\"基础准备\"><a href=\"#基础准备\" class=\"headerlink\" title=\"基础准备\"></a>基础准备</h2><ol>\n<li>我一直把VS当作主开发环境, eclipse和xcode作为特定机型的调试环境. 所以, 偷个懒, <strong>假设你也在用VS开发</strong>. 另外两个平台也也都有<a href=\"http://zh.wikipedia.org/zh-hant/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\" target=\"_blank\" rel=\"external\">正则表达式</a>替换功能, 大同小异.</li>\n<li>在这里, <strong>假设你已经搭好了3.x的VS开发环境</strong>, 能正常运行<code>HelloWorld</code>演示.</li>\n<li><strong>假设你有一定的正则表达式基础</strong>. 如果没有的话, 可参考这篇速成教程:<a href=\"http://deerchao.net/tutorials/regex/regex.htm\" target=\"_blank\" rel=\"external\">正则表达式30分钟入门教程</a></li>\n</ol>\n<h2 id=\"进入正题\"><a href=\"#进入正题\" class=\"headerlink\" title=\"进入正题\"></a>进入正题</h2><p>cocos2dx 3.1的简要feature更新介绍可参考<a href=\"https://github.com/cocos2d/cocos2d-x#main-features\" target=\"_blank\" rel=\"external\">这里</a>, 详细的<code>changelog</code>可参考<a href=\"https://github.com/cocos2d/cocos2d-x/blob/v3/CHANGELOG\" target=\"_blank\" rel=\"external\">这里</a>.在升级之前, 建议扫一遍<code>changelog</code>( 否则都不知道要做啥…).</p>\n<p>接下来, 进入正题啦:</p>\n<h3 id=\"语法更新\"><a href=\"#语法更新\" class=\"headerlink\" title=\"语法更新\"></a>语法更新</h3><p>本文将有非常多字符串替换的步骤, 都在vs2012中进行. vs2012中字符串替换窗口如下:<br><img src=\"o_Image.png\" alt=\"此处是vs窗口截图\"><br>本文将上图代表的替换表示为:( 以后将不特殊说明 )</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//regex-replace</div><div class=\"line\">\\bUIImageView\\b ==&gt; ui::ImageView</div></pre></td></tr></table></figure>\n<h4 id=\"obj-c式命名-gt-c-命名空间式命名\"><a href=\"#obj-c式命名-gt-c-命名空间式命名\" class=\"headerlink\" title=\"obj-c式命名 ==&gt; c++命名空间式命名\"></a><a id=\"objc2cpp\"></a>obj-c式命名 ==&gt; c++命名空间式命名</h4><p>以下是常见的替换:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">//regex-replace</div><div class=\"line\">//Widget:</div><div class=\"line\">\\bUIWidget\\b                                ==&gt; ui::Widget</div><div class=\"line\">\\bUIImageView\\b                             ==&gt; ui::ImageView</div><div class=\"line\">\\bUIButton\\b                                ==&gt; ui::Button</div><div class=\"line\">...                                     </div><div class=\"line\">\\bUILayout\\b                                ==&gt; ui::Layout</div><div class=\"line\">\\bUILabel\\b                                 ==&gt; ui::Text</div><div class=\"line\">\\bUILayer\\b                                 ==&gt; Layer</div><div class=\"line\">\\bCCObject\\b                                ==&gt; Ref</div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\">\\baddTouchEventListener\\s*\\(\\s*(.+)\\s*,\\s*toucheventselector\\s*\\((.*)\\)\\s*\\)  ==&gt; addTouchEventListener( CC_CALLBACK_2( $2, $1 ))</div><div class=\"line\">\\bTouchEventType\\b                          ==&gt; ui::Widget::TouchEventType</div><div class=\"line\">\\bTOUCH_EVENT_([A-Z]+)\\b                    ==&gt; ui::Widget::TouchEventType::$1</div><div class=\"line\">\\baddWidget\\b\\s*\\(                          ==&gt; addChild(</div></pre></td></tr></table></figure></p>\n<p>注释: <code>\\b</code>代表单词的分割符. <code>()</code>代表被标记的内容, <code>$1</code> 代表原始字符串中被标记的内容中的第一段. 具体请参考<a href=\"http://msdn.microsoft.com/query/dev11.query?appId=Dev11IDEF1&amp;l=ZH-CN&amp;k=k(vs.netregularexpressionhelp\" target=\"_blank\" rel=\"external\">在 Visual Studio 中使用正则表达式</a>&amp;rd=true).</p>\n<h4 id=\"include文件变更\"><a href=\"#include文件变更\" class=\"headerlink\" title=\"include文件变更\"></a>include文件变更</h4><p>因为包结构的变化, 所以有些组件的定义会未被include.<br>主要用到的head文件有:</p>\n<table>\n<thead>\n<tr>\n<th>head</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cocos2d.h</code></td>\n<td>cocos2dx的基本数据类和Node类都包含在里面</td>\n</tr>\n<tr>\n<td><code>ui/CocosGUI.h</code></td>\n<td>cocos2dx 绝大部分的UI类都包含在内. 2.x版本中, UI类都包含在<code>cocos-ext.h</code>中. 所以绝大部分原来引用<code>cocos-ext.h</code>的地方都需要引用此文件</td>\n</tr>\n<tr>\n<td><code>cocostudio/CocoStudio.h</code></td>\n<td>cocostudio功能相关的类都包含在里面. 最主要的是各种读取json文件的Reader. 其次, 是<code>Armature</code>动画.</td>\n</tr>\n<tr>\n<td><code>cocos-ext.h</code></td>\n<td>相比2.x的<code>cocos-ext.h</code>, 此文件做了非常大的精简. 现在主要包括<code>CCScrollView</code>及其子类, 另外还有<code>EditBox</code></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"std-function作为监听函数\"><a href=\"#std-function作为监听函数\" class=\"headerlink\" title=\"std::function作为监听函数\"></a>std::function作为监听函数</h4><p>虽然, 3.1 的版本仍然支持绝大多数老版本的回调函数方式, 比如: <code>m_btnSubmit-&gt;addTouchEventListener (this,toucheventselector(RewardItemCell::onBtnSubmitClick));</code>仍然能工作. 但是, 不能保证在将来的3.x版本中仍然如此. 所以, 尽量一次搞定吧. 在<a href=\"#objc2cpp\">obj-c式命名 ==&gt; c++命名空间式命名</a>章节中, 有批量替换的正则表达式,可作为参考.</p>\n<h3 id=\"功能更新\"><a href=\"#功能更新\" class=\"headerlink\" title=\"功能更新\"></a>功能更新</h3><h4 id=\"中间层UILayer的去除\"><a href=\"#中间层UILayer的去除\" class=\"headerlink\" title=\"中间层UILayer的去除\"></a>中间层<code>UILayer</code>的去除</h4><p>在2.x版本, <code>Widget</code>需要作为<code>UILayer</code>的孩子节点才能响应触摸事件; 而在3.x版本中取消了这个限制, <code>Widget</code>的响应机制变为跟<code>Menu</code>类似. 目前, 我也没有大量的去掉之前的<code>UILayer</code>层, 大部分功能仍然正常工作.</p>\n<h4 id=\"键盘响应方式变更\"><a href=\"#键盘响应方式变更\" class=\"headerlink\" title=\"键盘响应方式变更\"></a>键盘响应方式变更</h4><p>在2.x版本中, 键盘响应的监听是用<code>CCDirector::sharedDirector()-&gt;getKeypadDispatcher()-&gt;addDelegate(this);</code>实现的. 在3.x版本中是这样:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">auto keyListener = EventListenerKeyboard::create();</div><div class=\"line\">keyListener-&gt;onKeyReleased = CC_CALLBACK_2(MainScene::keyBackClicked, this);</div><div class=\"line\">_eventDispatcher-&gt;addEventListenerWithSceneGraphPriority(keyListener, this);</div></pre></td></tr></table></figure>\n<p>监听的取消, 也要做响应的替换.</p>\n<h4 id=\"Armature的陷阱\"><a href=\"#Armature的陷阱\" class=\"headerlink\" title=\"Armature的陷阱\"></a>Armature的陷阱</h4><p>在2.x版本中, 一般通过下面的方式来监听<code>Armature</code>的事件. 在监听到<code>COMPLETE</code>的时候, 可以将此<code>Armature</code>移出场景.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CCArmature* swf = CCArmature::create(swfName);</div><div class=\"line\">swf-&gt;getAnimation()-&gt;setMovementEventCallFunc(this, movementEvent_selector(OutCardEffectHelper::onAnimationEnd));</div></pre></td></tr></table></figure></p>\n<p>但是在3.x中, 我们不能在监听事件的回调函数中做任何可能会导致<code>release</code>此对象的操作. 否则, 会导野指针错误.<br>是不是有点鸡肋? 我们来看看这种情况是怎么发生的:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Scheduler-&gt;Armature:update(t)</div><div class=\"line\">Armature-&gt;ArmatureAnimation:update(t)</div><div class=\"line\">ArmatureAnimation-&gt;this:告诉监听者</div><div class=\"line\">Note right of this:假设此时触发了COMPLETE事件</div><div class=\"line\">Note right of this: this-&gt;remove Armature, release Armature</div><div class=\"line\">Armature-&gt;Bone: update(t)</div><div class=\"line\">Note right of Armature: set `_armatureTransformDirty = false`</div><div class=\"line\">Note right of Armature: but now, Armature has been RELEASED!!!</div></pre></td></tr></table></figure>\n<p>我临时用定时器来移除<code>Armature</code>的. 具体过程如下:</p>\n<ol>\n<li>为<code>ArmatureAnimation</code>增加一个公开函数:  <code>virtual MovementData *getMovementData() const { return _movementData; }</code></li>\n<li>通过下面的方式来移除: (PS: Lmada 表达式真是好用啊啊啊啊啊 )</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">auto data = swf-&gt;getAnimation()-&gt;getMovementData();</div><div class=\"line\">float speed = data-&gt;scale;</div><div class=\"line\">float frames = data-&gt;duration;</div><div class=\"line\">float delay = frames/60/speed;</div><div class=\"line\">string id = FORMAT_TEXT( &quot;%p&quot;, swf );</div><div class=\"line\">Director::getInstance()-&gt;getScheduler()-&gt;schedule( [swf](float t)&#123;swf-&gt;removeFromParent();&#125;,this,0,0,delay,false, id);</div></pre></td></tr></table></figure>\n<h4 id=\"更加优雅的anchorPoint\"><a href=\"#更加优雅的anchorPoint\" class=\"headerlink\" title=\"更加优雅的anchorPoint\"></a>更加优雅的anchorPoint</h4><p>如果你加载了cocostudio生成的ui json文件, 并改动过内部<code>Widget</code>的位置的话, 你会发现, 代码中<code>x=20</code>跟cocostudio ui编辑器中<code>x=20</code>效果是不一样的.<br>问题出在哪里呢?<br>简单来说, 2.x版本中的<code>anchorPoint</code>对自己在父亲节点的位置和孩子节点在自己中的位置都有影响; 3.x版本中的<code>anchorPoint</code>只对自己在父亲节点中的位置有影响.</p>\n<p>举个例子. 假设A是父亲节点,B是A的孩子节点. A和B同为10*10的正方形.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">A.anchorPoint = Point(0.5,0.5);</div><div class=\"line\">A.setSize(Size(10,10))</div><div class=\"line\">B.anchorPoint = Point(0.5,0.5);</div><div class=\"line\">B.setSize(Size(10,10))</div><div class=\"line\">B.setPosition( Point::ZERO );</div><div class=\"line\">A.addChild(B);</div></pre></td></tr></table></figure>\n<p>在2.x版本中: A和B的位置完全重合<br>在3.x版本中: B的中心点和A的左下角的点重合.</p>\n<p><img src=\"o_Untitled%20Diagram.png\" alt=\"此处是位置示意图\"></p>\n<h4 id=\"Sprite的默认GLProgram\"><a href=\"#Sprite的默认GLProgram\" class=\"headerlink\" title=\"Sprite的默认GLProgram\"></a>Sprite的默认GLProgram</h4><p>什么?你没听过<code>GLProgram</code>, 那恭喜你, 可以跳过这小节了. 因为你肯定不会出现下面的恼人情况.</p>\n<p><code>SHADER_NAME_POSITION_TEXTURE_COLOR</code>是2.x版本中的默认<code>GLProgram</code>. 它对应的vect和frag分别是:<code>ccPositionTextureColor_vert</code>和<code>ccPositionTextureColor_frag</code>. vect用来确定位置,frag用来确定色彩.  </p>\n<p>然而, 在3.x版本中,默认的<code>GLProgram</code>是<code>SHADER_NAME_POSITION_TEXTURE_COLOR_NO_MVP</code>, 对应的vect和frag分别是:<code>ccPositionTextureColor_noMVP_vert</code>和<code>ccPositionTextureColor_noMVP_frag</code>.</p>\n<p>如果你恰好用过<code>ccPositionTextureColor_vert</code>的话, 建议改为<code>ccPositionTextureColor_noMVP_vert</code>. 否则会出现莫名的位置偏移问题.</p>\n<h4 id=\"stl-vector的不稳定排序导致的层级问题\"><a href=\"#stl-vector的不稳定排序导致的层级问题\" class=\"headerlink\" title=\"stl::vector的不稳定排序导致的层级问题\"></a>stl::vector的不稳定排序导致的层级问题</h4><p>2.x版本中, 如果没有对孩子设置过<code>zOrder</code>的话, 孩子节点的覆盖顺序为: 后加的节点在上层, 先加的节点在下层.</p>\n<p>3.x版本中, win32环境下, 孩子节点的覆盖层级还能保续. 但是在android平台下, <code>zOrder</code>相同的孩子, 层级顺序是随机的. 关键在下面的代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Node::sortAllChildren()</div><div class=\"line\">&#123;</div><div class=\"line\">    if( _reorderChildDirty ) &#123;</div><div class=\"line\">        std::sort( std::begin(_children), std::end(_children), nodeComparisonLess );</div><div class=\"line\">        _reorderChildDirty = false;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>win32和android平台对<code>stl::sort()</code>的实现不同, android下的排序算法不是稳定的. 解决方法:</p>\n<ol>\n<li>修改上述代码, 实现稳定排序</li>\n<li>添加孩子节点的时候手动设置<code>zOrder</code>来保证层级顺序.</li>\n</ol>\n<h4 id=\"umeng等第三方库的更新\"><a href=\"#umeng等第三方库的更新\" class=\"headerlink\" title=\"umeng等第三方库的更新\"></a>umeng等第三方库的更新</h4><p>第三方库, 也有很多跟cocos2dx版本相关. 注意升级, 否则会闪退.</p>\n"},{"title":"[cocos2dx]深入了解几个代表性的类","date":"2014-07-21T16:00:00.000Z","_content":"\n\n\n摘要: 此文对`cocos2d-x`引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括`Director`,`Application`, `Renderer`, `EventDispatcher`, `Scheduler`. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对`cocos2d-x`引擎有一个全面笼统的认识, 也方便快速定位问题.\n\n\n---\n\n\n## GLView\n`cocos2d-x`对`openGL`的封装. 不同平台下, `openGL`有一些差别.\n\n### openGL\n\n#### 一段简单的例子\n\n以下内容引用自[Introduction to OpenGL](http://www.glprogramming.com/red/chapter01.html). 需要更具体的介绍也可参考这个链接.\n```  \n# include <whateverYouNeed.h>\nmain() {\n   InitializeAWindowPlease();\n   \n   glClearColor (0.0, 0.0, 0.0, 0.0);\n   glClear (GL_COLOR_BUFFER_BIT);\n   \n   glColor3f (1.0, 1.0, 1.0);\n   glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);\n   glBegin(GL_POLYGON);\n      glVertex3f (0.25, 0.25, 0.0);\n      glVertex3f (0.75, 0.25, 0.0);\n      glVertex3f (0.75, 0.75, 0.0);\n      glVertex3f (0.25, 0.75, 0.0);\n   glEnd();\n   glFlush();\n   \n   UpdateTheWindowAndCheckForEvents();\n}\n```\n#### OpenGL Command Syntax\n\n* OpenGL commands use the prefix `gl` and initial capital letters for each word making up the command name \n* some seemingly extraneous letters appended to some command names (for example, the `3f` in `glColor3f()` and `glVertex3f()`)\n\n#### OpenGL as a State Machine\nOpenGL is a state machine. You put it into various states (or modes) that then remain in effect until you change them.\n\n\n\n\n\n## Application\n\n### 主要方法:\n```\nvirtual const char * getCurrentLanguage();\nvirtual Platform getTargetPlatform();\nvirtual void setAnimationInterval(double interval);\nint run();//启动主循环\n```\n### run()函数\n\n```\nint Application::run()\n{\n\n    ...\n\n    while(!glview->windowShouldClose())\n    {\n        QueryPerformanceCounter(&nNow);\n        if (nNow.QuadPart - nLast.QuadPart > _animationInterval.QuadPart)\n        {\n            nLast.QuadPart = nNow.QuadPart;\n            \n            director->mainLoop();       //Director进行这一帧的渲染\n            glview->pollEvents();       // This function processes only those events that have already been received and then returns immediately.\n        }\n        else\n        {\n            Sleep(0);\n        }\n    }\n\n    ...\n    \n    return true;\n}\n```\n\n\n## Director\n\n### 主要函数预览\n```\n//openGL Matrix Operate\n    void pushMatrix(MATRIX_STACK_TYPE type);\n    void popMatrix(MATRIX_STACK_TYPE type);\n    void loadIdentityMatrix(MATRIX_STACK_TYPE type);\n    void loadMatrix(MATRIX_STACK_TYPE type, const Mat4& mat);\n    void multiplyMatrix(MATRIX_STACK_TYPE type, const Mat4& mat);\n    Mat4 getMatrix(MATRIX_STACK_TYPE type);\n    void resetMatrixStack();\n    \n//View Data\n    inline double getAnimationInterval();\n    inline bool isDisplayStats();\n    inline GLView* getOpenGLView();\n    inline Projection getProjection();\n    Size getVisibleSize() const;\n    \n    Vec2 getVisibleOrigin() const;\n    Vec2 convertToGL(const Vec2& point);\n    Vec2 convertToUI(const Vec2& point);\n    float getZEye() const;\n\n// Scene 场景管理\n    inline Scene* getRunningScene();\n    void runWithScene(Scene *scene);\n    void pushScene(Scene *scene);\n    \n    \n// 控制绘制的暂停和恢复\n    void end();\n    void pause();\n    void resume();\n    \n//绘制图形(界面展示最重要的函数)\n    void drawScene();\n    \n//Getter and Setter\n    Scheduler* getScheduler() const { return _scheduler; }\n    void setScheduler(Scheduler* scheduler);\n\n    ActionManager* getActionManager() const { return _actionManager; }\n    void setActionManager(ActionManager* actionManager);\n    \n    EventDispatcher* getEventDispatcher() const { return _eventDispatcher; }\n    void setEventDispatcher(EventDispatcher* dispatcher);\n\n    Renderer* getRenderer() const { return _renderer; }\n```\n\n### drawScene(): 主要绘制函数\n\n```\n// Draw the Scene\nvoid Director::drawScene()\n{\n    ...\n    \n    if (! _paused)\n    {\n        _scheduler->update(_deltaTime);                         //Scheduler 定时器 更新\n        _eventDispatcher->dispatchEvent(_eventAfterUpdate);     //Dispatcher 抛发事件.\n    }\n\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);         //glClear\n\n    if (_nextScene)                                             //取得下一个将要显示的Scene.\n    {\n        setNextScene();\n    }\n\n    pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);      //将上一次绘制的Context放到堆栈\n\n    // draw the scene\n    if (_runningScene)\n    {\n        _runningScene->visit(_renderer, Mat4::IDENTITY, false);\n        _eventDispatcher->dispatchEvent(_eventAfterVisit);\n    }\n\n    _renderer->render();                                        //渲染\n    _eventDispatcher->dispatchEvent(_eventAfterDraw);\n\n    popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);       //返回到上一次绘制时的状态.\n\n\n    // swap buffers\n    if (_openGLView)\n    {\n        _openGLView->swapBuffers();                             //把上面渲染的结果显示到屏幕\n    }\n    \n    ...\n}\n```\n\n## Node::visit() 函数\n\n### 预览\nNode::visit() 的主要功能就是\n\n1. 调用所有孩子的`visit`函数\n2. 调用`self->draw()`函数\n```\nvoid Node::visit(Renderer* renderer, const Mat4 &parentTransform, uint32_t parentFlags)\n{\n    // quick return if not visible. children won't be drawn.\n    if (!_visible)\n    {\n        return;\n    }\n\n    uint32_t flags = processParentFlags(parentTransform, parentFlags);\n\n    // IMPORTANT:\n    // To ease the migration to v3.0, we still support the Mat4 stack,\n    // but it is deprecated and your code should not rely on it\n    Director* director = Director::getInstance();\n    director->pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n    director->loadMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW, _modelViewTransform);\n\n    int i = 0;\n\n   \n    if(!_children.empty())\n    {\n        sortAllChildren();\n        // draw children zOrder < 0\n        for( ; i < _children.size(); i++ )\n        {\n            auto node = _children.at(i);\n\n            if ( node && node->_localZOrder < 0 )\n                node->visit(renderer, _modelViewTransform, flags);\n            else\n                break;\n        }\n        // self draw\n        this->draw(renderer, _modelViewTransform, flags);\n\n        for(auto it=_children.cbegin()+i; it != _children.cend(); ++it)\n            (*it)->visit(renderer, _modelViewTransform, flags);\n    }\n    else\n    {\n        this->draw(renderer, _modelViewTransform, flags);\n    }\n\n    director->popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n}\n```\n\n### Node::draw()\n因为`Node`是所有可显示对象的父类, 没有任何显示内容, 所以`draw`函数为空.\n这里我们以`Sprite::draw`函数为例简单介绍下`draw`的作用.\n\n```\nvoid Sprite::draw(Renderer *renderer, const Mat4 &transform, uint32_t flags)\n{\n    // Don't do calculate the culling if the transform was not updated\n    _insideBounds = (flags & FLAGS_TRANSFORM_DIRTY) ? renderer->checkVisibility(transform, _contentSize) : _insideBounds;\n\n    if(_insideBounds)\n    {\n        _quadCommand.init(_globalZOrder, _texture->getName(), getGLProgramState(), _blendFunc, &_quad, 1, transform);\n        renderer->addCommand(&_quadCommand);\n    }\n}\n```\n我们看到, `Sprite::draw`函数主要实现了[添加一个`QuadCommand`到`Render`中去]的功能.\n再看看`Label`的绘制函数.\n\n### Label::draw\n\n```\nvoid Label::draw(Renderer *renderer, const Mat4 &transform, uint32_t flags)\n{\n    // Don't do calculate the culling if the transform was not updated\n    _insideBounds = (flags & FLAGS_TRANSFORM_DIRTY) ? renderer->checkVisibility(transform, _contentSize) : _insideBounds;\n\n    if(_insideBounds) {\n        _customCommand.init(_globalZOrder);\n        _customCommand.func = CC_CALLBACK_0(Label::onDraw, this, transform, flags);\n        renderer->addCommand(&_customCommand);\n    }\n}\n```\n\n其实, 跟`Sprite::draw`也差不多. 关键在于这个`RenderCommand`怎么构造和执行的.\n\n\n## Renderer 渲染器\n### 主要函数预览\n\n\n```\n    void initGLView();\n\n    /** Adds a `RenderComamnd` into the renderer */\n    void addCommand(RenderCommand* command);\n\n    /** Adds a `RenderComamnd` into the renderer specifying a particular render queue ID */\n    void addCommand(RenderCommand* command, int renderQueue);\n\n    /** Pushes a group into the render queue */\n    void pushGroup(int renderQueueID);\n\n    /** Pops a group from the render queue */\n    void popGroup();\n\n    /** Creates a render queue and returns its Id */\n    int createRenderQueue();\n\n    /** Renders into the GLView all the queued `RenderCommand` objects */\n    void render();\n```\n可见它主要由两个功能:\n\n1. 对`ReanderCommand`进行排序和分类管理\n2. 进行渲染:`render()`\n\n\n### 渲染函数Renderer::render()\n\n```\nvoid Renderer::render()\n{\n   ...\n    \n    if (_glViewAssigned)\n    {\n       ...\n        //排列渲染队列\n        for (auto &renderqueue : _renderGroups)\n        {\n            renderqueue.sort();\n        } \n        //进行渲染\n        visitRenderQueue(_renderGroups[0]);\n        ...\n    }\n    ...\n}\n```\n### Renderer::visitRenderQueue\n\n按照顺序执行所有的 `RenderCommand`\n```\nvoid Renderer::visitRenderQueue(const RenderQueue& queue)\n{\n    ssize_t size = queue.size();\n    \n    for (ssize_t index = 0; index < size; ++index)\n    {\n        auto command = queue[index];\n        auto commandType = command->getType();\n        if(RenderCommand::Type::QUAD_COMMAND == commandType)\n        {\n            auto cmd = static_cast<QuadCommand*>(command);\n            //Batch quads\n            if(_numQuads + cmd->getQuadCount() > VBO_SIZE)\n            {\n                drawBatchedQuads();\n            }\n            \n            _batchedQuadCommands.push_back(cmd);\n            \n            memcpy(_quads + _numQuads, cmd->getQuads(), sizeof(V3F_C4B_T2F_Quad) * cmd->getQuadCount());\n            convertToWorldCoordinates(_quads + _numQuads, cmd->getQuadCount(), cmd->getModelView());\n            \n            _numQuads += cmd->getQuadCount();\n\n        }\n        else if(RenderCommand::Type::GROUP_COMMAND == commandType)\n        {\n            flush();\n            int renderQueueID = ((GroupCommand*) command)->getRenderQueueID();\n            visitRenderQueue(_renderGroups[renderQueueID]);\n        }\n        else if(RenderCommand::Type::CUSTOM_COMMAND == commandType)\n        {\n            ...\n        }\n        ...\n    }\n}\n```\n\n### openGL VAO, VBO 介绍.\n\n[GLSL渲染语言入门与VBO、VAO使用：绘制一个三角形](http://blog.csdn.net/xiajun07061225/article/details/7628146)\n[OpenGL 4.0 VAO VBO 理解](http://blog.csdn.net/zhuyingqingfen/article/details/19238651)\n\n\n## Schelduler介绍\n`Schelduler`是`cocos2d-x`中实现延迟调用,定时调用时最重要的功能. 类似于其他语言中的`Timer`\n他最核心的函数就是:\n\n```\nvoid schedule(const ccSchedulerFunc& callback, void *target, float interval, unsigned int repeat, float delay, bool paused, const std::string& key);\n```\n\n用来启动一个定时操作: 在延迟`delay`时间后, 每隔`repeat`时间, 调用一次`callback`. `target`用来标记这个操作属于谁, 方便管理, 比如在析构的时候调用`void unschedule(void *target)`即可移除当前对象的所有`定时操作`.\n\n`Schelduler`的其它大部分方法, 要么是它的衍生, 为了减少调用参数; 要么是对`定时操作`的控制, 比如暂停, 恢复, 移除等. 如果只对想对框架的各个模块有大概的了解, 可以不做深入.\n\n\n## EventDispatcher\n(后续添加)\n\n\n\n\n\n","source":"_posts/技术/[cocos2dx]深入--几个代表性的类.md","raw":"---\ntitle: \"[cocos2dx]深入了解几个代表性的类\"\ndate: 2014-07-22\ntags: \n- cocos2dx\n- openGL\n- GLView\n- Application\n-  Director\n-  class\n-  Renderer\n-  Node\ncategories: \n- 技术\n---\n\n\n\n摘要: 此文对`cocos2d-x`引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括`Director`,`Application`, `Renderer`, `EventDispatcher`, `Scheduler`. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对`cocos2d-x`引擎有一个全面笼统的认识, 也方便快速定位问题.\n\n\n---\n\n\n## GLView\n`cocos2d-x`对`openGL`的封装. 不同平台下, `openGL`有一些差别.\n\n### openGL\n\n#### 一段简单的例子\n\n以下内容引用自[Introduction to OpenGL](http://www.glprogramming.com/red/chapter01.html). 需要更具体的介绍也可参考这个链接.\n```  \n# include <whateverYouNeed.h>\nmain() {\n   InitializeAWindowPlease();\n   \n   glClearColor (0.0, 0.0, 0.0, 0.0);\n   glClear (GL_COLOR_BUFFER_BIT);\n   \n   glColor3f (1.0, 1.0, 1.0);\n   glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);\n   glBegin(GL_POLYGON);\n      glVertex3f (0.25, 0.25, 0.0);\n      glVertex3f (0.75, 0.25, 0.0);\n      glVertex3f (0.75, 0.75, 0.0);\n      glVertex3f (0.25, 0.75, 0.0);\n   glEnd();\n   glFlush();\n   \n   UpdateTheWindowAndCheckForEvents();\n}\n```\n#### OpenGL Command Syntax\n\n* OpenGL commands use the prefix `gl` and initial capital letters for each word making up the command name \n* some seemingly extraneous letters appended to some command names (for example, the `3f` in `glColor3f()` and `glVertex3f()`)\n\n#### OpenGL as a State Machine\nOpenGL is a state machine. You put it into various states (or modes) that then remain in effect until you change them.\n\n\n\n\n\n## Application\n\n### 主要方法:\n```\nvirtual const char * getCurrentLanguage();\nvirtual Platform getTargetPlatform();\nvirtual void setAnimationInterval(double interval);\nint run();//启动主循环\n```\n### run()函数\n\n```\nint Application::run()\n{\n\n    ...\n\n    while(!glview->windowShouldClose())\n    {\n        QueryPerformanceCounter(&nNow);\n        if (nNow.QuadPart - nLast.QuadPart > _animationInterval.QuadPart)\n        {\n            nLast.QuadPart = nNow.QuadPart;\n            \n            director->mainLoop();       //Director进行这一帧的渲染\n            glview->pollEvents();       // This function processes only those events that have already been received and then returns immediately.\n        }\n        else\n        {\n            Sleep(0);\n        }\n    }\n\n    ...\n    \n    return true;\n}\n```\n\n\n## Director\n\n### 主要函数预览\n```\n//openGL Matrix Operate\n    void pushMatrix(MATRIX_STACK_TYPE type);\n    void popMatrix(MATRIX_STACK_TYPE type);\n    void loadIdentityMatrix(MATRIX_STACK_TYPE type);\n    void loadMatrix(MATRIX_STACK_TYPE type, const Mat4& mat);\n    void multiplyMatrix(MATRIX_STACK_TYPE type, const Mat4& mat);\n    Mat4 getMatrix(MATRIX_STACK_TYPE type);\n    void resetMatrixStack();\n    \n//View Data\n    inline double getAnimationInterval();\n    inline bool isDisplayStats();\n    inline GLView* getOpenGLView();\n    inline Projection getProjection();\n    Size getVisibleSize() const;\n    \n    Vec2 getVisibleOrigin() const;\n    Vec2 convertToGL(const Vec2& point);\n    Vec2 convertToUI(const Vec2& point);\n    float getZEye() const;\n\n// Scene 场景管理\n    inline Scene* getRunningScene();\n    void runWithScene(Scene *scene);\n    void pushScene(Scene *scene);\n    \n    \n// 控制绘制的暂停和恢复\n    void end();\n    void pause();\n    void resume();\n    \n//绘制图形(界面展示最重要的函数)\n    void drawScene();\n    \n//Getter and Setter\n    Scheduler* getScheduler() const { return _scheduler; }\n    void setScheduler(Scheduler* scheduler);\n\n    ActionManager* getActionManager() const { return _actionManager; }\n    void setActionManager(ActionManager* actionManager);\n    \n    EventDispatcher* getEventDispatcher() const { return _eventDispatcher; }\n    void setEventDispatcher(EventDispatcher* dispatcher);\n\n    Renderer* getRenderer() const { return _renderer; }\n```\n\n### drawScene(): 主要绘制函数\n\n```\n// Draw the Scene\nvoid Director::drawScene()\n{\n    ...\n    \n    if (! _paused)\n    {\n        _scheduler->update(_deltaTime);                         //Scheduler 定时器 更新\n        _eventDispatcher->dispatchEvent(_eventAfterUpdate);     //Dispatcher 抛发事件.\n    }\n\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);         //glClear\n\n    if (_nextScene)                                             //取得下一个将要显示的Scene.\n    {\n        setNextScene();\n    }\n\n    pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);      //将上一次绘制的Context放到堆栈\n\n    // draw the scene\n    if (_runningScene)\n    {\n        _runningScene->visit(_renderer, Mat4::IDENTITY, false);\n        _eventDispatcher->dispatchEvent(_eventAfterVisit);\n    }\n\n    _renderer->render();                                        //渲染\n    _eventDispatcher->dispatchEvent(_eventAfterDraw);\n\n    popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);       //返回到上一次绘制时的状态.\n\n\n    // swap buffers\n    if (_openGLView)\n    {\n        _openGLView->swapBuffers();                             //把上面渲染的结果显示到屏幕\n    }\n    \n    ...\n}\n```\n\n## Node::visit() 函数\n\n### 预览\nNode::visit() 的主要功能就是\n\n1. 调用所有孩子的`visit`函数\n2. 调用`self->draw()`函数\n```\nvoid Node::visit(Renderer* renderer, const Mat4 &parentTransform, uint32_t parentFlags)\n{\n    // quick return if not visible. children won't be drawn.\n    if (!_visible)\n    {\n        return;\n    }\n\n    uint32_t flags = processParentFlags(parentTransform, parentFlags);\n\n    // IMPORTANT:\n    // To ease the migration to v3.0, we still support the Mat4 stack,\n    // but it is deprecated and your code should not rely on it\n    Director* director = Director::getInstance();\n    director->pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n    director->loadMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW, _modelViewTransform);\n\n    int i = 0;\n\n   \n    if(!_children.empty())\n    {\n        sortAllChildren();\n        // draw children zOrder < 0\n        for( ; i < _children.size(); i++ )\n        {\n            auto node = _children.at(i);\n\n            if ( node && node->_localZOrder < 0 )\n                node->visit(renderer, _modelViewTransform, flags);\n            else\n                break;\n        }\n        // self draw\n        this->draw(renderer, _modelViewTransform, flags);\n\n        for(auto it=_children.cbegin()+i; it != _children.cend(); ++it)\n            (*it)->visit(renderer, _modelViewTransform, flags);\n    }\n    else\n    {\n        this->draw(renderer, _modelViewTransform, flags);\n    }\n\n    director->popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n}\n```\n\n### Node::draw()\n因为`Node`是所有可显示对象的父类, 没有任何显示内容, 所以`draw`函数为空.\n这里我们以`Sprite::draw`函数为例简单介绍下`draw`的作用.\n\n```\nvoid Sprite::draw(Renderer *renderer, const Mat4 &transform, uint32_t flags)\n{\n    // Don't do calculate the culling if the transform was not updated\n    _insideBounds = (flags & FLAGS_TRANSFORM_DIRTY) ? renderer->checkVisibility(transform, _contentSize) : _insideBounds;\n\n    if(_insideBounds)\n    {\n        _quadCommand.init(_globalZOrder, _texture->getName(), getGLProgramState(), _blendFunc, &_quad, 1, transform);\n        renderer->addCommand(&_quadCommand);\n    }\n}\n```\n我们看到, `Sprite::draw`函数主要实现了[添加一个`QuadCommand`到`Render`中去]的功能.\n再看看`Label`的绘制函数.\n\n### Label::draw\n\n```\nvoid Label::draw(Renderer *renderer, const Mat4 &transform, uint32_t flags)\n{\n    // Don't do calculate the culling if the transform was not updated\n    _insideBounds = (flags & FLAGS_TRANSFORM_DIRTY) ? renderer->checkVisibility(transform, _contentSize) : _insideBounds;\n\n    if(_insideBounds) {\n        _customCommand.init(_globalZOrder);\n        _customCommand.func = CC_CALLBACK_0(Label::onDraw, this, transform, flags);\n        renderer->addCommand(&_customCommand);\n    }\n}\n```\n\n其实, 跟`Sprite::draw`也差不多. 关键在于这个`RenderCommand`怎么构造和执行的.\n\n\n## Renderer 渲染器\n### 主要函数预览\n\n\n```\n    void initGLView();\n\n    /** Adds a `RenderComamnd` into the renderer */\n    void addCommand(RenderCommand* command);\n\n    /** Adds a `RenderComamnd` into the renderer specifying a particular render queue ID */\n    void addCommand(RenderCommand* command, int renderQueue);\n\n    /** Pushes a group into the render queue */\n    void pushGroup(int renderQueueID);\n\n    /** Pops a group from the render queue */\n    void popGroup();\n\n    /** Creates a render queue and returns its Id */\n    int createRenderQueue();\n\n    /** Renders into the GLView all the queued `RenderCommand` objects */\n    void render();\n```\n可见它主要由两个功能:\n\n1. 对`ReanderCommand`进行排序和分类管理\n2. 进行渲染:`render()`\n\n\n### 渲染函数Renderer::render()\n\n```\nvoid Renderer::render()\n{\n   ...\n    \n    if (_glViewAssigned)\n    {\n       ...\n        //排列渲染队列\n        for (auto &renderqueue : _renderGroups)\n        {\n            renderqueue.sort();\n        } \n        //进行渲染\n        visitRenderQueue(_renderGroups[0]);\n        ...\n    }\n    ...\n}\n```\n### Renderer::visitRenderQueue\n\n按照顺序执行所有的 `RenderCommand`\n```\nvoid Renderer::visitRenderQueue(const RenderQueue& queue)\n{\n    ssize_t size = queue.size();\n    \n    for (ssize_t index = 0; index < size; ++index)\n    {\n        auto command = queue[index];\n        auto commandType = command->getType();\n        if(RenderCommand::Type::QUAD_COMMAND == commandType)\n        {\n            auto cmd = static_cast<QuadCommand*>(command);\n            //Batch quads\n            if(_numQuads + cmd->getQuadCount() > VBO_SIZE)\n            {\n                drawBatchedQuads();\n            }\n            \n            _batchedQuadCommands.push_back(cmd);\n            \n            memcpy(_quads + _numQuads, cmd->getQuads(), sizeof(V3F_C4B_T2F_Quad) * cmd->getQuadCount());\n            convertToWorldCoordinates(_quads + _numQuads, cmd->getQuadCount(), cmd->getModelView());\n            \n            _numQuads += cmd->getQuadCount();\n\n        }\n        else if(RenderCommand::Type::GROUP_COMMAND == commandType)\n        {\n            flush();\n            int renderQueueID = ((GroupCommand*) command)->getRenderQueueID();\n            visitRenderQueue(_renderGroups[renderQueueID]);\n        }\n        else if(RenderCommand::Type::CUSTOM_COMMAND == commandType)\n        {\n            ...\n        }\n        ...\n    }\n}\n```\n\n### openGL VAO, VBO 介绍.\n\n[GLSL渲染语言入门与VBO、VAO使用：绘制一个三角形](http://blog.csdn.net/xiajun07061225/article/details/7628146)\n[OpenGL 4.0 VAO VBO 理解](http://blog.csdn.net/zhuyingqingfen/article/details/19238651)\n\n\n## Schelduler介绍\n`Schelduler`是`cocos2d-x`中实现延迟调用,定时调用时最重要的功能. 类似于其他语言中的`Timer`\n他最核心的函数就是:\n\n```\nvoid schedule(const ccSchedulerFunc& callback, void *target, float interval, unsigned int repeat, float delay, bool paused, const std::string& key);\n```\n\n用来启动一个定时操作: 在延迟`delay`时间后, 每隔`repeat`时间, 调用一次`callback`. `target`用来标记这个操作属于谁, 方便管理, 比如在析构的时候调用`void unschedule(void *target)`即可移除当前对象的所有`定时操作`.\n\n`Schelduler`的其它大部分方法, 要么是它的衍生, 为了减少调用参数; 要么是对`定时操作`的控制, 比如暂停, 恢复, 移除等. 如果只对想对框架的各个模块有大概的了解, 可以不做深入.\n\n\n## EventDispatcher\n(后续添加)\n\n\n\n\n\n","slug":"技术/[cocos2dx]深入--几个代表性的类","published":1,"updated":"2017-07-26T15:56:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqr004mq0d4licl8zw7","content":"<p>摘要: 此文对<code>cocos2d-x</code>引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括<code>Director</code>,<code>Application</code>, <code>Renderer</code>, <code>EventDispatcher</code>, <code>Scheduler</code>. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对<code>cocos2d-x</code>引擎有一个全面笼统的认识, 也方便快速定位问题.</p>\n<hr>\n<h2 id=\"GLView\"><a href=\"#GLView\" class=\"headerlink\" title=\"GLView\"></a>GLView</h2><p><code>cocos2d-x</code>对<code>openGL</code>的封装. 不同平台下, <code>openGL</code>有一些差别.</p>\n<h3 id=\"openGL\"><a href=\"#openGL\" class=\"headerlink\" title=\"openGL\"></a>openGL</h3><h4 id=\"一段简单的例子\"><a href=\"#一段简单的例子\" class=\"headerlink\" title=\"一段简单的例子\"></a>一段简单的例子</h4><p>以下内容引用自<a href=\"http://www.glprogramming.com/red/chapter01.html\" target=\"_blank\" rel=\"external\">Introduction to OpenGL</a>. 需要更具体的介绍也可参考这个链接.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"># include &lt;whateverYouNeed.h&gt;</div><div class=\"line\">main() &#123;</div><div class=\"line\">   InitializeAWindowPlease();</div><div class=\"line\">   </div><div class=\"line\">   glClearColor (0.0, 0.0, 0.0, 0.0);</div><div class=\"line\">   glClear (GL_COLOR_BUFFER_BIT);</div><div class=\"line\">   </div><div class=\"line\">   glColor3f (1.0, 1.0, 1.0);</div><div class=\"line\">   glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);</div><div class=\"line\">   glBegin(GL_POLYGON);</div><div class=\"line\">      glVertex3f (0.25, 0.25, 0.0);</div><div class=\"line\">      glVertex3f (0.75, 0.25, 0.0);</div><div class=\"line\">      glVertex3f (0.75, 0.75, 0.0);</div><div class=\"line\">      glVertex3f (0.25, 0.75, 0.0);</div><div class=\"line\">   glEnd();</div><div class=\"line\">   glFlush();</div><div class=\"line\">   </div><div class=\"line\">   UpdateTheWindowAndCheckForEvents();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"OpenGL-Command-Syntax\"><a href=\"#OpenGL-Command-Syntax\" class=\"headerlink\" title=\"OpenGL Command Syntax\"></a>OpenGL Command Syntax</h4><ul>\n<li>OpenGL commands use the prefix <code>gl</code> and initial capital letters for each word making up the command name </li>\n<li>some seemingly extraneous letters appended to some command names (for example, the <code>3f</code> in <code>glColor3f()</code> and <code>glVertex3f()</code>)</li>\n</ul>\n<h4 id=\"OpenGL-as-a-State-Machine\"><a href=\"#OpenGL-as-a-State-Machine\" class=\"headerlink\" title=\"OpenGL as a State Machine\"></a>OpenGL as a State Machine</h4><p>OpenGL is a state machine. You put it into various states (or modes) that then remain in effect until you change them.</p>\n<h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><h3 id=\"主要方法\"><a href=\"#主要方法\" class=\"headerlink\" title=\"主要方法:\"></a>主要方法:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">virtual const char * getCurrentLanguage();</div><div class=\"line\">virtual Platform getTargetPlatform();</div><div class=\"line\">virtual void setAnimationInterval(double interval);</div><div class=\"line\">int run();//启动主循环</div></pre></td></tr></table></figure>\n<h3 id=\"run-函数\"><a href=\"#run-函数\" class=\"headerlink\" title=\"run()函数\"></a>run()函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">int Application::run()</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">    ...</div><div class=\"line\"></div><div class=\"line\">    while(!glview-&gt;windowShouldClose())</div><div class=\"line\">    &#123;</div><div class=\"line\">        QueryPerformanceCounter(&amp;nNow);</div><div class=\"line\">        if (nNow.QuadPart - nLast.QuadPart &gt; _animationInterval.QuadPart)</div><div class=\"line\">        &#123;</div><div class=\"line\">            nLast.QuadPart = nNow.QuadPart;</div><div class=\"line\">            </div><div class=\"line\">            director-&gt;mainLoop();       //Director进行这一帧的渲染</div><div class=\"line\">            glview-&gt;pollEvents();       // This function processes only those events that have already been received and then returns immediately.</div><div class=\"line\">        &#125;</div><div class=\"line\">        else</div><div class=\"line\">        &#123;</div><div class=\"line\">            Sleep(0);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ...</div><div class=\"line\">    </div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Director\"><a href=\"#Director\" class=\"headerlink\" title=\"Director\"></a>Director</h2><h3 id=\"主要函数预览\"><a href=\"#主要函数预览\" class=\"headerlink\" title=\"主要函数预览\"></a>主要函数预览</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">//openGL Matrix Operate</div><div class=\"line\">    void pushMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void popMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void loadIdentityMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void loadMatrix(MATRIX_STACK_TYPE type, const Mat4&amp; mat);</div><div class=\"line\">    void multiplyMatrix(MATRIX_STACK_TYPE type, const Mat4&amp; mat);</div><div class=\"line\">    Mat4 getMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void resetMatrixStack();</div><div class=\"line\">    </div><div class=\"line\">//View Data</div><div class=\"line\">    inline double getAnimationInterval();</div><div class=\"line\">    inline bool isDisplayStats();</div><div class=\"line\">    inline GLView* getOpenGLView();</div><div class=\"line\">    inline Projection getProjection();</div><div class=\"line\">    Size getVisibleSize() const;</div><div class=\"line\">    </div><div class=\"line\">    Vec2 getVisibleOrigin() const;</div><div class=\"line\">    Vec2 convertToGL(const Vec2&amp; point);</div><div class=\"line\">    Vec2 convertToUI(const Vec2&amp; point);</div><div class=\"line\">    float getZEye() const;</div><div class=\"line\"></div><div class=\"line\">// Scene 场景管理</div><div class=\"line\">    inline Scene* getRunningScene();</div><div class=\"line\">    void runWithScene(Scene *scene);</div><div class=\"line\">    void pushScene(Scene *scene);</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">// 控制绘制的暂停和恢复</div><div class=\"line\">    void end();</div><div class=\"line\">    void pause();</div><div class=\"line\">    void resume();</div><div class=\"line\">    </div><div class=\"line\">//绘制图形(界面展示最重要的函数)</div><div class=\"line\">    void drawScene();</div><div class=\"line\">    </div><div class=\"line\">//Getter and Setter</div><div class=\"line\">    Scheduler* getScheduler() const &#123; return _scheduler; &#125;</div><div class=\"line\">    void setScheduler(Scheduler* scheduler);</div><div class=\"line\"></div><div class=\"line\">    ActionManager* getActionManager() const &#123; return _actionManager; &#125;</div><div class=\"line\">    void setActionManager(ActionManager* actionManager);</div><div class=\"line\">    </div><div class=\"line\">    EventDispatcher* getEventDispatcher() const &#123; return _eventDispatcher; &#125;</div><div class=\"line\">    void setEventDispatcher(EventDispatcher* dispatcher);</div><div class=\"line\"></div><div class=\"line\">    Renderer* getRenderer() const &#123; return _renderer; &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"drawScene-主要绘制函数\"><a href=\"#drawScene-主要绘制函数\" class=\"headerlink\" title=\"drawScene(): 主要绘制函数\"></a>drawScene(): 主要绘制函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Draw the Scene</div><div class=\"line\">void Director::drawScene()</div><div class=\"line\">&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    </div><div class=\"line\">    if (! _paused)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _scheduler-&gt;update(_deltaTime);                         //Scheduler 定时器 更新</div><div class=\"line\">        _eventDispatcher-&gt;dispatchEvent(_eventAfterUpdate);     //Dispatcher 抛发事件.</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);         //glClear</div><div class=\"line\"></div><div class=\"line\">    if (_nextScene)                                             //取得下一个将要显示的Scene.</div><div class=\"line\">    &#123;</div><div class=\"line\">        setNextScene();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);      //将上一次绘制的Context放到堆栈</div><div class=\"line\"></div><div class=\"line\">    // draw the scene</div><div class=\"line\">    if (_runningScene)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _runningScene-&gt;visit(_renderer, Mat4::IDENTITY, false);</div><div class=\"line\">        _eventDispatcher-&gt;dispatchEvent(_eventAfterVisit);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    _renderer-&gt;render();                                        //渲染</div><div class=\"line\">    _eventDispatcher-&gt;dispatchEvent(_eventAfterDraw);</div><div class=\"line\"></div><div class=\"line\">    popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);       //返回到上一次绘制时的状态.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    // swap buffers</div><div class=\"line\">    if (_openGLView)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _openGLView-&gt;swapBuffers();                             //把上面渲染的结果显示到屏幕</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Node-visit-函数\"><a href=\"#Node-visit-函数\" class=\"headerlink\" title=\"Node::visit() 函数\"></a>Node::visit() 函数</h2><h3 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h3><p>Node::visit() 的主要功能就是</p>\n<ol>\n<li>调用所有孩子的<code>visit</code>函数</li>\n<li>调用<code>self-&gt;draw()</code>函数<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Node::visit(Renderer* renderer, const Mat4 &amp;parentTransform, uint32_t parentFlags)</div><div class=\"line\">&#123;</div><div class=\"line\">    // quick return if not visible. children won&apos;t be drawn.</div><div class=\"line\">    if (!_visible)</div><div class=\"line\">    &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    uint32_t flags = processParentFlags(parentTransform, parentFlags);</div><div class=\"line\"></div><div class=\"line\">    // IMPORTANT:</div><div class=\"line\">    // To ease the migration to v3.0, we still support the Mat4 stack,</div><div class=\"line\">    // but it is deprecated and your code should not rely on it</div><div class=\"line\">    Director* director = Director::getInstance();</div><div class=\"line\">    director-&gt;pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);</div><div class=\"line\">    director-&gt;loadMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW, _modelViewTransform);</div><div class=\"line\"></div><div class=\"line\">    int i = 0;</div><div class=\"line\"></div><div class=\"line\">   </div><div class=\"line\">    if(!_children.empty())</div><div class=\"line\">    &#123;</div><div class=\"line\">        sortAllChildren();</div><div class=\"line\">        // draw children zOrder &lt; 0</div><div class=\"line\">        for( ; i &lt; _children.size(); i++ )</div><div class=\"line\">        &#123;</div><div class=\"line\">            auto node = _children.at(i);</div><div class=\"line\"></div><div class=\"line\">            if ( node &amp;&amp; node-&gt;_localZOrder &lt; 0 )</div><div class=\"line\">                node-&gt;visit(renderer, _modelViewTransform, flags);</div><div class=\"line\">            else</div><div class=\"line\">                break;</div><div class=\"line\">        &#125;</div><div class=\"line\">        // self draw</div><div class=\"line\">        this-&gt;draw(renderer, _modelViewTransform, flags);</div><div class=\"line\"></div><div class=\"line\">        for(auto it=_children.cbegin()+i; it != _children.cend(); ++it)</div><div class=\"line\">            (*it)-&gt;visit(renderer, _modelViewTransform, flags);</div><div class=\"line\">    &#125;</div><div class=\"line\">    else</div><div class=\"line\">    &#123;</div><div class=\"line\">        this-&gt;draw(renderer, _modelViewTransform, flags);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    director-&gt;popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Node-draw\"><a href=\"#Node-draw\" class=\"headerlink\" title=\"Node::draw()\"></a>Node::draw()</h3><p>因为<code>Node</code>是所有可显示对象的父类, 没有任何显示内容, 所以<code>draw</code>函数为空.<br>这里我们以<code>Sprite::draw</code>函数为例简单介绍下<code>draw</code>的作用.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Sprite::draw(Renderer *renderer, const Mat4 &amp;transform, uint32_t flags)</div><div class=\"line\">&#123;</div><div class=\"line\">    // Don&apos;t do calculate the culling if the transform was not updated</div><div class=\"line\">    _insideBounds = (flags &amp; FLAGS_TRANSFORM_DIRTY) ? renderer-&gt;checkVisibility(transform, _contentSize) : _insideBounds;</div><div class=\"line\"></div><div class=\"line\">    if(_insideBounds)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _quadCommand.init(_globalZOrder, _texture-&gt;getName(), getGLProgramState(), _blendFunc, &amp;_quad, 1, transform);</div><div class=\"line\">        renderer-&gt;addCommand(&amp;_quadCommand);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们看到, <code>Sprite::draw</code>函数主要实现了[添加一个<code>QuadCommand</code>到<code>Render</code>中去]的功能.<br>再看看<code>Label</code>的绘制函数.</p>\n<h3 id=\"Label-draw\"><a href=\"#Label-draw\" class=\"headerlink\" title=\"Label::draw\"></a>Label::draw</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Label::draw(Renderer *renderer, const Mat4 &amp;transform, uint32_t flags)</div><div class=\"line\">&#123;</div><div class=\"line\">    // Don&apos;t do calculate the culling if the transform was not updated</div><div class=\"line\">    _insideBounds = (flags &amp; FLAGS_TRANSFORM_DIRTY) ? renderer-&gt;checkVisibility(transform, _contentSize) : _insideBounds;</div><div class=\"line\"></div><div class=\"line\">    if(_insideBounds) &#123;</div><div class=\"line\">        _customCommand.init(_globalZOrder);</div><div class=\"line\">        _customCommand.func = CC_CALLBACK_0(Label::onDraw, this, transform, flags);</div><div class=\"line\">        renderer-&gt;addCommand(&amp;_customCommand);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其实, 跟<code>Sprite::draw</code>也差不多. 关键在于这个<code>RenderCommand</code>怎么构造和执行的.</p>\n<h2 id=\"Renderer-渲染器\"><a href=\"#Renderer-渲染器\" class=\"headerlink\" title=\"Renderer 渲染器\"></a>Renderer 渲染器</h2><h3 id=\"主要函数预览-1\"><a href=\"#主要函数预览-1\" class=\"headerlink\" title=\"主要函数预览\"></a>主要函数预览</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">void initGLView();</div><div class=\"line\"></div><div class=\"line\">/** Adds a `RenderComamnd` into the renderer */</div><div class=\"line\">void addCommand(RenderCommand* command);</div><div class=\"line\"></div><div class=\"line\">/** Adds a `RenderComamnd` into the renderer specifying a particular render queue ID */</div><div class=\"line\">void addCommand(RenderCommand* command, int renderQueue);</div><div class=\"line\"></div><div class=\"line\">/** Pushes a group into the render queue */</div><div class=\"line\">void pushGroup(int renderQueueID);</div><div class=\"line\"></div><div class=\"line\">/** Pops a group from the render queue */</div><div class=\"line\">void popGroup();</div><div class=\"line\"></div><div class=\"line\">/** Creates a render queue and returns its Id */</div><div class=\"line\">int createRenderQueue();</div><div class=\"line\"></div><div class=\"line\">/** Renders into the GLView all the queued `RenderCommand` objects */</div><div class=\"line\">void render();</div></pre></td></tr></table></figure>\n<p>可见它主要由两个功能:</p>\n<ol>\n<li>对<code>ReanderCommand</code>进行排序和分类管理</li>\n<li>进行渲染:<code>render()</code></li>\n</ol>\n<h3 id=\"渲染函数Renderer-render\"><a href=\"#渲染函数Renderer-render\" class=\"headerlink\" title=\"渲染函数Renderer::render()\"></a>渲染函数Renderer::render()</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Renderer::render()</div><div class=\"line\">&#123;</div><div class=\"line\">   ...</div><div class=\"line\">    </div><div class=\"line\">    if (_glViewAssigned)</div><div class=\"line\">    &#123;</div><div class=\"line\">       ...</div><div class=\"line\">        //排列渲染队列</div><div class=\"line\">        for (auto &amp;renderqueue : _renderGroups)</div><div class=\"line\">        &#123;</div><div class=\"line\">            renderqueue.sort();</div><div class=\"line\">        &#125; </div><div class=\"line\">        //进行渲染</div><div class=\"line\">        visitRenderQueue(_renderGroups[0]);</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Renderer-visitRenderQueue\"><a href=\"#Renderer-visitRenderQueue\" class=\"headerlink\" title=\"Renderer::visitRenderQueue\"></a>Renderer::visitRenderQueue</h3><p>按照顺序执行所有的 <code>RenderCommand</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Renderer::visitRenderQueue(const RenderQueue&amp; queue)</div><div class=\"line\">&#123;</div><div class=\"line\">    ssize_t size = queue.size();</div><div class=\"line\">    </div><div class=\"line\">    for (ssize_t index = 0; index &lt; size; ++index)</div><div class=\"line\">    &#123;</div><div class=\"line\">        auto command = queue[index];</div><div class=\"line\">        auto commandType = command-&gt;getType();</div><div class=\"line\">        if(RenderCommand::Type::QUAD_COMMAND == commandType)</div><div class=\"line\">        &#123;</div><div class=\"line\">            auto cmd = static_cast&lt;QuadCommand*&gt;(command);</div><div class=\"line\">            //Batch quads</div><div class=\"line\">            if(_numQuads + cmd-&gt;getQuadCount() &gt; VBO_SIZE)</div><div class=\"line\">            &#123;</div><div class=\"line\">                drawBatchedQuads();</div><div class=\"line\">            &#125;</div><div class=\"line\">            </div><div class=\"line\">            _batchedQuadCommands.push_back(cmd);</div><div class=\"line\">            </div><div class=\"line\">            memcpy(_quads + _numQuads, cmd-&gt;getQuads(), sizeof(V3F_C4B_T2F_Quad) * cmd-&gt;getQuadCount());</div><div class=\"line\">            convertToWorldCoordinates(_quads + _numQuads, cmd-&gt;getQuadCount(), cmd-&gt;getModelView());</div><div class=\"line\">            </div><div class=\"line\">            _numQuads += cmd-&gt;getQuadCount();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(RenderCommand::Type::GROUP_COMMAND == commandType)</div><div class=\"line\">        &#123;</div><div class=\"line\">            flush();</div><div class=\"line\">            int renderQueueID = ((GroupCommand*) command)-&gt;getRenderQueueID();</div><div class=\"line\">            visitRenderQueue(_renderGroups[renderQueueID]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(RenderCommand::Type::CUSTOM_COMMAND == commandType)</div><div class=\"line\">        &#123;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"openGL-VAO-VBO-介绍\"><a href=\"#openGL-VAO-VBO-介绍\" class=\"headerlink\" title=\"openGL VAO, VBO 介绍.\"></a>openGL VAO, VBO 介绍.</h3><p><a href=\"http://blog.csdn.net/xiajun07061225/article/details/7628146\" target=\"_blank\" rel=\"external\">GLSL渲染语言入门与VBO、VAO使用：绘制一个三角形</a><br><a href=\"http://blog.csdn.net/zhuyingqingfen/article/details/19238651\" target=\"_blank\" rel=\"external\">OpenGL 4.0 VAO VBO 理解</a></p>\n<h2 id=\"Schelduler介绍\"><a href=\"#Schelduler介绍\" class=\"headerlink\" title=\"Schelduler介绍\"></a>Schelduler介绍</h2><p><code>Schelduler</code>是<code>cocos2d-x</code>中实现延迟调用,定时调用时最重要的功能. 类似于其他语言中的<code>Timer</code><br>他最核心的函数就是:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">void schedule(const ccSchedulerFunc&amp; callback, void *target, float interval, unsigned int repeat, float delay, bool paused, const std::string&amp; key);</div></pre></td></tr></table></figure>\n<p>用来启动一个定时操作: 在延迟<code>delay</code>时间后, 每隔<code>repeat</code>时间, 调用一次<code>callback</code>. <code>target</code>用来标记这个操作属于谁, 方便管理, 比如在析构的时候调用<code>void unschedule(void *target)</code>即可移除当前对象的所有<code>定时操作</code>.</p>\n<p><code>Schelduler</code>的其它大部分方法, 要么是它的衍生, 为了减少调用参数; 要么是对<code>定时操作</code>的控制, 比如暂停, 恢复, 移除等. 如果只对想对框架的各个模块有大概的了解, 可以不做深入.</p>\n<h2 id=\"EventDispatcher\"><a href=\"#EventDispatcher\" class=\"headerlink\" title=\"EventDispatcher\"></a>EventDispatcher</h2><p>(后续添加)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: 此文对<code>cocos2d-x</code>引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括<code>Director</code>,<code>Application</code>, <code>Renderer</code>, <code>EventDispatcher</code>, <code>Scheduler</code>. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对<code>cocos2d-x</code>引擎有一个全面笼统的认识, 也方便快速定位问题.</p>\n<hr>\n<h2 id=\"GLView\"><a href=\"#GLView\" class=\"headerlink\" title=\"GLView\"></a>GLView</h2><p><code>cocos2d-x</code>对<code>openGL</code>的封装. 不同平台下, <code>openGL</code>有一些差别.</p>\n<h3 id=\"openGL\"><a href=\"#openGL\" class=\"headerlink\" title=\"openGL\"></a>openGL</h3><h4 id=\"一段简单的例子\"><a href=\"#一段简单的例子\" class=\"headerlink\" title=\"一段简单的例子\"></a>一段简单的例子</h4><p>以下内容引用自<a href=\"http://www.glprogramming.com/red/chapter01.html\" target=\"_blank\" rel=\"external\">Introduction to OpenGL</a>. 需要更具体的介绍也可参考这个链接.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"># include &lt;whateverYouNeed.h&gt;</div><div class=\"line\">main() &#123;</div><div class=\"line\">   InitializeAWindowPlease();</div><div class=\"line\">   </div><div class=\"line\">   glClearColor (0.0, 0.0, 0.0, 0.0);</div><div class=\"line\">   glClear (GL_COLOR_BUFFER_BIT);</div><div class=\"line\">   </div><div class=\"line\">   glColor3f (1.0, 1.0, 1.0);</div><div class=\"line\">   glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);</div><div class=\"line\">   glBegin(GL_POLYGON);</div><div class=\"line\">      glVertex3f (0.25, 0.25, 0.0);</div><div class=\"line\">      glVertex3f (0.75, 0.25, 0.0);</div><div class=\"line\">      glVertex3f (0.75, 0.75, 0.0);</div><div class=\"line\">      glVertex3f (0.25, 0.75, 0.0);</div><div class=\"line\">   glEnd();</div><div class=\"line\">   glFlush();</div><div class=\"line\">   </div><div class=\"line\">   UpdateTheWindowAndCheckForEvents();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"OpenGL-Command-Syntax\"><a href=\"#OpenGL-Command-Syntax\" class=\"headerlink\" title=\"OpenGL Command Syntax\"></a>OpenGL Command Syntax</h4><ul>\n<li>OpenGL commands use the prefix <code>gl</code> and initial capital letters for each word making up the command name </li>\n<li>some seemingly extraneous letters appended to some command names (for example, the <code>3f</code> in <code>glColor3f()</code> and <code>glVertex3f()</code>)</li>\n</ul>\n<h4 id=\"OpenGL-as-a-State-Machine\"><a href=\"#OpenGL-as-a-State-Machine\" class=\"headerlink\" title=\"OpenGL as a State Machine\"></a>OpenGL as a State Machine</h4><p>OpenGL is a state machine. You put it into various states (or modes) that then remain in effect until you change them.</p>\n<h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><h3 id=\"主要方法\"><a href=\"#主要方法\" class=\"headerlink\" title=\"主要方法:\"></a>主要方法:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">virtual const char * getCurrentLanguage();</div><div class=\"line\">virtual Platform getTargetPlatform();</div><div class=\"line\">virtual void setAnimationInterval(double interval);</div><div class=\"line\">int run();//启动主循环</div></pre></td></tr></table></figure>\n<h3 id=\"run-函数\"><a href=\"#run-函数\" class=\"headerlink\" title=\"run()函数\"></a>run()函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">int Application::run()</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">    ...</div><div class=\"line\"></div><div class=\"line\">    while(!glview-&gt;windowShouldClose())</div><div class=\"line\">    &#123;</div><div class=\"line\">        QueryPerformanceCounter(&amp;nNow);</div><div class=\"line\">        if (nNow.QuadPart - nLast.QuadPart &gt; _animationInterval.QuadPart)</div><div class=\"line\">        &#123;</div><div class=\"line\">            nLast.QuadPart = nNow.QuadPart;</div><div class=\"line\">            </div><div class=\"line\">            director-&gt;mainLoop();       //Director进行这一帧的渲染</div><div class=\"line\">            glview-&gt;pollEvents();       // This function processes only those events that have already been received and then returns immediately.</div><div class=\"line\">        &#125;</div><div class=\"line\">        else</div><div class=\"line\">        &#123;</div><div class=\"line\">            Sleep(0);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ...</div><div class=\"line\">    </div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Director\"><a href=\"#Director\" class=\"headerlink\" title=\"Director\"></a>Director</h2><h3 id=\"主要函数预览\"><a href=\"#主要函数预览\" class=\"headerlink\" title=\"主要函数预览\"></a>主要函数预览</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">//openGL Matrix Operate</div><div class=\"line\">    void pushMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void popMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void loadIdentityMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void loadMatrix(MATRIX_STACK_TYPE type, const Mat4&amp; mat);</div><div class=\"line\">    void multiplyMatrix(MATRIX_STACK_TYPE type, const Mat4&amp; mat);</div><div class=\"line\">    Mat4 getMatrix(MATRIX_STACK_TYPE type);</div><div class=\"line\">    void resetMatrixStack();</div><div class=\"line\">    </div><div class=\"line\">//View Data</div><div class=\"line\">    inline double getAnimationInterval();</div><div class=\"line\">    inline bool isDisplayStats();</div><div class=\"line\">    inline GLView* getOpenGLView();</div><div class=\"line\">    inline Projection getProjection();</div><div class=\"line\">    Size getVisibleSize() const;</div><div class=\"line\">    </div><div class=\"line\">    Vec2 getVisibleOrigin() const;</div><div class=\"line\">    Vec2 convertToGL(const Vec2&amp; point);</div><div class=\"line\">    Vec2 convertToUI(const Vec2&amp; point);</div><div class=\"line\">    float getZEye() const;</div><div class=\"line\"></div><div class=\"line\">// Scene 场景管理</div><div class=\"line\">    inline Scene* getRunningScene();</div><div class=\"line\">    void runWithScene(Scene *scene);</div><div class=\"line\">    void pushScene(Scene *scene);</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">// 控制绘制的暂停和恢复</div><div class=\"line\">    void end();</div><div class=\"line\">    void pause();</div><div class=\"line\">    void resume();</div><div class=\"line\">    </div><div class=\"line\">//绘制图形(界面展示最重要的函数)</div><div class=\"line\">    void drawScene();</div><div class=\"line\">    </div><div class=\"line\">//Getter and Setter</div><div class=\"line\">    Scheduler* getScheduler() const &#123; return _scheduler; &#125;</div><div class=\"line\">    void setScheduler(Scheduler* scheduler);</div><div class=\"line\"></div><div class=\"line\">    ActionManager* getActionManager() const &#123; return _actionManager; &#125;</div><div class=\"line\">    void setActionManager(ActionManager* actionManager);</div><div class=\"line\">    </div><div class=\"line\">    EventDispatcher* getEventDispatcher() const &#123; return _eventDispatcher; &#125;</div><div class=\"line\">    void setEventDispatcher(EventDispatcher* dispatcher);</div><div class=\"line\"></div><div class=\"line\">    Renderer* getRenderer() const &#123; return _renderer; &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"drawScene-主要绘制函数\"><a href=\"#drawScene-主要绘制函数\" class=\"headerlink\" title=\"drawScene(): 主要绘制函数\"></a>drawScene(): 主要绘制函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Draw the Scene</div><div class=\"line\">void Director::drawScene()</div><div class=\"line\">&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    </div><div class=\"line\">    if (! _paused)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _scheduler-&gt;update(_deltaTime);                         //Scheduler 定时器 更新</div><div class=\"line\">        _eventDispatcher-&gt;dispatchEvent(_eventAfterUpdate);     //Dispatcher 抛发事件.</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);         //glClear</div><div class=\"line\"></div><div class=\"line\">    if (_nextScene)                                             //取得下一个将要显示的Scene.</div><div class=\"line\">    &#123;</div><div class=\"line\">        setNextScene();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);      //将上一次绘制的Context放到堆栈</div><div class=\"line\"></div><div class=\"line\">    // draw the scene</div><div class=\"line\">    if (_runningScene)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _runningScene-&gt;visit(_renderer, Mat4::IDENTITY, false);</div><div class=\"line\">        _eventDispatcher-&gt;dispatchEvent(_eventAfterVisit);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    _renderer-&gt;render();                                        //渲染</div><div class=\"line\">    _eventDispatcher-&gt;dispatchEvent(_eventAfterDraw);</div><div class=\"line\"></div><div class=\"line\">    popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);       //返回到上一次绘制时的状态.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    // swap buffers</div><div class=\"line\">    if (_openGLView)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _openGLView-&gt;swapBuffers();                             //把上面渲染的结果显示到屏幕</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Node-visit-函数\"><a href=\"#Node-visit-函数\" class=\"headerlink\" title=\"Node::visit() 函数\"></a>Node::visit() 函数</h2><h3 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h3><p>Node::visit() 的主要功能就是</p>\n<ol>\n<li>调用所有孩子的<code>visit</code>函数</li>\n<li>调用<code>self-&gt;draw()</code>函数<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Node::visit(Renderer* renderer, const Mat4 &amp;parentTransform, uint32_t parentFlags)</div><div class=\"line\">&#123;</div><div class=\"line\">    // quick return if not visible. children won&apos;t be drawn.</div><div class=\"line\">    if (!_visible)</div><div class=\"line\">    &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    uint32_t flags = processParentFlags(parentTransform, parentFlags);</div><div class=\"line\"></div><div class=\"line\">    // IMPORTANT:</div><div class=\"line\">    // To ease the migration to v3.0, we still support the Mat4 stack,</div><div class=\"line\">    // but it is deprecated and your code should not rely on it</div><div class=\"line\">    Director* director = Director::getInstance();</div><div class=\"line\">    director-&gt;pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);</div><div class=\"line\">    director-&gt;loadMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW, _modelViewTransform);</div><div class=\"line\"></div><div class=\"line\">    int i = 0;</div><div class=\"line\"></div><div class=\"line\">   </div><div class=\"line\">    if(!_children.empty())</div><div class=\"line\">    &#123;</div><div class=\"line\">        sortAllChildren();</div><div class=\"line\">        // draw children zOrder &lt; 0</div><div class=\"line\">        for( ; i &lt; _children.size(); i++ )</div><div class=\"line\">        &#123;</div><div class=\"line\">            auto node = _children.at(i);</div><div class=\"line\"></div><div class=\"line\">            if ( node &amp;&amp; node-&gt;_localZOrder &lt; 0 )</div><div class=\"line\">                node-&gt;visit(renderer, _modelViewTransform, flags);</div><div class=\"line\">            else</div><div class=\"line\">                break;</div><div class=\"line\">        &#125;</div><div class=\"line\">        // self draw</div><div class=\"line\">        this-&gt;draw(renderer, _modelViewTransform, flags);</div><div class=\"line\"></div><div class=\"line\">        for(auto it=_children.cbegin()+i; it != _children.cend(); ++it)</div><div class=\"line\">            (*it)-&gt;visit(renderer, _modelViewTransform, flags);</div><div class=\"line\">    &#125;</div><div class=\"line\">    else</div><div class=\"line\">    &#123;</div><div class=\"line\">        this-&gt;draw(renderer, _modelViewTransform, flags);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    director-&gt;popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Node-draw\"><a href=\"#Node-draw\" class=\"headerlink\" title=\"Node::draw()\"></a>Node::draw()</h3><p>因为<code>Node</code>是所有可显示对象的父类, 没有任何显示内容, 所以<code>draw</code>函数为空.<br>这里我们以<code>Sprite::draw</code>函数为例简单介绍下<code>draw</code>的作用.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Sprite::draw(Renderer *renderer, const Mat4 &amp;transform, uint32_t flags)</div><div class=\"line\">&#123;</div><div class=\"line\">    // Don&apos;t do calculate the culling if the transform was not updated</div><div class=\"line\">    _insideBounds = (flags &amp; FLAGS_TRANSFORM_DIRTY) ? renderer-&gt;checkVisibility(transform, _contentSize) : _insideBounds;</div><div class=\"line\"></div><div class=\"line\">    if(_insideBounds)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _quadCommand.init(_globalZOrder, _texture-&gt;getName(), getGLProgramState(), _blendFunc, &amp;_quad, 1, transform);</div><div class=\"line\">        renderer-&gt;addCommand(&amp;_quadCommand);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们看到, <code>Sprite::draw</code>函数主要实现了[添加一个<code>QuadCommand</code>到<code>Render</code>中去]的功能.<br>再看看<code>Label</code>的绘制函数.</p>\n<h3 id=\"Label-draw\"><a href=\"#Label-draw\" class=\"headerlink\" title=\"Label::draw\"></a>Label::draw</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Label::draw(Renderer *renderer, const Mat4 &amp;transform, uint32_t flags)</div><div class=\"line\">&#123;</div><div class=\"line\">    // Don&apos;t do calculate the culling if the transform was not updated</div><div class=\"line\">    _insideBounds = (flags &amp; FLAGS_TRANSFORM_DIRTY) ? renderer-&gt;checkVisibility(transform, _contentSize) : _insideBounds;</div><div class=\"line\"></div><div class=\"line\">    if(_insideBounds) &#123;</div><div class=\"line\">        _customCommand.init(_globalZOrder);</div><div class=\"line\">        _customCommand.func = CC_CALLBACK_0(Label::onDraw, this, transform, flags);</div><div class=\"line\">        renderer-&gt;addCommand(&amp;_customCommand);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其实, 跟<code>Sprite::draw</code>也差不多. 关键在于这个<code>RenderCommand</code>怎么构造和执行的.</p>\n<h2 id=\"Renderer-渲染器\"><a href=\"#Renderer-渲染器\" class=\"headerlink\" title=\"Renderer 渲染器\"></a>Renderer 渲染器</h2><h3 id=\"主要函数预览-1\"><a href=\"#主要函数预览-1\" class=\"headerlink\" title=\"主要函数预览\"></a>主要函数预览</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">void initGLView();</div><div class=\"line\"></div><div class=\"line\">/** Adds a `RenderComamnd` into the renderer */</div><div class=\"line\">void addCommand(RenderCommand* command);</div><div class=\"line\"></div><div class=\"line\">/** Adds a `RenderComamnd` into the renderer specifying a particular render queue ID */</div><div class=\"line\">void addCommand(RenderCommand* command, int renderQueue);</div><div class=\"line\"></div><div class=\"line\">/** Pushes a group into the render queue */</div><div class=\"line\">void pushGroup(int renderQueueID);</div><div class=\"line\"></div><div class=\"line\">/** Pops a group from the render queue */</div><div class=\"line\">void popGroup();</div><div class=\"line\"></div><div class=\"line\">/** Creates a render queue and returns its Id */</div><div class=\"line\">int createRenderQueue();</div><div class=\"line\"></div><div class=\"line\">/** Renders into the GLView all the queued `RenderCommand` objects */</div><div class=\"line\">void render();</div></pre></td></tr></table></figure>\n<p>可见它主要由两个功能:</p>\n<ol>\n<li>对<code>ReanderCommand</code>进行排序和分类管理</li>\n<li>进行渲染:<code>render()</code></li>\n</ol>\n<h3 id=\"渲染函数Renderer-render\"><a href=\"#渲染函数Renderer-render\" class=\"headerlink\" title=\"渲染函数Renderer::render()\"></a>渲染函数Renderer::render()</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Renderer::render()</div><div class=\"line\">&#123;</div><div class=\"line\">   ...</div><div class=\"line\">    </div><div class=\"line\">    if (_glViewAssigned)</div><div class=\"line\">    &#123;</div><div class=\"line\">       ...</div><div class=\"line\">        //排列渲染队列</div><div class=\"line\">        for (auto &amp;renderqueue : _renderGroups)</div><div class=\"line\">        &#123;</div><div class=\"line\">            renderqueue.sort();</div><div class=\"line\">        &#125; </div><div class=\"line\">        //进行渲染</div><div class=\"line\">        visitRenderQueue(_renderGroups[0]);</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Renderer-visitRenderQueue\"><a href=\"#Renderer-visitRenderQueue\" class=\"headerlink\" title=\"Renderer::visitRenderQueue\"></a>Renderer::visitRenderQueue</h3><p>按照顺序执行所有的 <code>RenderCommand</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">void Renderer::visitRenderQueue(const RenderQueue&amp; queue)</div><div class=\"line\">&#123;</div><div class=\"line\">    ssize_t size = queue.size();</div><div class=\"line\">    </div><div class=\"line\">    for (ssize_t index = 0; index &lt; size; ++index)</div><div class=\"line\">    &#123;</div><div class=\"line\">        auto command = queue[index];</div><div class=\"line\">        auto commandType = command-&gt;getType();</div><div class=\"line\">        if(RenderCommand::Type::QUAD_COMMAND == commandType)</div><div class=\"line\">        &#123;</div><div class=\"line\">            auto cmd = static_cast&lt;QuadCommand*&gt;(command);</div><div class=\"line\">            //Batch quads</div><div class=\"line\">            if(_numQuads + cmd-&gt;getQuadCount() &gt; VBO_SIZE)</div><div class=\"line\">            &#123;</div><div class=\"line\">                drawBatchedQuads();</div><div class=\"line\">            &#125;</div><div class=\"line\">            </div><div class=\"line\">            _batchedQuadCommands.push_back(cmd);</div><div class=\"line\">            </div><div class=\"line\">            memcpy(_quads + _numQuads, cmd-&gt;getQuads(), sizeof(V3F_C4B_T2F_Quad) * cmd-&gt;getQuadCount());</div><div class=\"line\">            convertToWorldCoordinates(_quads + _numQuads, cmd-&gt;getQuadCount(), cmd-&gt;getModelView());</div><div class=\"line\">            </div><div class=\"line\">            _numQuads += cmd-&gt;getQuadCount();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(RenderCommand::Type::GROUP_COMMAND == commandType)</div><div class=\"line\">        &#123;</div><div class=\"line\">            flush();</div><div class=\"line\">            int renderQueueID = ((GroupCommand*) command)-&gt;getRenderQueueID();</div><div class=\"line\">            visitRenderQueue(_renderGroups[renderQueueID]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(RenderCommand::Type::CUSTOM_COMMAND == commandType)</div><div class=\"line\">        &#123;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"openGL-VAO-VBO-介绍\"><a href=\"#openGL-VAO-VBO-介绍\" class=\"headerlink\" title=\"openGL VAO, VBO 介绍.\"></a>openGL VAO, VBO 介绍.</h3><p><a href=\"http://blog.csdn.net/xiajun07061225/article/details/7628146\" target=\"_blank\" rel=\"external\">GLSL渲染语言入门与VBO、VAO使用：绘制一个三角形</a><br><a href=\"http://blog.csdn.net/zhuyingqingfen/article/details/19238651\" target=\"_blank\" rel=\"external\">OpenGL 4.0 VAO VBO 理解</a></p>\n<h2 id=\"Schelduler介绍\"><a href=\"#Schelduler介绍\" class=\"headerlink\" title=\"Schelduler介绍\"></a>Schelduler介绍</h2><p><code>Schelduler</code>是<code>cocos2d-x</code>中实现延迟调用,定时调用时最重要的功能. 类似于其他语言中的<code>Timer</code><br>他最核心的函数就是:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">void schedule(const ccSchedulerFunc&amp; callback, void *target, float interval, unsigned int repeat, float delay, bool paused, const std::string&amp; key);</div></pre></td></tr></table></figure>\n<p>用来启动一个定时操作: 在延迟<code>delay</code>时间后, 每隔<code>repeat</code>时间, 调用一次<code>callback</code>. <code>target</code>用来标记这个操作属于谁, 方便管理, 比如在析构的时候调用<code>void unschedule(void *target)</code>即可移除当前对象的所有<code>定时操作</code>.</p>\n<p><code>Schelduler</code>的其它大部分方法, 要么是它的衍生, 为了减少调用参数; 要么是对<code>定时操作</code>的控制, 比如暂停, 恢复, 移除等. 如果只对想对框架的各个模块有大概的了解, 可以不做深入.</p>\n<h2 id=\"EventDispatcher\"><a href=\"#EventDispatcher\" class=\"headerlink\" title=\"EventDispatcher\"></a>EventDispatcher</h2><p>(后续添加)</p>\n"},{"date":"2014-06-19T16:00:00.000Z","title":"[cocos2dx]利用NDK崩溃日志查找BUG","_content":"\n摘要: 在android上开发c++应用, crash日志都是汇编码, 很难对应到c++代码中去. 通过此文, 你可以定位到程序崩溃时的C++代码, 精确查找问题.\n\n### 背景介绍\n\n1. 本文主要内容: 利用android的crash log来对c++开发的android应用进行错误定位.  \n\n2. 容易稳定复现的BUG, 一般可以通过断点调试来解决. 如果测试人员也无法稳定复现, **log就成了程序吊定位问题的救命稻草**. \n\n3. 通用操作系统都有自己的日志系统, android也不例外. 救命稻草已经给你了~ ( [怎样查看android的系统日志](#how_to_refer_android_log) )  \n\n4. 但是, android的系统日志在c++代码崩溃时, 打印的都是内存地址和寄存器. 比如, 这样:\n\n```\n06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: 'google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys'\n06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: '0'\n06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  >>> com.guangyou.ddgame <<<\n06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028\n06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444\n06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000\n```\n\n\n这密密麻麻的都是些神马, 是人看的么?\n\n饿. 这个麻... 谁让你当程序猿! 让你当! 活该要看天书! \n\n硬着头皮也要来, 我们就来讲讲怎么消化天书吧~\n\n### 怎样获取android的系统日志<a id=\"how_to_refer_android_log\"></a>\n\n 假设你已经安装了 Android Develop Tools, 可以成功调用`adb`. 并打开android开发用机的调试模式, 连接到电脑.\n \n 打开命令行, 在命令行输入: `adb logcat`. 就可以看到满屏幕的日志啦. \n 输入`adb logcat --help`可以看到 `logcat`的用法提示.  \n \n\n \n 这里有两个参数特别提醒一下, 比较常用:\n    1. `-v XXXX`: 用来选择log输出样式, 一般建议 `threadtime`, 更加详细.\n    2. `-d`: 让log一次性输出后马上完毕. 如果没有此命令, `logcat` 工具会一直输出, 即使更新在界面上. \n    \n如果需要保存log到文件, 方便以后查看. 可输入命令:\n`adb logcat -v threadtime -d > log.txt`\n\n\n \n### 理解NDK的crash log\n如果你用c++开发的android应用在运行过程中, c++代码发生错误导致程序崩溃, 系统就会记录 crash log到上述的系统日志中. \n\n下面是我正在开发的游戏一次崩溃后, 截取的日志( 插个广告, 全名斗地主下载地址: http://sj.ddwan.com )\n\n```\n06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: 'google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys'\n06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: '0'\n06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  >>> com.guangyou.ddgame <<<\n06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028\n06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444\n06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d8  0000000000000000  d9  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d10 0000000000000000  d11 0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d12 0000000000000000  d13 0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d14 0000000000000000  d15 0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d16 c3c3c3c3c3c3c3c3  d17 c3c3c3c3c3c3c3c3\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d18 41c7ddc227000000  d19 3ff0000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d20 3f811110896efbb2  d21 3fd7096611460fdb\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d22 c0176a8ee0000000  d23 bfc5230c760b0605\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d24 0000000000000000  d25 3fc7922925a107e2\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d26 3fdaa0f8fab43e33  d27 3fb43ad076b251ab\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d28 3fa15cb6bdc3c156  d29 3ec6cd878c3b46a7\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d30 3f65f3b6b9b97e01  d31 3ef99342e0ee5069\n06-20 15:54:35.511 23889 23889 I DEBUG   :     scr 20000012\n06-20 15:54:35.511 23889 23889 I DEBUG   :\n06-20 15:54:35.511 23889 23889 I DEBUG   : backtrace:\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  pc 0089cbdc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Texture2D::getContentSize() const+32)\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  pc 0088f8dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&)+128)\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #02  pc 007863dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&, cocos2d::ui::Widget::TextureResType)+336)\n06-20 15:54:35.511 23889 23889 I DEBUG   :\n06-20 15:54:35.511 23889 23889 I DEBUG   : stack:\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f0  00000001\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f4  4006bc0d  /system/lib/libc.so (free+12)\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f8  76a72c54\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943fc  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94400  751c23c8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94404  751c23c8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94408  751c23c8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9440c  75a749b4  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(cocos2d::Texture2D*)+128)\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94410  0000003d\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94414  00e8efc8\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94418  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9441c  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94420  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94424  76d94458  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94428  00000020\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9442c  76d94444  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  76d94430  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94434  76d94458  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94438  76a66184\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9443c  760c1a48  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94440  76d9447c  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94444  75a748e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&)+132)\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  76d94448  76d944ec  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9444c  793ff0e8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94450  76a72c54\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94454  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94458  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9445c  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94460  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94464  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94468  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9446c  00000000\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94470  7b91dcf8  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94474  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94478  76d944b4  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9447c  7596b3e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&, cocos2d::ui::Widget::TextureResType)+340)\n06-20 15:54:35.521 23889 23889 I DEBUG   :     #02  76d94480  00000001\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94484  00000000\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94488  76d944ec  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9448c  793fe780  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94490  76d944f0  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94494  793ff0e8  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94498  00000001\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9449c  4006bc0d  /system/lib/libc.so (free+12)\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a0  76a72c54\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a4  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a8  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944ac  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b0  76d9455c  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b4  75924e54  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocostudio::ButtonReader::setPropsFromJsonDictionary(cocos2d::ui::Widget*, rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > const&)+752)\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b8  00000000\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944bc  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :\n06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r0:\n06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94438 76a66184 760c1a48 76d9447c 75a748e0\n06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94448 76d944ec 793ff0e8 76a72c54 00000000\n...\n06-20 15:54:35.521 23889 23889 I DEBUG   :\n06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r4:\n06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a28 760811c8 75ee318c 75ee3194 75ee319c\n06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a38 4006d091 75f9a1f4 75f4ee5c 75e8ea0c\n...\n```\n\n下面来逐行解读:\n1. ndk crash log以`*** *** *** *** ***`开始.\n2. 第一行`Build fingerprint: 'google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys'` 指明了运行的Android版本, 如果您有多份crash dump的话这个信息就比较有用了.\n3. 接着一行显示的是当前的线程id(pid)和进程id(tid). 如果当前崩溃的线程是主线程的话, pid和tid会是一样的~\n4. 第四行, 显示的是unix信号. 这里的`signal 11`, 即`SIGSEGV`, 表示段错误, 是最常见的信号.([什么是unix信号](http://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)), [什么是`SIGSEGV`](http://zh.wikipedia.org/wiki/SIGSEGV))\n5. 接下来的部分是系统寄存器的dump信息.  \n|符号|解释|\n|:---------------|-----------|\n|rX(X=[0~9])| 代表整数寄存器|\n|dX(X=[0~31])| 是浮点指针寄存器|\n|fp (or r11)  | 指向当前正在执行的函数的堆栈底.|\n|ip (or r12)  | 一个寄存器, 我也没弄明白是干啥的.|\n|sp (or r13)  | 当前正在执行的函数的堆栈顶.(跟fp相对应)|\n|lr (or r14)  | [link register](http://en.wikipedia.org/wiki/Link_register). 简单来说, 当当前指令执行完了, <br/>就会从这个寄存器获取地址, 来知道需要返回<br/>到哪里继续执行.|\n|pc (or r15)  | program counter. 存放下一条指令的地址|\n|cpsr         | Current Program Status Register. 表示当前<br/>运行环境和状态的一些字节位.|\n6. Crash dump还包含PC之前和之后的一些内存字段.\n7. 最后, 是崩溃时的调用堆栈. 如果你执行的是debug版本, 还能还原一些c++代码.\n\n### 利用ndk-stack定位崩溃代码\n上面的一些信息能简单的帮你定位以下问题. 如果信息量还不够大的话, 那就还有最后一招: 还原历史.\n\n`Android NDK`自从版本R6开始, 提供了一个工具`ndk-stack`( 在目录`{ndk_root}/`中 ). 这个工具能自动分析dump下来的crash log, 将崩溃时的调用内存地址和c++代码一行一行对应起来.\n\n我们先看一下用法, 执行命令`ndk-stack --help`\n\n```\nUsage:\n   ndk-stack -sym <path> [-dump <path>]\n\n      -sym  Contains full path to the root directory for symbols.\n      -dump Contains full path to the file containing the crash dump.\n            This is an optional parameter. If ommited, ndk-stack will\n            read input data from stdin\n\n```\n* -dump参数很容易理解, 即dump下来的log文本文件. `ndk-stack`会分析此文件.\n* -sym参数就是你android项目下,编译成功之后,`obj`目录下的文件.\n\n下面我们就来示范一下:\n\n```\n$ adb logcat | ndk-stack -sym ./obj/local/armeabi\n********** Crash dump: **********\nBuild fingerprint: 'htc_wwe/htc_bravo/bravo:2.3.3/\nGRI40/96875.1:user/release-keys'\npid: 1723, tid: 1743  >>> com.packtpub.droidblaster <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0000000c\nStack frame #00  pc 00010a2c  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine update in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/TimeService.cpp:25\nStack frame #01  pc 00009fcc  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine onStep in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/DroidBlaster.cpp:53\nStack frame #02  pc 0000a348  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine run in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/EventLoop.cpp:49\nStack frame #03  pc 0000f994  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine android_main in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/Main.cpp:31\n...\n```\n\n熟悉的代码出现啦~~\n\n\n\n\n\n\n\n\n","source":"_posts/技术/[cocos2dx]利用NDK崩溃日志查找BUG.md","raw":"---\ndate: 2014-06-20\ntitle: \"[cocos2dx]利用NDK崩溃日志查找BUG\"\ntags: \n- cocos2dx\n-  ndk\n-  c++\n-  logcat\n-  ndk-stack\ncategories: \n- 技术\n---\n\n摘要: 在android上开发c++应用, crash日志都是汇编码, 很难对应到c++代码中去. 通过此文, 你可以定位到程序崩溃时的C++代码, 精确查找问题.\n\n### 背景介绍\n\n1. 本文主要内容: 利用android的crash log来对c++开发的android应用进行错误定位.  \n\n2. 容易稳定复现的BUG, 一般可以通过断点调试来解决. 如果测试人员也无法稳定复现, **log就成了程序吊定位问题的救命稻草**. \n\n3. 通用操作系统都有自己的日志系统, android也不例外. 救命稻草已经给你了~ ( [怎样查看android的系统日志](#how_to_refer_android_log) )  \n\n4. 但是, android的系统日志在c++代码崩溃时, 打印的都是内存地址和寄存器. 比如, 这样:\n\n```\n06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: 'google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys'\n06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: '0'\n06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  >>> com.guangyou.ddgame <<<\n06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028\n06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444\n06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000\n```\n\n\n这密密麻麻的都是些神马, 是人看的么?\n\n饿. 这个麻... 谁让你当程序猿! 让你当! 活该要看天书! \n\n硬着头皮也要来, 我们就来讲讲怎么消化天书吧~\n\n### 怎样获取android的系统日志<a id=\"how_to_refer_android_log\"></a>\n\n 假设你已经安装了 Android Develop Tools, 可以成功调用`adb`. 并打开android开发用机的调试模式, 连接到电脑.\n \n 打开命令行, 在命令行输入: `adb logcat`. 就可以看到满屏幕的日志啦. \n 输入`adb logcat --help`可以看到 `logcat`的用法提示.  \n \n\n \n 这里有两个参数特别提醒一下, 比较常用:\n    1. `-v XXXX`: 用来选择log输出样式, 一般建议 `threadtime`, 更加详细.\n    2. `-d`: 让log一次性输出后马上完毕. 如果没有此命令, `logcat` 工具会一直输出, 即使更新在界面上. \n    \n如果需要保存log到文件, 方便以后查看. 可输入命令:\n`adb logcat -v threadtime -d > log.txt`\n\n\n \n### 理解NDK的crash log\n如果你用c++开发的android应用在运行过程中, c++代码发生错误导致程序崩溃, 系统就会记录 crash log到上述的系统日志中. \n\n下面是我正在开发的游戏一次崩溃后, 截取的日志( 插个广告, 全名斗地主下载地址: http://sj.ddwan.com )\n\n```\n06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: 'google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys'\n06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: '0'\n06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  >>> com.guangyou.ddgame <<<\n06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028\n06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48\n06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444\n06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d8  0000000000000000  d9  0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d10 0000000000000000  d11 0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d12 0000000000000000  d13 0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d14 0000000000000000  d15 0000000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d16 c3c3c3c3c3c3c3c3  d17 c3c3c3c3c3c3c3c3\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d18 41c7ddc227000000  d19 3ff0000000000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d20 3f811110896efbb2  d21 3fd7096611460fdb\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d22 c0176a8ee0000000  d23 bfc5230c760b0605\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d24 0000000000000000  d25 3fc7922925a107e2\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d26 3fdaa0f8fab43e33  d27 3fb43ad076b251ab\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d28 3fa15cb6bdc3c156  d29 3ec6cd878c3b46a7\n06-20 15:54:35.511 23889 23889 I DEBUG   :     d30 3f65f3b6b9b97e01  d31 3ef99342e0ee5069\n06-20 15:54:35.511 23889 23889 I DEBUG   :     scr 20000012\n06-20 15:54:35.511 23889 23889 I DEBUG   :\n06-20 15:54:35.511 23889 23889 I DEBUG   : backtrace:\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  pc 0089cbdc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Texture2D::getContentSize() const+32)\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  pc 0088f8dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&)+128)\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #02  pc 007863dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&, cocos2d::ui::Widget::TextureResType)+336)\n06-20 15:54:35.511 23889 23889 I DEBUG   :\n06-20 15:54:35.511 23889 23889 I DEBUG   : stack:\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f0  00000001\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f4  4006bc0d  /system/lib/libc.so (free+12)\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f8  76a72c54\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943fc  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94400  751c23c8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94404  751c23c8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94408  751c23c8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9440c  75a749b4  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(cocos2d::Texture2D*)+128)\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94410  0000003d\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94414  00e8efc8\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94418  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9441c  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94420  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94424  76d94458  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94428  00000020\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9442c  76d94444  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  76d94430  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94434  76d94458  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94438  76a66184\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9443c  760c1a48  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94440  76d9447c  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94444  75a748e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&)+132)\n06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  76d94448  76d944ec  [stack:2020]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9444c  793ff0e8  [anon:libc_malloc]\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94450  76a72c54\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94454  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94458  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9445c  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94460  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94464  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94468  00000000\n06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9446c  00000000\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94470  7b91dcf8  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94474  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94478  76d944b4  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9447c  7596b3e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&, cocos2d::ui::Widget::TextureResType)+340)\n06-20 15:54:35.521 23889 23889 I DEBUG   :     #02  76d94480  00000001\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94484  00000000\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94488  76d944ec  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9448c  793fe780  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94490  76d944f0  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94494  793ff0e8  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94498  00000001\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9449c  4006bc0d  /system/lib/libc.so (free+12)\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a0  76a72c54\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a4  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a8  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944ac  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b0  76d9455c  [stack:2020]\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b4  75924e54  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocostudio::ButtonReader::setPropsFromJsonDictionary(cocos2d::ui::Widget*, rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > const&)+752)\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b8  00000000\n06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944bc  78ce6c50  [anon:libc_malloc]\n06-20 15:54:35.521 23889 23889 I DEBUG   :\n06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r0:\n06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94438 76a66184 760c1a48 76d9447c 75a748e0\n06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94448 76d944ec 793ff0e8 76a72c54 00000000\n...\n06-20 15:54:35.521 23889 23889 I DEBUG   :\n06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r4:\n06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a28 760811c8 75ee318c 75ee3194 75ee319c\n06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a38 4006d091 75f9a1f4 75f4ee5c 75e8ea0c\n...\n```\n\n下面来逐行解读:\n1. ndk crash log以`*** *** *** *** ***`开始.\n2. 第一行`Build fingerprint: 'google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys'` 指明了运行的Android版本, 如果您有多份crash dump的话这个信息就比较有用了.\n3. 接着一行显示的是当前的线程id(pid)和进程id(tid). 如果当前崩溃的线程是主线程的话, pid和tid会是一样的~\n4. 第四行, 显示的是unix信号. 这里的`signal 11`, 即`SIGSEGV`, 表示段错误, 是最常见的信号.([什么是unix信号](http://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)), [什么是`SIGSEGV`](http://zh.wikipedia.org/wiki/SIGSEGV))\n5. 接下来的部分是系统寄存器的dump信息.  \n|符号|解释|\n|:---------------|-----------|\n|rX(X=[0~9])| 代表整数寄存器|\n|dX(X=[0~31])| 是浮点指针寄存器|\n|fp (or r11)  | 指向当前正在执行的函数的堆栈底.|\n|ip (or r12)  | 一个寄存器, 我也没弄明白是干啥的.|\n|sp (or r13)  | 当前正在执行的函数的堆栈顶.(跟fp相对应)|\n|lr (or r14)  | [link register](http://en.wikipedia.org/wiki/Link_register). 简单来说, 当当前指令执行完了, <br/>就会从这个寄存器获取地址, 来知道需要返回<br/>到哪里继续执行.|\n|pc (or r15)  | program counter. 存放下一条指令的地址|\n|cpsr         | Current Program Status Register. 表示当前<br/>运行环境和状态的一些字节位.|\n6. Crash dump还包含PC之前和之后的一些内存字段.\n7. 最后, 是崩溃时的调用堆栈. 如果你执行的是debug版本, 还能还原一些c++代码.\n\n### 利用ndk-stack定位崩溃代码\n上面的一些信息能简单的帮你定位以下问题. 如果信息量还不够大的话, 那就还有最后一招: 还原历史.\n\n`Android NDK`自从版本R6开始, 提供了一个工具`ndk-stack`( 在目录`{ndk_root}/`中 ). 这个工具能自动分析dump下来的crash log, 将崩溃时的调用内存地址和c++代码一行一行对应起来.\n\n我们先看一下用法, 执行命令`ndk-stack --help`\n\n```\nUsage:\n   ndk-stack -sym <path> [-dump <path>]\n\n      -sym  Contains full path to the root directory for symbols.\n      -dump Contains full path to the file containing the crash dump.\n            This is an optional parameter. If ommited, ndk-stack will\n            read input data from stdin\n\n```\n* -dump参数很容易理解, 即dump下来的log文本文件. `ndk-stack`会分析此文件.\n* -sym参数就是你android项目下,编译成功之后,`obj`目录下的文件.\n\n下面我们就来示范一下:\n\n```\n$ adb logcat | ndk-stack -sym ./obj/local/armeabi\n********** Crash dump: **********\nBuild fingerprint: 'htc_wwe/htc_bravo/bravo:2.3.3/\nGRI40/96875.1:user/release-keys'\npid: 1723, tid: 1743  >>> com.packtpub.droidblaster <<<\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0000000c\nStack frame #00  pc 00010a2c  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine update in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/TimeService.cpp:25\nStack frame #01  pc 00009fcc  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine onStep in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/DroidBlaster.cpp:53\nStack frame #02  pc 0000a348  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine run in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/EventLoop.cpp:49\nStack frame #03  pc 0000f994  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine android_main in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/Main.cpp:31\n...\n```\n\n熟悉的代码出现啦~~\n\n\n\n\n\n\n\n\n","slug":"技术/[cocos2dx]利用NDK崩溃日志查找BUG","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqs004pq0d46eth2e7q","content":"<p>摘要: 在android上开发c++应用, crash日志都是汇编码, 很难对应到c++代码中去. 通过此文, 你可以定位到程序崩溃时的C++代码, 精确查找问题.</p>\n<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><ol>\n<li><p>本文主要内容: 利用android的crash log来对c++开发的android应用进行错误定位.  </p>\n</li>\n<li><p>容易稳定复现的BUG, 一般可以通过断点调试来解决. 如果测试人员也无法稳定复现, <strong>log就成了程序吊定位问题的救命稻草</strong>. </p>\n</li>\n<li><p>通用操作系统都有自己的日志系统, android也不例外. 救命稻草已经给你了~ ( <a href=\"#how_to_refer_android_log\">怎样查看android的系统日志</a> )  </p>\n</li>\n<li><p>但是, android的系统日志在c++代码崩溃时, 打印的都是内存地址和寄存器. 比如, 这样:</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: &apos;google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: &apos;0&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  &gt;&gt;&gt; com.guangyou.ddgame &lt;&lt;&lt;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028</div><div class=\"line\">06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000</div></pre></td></tr></table></figure>\n<p>这密密麻麻的都是些神马, 是人看的么?</p>\n<p>饿. 这个麻… 谁让你当程序猿! 让你当! 活该要看天书! </p>\n<p>硬着头皮也要来, 我们就来讲讲怎么消化天书吧~</p>\n<h3 id=\"怎样获取android的系统日志\"><a href=\"#怎样获取android的系统日志\" class=\"headerlink\" title=\"怎样获取android的系统日志\"></a>怎样获取android的系统日志<a id=\"how_to_refer_android_log\"></a></h3><p> 假设你已经安装了 Android Develop Tools, 可以成功调用<code>adb</code>. 并打开android开发用机的调试模式, 连接到电脑.</p>\n<p> 打开命令行, 在命令行输入: <code>adb logcat</code>. 就可以看到满屏幕的日志啦.<br> 输入<code>adb logcat --help</code>可以看到 <code>logcat</code>的用法提示.  </p>\n<p> 这里有两个参数特别提醒一下, 比较常用:</p>\n<pre><code>1. `-v XXXX`: 用来选择log输出样式, 一般建议 `threadtime`, 更加详细.\n2. `-d`: 让log一次性输出后马上完毕. 如果没有此命令, `logcat` 工具会一直输出, 即使更新在界面上. \n</code></pre><p>如果需要保存log到文件, 方便以后查看. 可输入命令:<br><code>adb logcat -v threadtime -d &gt; log.txt</code></p>\n<h3 id=\"理解NDK的crash-log\"><a href=\"#理解NDK的crash-log\" class=\"headerlink\" title=\"理解NDK的crash log\"></a>理解NDK的crash log</h3><p>如果你用c++开发的android应用在运行过程中, c++代码发生错误导致程序崩溃, 系统就会记录 crash log到上述的系统日志中. </p>\n<p>下面是我正在开发的游戏一次崩溃后, 截取的日志( 插个广告, 全名斗地主下载地址: <a href=\"http://sj.ddwan.com\" target=\"_blank\" rel=\"external\">http://sj.ddwan.com</a> )</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: &apos;google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: &apos;0&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  &gt;&gt;&gt; com.guangyou.ddgame &lt;&lt;&lt;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028</div><div class=\"line\">06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d8  0000000000000000  d9  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d10 0000000000000000  d11 0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d12 0000000000000000  d13 0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d14 0000000000000000  d15 0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d16 c3c3c3c3c3c3c3c3  d17 c3c3c3c3c3c3c3c3</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d18 41c7ddc227000000  d19 3ff0000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d20 3f811110896efbb2  d21 3fd7096611460fdb</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d22 c0176a8ee0000000  d23 bfc5230c760b0605</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d24 0000000000000000  d25 3fc7922925a107e2</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d26 3fdaa0f8fab43e33  d27 3fb43ad076b251ab</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d28 3fa15cb6bdc3c156  d29 3ec6cd878c3b46a7</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d30 3f65f3b6b9b97e01  d31 3ef99342e0ee5069</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     scr 20000012</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   : backtrace:</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  pc 0089cbdc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Texture2D::getContentSize() const+32)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  pc 0088f8dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&amp;)+128)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #02  pc 007863dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&amp;, cocos2d::ui::Widget::TextureResType)+336)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   : stack:</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f0  00000001</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f4  4006bc0d  /system/lib/libc.so (free+12)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f8  76a72c54</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943fc  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94400  751c23c8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94404  751c23c8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94408  751c23c8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9440c  75a749b4  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(cocos2d::Texture2D*)+128)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94410  0000003d</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94414  00e8efc8</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94418  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9441c  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94420  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94424  76d94458  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94428  00000020</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9442c  76d94444  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  76d94430  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94434  76d94458  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94438  76a66184</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9443c  760c1a48  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94440  76d9447c  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94444  75a748e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&amp;)+132)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  76d94448  76d944ec  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9444c  793ff0e8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94450  76a72c54</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94454  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94458  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9445c  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94460  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94464  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94468  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9446c  00000000</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94470  7b91dcf8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94474  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94478  76d944b4  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9447c  7596b3e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&amp;, cocos2d::ui::Widget::TextureResType)+340)</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     #02  76d94480  00000001</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94484  00000000</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94488  76d944ec  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9448c  793fe780  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94490  76d944f0  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94494  793ff0e8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94498  00000001</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9449c  4006bc0d  /system/lib/libc.so (free+12)</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a0  76a72c54</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a4  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a8  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944ac  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b0  76d9455c  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b4  75924e54  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocostudio::ButtonReader::setPropsFromJsonDictionary(cocos2d::ui::Widget*, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)+752)</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b8  00000000</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944bc  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r0:</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94438 76a66184 760c1a48 76d9447c 75a748e0</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94448 76d944ec 793ff0e8 76a72c54 00000000</div><div class=\"line\">...</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r4:</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a28 760811c8 75ee318c 75ee3194 75ee319c</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a38 4006d091 75f9a1f4 75f4ee5c 75e8ea0c</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>下面来逐行解读:</p>\n<ol>\n<li>ndk crash log以<code>*** *** *** *** ***</code>开始.</li>\n<li>第一行<code>Build fingerprint: &#39;google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys&#39;</code> 指明了运行的Android版本, 如果您有多份crash dump的话这个信息就比较有用了.</li>\n<li>接着一行显示的是当前的线程id(pid)和进程id(tid). 如果当前崩溃的线程是主线程的话, pid和tid会是一样的~</li>\n<li>第四行, 显示的是unix信号. 这里的<code>signal 11</code>, 即<code>SIGSEGV</code>, 表示段错误, 是最常见的信号.(<a href=\"http://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6\" target=\"_blank\" rel=\"external\">什么是unix信号</a>), <a href=\"http://zh.wikipedia.org/wiki/SIGSEGV\" target=\"_blank\" rel=\"external\">什么是<code>SIGSEGV</code></a>)</li>\n<li>接下来的部分是系统寄存器的dump信息.<br>|符号|解释|<br>|:—————|———–|<br>|rX(X=[0~9])| 代表整数寄存器|<br>|dX(X=[0~31])| 是浮点指针寄存器|<br>|fp (or r11)  | 指向当前正在执行的函数的堆栈底.|<br>|ip (or r12)  | 一个寄存器, 我也没弄明白是干啥的.|<br>|sp (or r13)  | 当前正在执行的函数的堆栈顶.(跟fp相对应)|<br>|lr (or r14)  | <a href=\"http://en.wikipedia.org/wiki/Link_register\" target=\"_blank\" rel=\"external\">link register</a>. 简单来说, 当当前指令执行完了, <br>就会从这个寄存器获取地址, 来知道需要返回<br>到哪里继续执行.|<br>|pc (or r15)  | program counter. 存放下一条指令的地址|<br>|cpsr         | Current Program Status Register. 表示当前<br>运行环境和状态的一些字节位.|</li>\n<li>Crash dump还包含PC之前和之后的一些内存字段.</li>\n<li>最后, 是崩溃时的调用堆栈. 如果你执行的是debug版本, 还能还原一些c++代码.</li>\n</ol>\n<h3 id=\"利用ndk-stack定位崩溃代码\"><a href=\"#利用ndk-stack定位崩溃代码\" class=\"headerlink\" title=\"利用ndk-stack定位崩溃代码\"></a>利用ndk-stack定位崩溃代码</h3><p>上面的一些信息能简单的帮你定位以下问题. 如果信息量还不够大的话, 那就还有最后一招: 还原历史.</p>\n<p><code>Android NDK</code>自从版本R6开始, 提供了一个工具<code>ndk-stack</code>( 在目录<code>{ndk_root}/</code>中 ). 这个工具能自动分析dump下来的crash log, 将崩溃时的调用内存地址和c++代码一行一行对应起来.</p>\n<p>我们先看一下用法, 执行命令<code>ndk-stack --help</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Usage:</div><div class=\"line\">   ndk-stack -sym &lt;path&gt; [-dump &lt;path&gt;]</div><div class=\"line\"></div><div class=\"line\">      -sym  Contains full path to the root directory for symbols.</div><div class=\"line\">      -dump Contains full path to the file containing the crash dump.</div><div class=\"line\">            This is an optional parameter. If ommited, ndk-stack will</div><div class=\"line\">            read input data from stdin</div></pre></td></tr></table></figure>\n<ul>\n<li>-dump参数很容易理解, 即dump下来的log文本文件. <code>ndk-stack</code>会分析此文件.</li>\n<li>-sym参数就是你android项目下,编译成功之后,<code>obj</code>目录下的文件.</li>\n</ul>\n<p>下面我们就来示范一下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ adb logcat | ndk-stack -sym ./obj/local/armeabi</div><div class=\"line\">********** Crash dump: **********</div><div class=\"line\">Build fingerprint: &apos;htc_wwe/htc_bravo/bravo:2.3.3/</div><div class=\"line\">GRI40/96875.1:user/release-keys&apos;</div><div class=\"line\">pid: 1723, tid: 1743  &gt;&gt;&gt; com.packtpub.droidblaster &lt;&lt;&lt;</div><div class=\"line\">signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0000000c</div><div class=\"line\">Stack frame #00  pc 00010a2c  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine update in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/TimeService.cpp:25</div><div class=\"line\">Stack frame #01  pc 00009fcc  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine onStep in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/DroidBlaster.cpp:53</div><div class=\"line\">Stack frame #02  pc 0000a348  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine run in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/EventLoop.cpp:49</div><div class=\"line\">Stack frame #03  pc 0000f994  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine android_main in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/Main.cpp:31</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>熟悉的代码出现啦~~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: 在android上开发c++应用, crash日志都是汇编码, 很难对应到c++代码中去. 通过此文, 你可以定位到程序崩溃时的C++代码, 精确查找问题.</p>\n<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><ol>\n<li><p>本文主要内容: 利用android的crash log来对c++开发的android应用进行错误定位.  </p>\n</li>\n<li><p>容易稳定复现的BUG, 一般可以通过断点调试来解决. 如果测试人员也无法稳定复现, <strong>log就成了程序吊定位问题的救命稻草</strong>. </p>\n</li>\n<li><p>通用操作系统都有自己的日志系统, android也不例外. 救命稻草已经给你了~ ( <a href=\"#how_to_refer_android_log\">怎样查看android的系统日志</a> )  </p>\n</li>\n<li><p>但是, android的系统日志在c++代码崩溃时, 打印的都是内存地址和寄存器. 比如, 这样:</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: &apos;google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: &apos;0&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  &gt;&gt;&gt; com.guangyou.ddgame &lt;&lt;&lt;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028</div><div class=\"line\">06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000</div></pre></td></tr></table></figure>\n<p>这密密麻麻的都是些神马, 是人看的么?</p>\n<p>饿. 这个麻… 谁让你当程序猿! 让你当! 活该要看天书! </p>\n<p>硬着头皮也要来, 我们就来讲讲怎么消化天书吧~</p>\n<h3 id=\"怎样获取android的系统日志\"><a href=\"#怎样获取android的系统日志\" class=\"headerlink\" title=\"怎样获取android的系统日志\"></a>怎样获取android的系统日志<a id=\"how_to_refer_android_log\"></a></h3><p> 假设你已经安装了 Android Develop Tools, 可以成功调用<code>adb</code>. 并打开android开发用机的调试模式, 连接到电脑.</p>\n<p> 打开命令行, 在命令行输入: <code>adb logcat</code>. 就可以看到满屏幕的日志啦.<br> 输入<code>adb logcat --help</code>可以看到 <code>logcat</code>的用法提示.  </p>\n<p> 这里有两个参数特别提醒一下, 比较常用:</p>\n<pre><code>1. `-v XXXX`: 用来选择log输出样式, 一般建议 `threadtime`, 更加详细.\n2. `-d`: 让log一次性输出后马上完毕. 如果没有此命令, `logcat` 工具会一直输出, 即使更新在界面上. \n</code></pre><p>如果需要保存log到文件, 方便以后查看. 可输入命令:<br><code>adb logcat -v threadtime -d &gt; log.txt</code></p>\n<h3 id=\"理解NDK的crash-log\"><a href=\"#理解NDK的crash-log\" class=\"headerlink\" title=\"理解NDK的crash log\"></a>理解NDK的crash log</h3><p>如果你用c++开发的android应用在运行过程中, c++代码发生错误导致程序崩溃, 系统就会记录 crash log到上述的系统日志中. </p>\n<p>下面是我正在开发的游戏一次崩溃后, 截取的日志( 插个广告, 全名斗地主下载地址: <a href=\"http://sj.ddwan.com\" target=\"_blank\" rel=\"external\">http://sj.ddwan.com</a> )</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Build fingerprint: &apos;google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : Revision: &apos;0&apos;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : pid: 1981, tid: 2020, name: Thread-3399  &gt;&gt;&gt; com.guangyou.ddgame &lt;&lt;&lt;</div><div class=\"line\">06-20 15:54:35.331 23889 23889 I DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000028</div><div class=\"line\">06-20 15:54:35.431   187   710 D audio_hw_primary: out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r0 76d94458  r1 00000000  r2 00000000  r3 00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r4 760c1a48  r5 751e2440  r6 00000001  r7 760c1a48</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     r8 00000001  r9 76c96f3c  sl 76c861c0  fp 76d94444</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     ip 00000001  sp 76d94430  lr 75a81bd8  pc 75a81bdc  cpsr 600f0010</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d0  746968775f327865  d1  6a6e6169642f675f</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d2  5f6f616978757169  d3  676e702e6e776f6d</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d4  0000000009000000  d5  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d6  0000000000000000  d7  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d8  0000000000000000  d9  0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d10 0000000000000000  d11 0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d12 0000000000000000  d13 0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d14 0000000000000000  d15 0000000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d16 c3c3c3c3c3c3c3c3  d17 c3c3c3c3c3c3c3c3</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d18 41c7ddc227000000  d19 3ff0000000000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d20 3f811110896efbb2  d21 3fd7096611460fdb</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d22 c0176a8ee0000000  d23 bfc5230c760b0605</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d24 0000000000000000  d25 3fc7922925a107e2</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d26 3fdaa0f8fab43e33  d27 3fb43ad076b251ab</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d28 3fa15cb6bdc3c156  d29 3ec6cd878c3b46a7</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     d30 3f65f3b6b9b97e01  d31 3ef99342e0ee5069</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     scr 20000012</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   : backtrace:</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  pc 0089cbdc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Texture2D::getContentSize() const+32)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  pc 0088f8dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&amp;)+128)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #02  pc 007863dc  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&amp;, cocos2d::ui::Widget::TextureResType)+336)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   : stack:</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f0  00000001</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f4  4006bc0d  /system/lib/libc.so (free+12)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943f8  76a72c54</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d943fc  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94400  751c23c8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94404  751c23c8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94408  751c23c8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9440c  75a749b4  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(cocos2d::Texture2D*)+128)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94410  0000003d</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94414  00e8efc8</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94418  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9441c  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94420  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94424  76d94458  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94428  00000020</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9442c  76d94444  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #00  76d94430  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94434  76d94458  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94438  76a66184</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9443c  760c1a48  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94440  76d9447c  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94444  75a748e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::Sprite::setTexture(std::string const&amp;)+132)</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :     #01  76d94448  76d944ec  [stack:2020]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9444c  793ff0e8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94450  76a72c54</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94454  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94458  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9445c  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94460  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94464  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d94468  00000000</div><div class=\"line\">06-20 15:54:35.511 23889 23889 I DEBUG   :          76d9446c  00000000</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94470  7b91dcf8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94474  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94478  76d944b4  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9447c  7596b3e0  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocos2d::ui::Button::loadTextureDisabled(std::string const&amp;, cocos2d::ui::Widget::TextureResType)+340)</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     #02  76d94480  00000001</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94484  00000000</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94488  76d944ec  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9448c  793fe780  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94490  76d944f0  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94494  793ff0e8  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d94498  00000001</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d9449c  4006bc0d  /system/lib/libc.so (free+12)</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a0  76a72c54</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a4  75eca614  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944a8  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944ac  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b0  76d9455c  [stack:2020]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b4  75924e54  /data/app-lib/com.guangyou.ddgame-1/libcocos2dcpp.so (cocostudio::ButtonReader::setPropsFromJsonDictionary(cocos2d::ui::Widget*, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)+752)</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944b8  00000000</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :          76d944bc  78ce6c50  [anon:libc_malloc]</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r0:</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94438 76a66184 760c1a48 76d9447c 75a748e0</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     76d94448 76d944ec 793ff0e8 76a72c54 00000000</div><div class=\"line\">...</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   : memory near r4:</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a28 760811c8 75ee318c 75ee3194 75ee319c</div><div class=\"line\">06-20 15:54:35.521 23889 23889 I DEBUG   :     760c1a38 4006d091 75f9a1f4 75f4ee5c 75e8ea0c</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>下面来逐行解读:</p>\n<ol>\n<li>ndk crash log以<code>*** *** *** *** ***</code>开始.</li>\n<li>第一行<code>Build fingerprint: &#39;google/razorg/deb:4.4.2/KOT49H/937116:user/release-keys&#39;</code> 指明了运行的Android版本, 如果您有多份crash dump的话这个信息就比较有用了.</li>\n<li>接着一行显示的是当前的线程id(pid)和进程id(tid). 如果当前崩溃的线程是主线程的话, pid和tid会是一样的~</li>\n<li>第四行, 显示的是unix信号. 这里的<code>signal 11</code>, 即<code>SIGSEGV</code>, 表示段错误, 是最常见的信号.(<a href=\"http://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6\" target=\"_blank\" rel=\"external\">什么是unix信号</a>), <a href=\"http://zh.wikipedia.org/wiki/SIGSEGV\" target=\"_blank\" rel=\"external\">什么是<code>SIGSEGV</code></a>)</li>\n<li>接下来的部分是系统寄存器的dump信息.<br>|符号|解释|<br>|:—————|———–|<br>|rX(X=[0~9])| 代表整数寄存器|<br>|dX(X=[0~31])| 是浮点指针寄存器|<br>|fp (or r11)  | 指向当前正在执行的函数的堆栈底.|<br>|ip (or r12)  | 一个寄存器, 我也没弄明白是干啥的.|<br>|sp (or r13)  | 当前正在执行的函数的堆栈顶.(跟fp相对应)|<br>|lr (or r14)  | <a href=\"http://en.wikipedia.org/wiki/Link_register\" target=\"_blank\" rel=\"external\">link register</a>. 简单来说, 当当前指令执行完了, <br>就会从这个寄存器获取地址, 来知道需要返回<br>到哪里继续执行.|<br>|pc (or r15)  | program counter. 存放下一条指令的地址|<br>|cpsr         | Current Program Status Register. 表示当前<br>运行环境和状态的一些字节位.|</li>\n<li>Crash dump还包含PC之前和之后的一些内存字段.</li>\n<li>最后, 是崩溃时的调用堆栈. 如果你执行的是debug版本, 还能还原一些c++代码.</li>\n</ol>\n<h3 id=\"利用ndk-stack定位崩溃代码\"><a href=\"#利用ndk-stack定位崩溃代码\" class=\"headerlink\" title=\"利用ndk-stack定位崩溃代码\"></a>利用ndk-stack定位崩溃代码</h3><p>上面的一些信息能简单的帮你定位以下问题. 如果信息量还不够大的话, 那就还有最后一招: 还原历史.</p>\n<p><code>Android NDK</code>自从版本R6开始, 提供了一个工具<code>ndk-stack</code>( 在目录<code>{ndk_root}/</code>中 ). 这个工具能自动分析dump下来的crash log, 将崩溃时的调用内存地址和c++代码一行一行对应起来.</p>\n<p>我们先看一下用法, 执行命令<code>ndk-stack --help</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Usage:</div><div class=\"line\">   ndk-stack -sym &lt;path&gt; [-dump &lt;path&gt;]</div><div class=\"line\"></div><div class=\"line\">      -sym  Contains full path to the root directory for symbols.</div><div class=\"line\">      -dump Contains full path to the file containing the crash dump.</div><div class=\"line\">            This is an optional parameter. If ommited, ndk-stack will</div><div class=\"line\">            read input data from stdin</div></pre></td></tr></table></figure>\n<ul>\n<li>-dump参数很容易理解, 即dump下来的log文本文件. <code>ndk-stack</code>会分析此文件.</li>\n<li>-sym参数就是你android项目下,编译成功之后,<code>obj</code>目录下的文件.</li>\n</ul>\n<p>下面我们就来示范一下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ adb logcat | ndk-stack -sym ./obj/local/armeabi</div><div class=\"line\">********** Crash dump: **********</div><div class=\"line\">Build fingerprint: &apos;htc_wwe/htc_bravo/bravo:2.3.3/</div><div class=\"line\">GRI40/96875.1:user/release-keys&apos;</div><div class=\"line\">pid: 1723, tid: 1743  &gt;&gt;&gt; com.packtpub.droidblaster &lt;&lt;&lt;</div><div class=\"line\">signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0000000c</div><div class=\"line\">Stack frame #00  pc 00010a2c  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine update in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/TimeService.cpp:25</div><div class=\"line\">Stack frame #01  pc 00009fcc  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine onStep in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/DroidBlaster.cpp:53</div><div class=\"line\">Stack frame #02  pc 0000a348  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine run in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/EventLoop.cpp:49</div><div class=\"line\">Stack frame #03  pc 0000f994  /data/data/com.packtpub.droidblaster/lib/libdroidblaster.so: Routine android_main in /home/packt/Project/Chapter11/DroidBlaster_Part11/jni/Main.cpp:31</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>熟悉的代码出现啦~~</p>\n"},{"title":"[cocos2dx]深入了解几个代表性的类 (续)","date":"2014-07-21T16:00:00.000Z","_content":"\n\n摘要: 此文对`cocos2d-x`引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括`Director`,`Application`, `Renderer`, `EventDispatcher`, `Scheduler`. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对`cocos2d-x`引擎有一个全面笼统的认识, 也方便快速定位问题.\n\n\n---\n\n# EventDispatcher\n\n## EventDispatcher,EventListener,Event之间的关系\n\n* `EventDispatcher`: 事件分发器, 相当于所有事件的中控中心. 管理着`EventListener`，当一个`Event`到来的时候决定`CallBack`的调用顺序。\n* `Event` ( `EventTouch`, `EventKeyboard` 等), 具体的事件数据, \n* `EventListener` ( `EventListenerTouch`, `EventListenerKeyboard` 等 ): 建立了`Event`到`CallBack`的映射关系, `EventDispatcher` 根据这种映射关系调用对应的 `CallBack`.\n\n\n## Event\n\n`Event`有以下几种类型:\n\n```\n    enum class Type\n    {\n        TOUCH,\n        KEYBOARD,\n        ACCELERATION,\n        MOUSE,\n        FOCUS,\n        CUSTOM\n    };\n```\n`Event`最重要的属性就是`type`, 标识了它是那种类型的事件, 也决定了由哪个`EventListner`来处理它.\n\n\n## EventListener\n`EventListner`有以下几种类型:\n```\n    enum class Type\n    {\n        UNKNOWN,\n        TOUCH_ONE_BY_ONE,\n        TOUCH_ALL_AT_ONCE,\n        KEYBOARD,\n        MOUSE,\n        ACCELERATION,\n        FOCUS,\n        CUSTOM\n    };\n```\n除了`UNKNOWN`, 跟`Event::Type`相比,`Event::Type::TOUCH`会**同时**被两种类型的`EventListener`处理: `TOUCH_ONE_BY_ONE`和`TOUCH_ALL_AT_ONCE`. 这两种`EventListener`分别处理单点触摸事件和多点触摸事件. 多说几句: 假如一个`TouchEvent`事件中有多个触摸点, 那么类型为 `EventListener::Type::TOUCH_ONE_BY_ONE` 的 `EventListener` 会把这个事件分解成若干个单点触摸事件来处理. 而类型为 `EventListener::Type::TOUCH_ALL_AT_ONCE` 的 `EventListener` 就是来处理多点触摸的, 会一次处理它.\n其它几种类型都是一一对应的, 即一种`Event::Type`的`Event`会被对应类型的`EventListener`接受.\n\n## 存放 EventListener 的地方\n\n在`EventDispatcher`中, 它把以上7种 `EventListener::Type` 类型的 `EventListner` 放到7个队列中. 也就是在这样一个字段中:\n\n```\nstd::unordered_map<EventListener::ListenerID, EventListenerVector*> _listenerMap;\n```\n* `EventListener::ListenerID` : 每一种`EventListener::Type`有唯一的 `EventListener::ListenerID`. 其实通过这段代码 `typedef std::string ListenerID;` 可知: `EventListener::ListenerID` 就是简单 `string`, 就是一个名称而已.\n* `EventListenerVector`: 顾名思义, 就是一个 `EventListener` 的向量容器. 相对于普通的向量容器, 它增加了`priority`管理功能. \n\n## EventListener的fixedPriority\n简单来说, 每个 `EventListener` 有自己的 `fixedPriority` 属性, 它是一个整数. \n\n### EventListener的遍历顺序<a name=\"priority_of_event_listener\"></a>\n`EventDispatcher` 在抛发事件的时候, 会先处理 `Event` 的时候, 会优先遍历 `fixedPriority` 低的 `EventListener`, 调用它的 `CallBack`. 在某些条件下, 一个 `Event` 被一个 `EventListener` 处理之后, 会停止遍历其它的 `EventListener`. 反映到实战中就是: 你监听了某种事件, 这种事件也出发了, 但是对应的回调函数并没有被调用, 也就是被优先级更高的 `EventListener` 截获了. \n\n如果 `fixedPriority` 一样呢? 按照什么顺序? \n\n1. `fixedPriority` 为0, 这个值是专门为 Scene Object 预留的. 即, 默认情况下, 绝大多数继承自 `Node` 的对象添加的普通事件监听器, 其 `fixedPriority` 都为0. 此时, `Node` 的 `globalZOrder`决定了优先级, 值越大, 越先被遍历到, 即在显示层中层级越高, 越先接受事件. 这在ui响应逻辑中也是合理的.\n2. `fixedPriority` 不为0, 那就按添加顺序. \n### Event在什么条件下会被优先级更高的EventListener截获?\n\n1. 对于 `EventListenerTouchOneByOne`, 它有一个字段: `_needSwallow`, 当它为 `true` 的时候, 如果它接受了某个 `Event`, 优先级更低的 `EventListener` 就接受不到了. 可以用 `EventListenerTouchOneByOne::setSwallowTouches(bool needSwallow)` 来改变它.\n2. 对于其它类型的 `EventLIstener`, 只有在显示调用了 `Event::stopPropagation()` 的时候, 才会中断遍历.\n\n## 核心函数: EventDispatcher::dispatchEvent()\n下面我们看看`EventDispatcher`最核心的函数: \n`void EventDispatcher::dispatchEvent(Event* event)`: 当有响应的事件到来的时候, 都会调用这个函数来通知监听了此事件的对象.\n\n\n其实, 上面的介绍, 已经把这个函数里绝大部分逻辑都描述了,这里做一个最后的总结\n事件抛发的简要流程如下:\n\n1. 检查 `_listenerMap` 中所有的`EventListnerVector`, 如果哪个容器的 `EventListener` 优先级顺序需要更新, 则重新排序\n2. 对于类型为 `Event::Type::TOUCH` 的事件, 则按照[EventListener的遍历顺序](#priority_of_event_listener)遍历所有的 `EventListener`. 只有接受了 `EventTouch::EventCode::BEGAN` 事件的 `EventListener`, 才会收到其他类型的 `EventTouch` 事件.\n3. 对于其他类型的事件, 也按照[EventListener的遍历顺序](#priority_of_event_listener)的顺序遍历对应的`EventListener`.\n\n## 总结\n`Eventdispatcher` 中的其它函数, 主要功能都是 添加`EventListener`, 删除`EventListener`等, 不做详细介绍. \n\n总的来说, `Eventdispatcher` 是一个中转器:\n\n1. 事件的产生模块儿, 只关心自己构造正确的 `Event`, 调用 `EventDispatcher::dispatchEvent(Event* event)` 交给 `EventDispatcher`.\n2. 需要监听事件的模块儿, 只需调用 ` EventDispatcher::addEventListener(EventListener* listener)` (或者它的其它变种)来注册自己作为监听者.\n3. 而 `EventDispatcher` 的作用是: \n    4. 把特定类型的 `Event` 送给对应类型的 `EventListener`.\n    5. 对于同一种 `Event`, 规定了事件送达的优先级.\n\n> Written with [StackEdit](https://stackedit.io/).\n\n\n\n\n","source":"_posts/技术/[cocos2dx]深入--几个代表性的类 (续).md","raw":"---\ntitle: \"[cocos2dx]深入了解几个代表性的类 (续)\"\ndate: 2014-07-22\ntags: \n- cocos2dx\n- EventDispatcher\n- Event\n- EventListener\n- fixedPriority\ncategories: \n- 技术\n---\n\n\n摘要: 此文对`cocos2d-x`引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括`Director`,`Application`, `Renderer`, `EventDispatcher`, `Scheduler`. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对`cocos2d-x`引擎有一个全面笼统的认识, 也方便快速定位问题.\n\n\n---\n\n# EventDispatcher\n\n## EventDispatcher,EventListener,Event之间的关系\n\n* `EventDispatcher`: 事件分发器, 相当于所有事件的中控中心. 管理着`EventListener`，当一个`Event`到来的时候决定`CallBack`的调用顺序。\n* `Event` ( `EventTouch`, `EventKeyboard` 等), 具体的事件数据, \n* `EventListener` ( `EventListenerTouch`, `EventListenerKeyboard` 等 ): 建立了`Event`到`CallBack`的映射关系, `EventDispatcher` 根据这种映射关系调用对应的 `CallBack`.\n\n\n## Event\n\n`Event`有以下几种类型:\n\n```\n    enum class Type\n    {\n        TOUCH,\n        KEYBOARD,\n        ACCELERATION,\n        MOUSE,\n        FOCUS,\n        CUSTOM\n    };\n```\n`Event`最重要的属性就是`type`, 标识了它是那种类型的事件, 也决定了由哪个`EventListner`来处理它.\n\n\n## EventListener\n`EventListner`有以下几种类型:\n```\n    enum class Type\n    {\n        UNKNOWN,\n        TOUCH_ONE_BY_ONE,\n        TOUCH_ALL_AT_ONCE,\n        KEYBOARD,\n        MOUSE,\n        ACCELERATION,\n        FOCUS,\n        CUSTOM\n    };\n```\n除了`UNKNOWN`, 跟`Event::Type`相比,`Event::Type::TOUCH`会**同时**被两种类型的`EventListener`处理: `TOUCH_ONE_BY_ONE`和`TOUCH_ALL_AT_ONCE`. 这两种`EventListener`分别处理单点触摸事件和多点触摸事件. 多说几句: 假如一个`TouchEvent`事件中有多个触摸点, 那么类型为 `EventListener::Type::TOUCH_ONE_BY_ONE` 的 `EventListener` 会把这个事件分解成若干个单点触摸事件来处理. 而类型为 `EventListener::Type::TOUCH_ALL_AT_ONCE` 的 `EventListener` 就是来处理多点触摸的, 会一次处理它.\n其它几种类型都是一一对应的, 即一种`Event::Type`的`Event`会被对应类型的`EventListener`接受.\n\n## 存放 EventListener 的地方\n\n在`EventDispatcher`中, 它把以上7种 `EventListener::Type` 类型的 `EventListner` 放到7个队列中. 也就是在这样一个字段中:\n\n```\nstd::unordered_map<EventListener::ListenerID, EventListenerVector*> _listenerMap;\n```\n* `EventListener::ListenerID` : 每一种`EventListener::Type`有唯一的 `EventListener::ListenerID`. 其实通过这段代码 `typedef std::string ListenerID;` 可知: `EventListener::ListenerID` 就是简单 `string`, 就是一个名称而已.\n* `EventListenerVector`: 顾名思义, 就是一个 `EventListener` 的向量容器. 相对于普通的向量容器, 它增加了`priority`管理功能. \n\n## EventListener的fixedPriority\n简单来说, 每个 `EventListener` 有自己的 `fixedPriority` 属性, 它是一个整数. \n\n### EventListener的遍历顺序<a name=\"priority_of_event_listener\"></a>\n`EventDispatcher` 在抛发事件的时候, 会先处理 `Event` 的时候, 会优先遍历 `fixedPriority` 低的 `EventListener`, 调用它的 `CallBack`. 在某些条件下, 一个 `Event` 被一个 `EventListener` 处理之后, 会停止遍历其它的 `EventListener`. 反映到实战中就是: 你监听了某种事件, 这种事件也出发了, 但是对应的回调函数并没有被调用, 也就是被优先级更高的 `EventListener` 截获了. \n\n如果 `fixedPriority` 一样呢? 按照什么顺序? \n\n1. `fixedPriority` 为0, 这个值是专门为 Scene Object 预留的. 即, 默认情况下, 绝大多数继承自 `Node` 的对象添加的普通事件监听器, 其 `fixedPriority` 都为0. 此时, `Node` 的 `globalZOrder`决定了优先级, 值越大, 越先被遍历到, 即在显示层中层级越高, 越先接受事件. 这在ui响应逻辑中也是合理的.\n2. `fixedPriority` 不为0, 那就按添加顺序. \n### Event在什么条件下会被优先级更高的EventListener截获?\n\n1. 对于 `EventListenerTouchOneByOne`, 它有一个字段: `_needSwallow`, 当它为 `true` 的时候, 如果它接受了某个 `Event`, 优先级更低的 `EventListener` 就接受不到了. 可以用 `EventListenerTouchOneByOne::setSwallowTouches(bool needSwallow)` 来改变它.\n2. 对于其它类型的 `EventLIstener`, 只有在显示调用了 `Event::stopPropagation()` 的时候, 才会中断遍历.\n\n## 核心函数: EventDispatcher::dispatchEvent()\n下面我们看看`EventDispatcher`最核心的函数: \n`void EventDispatcher::dispatchEvent(Event* event)`: 当有响应的事件到来的时候, 都会调用这个函数来通知监听了此事件的对象.\n\n\n其实, 上面的介绍, 已经把这个函数里绝大部分逻辑都描述了,这里做一个最后的总结\n事件抛发的简要流程如下:\n\n1. 检查 `_listenerMap` 中所有的`EventListnerVector`, 如果哪个容器的 `EventListener` 优先级顺序需要更新, 则重新排序\n2. 对于类型为 `Event::Type::TOUCH` 的事件, 则按照[EventListener的遍历顺序](#priority_of_event_listener)遍历所有的 `EventListener`. 只有接受了 `EventTouch::EventCode::BEGAN` 事件的 `EventListener`, 才会收到其他类型的 `EventTouch` 事件.\n3. 对于其他类型的事件, 也按照[EventListener的遍历顺序](#priority_of_event_listener)的顺序遍历对应的`EventListener`.\n\n## 总结\n`Eventdispatcher` 中的其它函数, 主要功能都是 添加`EventListener`, 删除`EventListener`等, 不做详细介绍. \n\n总的来说, `Eventdispatcher` 是一个中转器:\n\n1. 事件的产生模块儿, 只关心自己构造正确的 `Event`, 调用 `EventDispatcher::dispatchEvent(Event* event)` 交给 `EventDispatcher`.\n2. 需要监听事件的模块儿, 只需调用 ` EventDispatcher::addEventListener(EventListener* listener)` (或者它的其它变种)来注册自己作为监听者.\n3. 而 `EventDispatcher` 的作用是: \n    4. 把特定类型的 `Event` 送给对应类型的 `EventListener`.\n    5. 对于同一种 `Event`, 规定了事件送达的优先级.\n\n> Written with [StackEdit](https://stackedit.io/).\n\n\n\n\n","slug":"技术/[cocos2dx]深入--几个代表性的类 (续)","published":1,"updated":"2017-07-26T15:57:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqt004tq0d4vf0cq7ls","content":"<p>摘要: 此文对<code>cocos2d-x</code>引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括<code>Director</code>,<code>Application</code>, <code>Renderer</code>, <code>EventDispatcher</code>, <code>Scheduler</code>. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对<code>cocos2d-x</code>引擎有一个全面笼统的认识, 也方便快速定位问题.</p>\n<hr>\n<h1 id=\"EventDispatcher\"><a href=\"#EventDispatcher\" class=\"headerlink\" title=\"EventDispatcher\"></a>EventDispatcher</h1><h2 id=\"EventDispatcher-EventListener-Event之间的关系\"><a href=\"#EventDispatcher-EventListener-Event之间的关系\" class=\"headerlink\" title=\"EventDispatcher,EventListener,Event之间的关系\"></a>EventDispatcher,EventListener,Event之间的关系</h2><ul>\n<li><code>EventDispatcher</code>: 事件分发器, 相当于所有事件的中控中心. 管理着<code>EventListener</code>，当一个<code>Event</code>到来的时候决定<code>CallBack</code>的调用顺序。</li>\n<li><code>Event</code> ( <code>EventTouch</code>, <code>EventKeyboard</code> 等), 具体的事件数据, </li>\n<li><code>EventListener</code> ( <code>EventListenerTouch</code>, <code>EventListenerKeyboard</code> 等 ): 建立了<code>Event</code>到<code>CallBack</code>的映射关系, <code>EventDispatcher</code> 根据这种映射关系调用对应的 <code>CallBack</code>.</li>\n</ul>\n<h2 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h2><p><code>Event</code>有以下几种类型:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">enum class Type</div><div class=\"line\">&#123;</div><div class=\"line\">    TOUCH,</div><div class=\"line\">    KEYBOARD,</div><div class=\"line\">    ACCELERATION,</div><div class=\"line\">    MOUSE,</div><div class=\"line\">    FOCUS,</div><div class=\"line\">    CUSTOM</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p><code>Event</code>最重要的属性就是<code>type</code>, 标识了它是那种类型的事件, 也决定了由哪个<code>EventListner</code>来处理它.</p>\n<h2 id=\"EventListener\"><a href=\"#EventListener\" class=\"headerlink\" title=\"EventListener\"></a>EventListener</h2><p><code>EventListner</code>有以下几种类型:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">enum class Type</div><div class=\"line\">&#123;</div><div class=\"line\">    UNKNOWN,</div><div class=\"line\">    TOUCH_ONE_BY_ONE,</div><div class=\"line\">    TOUCH_ALL_AT_ONCE,</div><div class=\"line\">    KEYBOARD,</div><div class=\"line\">    MOUSE,</div><div class=\"line\">    ACCELERATION,</div><div class=\"line\">    FOCUS,</div><div class=\"line\">    CUSTOM</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>除了<code>UNKNOWN</code>, 跟<code>Event::Type</code>相比,<code>Event::Type::TOUCH</code>会<strong>同时</strong>被两种类型的<code>EventListener</code>处理: <code>TOUCH_ONE_BY_ONE</code>和<code>TOUCH_ALL_AT_ONCE</code>. 这两种<code>EventListener</code>分别处理单点触摸事件和多点触摸事件. 多说几句: 假如一个<code>TouchEvent</code>事件中有多个触摸点, 那么类型为 <code>EventListener::Type::TOUCH_ONE_BY_ONE</code> 的 <code>EventListener</code> 会把这个事件分解成若干个单点触摸事件来处理. 而类型为 <code>EventListener::Type::TOUCH_ALL_AT_ONCE</code> 的 <code>EventListener</code> 就是来处理多点触摸的, 会一次处理它.<br>其它几种类型都是一一对应的, 即一种<code>Event::Type</code>的<code>Event</code>会被对应类型的<code>EventListener</code>接受.</p>\n<h2 id=\"存放-EventListener-的地方\"><a href=\"#存放-EventListener-的地方\" class=\"headerlink\" title=\"存放 EventListener 的地方\"></a>存放 EventListener 的地方</h2><p>在<code>EventDispatcher</code>中, 它把以上7种 <code>EventListener::Type</code> 类型的 <code>EventListner</code> 放到7个队列中. 也就是在这样一个字段中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">std::unordered_map&lt;EventListener::ListenerID, EventListenerVector*&gt; _listenerMap;</div></pre></td></tr></table></figure>\n<ul>\n<li><code>EventListener::ListenerID</code> : 每一种<code>EventListener::Type</code>有唯一的 <code>EventListener::ListenerID</code>. 其实通过这段代码 <code>typedef std::string ListenerID;</code> 可知: <code>EventListener::ListenerID</code> 就是简单 <code>string</code>, 就是一个名称而已.</li>\n<li><code>EventListenerVector</code>: 顾名思义, 就是一个 <code>EventListener</code> 的向量容器. 相对于普通的向量容器, 它增加了<code>priority</code>管理功能. </li>\n</ul>\n<h2 id=\"EventListener的fixedPriority\"><a href=\"#EventListener的fixedPriority\" class=\"headerlink\" title=\"EventListener的fixedPriority\"></a>EventListener的fixedPriority</h2><p>简单来说, 每个 <code>EventListener</code> 有自己的 <code>fixedPriority</code> 属性, 它是一个整数. </p>\n<h3 id=\"EventListener的遍历顺序\"><a href=\"#EventListener的遍历顺序\" class=\"headerlink\" title=\"EventListener的遍历顺序\"></a>EventListener的遍历顺序<a name=\"priority_of_event_listener\"></a></h3><p><code>EventDispatcher</code> 在抛发事件的时候, 会先处理 <code>Event</code> 的时候, 会优先遍历 <code>fixedPriority</code> 低的 <code>EventListener</code>, 调用它的 <code>CallBack</code>. 在某些条件下, 一个 <code>Event</code> 被一个 <code>EventListener</code> 处理之后, 会停止遍历其它的 <code>EventListener</code>. 反映到实战中就是: 你监听了某种事件, 这种事件也出发了, 但是对应的回调函数并没有被调用, 也就是被优先级更高的 <code>EventListener</code> 截获了. </p>\n<p>如果 <code>fixedPriority</code> 一样呢? 按照什么顺序? </p>\n<ol>\n<li><code>fixedPriority</code> 为0, 这个值是专门为 Scene Object 预留的. 即, 默认情况下, 绝大多数继承自 <code>Node</code> 的对象添加的普通事件监听器, 其 <code>fixedPriority</code> 都为0. 此时, <code>Node</code> 的 <code>globalZOrder</code>决定了优先级, 值越大, 越先被遍历到, 即在显示层中层级越高, 越先接受事件. 这在ui响应逻辑中也是合理的.</li>\n<li><p><code>fixedPriority</code> 不为0, 那就按添加顺序. </p>\n<h3 id=\"Event在什么条件下会被优先级更高的EventListener截获\"><a href=\"#Event在什么条件下会被优先级更高的EventListener截获\" class=\"headerlink\" title=\"Event在什么条件下会被优先级更高的EventListener截获?\"></a>Event在什么条件下会被优先级更高的EventListener截获?</h3></li>\n<li><p>对于 <code>EventListenerTouchOneByOne</code>, 它有一个字段: <code>_needSwallow</code>, 当它为 <code>true</code> 的时候, 如果它接受了某个 <code>Event</code>, 优先级更低的 <code>EventListener</code> 就接受不到了. 可以用 <code>EventListenerTouchOneByOne::setSwallowTouches(bool needSwallow)</code> 来改变它.</p>\n</li>\n<li>对于其它类型的 <code>EventLIstener</code>, 只有在显示调用了 <code>Event::stopPropagation()</code> 的时候, 才会中断遍历.</li>\n</ol>\n<h2 id=\"核心函数-EventDispatcher-dispatchEvent\"><a href=\"#核心函数-EventDispatcher-dispatchEvent\" class=\"headerlink\" title=\"核心函数: EventDispatcher::dispatchEvent()\"></a>核心函数: EventDispatcher::dispatchEvent()</h2><p>下面我们看看<code>EventDispatcher</code>最核心的函数:<br><code>void EventDispatcher::dispatchEvent(Event* event)</code>: 当有响应的事件到来的时候, 都会调用这个函数来通知监听了此事件的对象.</p>\n<p>其实, 上面的介绍, 已经把这个函数里绝大部分逻辑都描述了,这里做一个最后的总结<br>事件抛发的简要流程如下:</p>\n<ol>\n<li>检查 <code>_listenerMap</code> 中所有的<code>EventListnerVector</code>, 如果哪个容器的 <code>EventListener</code> 优先级顺序需要更新, 则重新排序</li>\n<li>对于类型为 <code>Event::Type::TOUCH</code> 的事件, 则按照<a href=\"#priority_of_event_listener\">EventListener的遍历顺序</a>遍历所有的 <code>EventListener</code>. 只有接受了 <code>EventTouch::EventCode::BEGAN</code> 事件的 <code>EventListener</code>, 才会收到其他类型的 <code>EventTouch</code> 事件.</li>\n<li>对于其他类型的事件, 也按照<a href=\"#priority_of_event_listener\">EventListener的遍历顺序</a>的顺序遍历对应的<code>EventListener</code>.</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><code>Eventdispatcher</code> 中的其它函数, 主要功能都是 添加<code>EventListener</code>, 删除<code>EventListener</code>等, 不做详细介绍. </p>\n<p>总的来说, <code>Eventdispatcher</code> 是一个中转器:</p>\n<ol>\n<li>事件的产生模块儿, 只关心自己构造正确的 <code>Event</code>, 调用 <code>EventDispatcher::dispatchEvent(Event* event)</code> 交给 <code>EventDispatcher</code>.</li>\n<li>需要监听事件的模块儿, 只需调用 <code>EventDispatcher::addEventListener(EventListener* listener)</code> (或者它的其它变种)来注册自己作为监听者.</li>\n<li>而 <code>EventDispatcher</code> 的作用是: <ol>\n<li>把特定类型的 <code>Event</code> 送给对应类型的 <code>EventListener</code>.</li>\n<li>对于同一种 <code>Event</code>, 规定了事件送达的优先级.</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>Written with <a href=\"https://stackedit.io/\" target=\"_blank\" rel=\"external\">StackEdit</a>.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: 此文对<code>cocos2d-x</code>引擎中最具代表性,最能体现框架结构的几个类做了简单的介绍, 包括<code>Director</code>,<code>Application</code>, <code>Renderer</code>, <code>EventDispatcher</code>, <code>Scheduler</code>. 对于这些类, 也只对关系主要流程的方法做了介绍, 略过了容错代码和其它细节. 主要目的是让大家快速的对<code>cocos2d-x</code>引擎有一个全面笼统的认识, 也方便快速定位问题.</p>\n<hr>\n<h1 id=\"EventDispatcher\"><a href=\"#EventDispatcher\" class=\"headerlink\" title=\"EventDispatcher\"></a>EventDispatcher</h1><h2 id=\"EventDispatcher-EventListener-Event之间的关系\"><a href=\"#EventDispatcher-EventListener-Event之间的关系\" class=\"headerlink\" title=\"EventDispatcher,EventListener,Event之间的关系\"></a>EventDispatcher,EventListener,Event之间的关系</h2><ul>\n<li><code>EventDispatcher</code>: 事件分发器, 相当于所有事件的中控中心. 管理着<code>EventListener</code>，当一个<code>Event</code>到来的时候决定<code>CallBack</code>的调用顺序。</li>\n<li><code>Event</code> ( <code>EventTouch</code>, <code>EventKeyboard</code> 等), 具体的事件数据, </li>\n<li><code>EventListener</code> ( <code>EventListenerTouch</code>, <code>EventListenerKeyboard</code> 等 ): 建立了<code>Event</code>到<code>CallBack</code>的映射关系, <code>EventDispatcher</code> 根据这种映射关系调用对应的 <code>CallBack</code>.</li>\n</ul>\n<h2 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h2><p><code>Event</code>有以下几种类型:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">enum class Type</div><div class=\"line\">&#123;</div><div class=\"line\">    TOUCH,</div><div class=\"line\">    KEYBOARD,</div><div class=\"line\">    ACCELERATION,</div><div class=\"line\">    MOUSE,</div><div class=\"line\">    FOCUS,</div><div class=\"line\">    CUSTOM</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p><code>Event</code>最重要的属性就是<code>type</code>, 标识了它是那种类型的事件, 也决定了由哪个<code>EventListner</code>来处理它.</p>\n<h2 id=\"EventListener\"><a href=\"#EventListener\" class=\"headerlink\" title=\"EventListener\"></a>EventListener</h2><p><code>EventListner</code>有以下几种类型:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">enum class Type</div><div class=\"line\">&#123;</div><div class=\"line\">    UNKNOWN,</div><div class=\"line\">    TOUCH_ONE_BY_ONE,</div><div class=\"line\">    TOUCH_ALL_AT_ONCE,</div><div class=\"line\">    KEYBOARD,</div><div class=\"line\">    MOUSE,</div><div class=\"line\">    ACCELERATION,</div><div class=\"line\">    FOCUS,</div><div class=\"line\">    CUSTOM</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>除了<code>UNKNOWN</code>, 跟<code>Event::Type</code>相比,<code>Event::Type::TOUCH</code>会<strong>同时</strong>被两种类型的<code>EventListener</code>处理: <code>TOUCH_ONE_BY_ONE</code>和<code>TOUCH_ALL_AT_ONCE</code>. 这两种<code>EventListener</code>分别处理单点触摸事件和多点触摸事件. 多说几句: 假如一个<code>TouchEvent</code>事件中有多个触摸点, 那么类型为 <code>EventListener::Type::TOUCH_ONE_BY_ONE</code> 的 <code>EventListener</code> 会把这个事件分解成若干个单点触摸事件来处理. 而类型为 <code>EventListener::Type::TOUCH_ALL_AT_ONCE</code> 的 <code>EventListener</code> 就是来处理多点触摸的, 会一次处理它.<br>其它几种类型都是一一对应的, 即一种<code>Event::Type</code>的<code>Event</code>会被对应类型的<code>EventListener</code>接受.</p>\n<h2 id=\"存放-EventListener-的地方\"><a href=\"#存放-EventListener-的地方\" class=\"headerlink\" title=\"存放 EventListener 的地方\"></a>存放 EventListener 的地方</h2><p>在<code>EventDispatcher</code>中, 它把以上7种 <code>EventListener::Type</code> 类型的 <code>EventListner</code> 放到7个队列中. 也就是在这样一个字段中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">std::unordered_map&lt;EventListener::ListenerID, EventListenerVector*&gt; _listenerMap;</div></pre></td></tr></table></figure>\n<ul>\n<li><code>EventListener::ListenerID</code> : 每一种<code>EventListener::Type</code>有唯一的 <code>EventListener::ListenerID</code>. 其实通过这段代码 <code>typedef std::string ListenerID;</code> 可知: <code>EventListener::ListenerID</code> 就是简单 <code>string</code>, 就是一个名称而已.</li>\n<li><code>EventListenerVector</code>: 顾名思义, 就是一个 <code>EventListener</code> 的向量容器. 相对于普通的向量容器, 它增加了<code>priority</code>管理功能. </li>\n</ul>\n<h2 id=\"EventListener的fixedPriority\"><a href=\"#EventListener的fixedPriority\" class=\"headerlink\" title=\"EventListener的fixedPriority\"></a>EventListener的fixedPriority</h2><p>简单来说, 每个 <code>EventListener</code> 有自己的 <code>fixedPriority</code> 属性, 它是一个整数. </p>\n<h3 id=\"EventListener的遍历顺序\"><a href=\"#EventListener的遍历顺序\" class=\"headerlink\" title=\"EventListener的遍历顺序\"></a>EventListener的遍历顺序<a name=\"priority_of_event_listener\"></a></h3><p><code>EventDispatcher</code> 在抛发事件的时候, 会先处理 <code>Event</code> 的时候, 会优先遍历 <code>fixedPriority</code> 低的 <code>EventListener</code>, 调用它的 <code>CallBack</code>. 在某些条件下, 一个 <code>Event</code> 被一个 <code>EventListener</code> 处理之后, 会停止遍历其它的 <code>EventListener</code>. 反映到实战中就是: 你监听了某种事件, 这种事件也出发了, 但是对应的回调函数并没有被调用, 也就是被优先级更高的 <code>EventListener</code> 截获了. </p>\n<p>如果 <code>fixedPriority</code> 一样呢? 按照什么顺序? </p>\n<ol>\n<li><code>fixedPriority</code> 为0, 这个值是专门为 Scene Object 预留的. 即, 默认情况下, 绝大多数继承自 <code>Node</code> 的对象添加的普通事件监听器, 其 <code>fixedPriority</code> 都为0. 此时, <code>Node</code> 的 <code>globalZOrder</code>决定了优先级, 值越大, 越先被遍历到, 即在显示层中层级越高, 越先接受事件. 这在ui响应逻辑中也是合理的.</li>\n<li><p><code>fixedPriority</code> 不为0, 那就按添加顺序. </p>\n<h3 id=\"Event在什么条件下会被优先级更高的EventListener截获\"><a href=\"#Event在什么条件下会被优先级更高的EventListener截获\" class=\"headerlink\" title=\"Event在什么条件下会被优先级更高的EventListener截获?\"></a>Event在什么条件下会被优先级更高的EventListener截获?</h3></li>\n<li><p>对于 <code>EventListenerTouchOneByOne</code>, 它有一个字段: <code>_needSwallow</code>, 当它为 <code>true</code> 的时候, 如果它接受了某个 <code>Event</code>, 优先级更低的 <code>EventListener</code> 就接受不到了. 可以用 <code>EventListenerTouchOneByOne::setSwallowTouches(bool needSwallow)</code> 来改变它.</p>\n</li>\n<li>对于其它类型的 <code>EventLIstener</code>, 只有在显示调用了 <code>Event::stopPropagation()</code> 的时候, 才会中断遍历.</li>\n</ol>\n<h2 id=\"核心函数-EventDispatcher-dispatchEvent\"><a href=\"#核心函数-EventDispatcher-dispatchEvent\" class=\"headerlink\" title=\"核心函数: EventDispatcher::dispatchEvent()\"></a>核心函数: EventDispatcher::dispatchEvent()</h2><p>下面我们看看<code>EventDispatcher</code>最核心的函数:<br><code>void EventDispatcher::dispatchEvent(Event* event)</code>: 当有响应的事件到来的时候, 都会调用这个函数来通知监听了此事件的对象.</p>\n<p>其实, 上面的介绍, 已经把这个函数里绝大部分逻辑都描述了,这里做一个最后的总结<br>事件抛发的简要流程如下:</p>\n<ol>\n<li>检查 <code>_listenerMap</code> 中所有的<code>EventListnerVector</code>, 如果哪个容器的 <code>EventListener</code> 优先级顺序需要更新, 则重新排序</li>\n<li>对于类型为 <code>Event::Type::TOUCH</code> 的事件, 则按照<a href=\"#priority_of_event_listener\">EventListener的遍历顺序</a>遍历所有的 <code>EventListener</code>. 只有接受了 <code>EventTouch::EventCode::BEGAN</code> 事件的 <code>EventListener</code>, 才会收到其他类型的 <code>EventTouch</code> 事件.</li>\n<li>对于其他类型的事件, 也按照<a href=\"#priority_of_event_listener\">EventListener的遍历顺序</a>的顺序遍历对应的<code>EventListener</code>.</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><code>Eventdispatcher</code> 中的其它函数, 主要功能都是 添加<code>EventListener</code>, 删除<code>EventListener</code>等, 不做详细介绍. </p>\n<p>总的来说, <code>Eventdispatcher</code> 是一个中转器:</p>\n<ol>\n<li>事件的产生模块儿, 只关心自己构造正确的 <code>Event</code>, 调用 <code>EventDispatcher::dispatchEvent(Event* event)</code> 交给 <code>EventDispatcher</code>.</li>\n<li>需要监听事件的模块儿, 只需调用 <code>EventDispatcher::addEventListener(EventListener* listener)</code> (或者它的其它变种)来注册自己作为监听者.</li>\n<li>而 <code>EventDispatcher</code> 的作用是: <ol>\n<li>把特定类型的 <code>Event</code> 送给对应类型的 <code>EventListener</code>.</li>\n<li>对于同一种 <code>Event</code>, 规定了事件送达的优先级.</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>Written with <a href=\"https://stackedit.io/\" target=\"_blank\" rel=\"external\">StackEdit</a>.</p>\n</blockquote>\n"},{"date":"2013-11-02T16:25:00.000Z","title":"[iOS]UIView.frame的骗局","_content":"\n\n摘要：如果你刚刚开始接触IOS编程, 刚刚接触UIKit, 肯定会被 `frame, bounds, center, layer.anchorPoint, layer.position` 这些乱七八糟得属性折腾得心烦意乱. 并且,聪明的你肯定早就发现,这些属性并不是独立的, 比如`frame`和`bounds`, 你改变一个必然会影响另一个, 这就更加大了理解难度. 我想通过这篇**浅显的日志,和一个简单的Demo**来表达出我对这些变量的理解. 难免有偏差之处, 欢迎拍砖. 但是我能保证的是这些理解方式是**实用**的. 我个人也是看过网上很多日志对其有些微理解, 然后又通过写一个Demo来证明自己的想法. \n\n--- \n\n其实, 受过10几年教育的你, 必然知道, 一个二维矩形, 只要有了`{x,y,width,height}`, 也就唯一确定了它的几何属性. 没错, 其实`UIView`里面也就这几个变量. 其他变量, 比如`frame,bounds`都是这些变量通过基本变量导出的.那么`UIView`拥有的真正意义上的属性有哪些呢?\n\n\n\n## UIView 真正意义上的属性:\n- **bounds**:   \n`bounds`是一个`CGRect`. 他的size部分决定了`UIView`的大小,也就是,`bounds.width`和`bounds.height`决定了`UIView`的大小.你也可以说`bounds.width`和`bounds.height`就是`UIView`的`width`和`height`. `bounds.x`和`bounds.y`决定了`UIView`的`subView`的原点坐标.如果你更改了`bounds.x`或者`bounds.y`,`UIView`的位置和大小完全不为所动, 但是`UIView`的所有`subView`都会平移一段距离`(-bounds.x,-bounds.y)`(这一点我们会在下文\b做详细陈述).\n- **center**:  \n望文生义(注意,这是个带贬义的词),他就是`UIView`的中心,也就是坐标点`(view.width/2,view.height/2)`.但是,可恶的但是, 上句话仅仅在在一个`UIView`刚被创建的时候成立. 也就是,在刚刚创建`UIView`的时候,他**恰好**成立. **其实, `center`有它更重要的角色: 就是决定了`UIView`的位置.** (但是,这个位置并不是我们常规意义上理解的`(x,y)`. 在这里你先知道它来决定我们UIView的位置就好了.)\n\n下面来看我们的第一个公式.\n\n\n## 揭开frame的本质\n我想,对于程序员的你,没有比比代码更直接的方式了吧?  \n下面就是`UIView`的属性`frame`的实现:\n\n    \n```\n//代码1\n-(CGRect) frame  \n{  \n     float x = center.x - 1/2 * bounds.width;   \n     float y = center.y - 1/2 * bounds.height;  \n     float width = bounds.width;\n     float height = bounds.height;  \n     return CGRectMake(x, y, width, height);\n}\n\n-(void) setFrame:(CGRect) rect\n{\n\tcenter.x = rect.x + 1/2 * rect.width;\n\tcenter.y = rect.y + 1/2 * rect.height;\n\tbounds.width = rect.width;\n\tbounds.height = rect.height;\n}\n```\n  \n下面来到实战演习:  \n\n```\n//代码2\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n\ttestView = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 50, 50)];\n\ttestView.backgroundColor = [UIColor blueColor];\n\t[self.view insertSubview:testView atIndex:0];\n\t\n\tUIView* innerView = [[UIView alloc] initWithFrame:CGRectMake(23,23, 4, 4)];\n\tinnerView.backgroundColor = [UIColor redColor];\n\t[testView addSubview:innerView];\n}\n\n\n```\n初始状态,我们新建一个`UIView`,设置`frame`为`(100,100,50,50)`:  \n图1  \n![Resize icon][1]  \n\n然后,我们改变`frame`  \n\n```\ntestView.frame = CGRectMake(0,0,40,40); //代码3\n```\n我们再看看各个属性的变化:  \n图2  \n![Resize icon][2]  \n\n\n没错,你看到了我们刚刚提到的`center`属性. 我们刚刚说过, 这个属性主要决定了`UIView`的位置. 所以当我们在`setFrame:`的时候会改变`UIView`的位置.  \n好吧, 既然我们见过`center`先生, 那就给您介绍一下吧, 也要给点面子是不?\n\n\n## center如何搞定了位置?\n`center`是`UIView`的相关属性中主要决定`UIView`位置(跟大小相对), 我们在图2的基础上, 改变center:  \n\n```\ntestView.center = CGPointMake(125,125);//代码4\n```\n我们来看一下效果:  \n图3  \n![Resize icon][3]  \n看到了吧? `testView`的位置向左下移动了`(125-20, 125-20)`距离.\n根据*代码1*, 我们可以看到, `center`和`bounds`属性是相互独立的. 也就是他们中间某一个发生了变化, 不会影响另一个. 这说明了什么? 说明我们改变`center`的时候, 仅仅会改变`testView`的位置, 而它的大小不会有任何改变.\n\n  \n好了, 到这里, `testView`的**位置**和**大小**问题,我们已经彻底解决了. \n但是对于`bounds`小伙儿, 我们只关注了它的`size`部分, 忽略了他的`origin`部分. 不好意思, `bounds`小伙, 现在才想起你.\n\n\n## bounds的另一半\n没图没真相, 我们首先来点料吧:  \n图4,图5   \n![Resize icon][4] ![Resize icon][5]\n\n`bounds.origin`初始情况下为`(0,0)`. 我们设置  \n\n```\ntestView.bounds = CGRectMak(25,25,40,40); //代码5\n```\n得到左图.\n我们没有改变`bounds.size`(仍然是40,40), 只是修改了`bounds.origin`: 从`(0,0)`改变成`(25,25)`.我们发现`testView`内部的小红点移动了`(0-25,0-25)`距离.(至于为设么这里是-25而不是25, 我也还没理解, 望高人指点.) 反正, 知道当你改变`bounds.origin`的时候, `testView`内部所有的`subView`都要想做相反方向的位移就对了. \n\n在左图的基础上,再设置\n\n```\ntestView.bounds = CGRectMak(-5,-5,40,40); //代码6\n\n```\n我们得到右图.\n\n  \n需要注意的是, 这里所有`subView`的`frame`是不会跟着改的, 还是原来的值. 我们可以这么理解: 设置`testView.origin`, 会改变所有孩子节点位置的基准点. 就比如, 我们把一辆车平移了, 我们站在路边发现车里的方向盘和发动机等子组件的位置都改变了, 而方向盘发动机等\"子组件\"相对于**汽车的坐标**没有改变.  \n\n关于`bounds`, 还有一点要说: **当你的`subView`的某些部分落在了`bounds`定义的矩形之外, 那么这些落在矩形之外的部分, 便不能接受任何点击,踩踏,横扫等事件了....**\n\n```\n# ifdefine 欺骗 明明知道某个事实,却故意隐瞒或窜改并加以传播  \n写到这里, 我其实要跟大家道一个歉, 因为我在上面对frame的定义欺骗了大家.   \n# endif  \n```\n`frame`的定义并没有这么简单, 因为还搀插着第三者的关系: `testView.layer.anchorPoint`.  \n有请 anchorPoint 出场!  \n\n## 在墙上钉个钉子,就是anchorPoint\n好了,我们重新定义`frame`的`getter/setter`函数(其实就是把代码1的定义中所有的`1/2`改为`view.layer.anchorPoint`):\n\n```\n//代码7\n-(CGRect) frame  \n{  \n     float x = center.x - layer.anchorPoint.x * bounds.width;   \n     float y = center.y - layer.anchorPoint.y * bounds.height;  \n     float width = bounds.width;\n     float height = bounds.height;  \n     return CGRectMake(x, y, width, height);\n}\n\n-(void) setFrame:(CGRect) rect\n{\n\tcenter.x = rect.x + layer.anchorPoint.x * rect.width;\n\tcenter.y = rect.y + layer.anchorPoint.y * rect.height;\n\tbounds.width = rect.width;\n\tbounds.height = rect.height;\n}\n```\n\n因为`anchorPoint`的默认值是`(0.5,0.5)`,所以如果你不改变`anchorPoint`,那么*代码1*就是正确的. 之所以在*代码1*里撒了一个谎, 是因为不想那么早把`anchorPoint`引出来.  \n现在,你既然知道了`anchorPoint`跟`frame`之间的关系, 必然想知道它到底有什么用:  \n\n  \n先给你一个直观印象: `anchorPoint`就是一个钉子,把一幅画钉在墙上. 以后你想做什么转动也好, 把相框拉伸也好, 这个点是绝对不会动的.  \n`anchorPoint`的默认值是`(0.5,0.5)`. 也就是说默认情况下,你对`testView`作旋转和缩放, 都会以`(bounds.size.width/2,bounds.size.height/2)`为基准点.下面我们接着图5来看一个转化:\n\n```\ntestView.transform = CGAffineTransformMakeScale(2, 2);//代码8\n```\n视图如下:  \n图6  \n![Resize icon][6]   \n我们看到,`testView`以中心点位固定点,等比例扩大了一倍.`frame.origin`也移动了`(-20,-20)`. 跟我们的预期一样.  \n~~这里需要特别提醒各位的是:** 当对`testView`进行了`transform`之后,我们再去设置`frame`, `frame`已经完全不理咱们了. 也就是说`setFrame`函数完全不工作了.** 我们这个时候调用`frame`的`getter`函数, 得到的是transform后的大小.如上图所示,变成了`(85,85,80,80)`.~~\n如果, 我们把`scale`恢复为1, 再改变`anchorPoint`的位置为`(0,0)`, 然后再把`testView`放大一倍(`scale=2`). 看看会发现什么:  \n\n```\n//代码9\ntestView.transform = CGAffineTransformMakeScale(1, 1);\ntestView.layer.anchorPoint = CGPointMake(0,0)\ntestView.transform = CGAffineTransformMakeScale(2, 2);\n```\n下面三个图分别对应上面三行代码执行后的状态:  \n图7,图8,图9  \n![Resize icon][7] ![Resize icon][8]![Resize icon][9]\n\n对于上面的运行结果, 我有几点说明:   \n \n* 当我们改变`anchorPoint`的时候,`center`没有改变,那么根据*代码7*, `frame`也会随着发生改变. 您可以在图8中观察到这一变化.  \n* 观察图8和图9的变化,你可以发现,这次缩放的中心点在左上角. 因为我们设置了`anchorPoint = CGPointMake(0,0)`.  \n* 如果您是对图像做旋转, `anchorPoint`也是旋转的中心.\n\n\n到此为止, 文章开始提到的属性都基本讲完了. 只剩下了`layer.position`. 如果你细心, 你会发现上面所有的图片中, `layer.position === center`, 没错, 任何时候他们都是相等的.\n\n\n## 结尾\n这里有博客中Demo的代码下载, 本博客中的所有截图都来自于Demo的截屏.如果我在博客中没有说明白, 您可以下载Demo仔细把玩. 相信你可以在实际操作中有更深刻的理解  \nDemo底部的输入框支持的的语法有:\n\n```\nscale = number\ncenter = ( number, number )\nframe = (number, number, number, number )\nbounds = (number, number, number, number)\ncenter = (number, number)\nposition = (number, number) //layer.position\nanchorPoint = (number, number) //layer.anchorPoint\n```\n比如您输入`frame =(0,0,40,40)`,就相当于执行代码`testView.frame = CGRectMake(0,0,40,40)`. 输入`center = (50,50)`就相当于执行代码`testView.center = CGPointMake(50,50)`.\n\n[点此下载Demo][demo_download]\n\n\n[1]: frame_images/IMG_0012.PNG \"初始状态图(1)\"\n[2]: frame_images/IMG_0013.PNG \"第一次设置frame(2)\"\n[3]: frame_images/IMG_0014.PNG \"第一次设置center(3)\"\n[4]: frame_images/IMG_0015.PNG \"第一次设置bounds.origin(4)\"\n[5]: frame_images/IMG_0016.PNG \"第二次设置bounds.origin(5)\"\n[6]: frame_images/IMG_0020.PNG \"第一次设置scale=2(14)\"\n[7]: frame_images/IMG_0017.PNG \"恢复scale=1(9)\"\n[8]: frame_images/IMG_0019.PNG \"设置anchorPoint=(0,0)(10)\"\n[9]: frame_images/IMG_0022.PNG \"设置scale=2(18)\"\n\n[demo_download]: http://pan.baidu.com/s/1eiKZ0 \"downlaod demo code\"","source":"_posts/技术/[iOS]UIView位置属性大揭秘.md","raw":"---\ndate:  2013-11-03 00:25\ntitle: '[iOS]UIView.frame的骗局'\ntags:  \n- ios\n- transform\n- anchorPoint\n- frame\n- center\n- bounds\n- position\n- UIView\ncategories: \n- 技术\n---\n\n\n摘要：如果你刚刚开始接触IOS编程, 刚刚接触UIKit, 肯定会被 `frame, bounds, center, layer.anchorPoint, layer.position` 这些乱七八糟得属性折腾得心烦意乱. 并且,聪明的你肯定早就发现,这些属性并不是独立的, 比如`frame`和`bounds`, 你改变一个必然会影响另一个, 这就更加大了理解难度. 我想通过这篇**浅显的日志,和一个简单的Demo**来表达出我对这些变量的理解. 难免有偏差之处, 欢迎拍砖. 但是我能保证的是这些理解方式是**实用**的. 我个人也是看过网上很多日志对其有些微理解, 然后又通过写一个Demo来证明自己的想法. \n\n--- \n\n其实, 受过10几年教育的你, 必然知道, 一个二维矩形, 只要有了`{x,y,width,height}`, 也就唯一确定了它的几何属性. 没错, 其实`UIView`里面也就这几个变量. 其他变量, 比如`frame,bounds`都是这些变量通过基本变量导出的.那么`UIView`拥有的真正意义上的属性有哪些呢?\n\n\n\n## UIView 真正意义上的属性:\n- **bounds**:   \n`bounds`是一个`CGRect`. 他的size部分决定了`UIView`的大小,也就是,`bounds.width`和`bounds.height`决定了`UIView`的大小.你也可以说`bounds.width`和`bounds.height`就是`UIView`的`width`和`height`. `bounds.x`和`bounds.y`决定了`UIView`的`subView`的原点坐标.如果你更改了`bounds.x`或者`bounds.y`,`UIView`的位置和大小完全不为所动, 但是`UIView`的所有`subView`都会平移一段距离`(-bounds.x,-bounds.y)`(这一点我们会在下文\b做详细陈述).\n- **center**:  \n望文生义(注意,这是个带贬义的词),他就是`UIView`的中心,也就是坐标点`(view.width/2,view.height/2)`.但是,可恶的但是, 上句话仅仅在在一个`UIView`刚被创建的时候成立. 也就是,在刚刚创建`UIView`的时候,他**恰好**成立. **其实, `center`有它更重要的角色: 就是决定了`UIView`的位置.** (但是,这个位置并不是我们常规意义上理解的`(x,y)`. 在这里你先知道它来决定我们UIView的位置就好了.)\n\n下面来看我们的第一个公式.\n\n\n## 揭开frame的本质\n我想,对于程序员的你,没有比比代码更直接的方式了吧?  \n下面就是`UIView`的属性`frame`的实现:\n\n    \n```\n//代码1\n-(CGRect) frame  \n{  \n     float x = center.x - 1/2 * bounds.width;   \n     float y = center.y - 1/2 * bounds.height;  \n     float width = bounds.width;\n     float height = bounds.height;  \n     return CGRectMake(x, y, width, height);\n}\n\n-(void) setFrame:(CGRect) rect\n{\n\tcenter.x = rect.x + 1/2 * rect.width;\n\tcenter.y = rect.y + 1/2 * rect.height;\n\tbounds.width = rect.width;\n\tbounds.height = rect.height;\n}\n```\n  \n下面来到实战演习:  \n\n```\n//代码2\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n\ttestView = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 50, 50)];\n\ttestView.backgroundColor = [UIColor blueColor];\n\t[self.view insertSubview:testView atIndex:0];\n\t\n\tUIView* innerView = [[UIView alloc] initWithFrame:CGRectMake(23,23, 4, 4)];\n\tinnerView.backgroundColor = [UIColor redColor];\n\t[testView addSubview:innerView];\n}\n\n\n```\n初始状态,我们新建一个`UIView`,设置`frame`为`(100,100,50,50)`:  \n图1  \n![Resize icon][1]  \n\n然后,我们改变`frame`  \n\n```\ntestView.frame = CGRectMake(0,0,40,40); //代码3\n```\n我们再看看各个属性的变化:  \n图2  \n![Resize icon][2]  \n\n\n没错,你看到了我们刚刚提到的`center`属性. 我们刚刚说过, 这个属性主要决定了`UIView`的位置. 所以当我们在`setFrame:`的时候会改变`UIView`的位置.  \n好吧, 既然我们见过`center`先生, 那就给您介绍一下吧, 也要给点面子是不?\n\n\n## center如何搞定了位置?\n`center`是`UIView`的相关属性中主要决定`UIView`位置(跟大小相对), 我们在图2的基础上, 改变center:  \n\n```\ntestView.center = CGPointMake(125,125);//代码4\n```\n我们来看一下效果:  \n图3  \n![Resize icon][3]  \n看到了吧? `testView`的位置向左下移动了`(125-20, 125-20)`距离.\n根据*代码1*, 我们可以看到, `center`和`bounds`属性是相互独立的. 也就是他们中间某一个发生了变化, 不会影响另一个. 这说明了什么? 说明我们改变`center`的时候, 仅仅会改变`testView`的位置, 而它的大小不会有任何改变.\n\n  \n好了, 到这里, `testView`的**位置**和**大小**问题,我们已经彻底解决了. \n但是对于`bounds`小伙儿, 我们只关注了它的`size`部分, 忽略了他的`origin`部分. 不好意思, `bounds`小伙, 现在才想起你.\n\n\n## bounds的另一半\n没图没真相, 我们首先来点料吧:  \n图4,图5   \n![Resize icon][4] ![Resize icon][5]\n\n`bounds.origin`初始情况下为`(0,0)`. 我们设置  \n\n```\ntestView.bounds = CGRectMak(25,25,40,40); //代码5\n```\n得到左图.\n我们没有改变`bounds.size`(仍然是40,40), 只是修改了`bounds.origin`: 从`(0,0)`改变成`(25,25)`.我们发现`testView`内部的小红点移动了`(0-25,0-25)`距离.(至于为设么这里是-25而不是25, 我也还没理解, 望高人指点.) 反正, 知道当你改变`bounds.origin`的时候, `testView`内部所有的`subView`都要想做相反方向的位移就对了. \n\n在左图的基础上,再设置\n\n```\ntestView.bounds = CGRectMak(-5,-5,40,40); //代码6\n\n```\n我们得到右图.\n\n  \n需要注意的是, 这里所有`subView`的`frame`是不会跟着改的, 还是原来的值. 我们可以这么理解: 设置`testView.origin`, 会改变所有孩子节点位置的基准点. 就比如, 我们把一辆车平移了, 我们站在路边发现车里的方向盘和发动机等子组件的位置都改变了, 而方向盘发动机等\"子组件\"相对于**汽车的坐标**没有改变.  \n\n关于`bounds`, 还有一点要说: **当你的`subView`的某些部分落在了`bounds`定义的矩形之外, 那么这些落在矩形之外的部分, 便不能接受任何点击,踩踏,横扫等事件了....**\n\n```\n# ifdefine 欺骗 明明知道某个事实,却故意隐瞒或窜改并加以传播  \n写到这里, 我其实要跟大家道一个歉, 因为我在上面对frame的定义欺骗了大家.   \n# endif  \n```\n`frame`的定义并没有这么简单, 因为还搀插着第三者的关系: `testView.layer.anchorPoint`.  \n有请 anchorPoint 出场!  \n\n## 在墙上钉个钉子,就是anchorPoint\n好了,我们重新定义`frame`的`getter/setter`函数(其实就是把代码1的定义中所有的`1/2`改为`view.layer.anchorPoint`):\n\n```\n//代码7\n-(CGRect) frame  \n{  \n     float x = center.x - layer.anchorPoint.x * bounds.width;   \n     float y = center.y - layer.anchorPoint.y * bounds.height;  \n     float width = bounds.width;\n     float height = bounds.height;  \n     return CGRectMake(x, y, width, height);\n}\n\n-(void) setFrame:(CGRect) rect\n{\n\tcenter.x = rect.x + layer.anchorPoint.x * rect.width;\n\tcenter.y = rect.y + layer.anchorPoint.y * rect.height;\n\tbounds.width = rect.width;\n\tbounds.height = rect.height;\n}\n```\n\n因为`anchorPoint`的默认值是`(0.5,0.5)`,所以如果你不改变`anchorPoint`,那么*代码1*就是正确的. 之所以在*代码1*里撒了一个谎, 是因为不想那么早把`anchorPoint`引出来.  \n现在,你既然知道了`anchorPoint`跟`frame`之间的关系, 必然想知道它到底有什么用:  \n\n  \n先给你一个直观印象: `anchorPoint`就是一个钉子,把一幅画钉在墙上. 以后你想做什么转动也好, 把相框拉伸也好, 这个点是绝对不会动的.  \n`anchorPoint`的默认值是`(0.5,0.5)`. 也就是说默认情况下,你对`testView`作旋转和缩放, 都会以`(bounds.size.width/2,bounds.size.height/2)`为基准点.下面我们接着图5来看一个转化:\n\n```\ntestView.transform = CGAffineTransformMakeScale(2, 2);//代码8\n```\n视图如下:  \n图6  \n![Resize icon][6]   \n我们看到,`testView`以中心点位固定点,等比例扩大了一倍.`frame.origin`也移动了`(-20,-20)`. 跟我们的预期一样.  \n~~这里需要特别提醒各位的是:** 当对`testView`进行了`transform`之后,我们再去设置`frame`, `frame`已经完全不理咱们了. 也就是说`setFrame`函数完全不工作了.** 我们这个时候调用`frame`的`getter`函数, 得到的是transform后的大小.如上图所示,变成了`(85,85,80,80)`.~~\n如果, 我们把`scale`恢复为1, 再改变`anchorPoint`的位置为`(0,0)`, 然后再把`testView`放大一倍(`scale=2`). 看看会发现什么:  \n\n```\n//代码9\ntestView.transform = CGAffineTransformMakeScale(1, 1);\ntestView.layer.anchorPoint = CGPointMake(0,0)\ntestView.transform = CGAffineTransformMakeScale(2, 2);\n```\n下面三个图分别对应上面三行代码执行后的状态:  \n图7,图8,图9  \n![Resize icon][7] ![Resize icon][8]![Resize icon][9]\n\n对于上面的运行结果, 我有几点说明:   \n \n* 当我们改变`anchorPoint`的时候,`center`没有改变,那么根据*代码7*, `frame`也会随着发生改变. 您可以在图8中观察到这一变化.  \n* 观察图8和图9的变化,你可以发现,这次缩放的中心点在左上角. 因为我们设置了`anchorPoint = CGPointMake(0,0)`.  \n* 如果您是对图像做旋转, `anchorPoint`也是旋转的中心.\n\n\n到此为止, 文章开始提到的属性都基本讲完了. 只剩下了`layer.position`. 如果你细心, 你会发现上面所有的图片中, `layer.position === center`, 没错, 任何时候他们都是相等的.\n\n\n## 结尾\n这里有博客中Demo的代码下载, 本博客中的所有截图都来自于Demo的截屏.如果我在博客中没有说明白, 您可以下载Demo仔细把玩. 相信你可以在实际操作中有更深刻的理解  \nDemo底部的输入框支持的的语法有:\n\n```\nscale = number\ncenter = ( number, number )\nframe = (number, number, number, number )\nbounds = (number, number, number, number)\ncenter = (number, number)\nposition = (number, number) //layer.position\nanchorPoint = (number, number) //layer.anchorPoint\n```\n比如您输入`frame =(0,0,40,40)`,就相当于执行代码`testView.frame = CGRectMake(0,0,40,40)`. 输入`center = (50,50)`就相当于执行代码`testView.center = CGPointMake(50,50)`.\n\n[点此下载Demo][demo_download]\n\n\n[1]: frame_images/IMG_0012.PNG \"初始状态图(1)\"\n[2]: frame_images/IMG_0013.PNG \"第一次设置frame(2)\"\n[3]: frame_images/IMG_0014.PNG \"第一次设置center(3)\"\n[4]: frame_images/IMG_0015.PNG \"第一次设置bounds.origin(4)\"\n[5]: frame_images/IMG_0016.PNG \"第二次设置bounds.origin(5)\"\n[6]: frame_images/IMG_0020.PNG \"第一次设置scale=2(14)\"\n[7]: frame_images/IMG_0017.PNG \"恢复scale=1(9)\"\n[8]: frame_images/IMG_0019.PNG \"设置anchorPoint=(0,0)(10)\"\n[9]: frame_images/IMG_0022.PNG \"设置scale=2(18)\"\n\n[demo_download]: http://pan.baidu.com/s/1eiKZ0 \"downlaod demo code\"","slug":"技术/[iOS]UIView位置属性大揭秘","published":1,"updated":"2017-07-26T16:00:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqv004wq0d4lo7st0nn","content":"<p>摘要：如果你刚刚开始接触IOS编程, 刚刚接触UIKit, 肯定会被 <code>frame, bounds, center, layer.anchorPoint, layer.position</code> 这些乱七八糟得属性折腾得心烦意乱. 并且,聪明的你肯定早就发现,这些属性并不是独立的, 比如<code>frame</code>和<code>bounds</code>, 你改变一个必然会影响另一个, 这就更加大了理解难度. 我想通过这篇<strong>浅显的日志,和一个简单的Demo</strong>来表达出我对这些变量的理解. 难免有偏差之处, 欢迎拍砖. 但是我能保证的是这些理解方式是<strong>实用</strong>的. 我个人也是看过网上很多日志对其有些微理解, 然后又通过写一个Demo来证明自己的想法. </p>\n<hr>\n<p>其实, 受过10几年教育的你, 必然知道, 一个二维矩形, 只要有了<code>{x,y,width,height}</code>, 也就唯一确定了它的几何属性. 没错, 其实<code>UIView</code>里面也就这几个变量. 其他变量, 比如<code>frame,bounds</code>都是这些变量通过基本变量导出的.那么<code>UIView</code>拥有的真正意义上的属性有哪些呢?</p>\n<h2 id=\"UIView-真正意义上的属性\"><a href=\"#UIView-真正意义上的属性\" class=\"headerlink\" title=\"UIView 真正意义上的属性:\"></a>UIView 真正意义上的属性:</h2><ul>\n<li><strong>bounds</strong>:<br><code>bounds</code>是一个<code>CGRect</code>. 他的size部分决定了<code>UIView</code>的大小,也就是,<code>bounds.width</code>和<code>bounds.height</code>决定了<code>UIView</code>的大小.你也可以说<code>bounds.width</code>和<code>bounds.height</code>就是<code>UIView</code>的<code>width</code>和<code>height</code>. <code>bounds.x</code>和<code>bounds.y</code>决定了<code>UIView</code>的<code>subView</code>的原点坐标.如果你更改了<code>bounds.x</code>或者<code>bounds.y</code>,<code>UIView</code>的位置和大小完全不为所动, 但是<code>UIView</code>的所有<code>subView</code>都会平移一段距离<code>(-bounds.x,-bounds.y)</code>(这一点我们会在下文\b做详细陈述).</li>\n<li><strong>center</strong>:<br>望文生义(注意,这是个带贬义的词),他就是<code>UIView</code>的中心,也就是坐标点<code>(view.width/2,view.height/2)</code>.但是,可恶的但是, 上句话仅仅在在一个<code>UIView</code>刚被创建的时候成立. 也就是,在刚刚创建<code>UIView</code>的时候,他<strong>恰好</strong>成立. <strong>其实, <code>center</code>有它更重要的角色: 就是决定了<code>UIView</code>的位置.</strong> (但是,这个位置并不是我们常规意义上理解的<code>(x,y)</code>. 在这里你先知道它来决定我们UIView的位置就好了.)</li>\n</ul>\n<p>下面来看我们的第一个公式.</p>\n<h2 id=\"揭开frame的本质\"><a href=\"#揭开frame的本质\" class=\"headerlink\" title=\"揭开frame的本质\"></a>揭开frame的本质</h2><p>我想,对于程序员的你,没有比比代码更直接的方式了吧?<br>下面就是<code>UIView</code>的属性<code>frame</code>的实现:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码1</div><div class=\"line\">-(CGRect) frame  </div><div class=\"line\">&#123;  </div><div class=\"line\">     float x = center.x - 1/2 * bounds.width;   </div><div class=\"line\">     float y = center.y - 1/2 * bounds.height;  </div><div class=\"line\">     float width = bounds.width;</div><div class=\"line\">     float height = bounds.height;  </div><div class=\"line\">     return CGRectMake(x, y, width, height);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">-(void) setFrame:(CGRect) rect</div><div class=\"line\">&#123;</div><div class=\"line\">\tcenter.x = rect.x + 1/2 * rect.width;</div><div class=\"line\">\tcenter.y = rect.y + 1/2 * rect.height;</div><div class=\"line\">\tbounds.width = rect.width;</div><div class=\"line\">\tbounds.height = rect.height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>下面来到实战演习:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码2</div><div class=\"line\">- (void)viewDidLoad</div><div class=\"line\">&#123;</div><div class=\"line\">    [super viewDidLoad];</div><div class=\"line\">\ttestView = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 50, 50)];</div><div class=\"line\">\ttestView.backgroundColor = [UIColor blueColor];</div><div class=\"line\">\t[self.view insertSubview:testView atIndex:0];</div><div class=\"line\">\t</div><div class=\"line\">\tUIView* innerView = [[UIView alloc] initWithFrame:CGRectMake(23,23, 4, 4)];</div><div class=\"line\">\tinnerView.backgroundColor = [UIColor redColor];</div><div class=\"line\">\t[testView addSubview:innerView];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>初始状态,我们新建一个<code>UIView</code>,设置<code>frame</code>为<code>(100,100,50,50)</code>:<br>图1<br><img src=\"frame_images/IMG_0012.PNG\" alt=\"Resize icon\" title=\"初始状态图(1)\">  </p>\n<p>然后,我们改变<code>frame</code>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.frame = CGRectMake(0,0,40,40); //代码3</div></pre></td></tr></table></figure>\n<p>我们再看看各个属性的变化:<br>图2<br><img src=\"frame_images/IMG_0013.PNG\" alt=\"Resize icon\" title=\"第一次设置frame(2)\">  </p>\n<p>没错,你看到了我们刚刚提到的<code>center</code>属性. 我们刚刚说过, 这个属性主要决定了<code>UIView</code>的位置. 所以当我们在<code>setFrame:</code>的时候会改变<code>UIView</code>的位置.<br>好吧, 既然我们见过<code>center</code>先生, 那就给您介绍一下吧, 也要给点面子是不?</p>\n<h2 id=\"center如何搞定了位置\"><a href=\"#center如何搞定了位置\" class=\"headerlink\" title=\"center如何搞定了位置?\"></a>center如何搞定了位置?</h2><p><code>center</code>是<code>UIView</code>的相关属性中主要决定<code>UIView</code>位置(跟大小相对), 我们在图2的基础上, 改变center:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.center = CGPointMake(125,125);//代码4</div></pre></td></tr></table></figure>\n<p>我们来看一下效果:<br>图3<br><img src=\"frame_images/IMG_0014.PNG\" alt=\"Resize icon\" title=\"第一次设置center(3)\"><br>看到了吧? <code>testView</code>的位置向左下移动了<code>(125-20, 125-20)</code>距离.<br>根据<em>代码1</em>, 我们可以看到, <code>center</code>和<code>bounds</code>属性是相互独立的. 也就是他们中间某一个发生了变化, 不会影响另一个. 这说明了什么? 说明我们改变<code>center</code>的时候, 仅仅会改变<code>testView</code>的位置, 而它的大小不会有任何改变.</p>\n<p>好了, 到这里, <code>testView</code>的<strong>位置</strong>和<strong>大小</strong>问题,我们已经彻底解决了.<br>但是对于<code>bounds</code>小伙儿, 我们只关注了它的<code>size</code>部分, 忽略了他的<code>origin</code>部分. 不好意思, <code>bounds</code>小伙, 现在才想起你.</p>\n<h2 id=\"bounds的另一半\"><a href=\"#bounds的另一半\" class=\"headerlink\" title=\"bounds的另一半\"></a>bounds的另一半</h2><p>没图没真相, 我们首先来点料吧:<br>图4,图5<br><img src=\"frame_images/IMG_0015.PNG\" alt=\"Resize icon\" title=\"第一次设置bounds.origin(4)\"> <img src=\"frame_images/IMG_0016.PNG\" alt=\"Resize icon\" title=\"第二次设置bounds.origin(5)\"></p>\n<p><code>bounds.origin</code>初始情况下为<code>(0,0)</code>. 我们设置  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.bounds = CGRectMak(25,25,40,40); //代码5</div></pre></td></tr></table></figure>\n<p>得到左图.<br>我们没有改变<code>bounds.size</code>(仍然是40,40), 只是修改了<code>bounds.origin</code>: 从<code>(0,0)</code>改变成<code>(25,25)</code>.我们发现<code>testView</code>内部的小红点移动了<code>(0-25,0-25)</code>距离.(至于为设么这里是-25而不是25, 我也还没理解, 望高人指点.) 反正, 知道当你改变<code>bounds.origin</code>的时候, <code>testView</code>内部所有的<code>subView</code>都要想做相反方向的位移就对了. </p>\n<p>在左图的基础上,再设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.bounds = CGRectMak(-5,-5,40,40); //代码6</div></pre></td></tr></table></figure>\n<p>我们得到右图.</p>\n<p>需要注意的是, 这里所有<code>subView</code>的<code>frame</code>是不会跟着改的, 还是原来的值. 我们可以这么理解: 设置<code>testView.origin</code>, 会改变所有孩子节点位置的基准点. 就比如, 我们把一辆车平移了, 我们站在路边发现车里的方向盘和发动机等子组件的位置都改变了, 而方向盘发动机等”子组件”相对于<strong>汽车的坐标</strong>没有改变.  </p>\n<p>关于<code>bounds</code>, 还有一点要说: <strong>当你的<code>subView</code>的某些部分落在了<code>bounds</code>定义的矩形之外, 那么这些落在矩形之外的部分, 便不能接受任何点击,踩踏,横扫等事件了….</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ifdefine 欺骗 明明知道某个事实,却故意隐瞒或窜改并加以传播  </div><div class=\"line\">写到这里, 我其实要跟大家道一个歉, 因为我在上面对frame的定义欺骗了大家.   </div><div class=\"line\"># endif</div></pre></td></tr></table></figure>\n<p><code>frame</code>的定义并没有这么简单, 因为还搀插着第三者的关系: <code>testView.layer.anchorPoint</code>.<br>有请 anchorPoint 出场!  </p>\n<h2 id=\"在墙上钉个钉子-就是anchorPoint\"><a href=\"#在墙上钉个钉子-就是anchorPoint\" class=\"headerlink\" title=\"在墙上钉个钉子,就是anchorPoint\"></a>在墙上钉个钉子,就是anchorPoint</h2><p>好了,我们重新定义<code>frame</code>的<code>getter/setter</code>函数(其实就是把代码1的定义中所有的<code>1/2</code>改为<code>view.layer.anchorPoint</code>):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码7</div><div class=\"line\">-(CGRect) frame  </div><div class=\"line\">&#123;  </div><div class=\"line\">     float x = center.x - layer.anchorPoint.x * bounds.width;   </div><div class=\"line\">     float y = center.y - layer.anchorPoint.y * bounds.height;  </div><div class=\"line\">     float width = bounds.width;</div><div class=\"line\">     float height = bounds.height;  </div><div class=\"line\">     return CGRectMake(x, y, width, height);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">-(void) setFrame:(CGRect) rect</div><div class=\"line\">&#123;</div><div class=\"line\">\tcenter.x = rect.x + layer.anchorPoint.x * rect.width;</div><div class=\"line\">\tcenter.y = rect.y + layer.anchorPoint.y * rect.height;</div><div class=\"line\">\tbounds.width = rect.width;</div><div class=\"line\">\tbounds.height = rect.height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>因为<code>anchorPoint</code>的默认值是<code>(0.5,0.5)</code>,所以如果你不改变<code>anchorPoint</code>,那么<em>代码1</em>就是正确的. 之所以在<em>代码1</em>里撒了一个谎, 是因为不想那么早把<code>anchorPoint</code>引出来.<br>现在,你既然知道了<code>anchorPoint</code>跟<code>frame</code>之间的关系, 必然想知道它到底有什么用:  </p>\n<p>先给你一个直观印象: <code>anchorPoint</code>就是一个钉子,把一幅画钉在墙上. 以后你想做什么转动也好, 把相框拉伸也好, 这个点是绝对不会动的.<br><code>anchorPoint</code>的默认值是<code>(0.5,0.5)</code>. 也就是说默认情况下,你对<code>testView</code>作旋转和缩放, 都会以<code>(bounds.size.width/2,bounds.size.height/2)</code>为基准点.下面我们接着图5来看一个转化:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.transform = CGAffineTransformMakeScale(2, 2);//代码8</div></pre></td></tr></table></figure>\n<p>视图如下:<br>图6<br><img src=\"frame_images/IMG_0020.PNG\" alt=\"Resize icon\" title=\"第一次设置scale=2(14)\"><br>我们看到,<code>testView</code>以中心点位固定点,等比例扩大了一倍.<code>frame.origin</code>也移动了<code>(-20,-20)</code>. 跟我们的预期一样.<br><del>这里需要特别提醒各位的是:<strong> 当对<code>testView</code>进行了<code>transform</code>之后,我们再去设置<code>frame</code>, <code>frame</code>已经完全不理咱们了. 也就是说<code>setFrame</code>函数完全不工作了.</strong> 我们这个时候调用<code>frame</code>的<code>getter</code>函数, 得到的是transform后的大小.如上图所示,变成了<code>(85,85,80,80)</code>.</del><br>如果, 我们把<code>scale</code>恢复为1, 再改变<code>anchorPoint</code>的位置为<code>(0,0)</code>, 然后再把<code>testView</code>放大一倍(<code>scale=2</code>). 看看会发现什么:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码9</div><div class=\"line\">testView.transform = CGAffineTransformMakeScale(1, 1);</div><div class=\"line\">testView.layer.anchorPoint = CGPointMake(0,0)</div><div class=\"line\">testView.transform = CGAffineTransformMakeScale(2, 2);</div></pre></td></tr></table></figure>\n<p>下面三个图分别对应上面三行代码执行后的状态:<br>图7,图8,图9<br><img src=\"frame_images/IMG_0017.PNG\" alt=\"Resize icon\" title=\"恢复scale=1(9)\"> <img src=\"frame_images/IMG_0019.PNG\" alt=\"Resize icon\" title=\"设置anchorPoint=(0,0)(10)\"><img src=\"frame_images/IMG_0022.PNG\" alt=\"Resize icon\" title=\"设置scale=2(18)\"></p>\n<p>对于上面的运行结果, 我有几点说明:   </p>\n<ul>\n<li>当我们改变<code>anchorPoint</code>的时候,<code>center</code>没有改变,那么根据<em>代码7</em>, <code>frame</code>也会随着发生改变. 您可以在图8中观察到这一变化.  </li>\n<li>观察图8和图9的变化,你可以发现,这次缩放的中心点在左上角. 因为我们设置了<code>anchorPoint = CGPointMake(0,0)</code>.  </li>\n<li>如果您是对图像做旋转, <code>anchorPoint</code>也是旋转的中心.</li>\n</ul>\n<p>到此为止, 文章开始提到的属性都基本讲完了. 只剩下了<code>layer.position</code>. 如果你细心, 你会发现上面所有的图片中, <code>layer.position === center</code>, 没错, 任何时候他们都是相等的.</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>这里有博客中Demo的代码下载, 本博客中的所有截图都来自于Demo的截屏.如果我在博客中没有说明白, 您可以下载Demo仔细把玩. 相信你可以在实际操作中有更深刻的理解<br>Demo底部的输入框支持的的语法有:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">scale = number</div><div class=\"line\">center = ( number, number )</div><div class=\"line\">frame = (number, number, number, number )</div><div class=\"line\">bounds = (number, number, number, number)</div><div class=\"line\">center = (number, number)</div><div class=\"line\">position = (number, number) //layer.position</div><div class=\"line\">anchorPoint = (number, number) //layer.anchorPoint</div></pre></td></tr></table></figure>\n<p>比如您输入<code>frame =(0,0,40,40)</code>,就相当于执行代码<code>testView.frame = CGRectMake(0,0,40,40)</code>. 输入<code>center = (50,50)</code>就相当于执行代码<code>testView.center = CGPointMake(50,50)</code>.</p>\n<p><a href=\"http://pan.baidu.com/s/1eiKZ0\" title=\"downlaod demo code\" target=\"_blank\" rel=\"external\">点此下载Demo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：如果你刚刚开始接触IOS编程, 刚刚接触UIKit, 肯定会被 <code>frame, bounds, center, layer.anchorPoint, layer.position</code> 这些乱七八糟得属性折腾得心烦意乱. 并且,聪明的你肯定早就发现,这些属性并不是独立的, 比如<code>frame</code>和<code>bounds</code>, 你改变一个必然会影响另一个, 这就更加大了理解难度. 我想通过这篇<strong>浅显的日志,和一个简单的Demo</strong>来表达出我对这些变量的理解. 难免有偏差之处, 欢迎拍砖. 但是我能保证的是这些理解方式是<strong>实用</strong>的. 我个人也是看过网上很多日志对其有些微理解, 然后又通过写一个Demo来证明自己的想法. </p>\n<hr>\n<p>其实, 受过10几年教育的你, 必然知道, 一个二维矩形, 只要有了<code>{x,y,width,height}</code>, 也就唯一确定了它的几何属性. 没错, 其实<code>UIView</code>里面也就这几个变量. 其他变量, 比如<code>frame,bounds</code>都是这些变量通过基本变量导出的.那么<code>UIView</code>拥有的真正意义上的属性有哪些呢?</p>\n<h2 id=\"UIView-真正意义上的属性\"><a href=\"#UIView-真正意义上的属性\" class=\"headerlink\" title=\"UIView 真正意义上的属性:\"></a>UIView 真正意义上的属性:</h2><ul>\n<li><strong>bounds</strong>:<br><code>bounds</code>是一个<code>CGRect</code>. 他的size部分决定了<code>UIView</code>的大小,也就是,<code>bounds.width</code>和<code>bounds.height</code>决定了<code>UIView</code>的大小.你也可以说<code>bounds.width</code>和<code>bounds.height</code>就是<code>UIView</code>的<code>width</code>和<code>height</code>. <code>bounds.x</code>和<code>bounds.y</code>决定了<code>UIView</code>的<code>subView</code>的原点坐标.如果你更改了<code>bounds.x</code>或者<code>bounds.y</code>,<code>UIView</code>的位置和大小完全不为所动, 但是<code>UIView</code>的所有<code>subView</code>都会平移一段距离<code>(-bounds.x,-bounds.y)</code>(这一点我们会在下文\b做详细陈述).</li>\n<li><strong>center</strong>:<br>望文生义(注意,这是个带贬义的词),他就是<code>UIView</code>的中心,也就是坐标点<code>(view.width/2,view.height/2)</code>.但是,可恶的但是, 上句话仅仅在在一个<code>UIView</code>刚被创建的时候成立. 也就是,在刚刚创建<code>UIView</code>的时候,他<strong>恰好</strong>成立. <strong>其实, <code>center</code>有它更重要的角色: 就是决定了<code>UIView</code>的位置.</strong> (但是,这个位置并不是我们常规意义上理解的<code>(x,y)</code>. 在这里你先知道它来决定我们UIView的位置就好了.)</li>\n</ul>\n<p>下面来看我们的第一个公式.</p>\n<h2 id=\"揭开frame的本质\"><a href=\"#揭开frame的本质\" class=\"headerlink\" title=\"揭开frame的本质\"></a>揭开frame的本质</h2><p>我想,对于程序员的你,没有比比代码更直接的方式了吧?<br>下面就是<code>UIView</code>的属性<code>frame</code>的实现:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码1</div><div class=\"line\">-(CGRect) frame  </div><div class=\"line\">&#123;  </div><div class=\"line\">     float x = center.x - 1/2 * bounds.width;   </div><div class=\"line\">     float y = center.y - 1/2 * bounds.height;  </div><div class=\"line\">     float width = bounds.width;</div><div class=\"line\">     float height = bounds.height;  </div><div class=\"line\">     return CGRectMake(x, y, width, height);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">-(void) setFrame:(CGRect) rect</div><div class=\"line\">&#123;</div><div class=\"line\">\tcenter.x = rect.x + 1/2 * rect.width;</div><div class=\"line\">\tcenter.y = rect.y + 1/2 * rect.height;</div><div class=\"line\">\tbounds.width = rect.width;</div><div class=\"line\">\tbounds.height = rect.height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>下面来到实战演习:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码2</div><div class=\"line\">- (void)viewDidLoad</div><div class=\"line\">&#123;</div><div class=\"line\">    [super viewDidLoad];</div><div class=\"line\">\ttestView = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 50, 50)];</div><div class=\"line\">\ttestView.backgroundColor = [UIColor blueColor];</div><div class=\"line\">\t[self.view insertSubview:testView atIndex:0];</div><div class=\"line\">\t</div><div class=\"line\">\tUIView* innerView = [[UIView alloc] initWithFrame:CGRectMake(23,23, 4, 4)];</div><div class=\"line\">\tinnerView.backgroundColor = [UIColor redColor];</div><div class=\"line\">\t[testView addSubview:innerView];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>初始状态,我们新建一个<code>UIView</code>,设置<code>frame</code>为<code>(100,100,50,50)</code>:<br>图1<br><img src=\"frame_images/IMG_0012.PNG\" alt=\"Resize icon\" title=\"初始状态图(1)\">  </p>\n<p>然后,我们改变<code>frame</code>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.frame = CGRectMake(0,0,40,40); //代码3</div></pre></td></tr></table></figure>\n<p>我们再看看各个属性的变化:<br>图2<br><img src=\"frame_images/IMG_0013.PNG\" alt=\"Resize icon\" title=\"第一次设置frame(2)\">  </p>\n<p>没错,你看到了我们刚刚提到的<code>center</code>属性. 我们刚刚说过, 这个属性主要决定了<code>UIView</code>的位置. 所以当我们在<code>setFrame:</code>的时候会改变<code>UIView</code>的位置.<br>好吧, 既然我们见过<code>center</code>先生, 那就给您介绍一下吧, 也要给点面子是不?</p>\n<h2 id=\"center如何搞定了位置\"><a href=\"#center如何搞定了位置\" class=\"headerlink\" title=\"center如何搞定了位置?\"></a>center如何搞定了位置?</h2><p><code>center</code>是<code>UIView</code>的相关属性中主要决定<code>UIView</code>位置(跟大小相对), 我们在图2的基础上, 改变center:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.center = CGPointMake(125,125);//代码4</div></pre></td></tr></table></figure>\n<p>我们来看一下效果:<br>图3<br><img src=\"frame_images/IMG_0014.PNG\" alt=\"Resize icon\" title=\"第一次设置center(3)\"><br>看到了吧? <code>testView</code>的位置向左下移动了<code>(125-20, 125-20)</code>距离.<br>根据<em>代码1</em>, 我们可以看到, <code>center</code>和<code>bounds</code>属性是相互独立的. 也就是他们中间某一个发生了变化, 不会影响另一个. 这说明了什么? 说明我们改变<code>center</code>的时候, 仅仅会改变<code>testView</code>的位置, 而它的大小不会有任何改变.</p>\n<p>好了, 到这里, <code>testView</code>的<strong>位置</strong>和<strong>大小</strong>问题,我们已经彻底解决了.<br>但是对于<code>bounds</code>小伙儿, 我们只关注了它的<code>size</code>部分, 忽略了他的<code>origin</code>部分. 不好意思, <code>bounds</code>小伙, 现在才想起你.</p>\n<h2 id=\"bounds的另一半\"><a href=\"#bounds的另一半\" class=\"headerlink\" title=\"bounds的另一半\"></a>bounds的另一半</h2><p>没图没真相, 我们首先来点料吧:<br>图4,图5<br><img src=\"frame_images/IMG_0015.PNG\" alt=\"Resize icon\" title=\"第一次设置bounds.origin(4)\"> <img src=\"frame_images/IMG_0016.PNG\" alt=\"Resize icon\" title=\"第二次设置bounds.origin(5)\"></p>\n<p><code>bounds.origin</code>初始情况下为<code>(0,0)</code>. 我们设置  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.bounds = CGRectMak(25,25,40,40); //代码5</div></pre></td></tr></table></figure>\n<p>得到左图.<br>我们没有改变<code>bounds.size</code>(仍然是40,40), 只是修改了<code>bounds.origin</code>: 从<code>(0,0)</code>改变成<code>(25,25)</code>.我们发现<code>testView</code>内部的小红点移动了<code>(0-25,0-25)</code>距离.(至于为设么这里是-25而不是25, 我也还没理解, 望高人指点.) 反正, 知道当你改变<code>bounds.origin</code>的时候, <code>testView</code>内部所有的<code>subView</code>都要想做相反方向的位移就对了. </p>\n<p>在左图的基础上,再设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.bounds = CGRectMak(-5,-5,40,40); //代码6</div></pre></td></tr></table></figure>\n<p>我们得到右图.</p>\n<p>需要注意的是, 这里所有<code>subView</code>的<code>frame</code>是不会跟着改的, 还是原来的值. 我们可以这么理解: 设置<code>testView.origin</code>, 会改变所有孩子节点位置的基准点. 就比如, 我们把一辆车平移了, 我们站在路边发现车里的方向盘和发动机等子组件的位置都改变了, 而方向盘发动机等”子组件”相对于<strong>汽车的坐标</strong>没有改变.  </p>\n<p>关于<code>bounds</code>, 还有一点要说: <strong>当你的<code>subView</code>的某些部分落在了<code>bounds</code>定义的矩形之外, 那么这些落在矩形之外的部分, 便不能接受任何点击,踩踏,横扫等事件了….</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ifdefine 欺骗 明明知道某个事实,却故意隐瞒或窜改并加以传播  </div><div class=\"line\">写到这里, 我其实要跟大家道一个歉, 因为我在上面对frame的定义欺骗了大家.   </div><div class=\"line\"># endif</div></pre></td></tr></table></figure>\n<p><code>frame</code>的定义并没有这么简单, 因为还搀插着第三者的关系: <code>testView.layer.anchorPoint</code>.<br>有请 anchorPoint 出场!  </p>\n<h2 id=\"在墙上钉个钉子-就是anchorPoint\"><a href=\"#在墙上钉个钉子-就是anchorPoint\" class=\"headerlink\" title=\"在墙上钉个钉子,就是anchorPoint\"></a>在墙上钉个钉子,就是anchorPoint</h2><p>好了,我们重新定义<code>frame</code>的<code>getter/setter</code>函数(其实就是把代码1的定义中所有的<code>1/2</code>改为<code>view.layer.anchorPoint</code>):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码7</div><div class=\"line\">-(CGRect) frame  </div><div class=\"line\">&#123;  </div><div class=\"line\">     float x = center.x - layer.anchorPoint.x * bounds.width;   </div><div class=\"line\">     float y = center.y - layer.anchorPoint.y * bounds.height;  </div><div class=\"line\">     float width = bounds.width;</div><div class=\"line\">     float height = bounds.height;  </div><div class=\"line\">     return CGRectMake(x, y, width, height);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">-(void) setFrame:(CGRect) rect</div><div class=\"line\">&#123;</div><div class=\"line\">\tcenter.x = rect.x + layer.anchorPoint.x * rect.width;</div><div class=\"line\">\tcenter.y = rect.y + layer.anchorPoint.y * rect.height;</div><div class=\"line\">\tbounds.width = rect.width;</div><div class=\"line\">\tbounds.height = rect.height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>因为<code>anchorPoint</code>的默认值是<code>(0.5,0.5)</code>,所以如果你不改变<code>anchorPoint</code>,那么<em>代码1</em>就是正确的. 之所以在<em>代码1</em>里撒了一个谎, 是因为不想那么早把<code>anchorPoint</code>引出来.<br>现在,你既然知道了<code>anchorPoint</code>跟<code>frame</code>之间的关系, 必然想知道它到底有什么用:  </p>\n<p>先给你一个直观印象: <code>anchorPoint</code>就是一个钉子,把一幅画钉在墙上. 以后你想做什么转动也好, 把相框拉伸也好, 这个点是绝对不会动的.<br><code>anchorPoint</code>的默认值是<code>(0.5,0.5)</code>. 也就是说默认情况下,你对<code>testView</code>作旋转和缩放, 都会以<code>(bounds.size.width/2,bounds.size.height/2)</code>为基准点.下面我们接着图5来看一个转化:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">testView.transform = CGAffineTransformMakeScale(2, 2);//代码8</div></pre></td></tr></table></figure>\n<p>视图如下:<br>图6<br><img src=\"frame_images/IMG_0020.PNG\" alt=\"Resize icon\" title=\"第一次设置scale=2(14)\"><br>我们看到,<code>testView</code>以中心点位固定点,等比例扩大了一倍.<code>frame.origin</code>也移动了<code>(-20,-20)</code>. 跟我们的预期一样.<br><del>这里需要特别提醒各位的是:<strong> 当对<code>testView</code>进行了<code>transform</code>之后,我们再去设置<code>frame</code>, <code>frame</code>已经完全不理咱们了. 也就是说<code>setFrame</code>函数完全不工作了.</strong> 我们这个时候调用<code>frame</code>的<code>getter</code>函数, 得到的是transform后的大小.如上图所示,变成了<code>(85,85,80,80)</code>.</del><br>如果, 我们把<code>scale</code>恢复为1, 再改变<code>anchorPoint</code>的位置为<code>(0,0)</code>, 然后再把<code>testView</code>放大一倍(<code>scale=2</code>). 看看会发现什么:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//代码9</div><div class=\"line\">testView.transform = CGAffineTransformMakeScale(1, 1);</div><div class=\"line\">testView.layer.anchorPoint = CGPointMake(0,0)</div><div class=\"line\">testView.transform = CGAffineTransformMakeScale(2, 2);</div></pre></td></tr></table></figure>\n<p>下面三个图分别对应上面三行代码执行后的状态:<br>图7,图8,图9<br><img src=\"frame_images/IMG_0017.PNG\" alt=\"Resize icon\" title=\"恢复scale=1(9)\"> <img src=\"frame_images/IMG_0019.PNG\" alt=\"Resize icon\" title=\"设置anchorPoint=(0,0)(10)\"><img src=\"frame_images/IMG_0022.PNG\" alt=\"Resize icon\" title=\"设置scale=2(18)\"></p>\n<p>对于上面的运行结果, 我有几点说明:   </p>\n<ul>\n<li>当我们改变<code>anchorPoint</code>的时候,<code>center</code>没有改变,那么根据<em>代码7</em>, <code>frame</code>也会随着发生改变. 您可以在图8中观察到这一变化.  </li>\n<li>观察图8和图9的变化,你可以发现,这次缩放的中心点在左上角. 因为我们设置了<code>anchorPoint = CGPointMake(0,0)</code>.  </li>\n<li>如果您是对图像做旋转, <code>anchorPoint</code>也是旋转的中心.</li>\n</ul>\n<p>到此为止, 文章开始提到的属性都基本讲完了. 只剩下了<code>layer.position</code>. 如果你细心, 你会发现上面所有的图片中, <code>layer.position === center</code>, 没错, 任何时候他们都是相等的.</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>这里有博客中Demo的代码下载, 本博客中的所有截图都来自于Demo的截屏.如果我在博客中没有说明白, 您可以下载Demo仔细把玩. 相信你可以在实际操作中有更深刻的理解<br>Demo底部的输入框支持的的语法有:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">scale = number</div><div class=\"line\">center = ( number, number )</div><div class=\"line\">frame = (number, number, number, number )</div><div class=\"line\">bounds = (number, number, number, number)</div><div class=\"line\">center = (number, number)</div><div class=\"line\">position = (number, number) //layer.position</div><div class=\"line\">anchorPoint = (number, number) //layer.anchorPoint</div></pre></td></tr></table></figure>\n<p>比如您输入<code>frame =(0,0,40,40)</code>,就相当于执行代码<code>testView.frame = CGRectMake(0,0,40,40)</code>. 输入<code>center = (50,50)</code>就相当于执行代码<code>testView.center = CGPointMake(50,50)</code>.</p>\n<p><a href=\"http://pan.baidu.com/s/1eiKZ0\" title=\"downlaod demo code\" target=\"_blank\" rel=\"external\">点此下载Demo</a></p>\n"},{"date":"2014-03-23T14:16:00.000Z","title":"[cocos2dx]让UIButton支持disable状态","description":"在cocostudio中添加一个UIButton组件, 我们可以看到通常以一下按钮的三态:normal,pressed,disable. 但是,当我们设置了disable状态之后, 在我们的游戏项目中, 对某个按钮执行button->setEnable(false)后, 按钮居然完全不见了?!","_content":"\n\n摘要: 主要解决cocos2dx-2.2.2版本中, UIButton显示不了disable状态图的问题. 顺便, 理解了一下cocos2dx中UIWidget的渲染原理.\n\n### 发现问题\n\n![enter image description here][1]\n\n在cocostudio中添加一个UIButton组件, 我们可以看到通常以一下按钮的三态:`normal`,`pressed`,`disable`. 但是,当我们设置了`disable`状态之后, 在我们的游戏项目中, 对某个按钮执行`button->setEnable(false)`后, 按钮居然完全不见了?!  \n\n### 解决方法\n1. 修改`Widget::visit()`方法, 改为:   \n    \n    ~~~cpp\n    void Widget::visit()\n    {\n        CCNodeRGBA::visit();\n    } \n    ~~~\n\n    即, 删除`if`判断.\n2. 修改`Widget::setEnable()`方法, 改为:   \n\n    ~~~cpp \n    void Widget::setEnabled(bool enabled)\n    {\n        _enabled = enabled;\n        if(_widgetChildren && _widgetChildren->count() > 0)\n        {\n            CCObject* child;\n            CCARRAY_FOREACH(_widgetChildren, child)\n            {\n                ((Widget*)child)->setEnabled(enabled);\n            }\n        }\n    \tsetBright( enabled );//增加此行\n    }\n    ~~~ \n\n    即, 增加`setBright( enabled );`行.\n\n\n如果想知其所以然的, 下面是解释.\n### 解释\n\n#### Widget的诡异渲染\n`Widget::visit()`的实现如下:  \n\n```cpp\nvoid Widget::visit()\n{\n    if (_enabled)\n    {\n        CCNodeRGBA::visit();\n    }    \n}\n```\n\n如果您没时间仔细看过cocos2dx的源码, 这里可以有一个简单的解释:  \n\n1. `visit()`方法最初是从`CCNode`继承过来的. 也就是说***任何显示对象***都有这个方法. \n2. `CCNode::visit()`就是CCNode的渲染函数, 是视图渲染中最重要的一个函数, 跟IOS开发中的`UIView::draw()`功能类似. 框架在每一帧都会调用这个方法, 而这个方法负责当前组件的`openGL`绘制. 我们可以看下`CCNode::visit()`的实现来作为验证:\n\n    ```cpp\n    void CCNode::visit()\n    {\n        ...\n        this->draw();\n        ...\n    }\n    //算了, 这段代码有点长, 有些人时间比较宝贵可能没兴趣看. 我就放在***附录***了.(*^__^*)\n    ```\n\n看到这里, 你肯定一经发现问题了: 为什么只有在`_enabled`为`true`的时候才渲染?难道不是坑爹么?`disable`状态就不理了么?  \n可能cocos2dx另有打算, 我没理解清楚. 不过这个功能既然不符合我的要求, 我就果断的把那个`if`去掉了. (谁让咱们是程序员呢?).  \n  \n但是, 问题并没有完全结束. 还是没有显示`disable`状态.  \n\n#### Widget的enable?\n`UIButton::setEnable()`方法比较短, 贴出来看看. \n\n```cpp\nvoid Widget::setEnabled(bool enabled)\n{\n    _enabled = enabled;\n    if(_widgetChildren && _widgetChildren->count() > 0)\n    {\n        CCObject* child;\n        CCARRAY_FOREACH(_widgetChildren, child)\n        {\n            ((Widget*)child)->setEnabled(enabled);\n        }\n    }\n}\n```\n发现这段代码除了把`_enable`和所有孩子的`_enable`状态设为`false`, 没做任何事情. 通过查看`widget`的代码, 很容易看到, `widget`的三态是通过下面的是三个函数实现的:\n\n```cpp\nvoid Widget::onPressStateChangedToNormal(){}\nvoid Widget::onPressStateChangedToPressed(){}\nvoid Widget::onPressStateChangedToDisabled(){}\n```\n不错,他们都是空函数.子类根据需要来实现这三个函数.   \n下面是`setBright`的实现:\n\n```cpp\nvoid Widget::setBright(bool bright)\n{\n    _bright = bright;\n    if (_bright)\n    {\n        _brightStyle = BRIGHT_NONE;\n        setBrightStyle(BRIGHT_NORMAL);\n    }\n    else\n    {\n        onPressStateChangedToDisabled();\n    }\n}\n```\n\n由上代码可以看出. 而我们调用`setBright(false)`, 即可根据`widget`当前的状态, 渲染不同的图像.\n\n\n### 附录\n#### 代码片段一`CCNode::visit()`\n\n```cpp\nvoid CCNode::visit()\n{\n    // quick return if not visible. children won't be drawn.\n    if (!m_bVisible)\n    {\n        return;\n    }\n    kmGLPushMatrix();\n\n     if (m_pGrid && m_pGrid->isActive())\n     {\n         m_pGrid->beforeDraw();\n     }\n\n    this->transform();\n\n    CCNode* pNode = NULL;\n    unsigned int i = 0;\n\n    if(m_pChildren && m_pChildren->count() > 0)\n    {\n        sortAllChildren();\n        // draw children zOrder < 0\n        ccArray *arrayData = m_pChildren->data;\n        for( ; i < arrayData->num; i++ )\n        {\n            pNode = (CCNode*) arrayData->arr[i];\n\n            if ( pNode && pNode->m_nZOrder < 0 ) \n            {\n                pNode->visit();\n            }\n            else\n            {\n                break;\n            }\n        }\n        // self draw\n        this->draw();\n\n        for( ; i < arrayData->num; i++ )\n        {\n            pNode = (CCNode*) arrayData->arr[i];\n            if (pNode)\n            {\n                pNode->visit();\n            }\n        }        \n    }\n    else\n    {\n        this->draw();\n    }\n\n    // reset for next frame\n    m_uOrderOfArrival = 0;\n\n     if (m_pGrid && m_pGrid->isActive())\n     {\n         m_pGrid->afterDraw(this);\n    }\n \n    kmGLPopMatrix();\n}\n```\n\n\n  [1]: https://lh6.googleusercontent.com/-bwcB18CZFyo/Uy7Ywf_ew9I/AAAAAAAACSo/G1QRO-a4z9Y/s0/QQ%E6%88%AA%E5%9B%BE20140323205043.png \"cocostudio-capture-button-disable.png\"","source":"_posts/技术/[cocos2dx]让UIButton支持disable状态.md","raw":"---\ndate:  2014-03-23 22:16\ntitle: \"[cocos2dx]让UIButton支持disable状态\"\ntags: \n- cocos2dx\n- uibutton\n- button\n- disable\n- uiwidget\ncategories: \n- 技术\ndescription: 在cocostudio中添加一个UIButton组件, 我们可以看到通常以一下按钮的三态:normal,pressed,disable. 但是,当我们设置了disable状态之后, 在我们的游戏项目中, 对某个按钮执行button->setEnable(false)后, 按钮居然完全不见了?!\n---\n\n\n摘要: 主要解决cocos2dx-2.2.2版本中, UIButton显示不了disable状态图的问题. 顺便, 理解了一下cocos2dx中UIWidget的渲染原理.\n\n### 发现问题\n\n![enter image description here][1]\n\n在cocostudio中添加一个UIButton组件, 我们可以看到通常以一下按钮的三态:`normal`,`pressed`,`disable`. 但是,当我们设置了`disable`状态之后, 在我们的游戏项目中, 对某个按钮执行`button->setEnable(false)`后, 按钮居然完全不见了?!  \n\n### 解决方法\n1. 修改`Widget::visit()`方法, 改为:   \n    \n    ~~~cpp\n    void Widget::visit()\n    {\n        CCNodeRGBA::visit();\n    } \n    ~~~\n\n    即, 删除`if`判断.\n2. 修改`Widget::setEnable()`方法, 改为:   \n\n    ~~~cpp \n    void Widget::setEnabled(bool enabled)\n    {\n        _enabled = enabled;\n        if(_widgetChildren && _widgetChildren->count() > 0)\n        {\n            CCObject* child;\n            CCARRAY_FOREACH(_widgetChildren, child)\n            {\n                ((Widget*)child)->setEnabled(enabled);\n            }\n        }\n    \tsetBright( enabled );//增加此行\n    }\n    ~~~ \n\n    即, 增加`setBright( enabled );`行.\n\n\n如果想知其所以然的, 下面是解释.\n### 解释\n\n#### Widget的诡异渲染\n`Widget::visit()`的实现如下:  \n\n```cpp\nvoid Widget::visit()\n{\n    if (_enabled)\n    {\n        CCNodeRGBA::visit();\n    }    \n}\n```\n\n如果您没时间仔细看过cocos2dx的源码, 这里可以有一个简单的解释:  \n\n1. `visit()`方法最初是从`CCNode`继承过来的. 也就是说***任何显示对象***都有这个方法. \n2. `CCNode::visit()`就是CCNode的渲染函数, 是视图渲染中最重要的一个函数, 跟IOS开发中的`UIView::draw()`功能类似. 框架在每一帧都会调用这个方法, 而这个方法负责当前组件的`openGL`绘制. 我们可以看下`CCNode::visit()`的实现来作为验证:\n\n    ```cpp\n    void CCNode::visit()\n    {\n        ...\n        this->draw();\n        ...\n    }\n    //算了, 这段代码有点长, 有些人时间比较宝贵可能没兴趣看. 我就放在***附录***了.(*^__^*)\n    ```\n\n看到这里, 你肯定一经发现问题了: 为什么只有在`_enabled`为`true`的时候才渲染?难道不是坑爹么?`disable`状态就不理了么?  \n可能cocos2dx另有打算, 我没理解清楚. 不过这个功能既然不符合我的要求, 我就果断的把那个`if`去掉了. (谁让咱们是程序员呢?).  \n  \n但是, 问题并没有完全结束. 还是没有显示`disable`状态.  \n\n#### Widget的enable?\n`UIButton::setEnable()`方法比较短, 贴出来看看. \n\n```cpp\nvoid Widget::setEnabled(bool enabled)\n{\n    _enabled = enabled;\n    if(_widgetChildren && _widgetChildren->count() > 0)\n    {\n        CCObject* child;\n        CCARRAY_FOREACH(_widgetChildren, child)\n        {\n            ((Widget*)child)->setEnabled(enabled);\n        }\n    }\n}\n```\n发现这段代码除了把`_enable`和所有孩子的`_enable`状态设为`false`, 没做任何事情. 通过查看`widget`的代码, 很容易看到, `widget`的三态是通过下面的是三个函数实现的:\n\n```cpp\nvoid Widget::onPressStateChangedToNormal(){}\nvoid Widget::onPressStateChangedToPressed(){}\nvoid Widget::onPressStateChangedToDisabled(){}\n```\n不错,他们都是空函数.子类根据需要来实现这三个函数.   \n下面是`setBright`的实现:\n\n```cpp\nvoid Widget::setBright(bool bright)\n{\n    _bright = bright;\n    if (_bright)\n    {\n        _brightStyle = BRIGHT_NONE;\n        setBrightStyle(BRIGHT_NORMAL);\n    }\n    else\n    {\n        onPressStateChangedToDisabled();\n    }\n}\n```\n\n由上代码可以看出. 而我们调用`setBright(false)`, 即可根据`widget`当前的状态, 渲染不同的图像.\n\n\n### 附录\n#### 代码片段一`CCNode::visit()`\n\n```cpp\nvoid CCNode::visit()\n{\n    // quick return if not visible. children won't be drawn.\n    if (!m_bVisible)\n    {\n        return;\n    }\n    kmGLPushMatrix();\n\n     if (m_pGrid && m_pGrid->isActive())\n     {\n         m_pGrid->beforeDraw();\n     }\n\n    this->transform();\n\n    CCNode* pNode = NULL;\n    unsigned int i = 0;\n\n    if(m_pChildren && m_pChildren->count() > 0)\n    {\n        sortAllChildren();\n        // draw children zOrder < 0\n        ccArray *arrayData = m_pChildren->data;\n        for( ; i < arrayData->num; i++ )\n        {\n            pNode = (CCNode*) arrayData->arr[i];\n\n            if ( pNode && pNode->m_nZOrder < 0 ) \n            {\n                pNode->visit();\n            }\n            else\n            {\n                break;\n            }\n        }\n        // self draw\n        this->draw();\n\n        for( ; i < arrayData->num; i++ )\n        {\n            pNode = (CCNode*) arrayData->arr[i];\n            if (pNode)\n            {\n                pNode->visit();\n            }\n        }        \n    }\n    else\n    {\n        this->draw();\n    }\n\n    // reset for next frame\n    m_uOrderOfArrival = 0;\n\n     if (m_pGrid && m_pGrid->isActive())\n     {\n         m_pGrid->afterDraw(this);\n    }\n \n    kmGLPopMatrix();\n}\n```\n\n\n  [1]: https://lh6.googleusercontent.com/-bwcB18CZFyo/Uy7Ywf_ew9I/AAAAAAAACSo/G1QRO-a4z9Y/s0/QQ%E6%88%AA%E5%9B%BE20140323205043.png \"cocostudio-capture-button-disable.png\"","slug":"技术/[cocos2dx]让UIButton支持disable状态","published":1,"updated":"2017-07-26T15:55:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kqz0050q0d4x9s57wua","content":"<p>摘要: 主要解决cocos2dx-2.2.2版本中, UIButton显示不了disable状态图的问题. 顺便, 理解了一下cocos2dx中UIWidget的渲染原理.</p>\n<h3 id=\"发现问题\"><a href=\"#发现问题\" class=\"headerlink\" title=\"发现问题\"></a>发现问题</h3><p><img src=\"https://lh6.googleusercontent.com/-bwcB18CZFyo/Uy7Ywf_ew9I/AAAAAAAACSo/G1QRO-a4z9Y/s0/QQ%E6%88%AA%E5%9B%BE20140323205043.png\" alt=\"enter image description here\" title=\"cocostudio-capture-button-disable.png\"></p>\n<p>在cocostudio中添加一个UIButton组件, 我们可以看到通常以一下按钮的三态:<code>normal</code>,<code>pressed</code>,<code>disable</code>. 但是,当我们设置了<code>disable</code>状态之后, 在我们的游戏项目中, 对某个按钮执行<code>button-&gt;setEnable(false)</code>后, 按钮居然完全不见了?!  </p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ol>\n<li><p>修改<code>Widget::visit()</code>方法, 改为:   </p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    CCNodeRGBA::visit();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p> 即, 删除<code>if</code>判断.</p>\n</li>\n<li><p>修改<code>Widget::setEnable()</code>方法, 改为:   </p>\n<pre><code class=\"cpp\"><span class=\"keyword\">void</span> Widget::setEnabled(<span class=\"keyword\">bool</span> enabled)\n{\n    _enabled = enabled;\n    <span class=\"keyword\">if</span>(_widgetChildren &amp;&amp; _widgetChildren-&gt;count() &gt; <span class=\"number\">0</span>)\n    {\n        CCObject* child;\n        CCARRAY_FOREACH(_widgetChildren, child)\n        {\n            ((Widget*)child)-&gt;setEnabled(enabled);\n        }\n    }\n    setBright( enabled );<span class=\"comment\">//增加此行</span>\n}\n</code></pre>\n<p> 即, 增加<code>setBright( enabled );</code>行.</p>\n</li>\n</ol>\n<p>如果想知其所以然的, 下面是解释.</p>\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><h4 id=\"Widget的诡异渲染\"><a href=\"#Widget的诡异渲染\" class=\"headerlink\" title=\"Widget的诡异渲染\"></a>Widget的诡异渲染</h4><p><code>Widget::visit()</code>的实现如下:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (_enabled)</div><div class=\"line\">    &#123;</div><div class=\"line\">        CCNodeRGBA::visit();</div><div class=\"line\">    &#125;    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果您没时间仔细看过cocos2dx的源码, 这里可以有一个简单的解释:  </p>\n<ol>\n<li><code>visit()</code>方法最初是从<code>CCNode</code>继承过来的. 也就是说<strong><em>任何显示对象</em></strong>都有这个方法. </li>\n<li><p><code>CCNode::visit()</code>就是CCNode的渲染函数, 是视图渲染中最重要的一个函数, 跟IOS开发中的<code>UIView::draw()</code>功能类似. 框架在每一帧都会调用这个方法, 而这个方法负责当前组件的<code>openGL</code>绘制. 我们可以看下<code>CCNode::visit()</code>的实现来作为验证:</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> CCNode::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">this</span>-&gt;draw();</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//算了, 这段代码有点长, 有些人时间比较宝贵可能没兴趣看. 我就放在***附录***了.(*^__^*)</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>看到这里, 你肯定一经发现问题了: 为什么只有在<code>_enabled</code>为<code>true</code>的时候才渲染?难道不是坑爹么?<code>disable</code>状态就不理了么?<br>可能cocos2dx另有打算, 我没理解清楚. 不过这个功能既然不符合我的要求, 我就果断的把那个<code>if</code>去掉了. (谁让咱们是程序员呢?).  </p>\n<p>但是, 问题并没有完全结束. 还是没有显示<code>disable</code>状态.  </p>\n<h4 id=\"Widget的enable\"><a href=\"#Widget的enable\" class=\"headerlink\" title=\"Widget的enable?\"></a>Widget的enable?</h4><p><code>UIButton::setEnable()</code>方法比较短, 贴出来看看. </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::setEnabled(<span class=\"keyword\">bool</span> enabled)</div><div class=\"line\">&#123;</div><div class=\"line\">    _enabled = enabled;</div><div class=\"line\">    <span class=\"keyword\">if</span>(_widgetChildren &amp;&amp; _widgetChildren-&gt;count() &gt; <span class=\"number\">0</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        CCObject* child;</div><div class=\"line\">        CCARRAY_FOREACH(_widgetChildren, child)</div><div class=\"line\">        &#123;</div><div class=\"line\">            ((Widget*)child)-&gt;setEnabled(enabled);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>发现这段代码除了把<code>_enable</code>和所有孩子的<code>_enable</code>状态设为<code>false</code>, 没做任何事情. 通过查看<code>widget</code>的代码, 很容易看到, <code>widget</code>的三态是通过下面的是三个函数实现的:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::onPressStateChangedToNormal()&#123;&#125;</div><div class=\"line\"><span class=\"keyword\">void</span> Widget::onPressStateChangedToPressed()&#123;&#125;</div><div class=\"line\"><span class=\"keyword\">void</span> Widget::onPressStateChangedToDisabled()&#123;&#125;</div></pre></td></tr></table></figure>\n<p>不错,他们都是空函数.子类根据需要来实现这三个函数.<br>下面是<code>setBright</code>的实现:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::setBright(<span class=\"keyword\">bool</span> bright)</div><div class=\"line\">&#123;</div><div class=\"line\">    _bright = bright;</div><div class=\"line\">    <span class=\"keyword\">if</span> (_bright)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _brightStyle = BRIGHT_NONE;</div><div class=\"line\">        setBrightStyle(BRIGHT_NORMAL);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        onPressStateChangedToDisabled();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由上代码可以看出. 而我们调用<code>setBright(false)</code>, 即可根据<code>widget</code>当前的状态, 渲染不同的图像.</p>\n<h3 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h3><h4 id=\"代码片段一CCNode-visit\"><a href=\"#代码片段一CCNode-visit\" class=\"headerlink\" title=\"代码片段一CCNode::visit()\"></a>代码片段一<code>CCNode::visit()</code></h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> CCNode::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">// quick return if not visible. children won't be drawn.</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!m_bVisible)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    kmGLPushMatrix();</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">if</span> (m_pGrid &amp;&amp; m_pGrid-&gt;isActive())</div><div class=\"line\">     &#123;</div><div class=\"line\">         m_pGrid-&gt;beforeDraw();</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>-&gt;transform();</div><div class=\"line\"></div><div class=\"line\">    CCNode* pNode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>(m_pChildren &amp;&amp; m_pChildren-&gt;count() &gt; <span class=\"number\">0</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        sortAllChildren();</div><div class=\"line\">        <span class=\"comment\">// draw children zOrder &lt; 0</span></div><div class=\"line\">        ccArray *arrayData = m_pChildren-&gt;data;</div><div class=\"line\">        <span class=\"keyword\">for</span>( ; i &lt; arrayData-&gt;num; i++ )</div><div class=\"line\">        &#123;</div><div class=\"line\">            pNode = (CCNode*) arrayData-&gt;arr[i];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> ( pNode &amp;&amp; pNode-&gt;m_nZOrder &lt; <span class=\"number\">0</span> ) </div><div class=\"line\">            &#123;</div><div class=\"line\">                pNode-&gt;visit();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// self draw</span></div><div class=\"line\">        <span class=\"keyword\">this</span>-&gt;draw();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span>( ; i &lt; arrayData-&gt;num; i++ )</div><div class=\"line\">        &#123;</div><div class=\"line\">            pNode = (CCNode*) arrayData-&gt;arr[i];</div><div class=\"line\">            <span class=\"keyword\">if</span> (pNode)</div><div class=\"line\">            &#123;</div><div class=\"line\">                pNode-&gt;visit();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;        </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>-&gt;draw();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// reset for next frame</span></div><div class=\"line\">    m_uOrderOfArrival = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">if</span> (m_pGrid &amp;&amp; m_pGrid-&gt;isActive())</div><div class=\"line\">     &#123;</div><div class=\"line\">         m_pGrid-&gt;afterDraw(<span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    kmGLPopMatrix();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要: 主要解决cocos2dx-2.2.2版本中, UIButton显示不了disable状态图的问题. 顺便, 理解了一下cocos2dx中UIWidget的渲染原理.</p>\n<h3 id=\"发现问题\"><a href=\"#发现问题\" class=\"headerlink\" title=\"发现问题\"></a>发现问题</h3><p><img src=\"https://lh6.googleusercontent.com/-bwcB18CZFyo/Uy7Ywf_ew9I/AAAAAAAACSo/G1QRO-a4z9Y/s0/QQ%E6%88%AA%E5%9B%BE20140323205043.png\" alt=\"enter image description here\" title=\"cocostudio-capture-button-disable.png\"></p>\n<p>在cocostudio中添加一个UIButton组件, 我们可以看到通常以一下按钮的三态:<code>normal</code>,<code>pressed</code>,<code>disable</code>. 但是,当我们设置了<code>disable</code>状态之后, 在我们的游戏项目中, 对某个按钮执行<code>button-&gt;setEnable(false)</code>后, 按钮居然完全不见了?!  </p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ol>\n<li><p>修改<code>Widget::visit()</code>方法, 改为:   </p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    CCNodeRGBA::visit();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p> 即, 删除<code>if</code>判断.</p>\n</li>\n<li><p>修改<code>Widget::setEnable()</code>方法, 改为:   </p>\n<pre><code class=\"cpp\"><span class=\"keyword\">void</span> Widget::setEnabled(<span class=\"keyword\">bool</span> enabled)\n{\n    _enabled = enabled;\n    <span class=\"keyword\">if</span>(_widgetChildren &amp;&amp; _widgetChildren-&gt;count() &gt; <span class=\"number\">0</span>)\n    {\n        CCObject* child;\n        CCARRAY_FOREACH(_widgetChildren, child)\n        {\n            ((Widget*)child)-&gt;setEnabled(enabled);\n        }\n    }\n    setBright( enabled );<span class=\"comment\">//增加此行</span>\n}\n</code></pre>\n<p> 即, 增加<code>setBright( enabled );</code>行.</p>\n</li>\n</ol>\n<p>如果想知其所以然的, 下面是解释.</p>\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><h4 id=\"Widget的诡异渲染\"><a href=\"#Widget的诡异渲染\" class=\"headerlink\" title=\"Widget的诡异渲染\"></a>Widget的诡异渲染</h4><p><code>Widget::visit()</code>的实现如下:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (_enabled)</div><div class=\"line\">    &#123;</div><div class=\"line\">        CCNodeRGBA::visit();</div><div class=\"line\">    &#125;    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果您没时间仔细看过cocos2dx的源码, 这里可以有一个简单的解释:  </p>\n<ol>\n<li><code>visit()</code>方法最初是从<code>CCNode</code>继承过来的. 也就是说<strong><em>任何显示对象</em></strong>都有这个方法. </li>\n<li><p><code>CCNode::visit()</code>就是CCNode的渲染函数, 是视图渲染中最重要的一个函数, 跟IOS开发中的<code>UIView::draw()</code>功能类似. 框架在每一帧都会调用这个方法, 而这个方法负责当前组件的<code>openGL</code>绘制. 我们可以看下<code>CCNode::visit()</code>的实现来作为验证:</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> CCNode::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">this</span>-&gt;draw();</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//算了, 这段代码有点长, 有些人时间比较宝贵可能没兴趣看. 我就放在***附录***了.(*^__^*)</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>看到这里, 你肯定一经发现问题了: 为什么只有在<code>_enabled</code>为<code>true</code>的时候才渲染?难道不是坑爹么?<code>disable</code>状态就不理了么?<br>可能cocos2dx另有打算, 我没理解清楚. 不过这个功能既然不符合我的要求, 我就果断的把那个<code>if</code>去掉了. (谁让咱们是程序员呢?).  </p>\n<p>但是, 问题并没有完全结束. 还是没有显示<code>disable</code>状态.  </p>\n<h4 id=\"Widget的enable\"><a href=\"#Widget的enable\" class=\"headerlink\" title=\"Widget的enable?\"></a>Widget的enable?</h4><p><code>UIButton::setEnable()</code>方法比较短, 贴出来看看. </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::setEnabled(<span class=\"keyword\">bool</span> enabled)</div><div class=\"line\">&#123;</div><div class=\"line\">    _enabled = enabled;</div><div class=\"line\">    <span class=\"keyword\">if</span>(_widgetChildren &amp;&amp; _widgetChildren-&gt;count() &gt; <span class=\"number\">0</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        CCObject* child;</div><div class=\"line\">        CCARRAY_FOREACH(_widgetChildren, child)</div><div class=\"line\">        &#123;</div><div class=\"line\">            ((Widget*)child)-&gt;setEnabled(enabled);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>发现这段代码除了把<code>_enable</code>和所有孩子的<code>_enable</code>状态设为<code>false</code>, 没做任何事情. 通过查看<code>widget</code>的代码, 很容易看到, <code>widget</code>的三态是通过下面的是三个函数实现的:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::onPressStateChangedToNormal()&#123;&#125;</div><div class=\"line\"><span class=\"keyword\">void</span> Widget::onPressStateChangedToPressed()&#123;&#125;</div><div class=\"line\"><span class=\"keyword\">void</span> Widget::onPressStateChangedToDisabled()&#123;&#125;</div></pre></td></tr></table></figure>\n<p>不错,他们都是空函数.子类根据需要来实现这三个函数.<br>下面是<code>setBright</code>的实现:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> Widget::setBright(<span class=\"keyword\">bool</span> bright)</div><div class=\"line\">&#123;</div><div class=\"line\">    _bright = bright;</div><div class=\"line\">    <span class=\"keyword\">if</span> (_bright)</div><div class=\"line\">    &#123;</div><div class=\"line\">        _brightStyle = BRIGHT_NONE;</div><div class=\"line\">        setBrightStyle(BRIGHT_NORMAL);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        onPressStateChangedToDisabled();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由上代码可以看出. 而我们调用<code>setBright(false)</code>, 即可根据<code>widget</code>当前的状态, 渲染不同的图像.</p>\n<h3 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h3><h4 id=\"代码片段一CCNode-visit\"><a href=\"#代码片段一CCNode-visit\" class=\"headerlink\" title=\"代码片段一CCNode::visit()\"></a>代码片段一<code>CCNode::visit()</code></h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">void</span> CCNode::visit()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">// quick return if not visible. children won't be drawn.</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!m_bVisible)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    kmGLPushMatrix();</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">if</span> (m_pGrid &amp;&amp; m_pGrid-&gt;isActive())</div><div class=\"line\">     &#123;</div><div class=\"line\">         m_pGrid-&gt;beforeDraw();</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>-&gt;transform();</div><div class=\"line\"></div><div class=\"line\">    CCNode* pNode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>(m_pChildren &amp;&amp; m_pChildren-&gt;count() &gt; <span class=\"number\">0</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        sortAllChildren();</div><div class=\"line\">        <span class=\"comment\">// draw children zOrder &lt; 0</span></div><div class=\"line\">        ccArray *arrayData = m_pChildren-&gt;data;</div><div class=\"line\">        <span class=\"keyword\">for</span>( ; i &lt; arrayData-&gt;num; i++ )</div><div class=\"line\">        &#123;</div><div class=\"line\">            pNode = (CCNode*) arrayData-&gt;arr[i];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> ( pNode &amp;&amp; pNode-&gt;m_nZOrder &lt; <span class=\"number\">0</span> ) </div><div class=\"line\">            &#123;</div><div class=\"line\">                pNode-&gt;visit();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// self draw</span></div><div class=\"line\">        <span class=\"keyword\">this</span>-&gt;draw();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span>( ; i &lt; arrayData-&gt;num; i++ )</div><div class=\"line\">        &#123;</div><div class=\"line\">            pNode = (CCNode*) arrayData-&gt;arr[i];</div><div class=\"line\">            <span class=\"keyword\">if</span> (pNode)</div><div class=\"line\">            &#123;</div><div class=\"line\">                pNode-&gt;visit();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;        </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>-&gt;draw();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// reset for next frame</span></div><div class=\"line\">    m_uOrderOfArrival = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">if</span> (m_pGrid &amp;&amp; m_pGrid-&gt;isActive())</div><div class=\"line\">     &#123;</div><div class=\"line\">         m_pGrid-&gt;afterDraw(<span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    kmGLPopMatrix();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"[hadoop]简单了解Hadoop","date":"2016-03-31T05:55:00.000Z","_content":"\n\n\n# What is Hadoop\n\n> Hadoop is built to process large amounts of data from terabytes to petabytes and beyond. With this much data, it’s unlikely that it would fit on a single computer's hard drive, much less in memory. The beauty of Hadoop is that it is designed to efficiently process huge amounts of data by connecting many commodity computers together to work in parallel. Using the MapReduce model, Hadoop can take a query over a dataset, divide it, and run it in parallel over multiple nodes. Distributing the computation solves the problem of having data that’s too large to fit onto a single machine.\n\n# Hapood 跟过去的分布式工具有什么不同?\n\n1. Hapood可以以处理最简单的流式数据，不用特定的格式、结构.\n2. Hapood有非常好用的API来方便分布式编程。 \n3. 可以方便的管理，也有节点宕机自动切换功能。 \n4. 更加灵活，因为不受数据结构限制。\n\n\n# HDFS\n Hapood Ditribute File System\n\n ","source":"_posts/技术/[hadoop]简单了解Hadoop.md","raw":"---\ntitle: \"[hadoop]简单了解Hadoop\"\ndate: 2016-03-31 13:55 \ntags:\n- hadoop\n- google \n- mapreduce\ncategories: \n- 技术\n---\n\n\n\n# What is Hadoop\n\n> Hadoop is built to process large amounts of data from terabytes to petabytes and beyond. With this much data, it’s unlikely that it would fit on a single computer's hard drive, much less in memory. The beauty of Hadoop is that it is designed to efficiently process huge amounts of data by connecting many commodity computers together to work in parallel. Using the MapReduce model, Hadoop can take a query over a dataset, divide it, and run it in parallel over multiple nodes. Distributing the computation solves the problem of having data that’s too large to fit onto a single machine.\n\n# Hapood 跟过去的分布式工具有什么不同?\n\n1. Hapood可以以处理最简单的流式数据，不用特定的格式、结构.\n2. Hapood有非常好用的API来方便分布式编程。 \n3. 可以方便的管理，也有节点宕机自动切换功能。 \n4. 更加灵活，因为不受数据结构限制。\n\n\n# HDFS\n Hapood Ditribute File System\n\n ","slug":"技术/[hadoop]简单了解Hadoop","published":1,"updated":"2017-07-26T15:59:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kr00052q0d4psgap8cr","content":"<h1 id=\"What-is-Hadoop\"><a href=\"#What-is-Hadoop\" class=\"headerlink\" title=\"What is Hadoop\"></a>What is Hadoop</h1><blockquote>\n<p>Hadoop is built to process large amounts of data from terabytes to petabytes and beyond. With this much data, it’s unlikely that it would fit on a single computer’s hard drive, much less in memory. The beauty of Hadoop is that it is designed to efficiently process huge amounts of data by connecting many commodity computers together to work in parallel. Using the MapReduce model, Hadoop can take a query over a dataset, divide it, and run it in parallel over multiple nodes. Distributing the computation solves the problem of having data that’s too large to fit onto a single machine.</p>\n</blockquote>\n<h1 id=\"Hapood-跟过去的分布式工具有什么不同\"><a href=\"#Hapood-跟过去的分布式工具有什么不同\" class=\"headerlink\" title=\"Hapood 跟过去的分布式工具有什么不同?\"></a>Hapood 跟过去的分布式工具有什么不同?</h1><ol>\n<li>Hapood可以以处理最简单的流式数据，不用特定的格式、结构.</li>\n<li>Hapood有非常好用的API来方便分布式编程。 </li>\n<li>可以方便的管理，也有节点宕机自动切换功能。 </li>\n<li>更加灵活，因为不受数据结构限制。</li>\n</ol>\n<h1 id=\"HDFS\"><a href=\"#HDFS\" class=\"headerlink\" title=\"HDFS\"></a>HDFS</h1><p> Hapood Ditribute File System</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"What-is-Hadoop\"><a href=\"#What-is-Hadoop\" class=\"headerlink\" title=\"What is Hadoop\"></a>What is Hadoop</h1><blockquote>\n<p>Hadoop is built to process large amounts of data from terabytes to petabytes and beyond. With this much data, it’s unlikely that it would fit on a single computer’s hard drive, much less in memory. The beauty of Hadoop is that it is designed to efficiently process huge amounts of data by connecting many commodity computers together to work in parallel. Using the MapReduce model, Hadoop can take a query over a dataset, divide it, and run it in parallel over multiple nodes. Distributing the computation solves the problem of having data that’s too large to fit onto a single machine.</p>\n</blockquote>\n<h1 id=\"Hapood-跟过去的分布式工具有什么不同\"><a href=\"#Hapood-跟过去的分布式工具有什么不同\" class=\"headerlink\" title=\"Hapood 跟过去的分布式工具有什么不同?\"></a>Hapood 跟过去的分布式工具有什么不同?</h1><ol>\n<li>Hapood可以以处理最简单的流式数据，不用特定的格式、结构.</li>\n<li>Hapood有非常好用的API来方便分布式编程。 </li>\n<li>可以方便的管理，也有节点宕机自动切换功能。 </li>\n<li>更加灵活，因为不受数据结构限制。</li>\n</ol>\n<h1 id=\"HDFS\"><a href=\"#HDFS\" class=\"headerlink\" title=\"HDFS\"></a>HDFS</h1><p> Hapood Ditribute File System</p>\n"},{"title":"[iOS]Orientation 想怎么转就怎么转","date":"2013-12-11T16:00:00.000Z","_content":"\n此博文主要针对IOS应用, 是屏幕旋转相关问题的一个总结. 主要内容有:  \n  \n1. IOS5,6,7不同版的适配.  \n2. 强制旋转和自动旋转.\n\n\n---\n\n## 改变Orientation的三种途径\n这里, 咱们主要理清一下: **到底有哪些设置可以改变屏幕旋转特性**. 这样:  \n\n* 出现任何问题我们都可以从这几个途径中发现原因.\n* 灵活应付产品经理的各种需求.  \n\n首先我们得知道: \n \n1. 当手机的重力感应打开的时候, 如果用户旋转手机, 系统会抛发`UIDeviceOrientationDidChangeNotification` 事件.  \n2. 您可以分别设置`Application`和`UIViewcontroller`支持的旋转方向.`Application`的设置会影响整个App, `UIViewcontroller`的设置仅仅会影响一个`viewController`(IOS5和IOS6有所不同,下面会详细解释).  \n3. 当`UIKit`收到`UIDeviceOrientationDidChangeNotification`事件的时候, 会根据`Application`和`UIViewcontroller`的设置, 如果双方都支持此方向, 则会自动屏幕旋转到这个方向. 更code的表达就是, 会对两个设置求**与**,得到可以支持的方向. 如果求**与**之后,没有任何可支持的方向, 则会抛发`UIApplicationInvalidInterfaceOrientationException`异常.\n\n\n<br/>\n<br/>\n<br/>\n### Info.plist设置\n在App的Info.plist里设置:\n\n|key|xcode name|Summary|avilable value|\n|:--|:--       |:--    |:--           |\n|UIInterfaceOrientation|initial interface orientation|Specifies the initial orientation of the app’s user interface.|UIInterfaceOrientationPortrait,<br/>UIInterfaceOrientationPortraitUpsideDown,<br/>UIInterfaceOrientationLandscapeLeft,<br/>UIInterfaceOrientationLandscapeRight|\n|UISupportedInterfaceOrientations|Supported interface orientations|Specifies the orientations that the app supports.|UIInterfaceOrientationPortrait,<br/>UIInterfaceOrientationPortraitUpsideDown,<br/>UIInterfaceOrientationLandscapeLeft,<br/>UIInterfaceOrientationLandscapeRight|\n\n在Info.plist中设置之后,这个app里所有的`viewController`支持的自动旋转方向都只能是app支持的方向的子集.\n\n\n\n<br/>\n<br/>\n<br/>\n### UIViewController\n#### IOS6 and above\n##### supportedInterfaceOrientations\n\n在IOS6及以上的版本中, 增添了方法`UIViewController.supportedInterfaceOrientations`. 此方法返回当前`viewController`支持的方向. 但是, 只有两种情况下此方法才会生效:\n\n1. 当前`viewController`是`window`的`rootViewController`. \n2. 当前`viewController`是`modal`模式的. 即, 此`viewController`是被调用`presentModalViewController`而显示出来的.\n\n在以上两种情况中,`UIViewController.supportedInterfaceOrientations`方法会作用于当前`viewController`和所有`childViewController`. 以上两种情况之外, `UIKit`并不会理会你的`supportedInterfaceOrientations`方法.\n    \n举个栗子: \n\n```\n- (NSUInteger)supportedInterfaceOrientations\n{\n    return UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft;\n}\n\n```\n\n如果某个`viewController`实现了以上方法. 则, 此`viewController`就支持竖方向和左旋转方向. 此`viewController`的所有`childViewController`也同时支持这两个方向, 不多不少. \n\n##### preferredInterfaceOrientationForPresentation\n此方法也属于`UIViewController`. 影响当前`viewController`的初始显示方向.\n此方法也仅有在当前`viewController`是`rootViewController`或者是`modal`模式时才生效.\n##### shouldAutorotate\n此方法,用于设置当前`viewController`是否支持自动旋转. 如果,你需要`viewController`暂停自动旋转一小会儿. 那么可以通过这个方法来实现.同样的, 此方法也仅有在当前`viewController`是`rootViewController`或者是`modal`模式时才生效.  \n#### IOS5 and before\n在IOS5和以前的版本中, 每个`viewController`都可以指定自己可自动旋转的方向.(~~~这样不是挺好么?苹果那帮工程师为啥要搞成这样...~~~).  \n每当`UIkit`收到`UIDeviceOrientationDidChangeNotification`消息的时候, 就会用以下方法询问当前显示的`viewController`支不支持此方向:\n\n```\n- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)orientation\n{\n   if ((orientation == UIInterfaceOrientationPortrait) ||\n       (orientation == UIInterfaceOrientationLandscapeLeft))\n      return YES;\n \n   return NO;\n}\n```\n\n特别要注意的是:你必须至少要对一个方向返回`YES`.(为难系统总不会有啥好事儿,你懂得).\n\n<br/>\n<br/>\n<br/>\n### UIView.transform\n最后一个方法是设置`UIView`的`transform`属性来强制旋转.   \n见下代码: \n \n```\n//设置statusBar\n[[UIApplication sharedApplication] setStatusBarOrientation:orientation];\n\n//计算旋转角度\nfloat arch;\nif (orientation == UIInterfaceOrientationLandscapeLeft)\n\tarch = -M_PI_2;\nelse if (orientation == UIInterfaceOrientationLandscapeRight)\n\tarch = M_PI_2;\nelse\n\tarch = 0;\n\n//对navigationController.view 进行强制旋转\nself.navigationController.view.transform = CGAffineTransformMakeRotation(arch);\nself.navigationController.view.bounds = UIInterfaceOrientationIsLandscape(orientation) ? CGRectMake(0, 0, SCREEN_HEIGHT, SCREEN_WIDTH) : initialBounds;\n```\n需要注意的是: \n\n1. 当然我们可以对当前`viewController`进行旋转, 对任何`view`旋转都可以.但是, 你会发现`navigationBar`还横在那里. 所以, 我们最好对一个占满全屏的`view`进行旋转. 在这里我们旋转的对象是`self.navigationController.view`, 当然`self.window`也可以, help yourself~\n2. 我们需要显式的设置`bounds`. `UIKit`并不知道你偷偷摸摸干了这些事情, 所以没法帮你自动设置.\n\n\n<br/>\n<br/>\n## 如何应付产品经理的需求\n有了以上三把武器, 我想基本可以应付BT产品经理所有的需求了. 但是这里还有一些小技巧.\n### 直接锁死\n(略)\n### 随系统旋转\n#### IOS5及之前\n对于IOS5及之前的版本, 只要在对每个`viewController`重写`shouldAutorotateToInterfaceOrientation`方法, 即可方便的控制每个`viewController`的方向.  \n  \n#### IOS6及以后\n对于IOS6及以后的版本, 如果想方便的单独控制每个`viewController`的方向. 则可以使用这样:\n\n* 对于非`modal`模式的`viewController`: \n\n\t* 如果不是`rootViewController`,则重写`supportedInterfaceOrientations`,`preferredInterfaceOrientationForPresentation`以及`shouldAutorotate`方法, 按照当前`viewController`的需要返回响应的值.\n\t* 如果是`rootViewController`,则如下重写方法:\n\n```\n-(NSUInteger)supportedInterfaceOrientations\n{\n\treturn self.topMostViewController.supportedInterfaceOrientations;\n}\n-(BOOL)shouldAutorotate\n{\n    return [self.topMostViewController shouldAutorotate];\n}\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation\n{\n    return [self.topMostViewController preferredInterfaceOrientationForPresentation];\n}\n-(UIViewController*)topMostViewController\n{\n\t//找到当前正在显示的viewController并返回.\n}\n```\n显而易见, 我们巧妙的绕开了`UIKit`只调用`rootViewController`的方法的规则. 把决定权交给了当前正在显示的`viewController`.\t\n\n* 对于`modal`模式的`viewController`. 则按照需要重写`supportedInterfaceOrientations`,`preferredInterfaceOrientationForPresentation`以及`shouldAutorotate`方法即可.\n\n### 强制旋转\n有时候, 需要不随系统旋转, 而是强制旋转到某一个角度. 最典型的场景就是视频播放器, 当点击了全屏按钮的时候, 需要横过来显示.  \n\n* 对于IOS5及以前的版本, 可以用下面的方法:  \n\n```\nif ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) {\n\tSEL selector = NSSelectorFromString(@\"setOrientation:\");\n\tNSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];\n\t[invocation setSelector:selector];\n\t[invocation setTarget:[UIDevice currentDevice]];\n\tint val = UIInterfaceOrientationLandscapeRight;\n\t[invocation setArgument:&val atIndex:2];\n\t[invocation invoke];\n}\n```\n\n* 对于IOS6及以后的版本. `UIDevice.setOrientation`从隐藏变为移除.只能通过设置`UIView.transform`的方法来实现.\n\n<br/>\n<br/>\n<br/>\n## 参考资料\n\n* [iOS两个强制旋转屏幕的方法](http://blog.csdn.net/volcan1987/article/details/11563741)\n* [Supporting Multiple Interface Orientations](https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/RespondingtoDeviceOrientationChanges/RespondingtoDeviceOrientationChanges.html)\n\n[apple_ref_1]: https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDevice_Class/Reference/UIDevice.html#//apple_ref/c/data/UIDeviceOrientationDidChangeNotification]\n[apple_ref_2]: https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIApplication_Class/Reference/Reference.html#//apple_ref/c/data/UIApplicationInvalidInterfaceOrientationException","source":"_posts/技术/[iOS]Orientation 想怎么转就怎么转.md","raw":"---\ntitle: '[iOS]Orientation 想怎么转就怎么转'\ndate: 2013-12-12\ntags: \n- ios\n- transform\n- orientation\n- screen\n- ios6\n- ios7\n- interface\ncategories: \n- 技术\n---\n\n此博文主要针对IOS应用, 是屏幕旋转相关问题的一个总结. 主要内容有:  \n  \n1. IOS5,6,7不同版的适配.  \n2. 强制旋转和自动旋转.\n\n\n---\n\n## 改变Orientation的三种途径\n这里, 咱们主要理清一下: **到底有哪些设置可以改变屏幕旋转特性**. 这样:  \n\n* 出现任何问题我们都可以从这几个途径中发现原因.\n* 灵活应付产品经理的各种需求.  \n\n首先我们得知道: \n \n1. 当手机的重力感应打开的时候, 如果用户旋转手机, 系统会抛发`UIDeviceOrientationDidChangeNotification` 事件.  \n2. 您可以分别设置`Application`和`UIViewcontroller`支持的旋转方向.`Application`的设置会影响整个App, `UIViewcontroller`的设置仅仅会影响一个`viewController`(IOS5和IOS6有所不同,下面会详细解释).  \n3. 当`UIKit`收到`UIDeviceOrientationDidChangeNotification`事件的时候, 会根据`Application`和`UIViewcontroller`的设置, 如果双方都支持此方向, 则会自动屏幕旋转到这个方向. 更code的表达就是, 会对两个设置求**与**,得到可以支持的方向. 如果求**与**之后,没有任何可支持的方向, 则会抛发`UIApplicationInvalidInterfaceOrientationException`异常.\n\n\n<br/>\n<br/>\n<br/>\n### Info.plist设置\n在App的Info.plist里设置:\n\n|key|xcode name|Summary|avilable value|\n|:--|:--       |:--    |:--           |\n|UIInterfaceOrientation|initial interface orientation|Specifies the initial orientation of the app’s user interface.|UIInterfaceOrientationPortrait,<br/>UIInterfaceOrientationPortraitUpsideDown,<br/>UIInterfaceOrientationLandscapeLeft,<br/>UIInterfaceOrientationLandscapeRight|\n|UISupportedInterfaceOrientations|Supported interface orientations|Specifies the orientations that the app supports.|UIInterfaceOrientationPortrait,<br/>UIInterfaceOrientationPortraitUpsideDown,<br/>UIInterfaceOrientationLandscapeLeft,<br/>UIInterfaceOrientationLandscapeRight|\n\n在Info.plist中设置之后,这个app里所有的`viewController`支持的自动旋转方向都只能是app支持的方向的子集.\n\n\n\n<br/>\n<br/>\n<br/>\n### UIViewController\n#### IOS6 and above\n##### supportedInterfaceOrientations\n\n在IOS6及以上的版本中, 增添了方法`UIViewController.supportedInterfaceOrientations`. 此方法返回当前`viewController`支持的方向. 但是, 只有两种情况下此方法才会生效:\n\n1. 当前`viewController`是`window`的`rootViewController`. \n2. 当前`viewController`是`modal`模式的. 即, 此`viewController`是被调用`presentModalViewController`而显示出来的.\n\n在以上两种情况中,`UIViewController.supportedInterfaceOrientations`方法会作用于当前`viewController`和所有`childViewController`. 以上两种情况之外, `UIKit`并不会理会你的`supportedInterfaceOrientations`方法.\n    \n举个栗子: \n\n```\n- (NSUInteger)supportedInterfaceOrientations\n{\n    return UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft;\n}\n\n```\n\n如果某个`viewController`实现了以上方法. 则, 此`viewController`就支持竖方向和左旋转方向. 此`viewController`的所有`childViewController`也同时支持这两个方向, 不多不少. \n\n##### preferredInterfaceOrientationForPresentation\n此方法也属于`UIViewController`. 影响当前`viewController`的初始显示方向.\n此方法也仅有在当前`viewController`是`rootViewController`或者是`modal`模式时才生效.\n##### shouldAutorotate\n此方法,用于设置当前`viewController`是否支持自动旋转. 如果,你需要`viewController`暂停自动旋转一小会儿. 那么可以通过这个方法来实现.同样的, 此方法也仅有在当前`viewController`是`rootViewController`或者是`modal`模式时才生效.  \n#### IOS5 and before\n在IOS5和以前的版本中, 每个`viewController`都可以指定自己可自动旋转的方向.(~~~这样不是挺好么?苹果那帮工程师为啥要搞成这样...~~~).  \n每当`UIkit`收到`UIDeviceOrientationDidChangeNotification`消息的时候, 就会用以下方法询问当前显示的`viewController`支不支持此方向:\n\n```\n- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)orientation\n{\n   if ((orientation == UIInterfaceOrientationPortrait) ||\n       (orientation == UIInterfaceOrientationLandscapeLeft))\n      return YES;\n \n   return NO;\n}\n```\n\n特别要注意的是:你必须至少要对一个方向返回`YES`.(为难系统总不会有啥好事儿,你懂得).\n\n<br/>\n<br/>\n<br/>\n### UIView.transform\n最后一个方法是设置`UIView`的`transform`属性来强制旋转.   \n见下代码: \n \n```\n//设置statusBar\n[[UIApplication sharedApplication] setStatusBarOrientation:orientation];\n\n//计算旋转角度\nfloat arch;\nif (orientation == UIInterfaceOrientationLandscapeLeft)\n\tarch = -M_PI_2;\nelse if (orientation == UIInterfaceOrientationLandscapeRight)\n\tarch = M_PI_2;\nelse\n\tarch = 0;\n\n//对navigationController.view 进行强制旋转\nself.navigationController.view.transform = CGAffineTransformMakeRotation(arch);\nself.navigationController.view.bounds = UIInterfaceOrientationIsLandscape(orientation) ? CGRectMake(0, 0, SCREEN_HEIGHT, SCREEN_WIDTH) : initialBounds;\n```\n需要注意的是: \n\n1. 当然我们可以对当前`viewController`进行旋转, 对任何`view`旋转都可以.但是, 你会发现`navigationBar`还横在那里. 所以, 我们最好对一个占满全屏的`view`进行旋转. 在这里我们旋转的对象是`self.navigationController.view`, 当然`self.window`也可以, help yourself~\n2. 我们需要显式的设置`bounds`. `UIKit`并不知道你偷偷摸摸干了这些事情, 所以没法帮你自动设置.\n\n\n<br/>\n<br/>\n## 如何应付产品经理的需求\n有了以上三把武器, 我想基本可以应付BT产品经理所有的需求了. 但是这里还有一些小技巧.\n### 直接锁死\n(略)\n### 随系统旋转\n#### IOS5及之前\n对于IOS5及之前的版本, 只要在对每个`viewController`重写`shouldAutorotateToInterfaceOrientation`方法, 即可方便的控制每个`viewController`的方向.  \n  \n#### IOS6及以后\n对于IOS6及以后的版本, 如果想方便的单独控制每个`viewController`的方向. 则可以使用这样:\n\n* 对于非`modal`模式的`viewController`: \n\n\t* 如果不是`rootViewController`,则重写`supportedInterfaceOrientations`,`preferredInterfaceOrientationForPresentation`以及`shouldAutorotate`方法, 按照当前`viewController`的需要返回响应的值.\n\t* 如果是`rootViewController`,则如下重写方法:\n\n```\n-(NSUInteger)supportedInterfaceOrientations\n{\n\treturn self.topMostViewController.supportedInterfaceOrientations;\n}\n-(BOOL)shouldAutorotate\n{\n    return [self.topMostViewController shouldAutorotate];\n}\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation\n{\n    return [self.topMostViewController preferredInterfaceOrientationForPresentation];\n}\n-(UIViewController*)topMostViewController\n{\n\t//找到当前正在显示的viewController并返回.\n}\n```\n显而易见, 我们巧妙的绕开了`UIKit`只调用`rootViewController`的方法的规则. 把决定权交给了当前正在显示的`viewController`.\t\n\n* 对于`modal`模式的`viewController`. 则按照需要重写`supportedInterfaceOrientations`,`preferredInterfaceOrientationForPresentation`以及`shouldAutorotate`方法即可.\n\n### 强制旋转\n有时候, 需要不随系统旋转, 而是强制旋转到某一个角度. 最典型的场景就是视频播放器, 当点击了全屏按钮的时候, 需要横过来显示.  \n\n* 对于IOS5及以前的版本, 可以用下面的方法:  \n\n```\nif ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) {\n\tSEL selector = NSSelectorFromString(@\"setOrientation:\");\n\tNSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];\n\t[invocation setSelector:selector];\n\t[invocation setTarget:[UIDevice currentDevice]];\n\tint val = UIInterfaceOrientationLandscapeRight;\n\t[invocation setArgument:&val atIndex:2];\n\t[invocation invoke];\n}\n```\n\n* 对于IOS6及以后的版本. `UIDevice.setOrientation`从隐藏变为移除.只能通过设置`UIView.transform`的方法来实现.\n\n<br/>\n<br/>\n<br/>\n## 参考资料\n\n* [iOS两个强制旋转屏幕的方法](http://blog.csdn.net/volcan1987/article/details/11563741)\n* [Supporting Multiple Interface Orientations](https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/RespondingtoDeviceOrientationChanges/RespondingtoDeviceOrientationChanges.html)\n\n[apple_ref_1]: https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDevice_Class/Reference/UIDevice.html#//apple_ref/c/data/UIDeviceOrientationDidChangeNotification]\n[apple_ref_2]: https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIApplication_Class/Reference/Reference.html#//apple_ref/c/data/UIApplicationInvalidInterfaceOrientationException","slug":"技术/[iOS]Orientation 想怎么转就怎么转","published":1,"updated":"2017-07-26T15:59:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kr50055q0d41m7550lw","content":"<p>此博文主要针对IOS应用, 是屏幕旋转相关问题的一个总结. 主要内容有:  </p>\n<ol>\n<li>IOS5,6,7不同版的适配.  </li>\n<li>强制旋转和自动旋转.</li>\n</ol>\n<hr>\n<h2 id=\"改变Orientation的三种途径\"><a href=\"#改变Orientation的三种途径\" class=\"headerlink\" title=\"改变Orientation的三种途径\"></a>改变Orientation的三种途径</h2><p>这里, 咱们主要理清一下: <strong>到底有哪些设置可以改变屏幕旋转特性</strong>. 这样:  </p>\n<ul>\n<li>出现任何问题我们都可以从这几个途径中发现原因.</li>\n<li>灵活应付产品经理的各种需求.  </li>\n</ul>\n<p>首先我们得知道: </p>\n<ol>\n<li>当手机的重力感应打开的时候, 如果用户旋转手机, 系统会抛发<code>UIDeviceOrientationDidChangeNotification</code> 事件.  </li>\n<li>您可以分别设置<code>Application</code>和<code>UIViewcontroller</code>支持的旋转方向.<code>Application</code>的设置会影响整个App, <code>UIViewcontroller</code>的设置仅仅会影响一个<code>viewController</code>(IOS5和IOS6有所不同,下面会详细解释).  </li>\n<li>当<code>UIKit</code>收到<code>UIDeviceOrientationDidChangeNotification</code>事件的时候, 会根据<code>Application</code>和<code>UIViewcontroller</code>的设置, 如果双方都支持此方向, 则会自动屏幕旋转到这个方向. 更code的表达就是, 会对两个设置求<strong>与</strong>,得到可以支持的方向. 如果求<strong>与</strong>之后,没有任何可支持的方向, 则会抛发<code>UIApplicationInvalidInterfaceOrientationException</code>异常.</li>\n</ol>\n<p><br><br><br><br><br></p>\n<h3 id=\"Info-plist设置\"><a href=\"#Info-plist设置\" class=\"headerlink\" title=\"Info.plist设置\"></a>Info.plist设置</h3><p>在App的Info.plist里设置:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">key</th>\n<th style=\"text-align:left\">xcode name</th>\n<th style=\"text-align:left\">Summary</th>\n<th style=\"text-align:left\">avilable value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">UIInterfaceOrientation</td>\n<td style=\"text-align:left\">initial interface orientation</td>\n<td style=\"text-align:left\">Specifies the initial orientation of the app’s user interface.</td>\n<td style=\"text-align:left\">UIInterfaceOrientationPortrait,<br>UIInterfaceOrientationPortraitUpsideDown,<br>UIInterfaceOrientationLandscapeLeft,<br>UIInterfaceOrientationLandscapeRight</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UISupportedInterfaceOrientations</td>\n<td style=\"text-align:left\">Supported interface orientations</td>\n<td style=\"text-align:left\">Specifies the orientations that the app supports.</td>\n<td style=\"text-align:left\">UIInterfaceOrientationPortrait,<br>UIInterfaceOrientationPortraitUpsideDown,<br>UIInterfaceOrientationLandscapeLeft,<br>UIInterfaceOrientationLandscapeRight</td>\n</tr>\n</tbody>\n</table>\n<p>在Info.plist中设置之后,这个app里所有的<code>viewController</code>支持的自动旋转方向都只能是app支持的方向的子集.</p>\n<p><br><br><br><br><br></p>\n<h3 id=\"UIViewController\"><a href=\"#UIViewController\" class=\"headerlink\" title=\"UIViewController\"></a>UIViewController</h3><h4 id=\"IOS6-and-above\"><a href=\"#IOS6-and-above\" class=\"headerlink\" title=\"IOS6 and above\"></a>IOS6 and above</h4><h5 id=\"supportedInterfaceOrientations\"><a href=\"#supportedInterfaceOrientations\" class=\"headerlink\" title=\"supportedInterfaceOrientations\"></a>supportedInterfaceOrientations</h5><p>在IOS6及以上的版本中, 增添了方法<code>UIViewController.supportedInterfaceOrientations</code>. 此方法返回当前<code>viewController</code>支持的方向. 但是, 只有两种情况下此方法才会生效:</p>\n<ol>\n<li>当前<code>viewController</code>是<code>window</code>的<code>rootViewController</code>. </li>\n<li>当前<code>viewController</code>是<code>modal</code>模式的. 即, 此<code>viewController</code>是被调用<code>presentModalViewController</code>而显示出来的.</li>\n</ol>\n<p>在以上两种情况中,<code>UIViewController.supportedInterfaceOrientations</code>方法会作用于当前<code>viewController</code>和所有<code>childViewController</code>. 以上两种情况之外, <code>UIKit</code>并不会理会你的<code>supportedInterfaceOrientations</code>方法.</p>\n<p>举个栗子: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (NSUInteger)supportedInterfaceOrientations</div><div class=\"line\">&#123;</div><div class=\"line\">    return UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果某个<code>viewController</code>实现了以上方法. 则, 此<code>viewController</code>就支持竖方向和左旋转方向. 此<code>viewController</code>的所有<code>childViewController</code>也同时支持这两个方向, 不多不少. </p>\n<h5 id=\"preferredInterfaceOrientationForPresentation\"><a href=\"#preferredInterfaceOrientationForPresentation\" class=\"headerlink\" title=\"preferredInterfaceOrientationForPresentation\"></a>preferredInterfaceOrientationForPresentation</h5><p>此方法也属于<code>UIViewController</code>. 影响当前<code>viewController</code>的初始显示方向.<br>此方法也仅有在当前<code>viewController</code>是<code>rootViewController</code>或者是<code>modal</code>模式时才生效.</p>\n<h5 id=\"shouldAutorotate\"><a href=\"#shouldAutorotate\" class=\"headerlink\" title=\"shouldAutorotate\"></a>shouldAutorotate</h5><p>此方法,用于设置当前<code>viewController</code>是否支持自动旋转. 如果,你需要<code>viewController</code>暂停自动旋转一小会儿. 那么可以通过这个方法来实现.同样的, 此方法也仅有在当前<code>viewController</code>是<code>rootViewController</code>或者是<code>modal</code>模式时才生效.  </p>\n<h4 id=\"IOS5-and-before\"><a href=\"#IOS5-and-before\" class=\"headerlink\" title=\"IOS5 and before\"></a>IOS5 and before</h4><p>在IOS5和以前的版本中, 每个<code>viewController</code>都可以指定自己可自动旋转的方向.(<del>~这样不是挺好么?苹果那帮工程师为啥要搞成这样…</del>~).<br>每当<code>UIkit</code>收到<code>UIDeviceOrientationDidChangeNotification</code>消息的时候, 就会用以下方法询问当前显示的<code>viewController</code>支不支持此方向:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)orientation</div><div class=\"line\">&#123;</div><div class=\"line\">   if ((orientation == UIInterfaceOrientationPortrait) ||</div><div class=\"line\">       (orientation == UIInterfaceOrientationLandscapeLeft))</div><div class=\"line\">      return YES;</div><div class=\"line\"> </div><div class=\"line\">   return NO;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>特别要注意的是:你必须至少要对一个方向返回<code>YES</code>.(为难系统总不会有啥好事儿,你懂得).</p>\n<p><br><br><br><br><br></p>\n<h3 id=\"UIView-transform\"><a href=\"#UIView-transform\" class=\"headerlink\" title=\"UIView.transform\"></a>UIView.transform</h3><p>最后一个方法是设置<code>UIView</code>的<code>transform</code>属性来强制旋转.<br>见下代码: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">//设置statusBar</div><div class=\"line\">[[UIApplication sharedApplication] setStatusBarOrientation:orientation];</div><div class=\"line\"></div><div class=\"line\">//计算旋转角度</div><div class=\"line\">float arch;</div><div class=\"line\">if (orientation == UIInterfaceOrientationLandscapeLeft)</div><div class=\"line\">\tarch = -M_PI_2;</div><div class=\"line\">else if (orientation == UIInterfaceOrientationLandscapeRight)</div><div class=\"line\">\tarch = M_PI_2;</div><div class=\"line\">else</div><div class=\"line\">\tarch = 0;</div><div class=\"line\"></div><div class=\"line\">//对navigationController.view 进行强制旋转</div><div class=\"line\">self.navigationController.view.transform = CGAffineTransformMakeRotation(arch);</div><div class=\"line\">self.navigationController.view.bounds = UIInterfaceOrientationIsLandscape(orientation) ? CGRectMake(0, 0, SCREEN_HEIGHT, SCREEN_WIDTH) : initialBounds;</div></pre></td></tr></table></figure>\n<p>需要注意的是: </p>\n<ol>\n<li>当然我们可以对当前<code>viewController</code>进行旋转, 对任何<code>view</code>旋转都可以.但是, 你会发现<code>navigationBar</code>还横在那里. 所以, 我们最好对一个占满全屏的<code>view</code>进行旋转. 在这里我们旋转的对象是<code>self.navigationController.view</code>, 当然<code>self.window</code>也可以, help yourself~</li>\n<li>我们需要显式的设置<code>bounds</code>. <code>UIKit</code>并不知道你偷偷摸摸干了这些事情, 所以没法帮你自动设置.</li>\n</ol>\n<p><br><br><br></p>\n<h2 id=\"如何应付产品经理的需求\"><a href=\"#如何应付产品经理的需求\" class=\"headerlink\" title=\"如何应付产品经理的需求\"></a>如何应付产品经理的需求</h2><p>有了以上三把武器, 我想基本可以应付BT产品经理所有的需求了. 但是这里还有一些小技巧.</p>\n<h3 id=\"直接锁死\"><a href=\"#直接锁死\" class=\"headerlink\" title=\"直接锁死\"></a>直接锁死</h3><p>(略)</p>\n<h3 id=\"随系统旋转\"><a href=\"#随系统旋转\" class=\"headerlink\" title=\"随系统旋转\"></a>随系统旋转</h3><h4 id=\"IOS5及之前\"><a href=\"#IOS5及之前\" class=\"headerlink\" title=\"IOS5及之前\"></a>IOS5及之前</h4><p>对于IOS5及之前的版本, 只要在对每个<code>viewController</code>重写<code>shouldAutorotateToInterfaceOrientation</code>方法, 即可方便的控制每个<code>viewController</code>的方向.  </p>\n<h4 id=\"IOS6及以后\"><a href=\"#IOS6及以后\" class=\"headerlink\" title=\"IOS6及以后\"></a>IOS6及以后</h4><p>对于IOS6及以后的版本, 如果想方便的单独控制每个<code>viewController</code>的方向. 则可以使用这样:</p>\n<ul>\n<li><p>对于非<code>modal</code>模式的<code>viewController</code>: </p>\n<ul>\n<li>如果不是<code>rootViewController</code>,则重写<code>supportedInterfaceOrientations</code>,<code>preferredInterfaceOrientationForPresentation</code>以及<code>shouldAutorotate</code>方法, 按照当前<code>viewController</code>的需要返回响应的值.</li>\n<li>如果是<code>rootViewController</code>,则如下重写方法:</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">-(NSUInteger)supportedInterfaceOrientations</div><div class=\"line\">&#123;</div><div class=\"line\">\treturn self.topMostViewController.supportedInterfaceOrientations;</div><div class=\"line\">&#125;</div><div class=\"line\">-(BOOL)shouldAutorotate</div><div class=\"line\">&#123;</div><div class=\"line\">    return [self.topMostViewController shouldAutorotate];</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation</div><div class=\"line\">&#123;</div><div class=\"line\">    return [self.topMostViewController preferredInterfaceOrientationForPresentation];</div><div class=\"line\">&#125;</div><div class=\"line\">-(UIViewController*)topMostViewController</div><div class=\"line\">&#123;</div><div class=\"line\">\t//找到当前正在显示的viewController并返回.</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>显而易见, 我们巧妙的绕开了<code>UIKit</code>只调用<code>rootViewController</code>的方法的规则. 把决定权交给了当前正在显示的<code>viewController</code>.    </p>\n<ul>\n<li>对于<code>modal</code>模式的<code>viewController</code>. 则按照需要重写<code>supportedInterfaceOrientations</code>,<code>preferredInterfaceOrientationForPresentation</code>以及<code>shouldAutorotate</code>方法即可.</li>\n</ul>\n<h3 id=\"强制旋转\"><a href=\"#强制旋转\" class=\"headerlink\" title=\"强制旋转\"></a>强制旋转</h3><p>有时候, 需要不随系统旋转, 而是强制旋转到某一个角度. 最典型的场景就是视频播放器, 当点击了全屏按钮的时候, 需要横过来显示.  </p>\n<ul>\n<li>对于IOS5及以前的版本, 可以用下面的方法:  </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) &#123;</div><div class=\"line\">\tSEL selector = NSSelectorFromString(@&quot;setOrientation:&quot;);</div><div class=\"line\">\tNSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];</div><div class=\"line\">\t[invocation setSelector:selector];</div><div class=\"line\">\t[invocation setTarget:[UIDevice currentDevice]];</div><div class=\"line\">\tint val = UIInterfaceOrientationLandscapeRight;</div><div class=\"line\">\t[invocation setArgument:&amp;val atIndex:2];</div><div class=\"line\">\t[invocation invoke];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>对于IOS6及以后的版本. <code>UIDevice.setOrientation</code>从隐藏变为移除.只能通过设置<code>UIView.transform</code>的方法来实现.</li>\n</ul>\n<p><br><br><br><br><br></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://blog.csdn.net/volcan1987/article/details/11563741\" target=\"_blank\" rel=\"external\">iOS两个强制旋转屏幕的方法</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/RespondingtoDeviceOrientationChanges/RespondingtoDeviceOrientationChanges.html\" target=\"_blank\" rel=\"external\">Supporting Multiple Interface Orientations</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>此博文主要针对IOS应用, 是屏幕旋转相关问题的一个总结. 主要内容有:  </p>\n<ol>\n<li>IOS5,6,7不同版的适配.  </li>\n<li>强制旋转和自动旋转.</li>\n</ol>\n<hr>\n<h2 id=\"改变Orientation的三种途径\"><a href=\"#改变Orientation的三种途径\" class=\"headerlink\" title=\"改变Orientation的三种途径\"></a>改变Orientation的三种途径</h2><p>这里, 咱们主要理清一下: <strong>到底有哪些设置可以改变屏幕旋转特性</strong>. 这样:  </p>\n<ul>\n<li>出现任何问题我们都可以从这几个途径中发现原因.</li>\n<li>灵活应付产品经理的各种需求.  </li>\n</ul>\n<p>首先我们得知道: </p>\n<ol>\n<li>当手机的重力感应打开的时候, 如果用户旋转手机, 系统会抛发<code>UIDeviceOrientationDidChangeNotification</code> 事件.  </li>\n<li>您可以分别设置<code>Application</code>和<code>UIViewcontroller</code>支持的旋转方向.<code>Application</code>的设置会影响整个App, <code>UIViewcontroller</code>的设置仅仅会影响一个<code>viewController</code>(IOS5和IOS6有所不同,下面会详细解释).  </li>\n<li>当<code>UIKit</code>收到<code>UIDeviceOrientationDidChangeNotification</code>事件的时候, 会根据<code>Application</code>和<code>UIViewcontroller</code>的设置, 如果双方都支持此方向, 则会自动屏幕旋转到这个方向. 更code的表达就是, 会对两个设置求<strong>与</strong>,得到可以支持的方向. 如果求<strong>与</strong>之后,没有任何可支持的方向, 则会抛发<code>UIApplicationInvalidInterfaceOrientationException</code>异常.</li>\n</ol>\n<p><br><br><br><br><br></p>\n<h3 id=\"Info-plist设置\"><a href=\"#Info-plist设置\" class=\"headerlink\" title=\"Info.plist设置\"></a>Info.plist设置</h3><p>在App的Info.plist里设置:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">key</th>\n<th style=\"text-align:left\">xcode name</th>\n<th style=\"text-align:left\">Summary</th>\n<th style=\"text-align:left\">avilable value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">UIInterfaceOrientation</td>\n<td style=\"text-align:left\">initial interface orientation</td>\n<td style=\"text-align:left\">Specifies the initial orientation of the app’s user interface.</td>\n<td style=\"text-align:left\">UIInterfaceOrientationPortrait,<br>UIInterfaceOrientationPortraitUpsideDown,<br>UIInterfaceOrientationLandscapeLeft,<br>UIInterfaceOrientationLandscapeRight</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UISupportedInterfaceOrientations</td>\n<td style=\"text-align:left\">Supported interface orientations</td>\n<td style=\"text-align:left\">Specifies the orientations that the app supports.</td>\n<td style=\"text-align:left\">UIInterfaceOrientationPortrait,<br>UIInterfaceOrientationPortraitUpsideDown,<br>UIInterfaceOrientationLandscapeLeft,<br>UIInterfaceOrientationLandscapeRight</td>\n</tr>\n</tbody>\n</table>\n<p>在Info.plist中设置之后,这个app里所有的<code>viewController</code>支持的自动旋转方向都只能是app支持的方向的子集.</p>\n<p><br><br><br><br><br></p>\n<h3 id=\"UIViewController\"><a href=\"#UIViewController\" class=\"headerlink\" title=\"UIViewController\"></a>UIViewController</h3><h4 id=\"IOS6-and-above\"><a href=\"#IOS6-and-above\" class=\"headerlink\" title=\"IOS6 and above\"></a>IOS6 and above</h4><h5 id=\"supportedInterfaceOrientations\"><a href=\"#supportedInterfaceOrientations\" class=\"headerlink\" title=\"supportedInterfaceOrientations\"></a>supportedInterfaceOrientations</h5><p>在IOS6及以上的版本中, 增添了方法<code>UIViewController.supportedInterfaceOrientations</code>. 此方法返回当前<code>viewController</code>支持的方向. 但是, 只有两种情况下此方法才会生效:</p>\n<ol>\n<li>当前<code>viewController</code>是<code>window</code>的<code>rootViewController</code>. </li>\n<li>当前<code>viewController</code>是<code>modal</code>模式的. 即, 此<code>viewController</code>是被调用<code>presentModalViewController</code>而显示出来的.</li>\n</ol>\n<p>在以上两种情况中,<code>UIViewController.supportedInterfaceOrientations</code>方法会作用于当前<code>viewController</code>和所有<code>childViewController</code>. 以上两种情况之外, <code>UIKit</code>并不会理会你的<code>supportedInterfaceOrientations</code>方法.</p>\n<p>举个栗子: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (NSUInteger)supportedInterfaceOrientations</div><div class=\"line\">&#123;</div><div class=\"line\">    return UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果某个<code>viewController</code>实现了以上方法. 则, 此<code>viewController</code>就支持竖方向和左旋转方向. 此<code>viewController</code>的所有<code>childViewController</code>也同时支持这两个方向, 不多不少. </p>\n<h5 id=\"preferredInterfaceOrientationForPresentation\"><a href=\"#preferredInterfaceOrientationForPresentation\" class=\"headerlink\" title=\"preferredInterfaceOrientationForPresentation\"></a>preferredInterfaceOrientationForPresentation</h5><p>此方法也属于<code>UIViewController</code>. 影响当前<code>viewController</code>的初始显示方向.<br>此方法也仅有在当前<code>viewController</code>是<code>rootViewController</code>或者是<code>modal</code>模式时才生效.</p>\n<h5 id=\"shouldAutorotate\"><a href=\"#shouldAutorotate\" class=\"headerlink\" title=\"shouldAutorotate\"></a>shouldAutorotate</h5><p>此方法,用于设置当前<code>viewController</code>是否支持自动旋转. 如果,你需要<code>viewController</code>暂停自动旋转一小会儿. 那么可以通过这个方法来实现.同样的, 此方法也仅有在当前<code>viewController</code>是<code>rootViewController</code>或者是<code>modal</code>模式时才生效.  </p>\n<h4 id=\"IOS5-and-before\"><a href=\"#IOS5-and-before\" class=\"headerlink\" title=\"IOS5 and before\"></a>IOS5 and before</h4><p>在IOS5和以前的版本中, 每个<code>viewController</code>都可以指定自己可自动旋转的方向.(<del>~这样不是挺好么?苹果那帮工程师为啥要搞成这样…</del>~).<br>每当<code>UIkit</code>收到<code>UIDeviceOrientationDidChangeNotification</code>消息的时候, 就会用以下方法询问当前显示的<code>viewController</code>支不支持此方向:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)orientation</div><div class=\"line\">&#123;</div><div class=\"line\">   if ((orientation == UIInterfaceOrientationPortrait) ||</div><div class=\"line\">       (orientation == UIInterfaceOrientationLandscapeLeft))</div><div class=\"line\">      return YES;</div><div class=\"line\"> </div><div class=\"line\">   return NO;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>特别要注意的是:你必须至少要对一个方向返回<code>YES</code>.(为难系统总不会有啥好事儿,你懂得).</p>\n<p><br><br><br><br><br></p>\n<h3 id=\"UIView-transform\"><a href=\"#UIView-transform\" class=\"headerlink\" title=\"UIView.transform\"></a>UIView.transform</h3><p>最后一个方法是设置<code>UIView</code>的<code>transform</code>属性来强制旋转.<br>见下代码: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">//设置statusBar</div><div class=\"line\">[[UIApplication sharedApplication] setStatusBarOrientation:orientation];</div><div class=\"line\"></div><div class=\"line\">//计算旋转角度</div><div class=\"line\">float arch;</div><div class=\"line\">if (orientation == UIInterfaceOrientationLandscapeLeft)</div><div class=\"line\">\tarch = -M_PI_2;</div><div class=\"line\">else if (orientation == UIInterfaceOrientationLandscapeRight)</div><div class=\"line\">\tarch = M_PI_2;</div><div class=\"line\">else</div><div class=\"line\">\tarch = 0;</div><div class=\"line\"></div><div class=\"line\">//对navigationController.view 进行强制旋转</div><div class=\"line\">self.navigationController.view.transform = CGAffineTransformMakeRotation(arch);</div><div class=\"line\">self.navigationController.view.bounds = UIInterfaceOrientationIsLandscape(orientation) ? CGRectMake(0, 0, SCREEN_HEIGHT, SCREEN_WIDTH) : initialBounds;</div></pre></td></tr></table></figure>\n<p>需要注意的是: </p>\n<ol>\n<li>当然我们可以对当前<code>viewController</code>进行旋转, 对任何<code>view</code>旋转都可以.但是, 你会发现<code>navigationBar</code>还横在那里. 所以, 我们最好对一个占满全屏的<code>view</code>进行旋转. 在这里我们旋转的对象是<code>self.navigationController.view</code>, 当然<code>self.window</code>也可以, help yourself~</li>\n<li>我们需要显式的设置<code>bounds</code>. <code>UIKit</code>并不知道你偷偷摸摸干了这些事情, 所以没法帮你自动设置.</li>\n</ol>\n<p><br><br><br></p>\n<h2 id=\"如何应付产品经理的需求\"><a href=\"#如何应付产品经理的需求\" class=\"headerlink\" title=\"如何应付产品经理的需求\"></a>如何应付产品经理的需求</h2><p>有了以上三把武器, 我想基本可以应付BT产品经理所有的需求了. 但是这里还有一些小技巧.</p>\n<h3 id=\"直接锁死\"><a href=\"#直接锁死\" class=\"headerlink\" title=\"直接锁死\"></a>直接锁死</h3><p>(略)</p>\n<h3 id=\"随系统旋转\"><a href=\"#随系统旋转\" class=\"headerlink\" title=\"随系统旋转\"></a>随系统旋转</h3><h4 id=\"IOS5及之前\"><a href=\"#IOS5及之前\" class=\"headerlink\" title=\"IOS5及之前\"></a>IOS5及之前</h4><p>对于IOS5及之前的版本, 只要在对每个<code>viewController</code>重写<code>shouldAutorotateToInterfaceOrientation</code>方法, 即可方便的控制每个<code>viewController</code>的方向.  </p>\n<h4 id=\"IOS6及以后\"><a href=\"#IOS6及以后\" class=\"headerlink\" title=\"IOS6及以后\"></a>IOS6及以后</h4><p>对于IOS6及以后的版本, 如果想方便的单独控制每个<code>viewController</code>的方向. 则可以使用这样:</p>\n<ul>\n<li><p>对于非<code>modal</code>模式的<code>viewController</code>: </p>\n<ul>\n<li>如果不是<code>rootViewController</code>,则重写<code>supportedInterfaceOrientations</code>,<code>preferredInterfaceOrientationForPresentation</code>以及<code>shouldAutorotate</code>方法, 按照当前<code>viewController</code>的需要返回响应的值.</li>\n<li>如果是<code>rootViewController</code>,则如下重写方法:</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">-(NSUInteger)supportedInterfaceOrientations</div><div class=\"line\">&#123;</div><div class=\"line\">\treturn self.topMostViewController.supportedInterfaceOrientations;</div><div class=\"line\">&#125;</div><div class=\"line\">-(BOOL)shouldAutorotate</div><div class=\"line\">&#123;</div><div class=\"line\">    return [self.topMostViewController shouldAutorotate];</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation</div><div class=\"line\">&#123;</div><div class=\"line\">    return [self.topMostViewController preferredInterfaceOrientationForPresentation];</div><div class=\"line\">&#125;</div><div class=\"line\">-(UIViewController*)topMostViewController</div><div class=\"line\">&#123;</div><div class=\"line\">\t//找到当前正在显示的viewController并返回.</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>显而易见, 我们巧妙的绕开了<code>UIKit</code>只调用<code>rootViewController</code>的方法的规则. 把决定权交给了当前正在显示的<code>viewController</code>.    </p>\n<ul>\n<li>对于<code>modal</code>模式的<code>viewController</code>. 则按照需要重写<code>supportedInterfaceOrientations</code>,<code>preferredInterfaceOrientationForPresentation</code>以及<code>shouldAutorotate</code>方法即可.</li>\n</ul>\n<h3 id=\"强制旋转\"><a href=\"#强制旋转\" class=\"headerlink\" title=\"强制旋转\"></a>强制旋转</h3><p>有时候, 需要不随系统旋转, 而是强制旋转到某一个角度. 最典型的场景就是视频播放器, 当点击了全屏按钮的时候, 需要横过来显示.  </p>\n<ul>\n<li>对于IOS5及以前的版本, 可以用下面的方法:  </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) &#123;</div><div class=\"line\">\tSEL selector = NSSelectorFromString(@&quot;setOrientation:&quot;);</div><div class=\"line\">\tNSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];</div><div class=\"line\">\t[invocation setSelector:selector];</div><div class=\"line\">\t[invocation setTarget:[UIDevice currentDevice]];</div><div class=\"line\">\tint val = UIInterfaceOrientationLandscapeRight;</div><div class=\"line\">\t[invocation setArgument:&amp;val atIndex:2];</div><div class=\"line\">\t[invocation invoke];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>对于IOS6及以后的版本. <code>UIDevice.setOrientation</code>从隐藏变为移除.只能通过设置<code>UIView.transform</code>的方法来实现.</li>\n</ul>\n<p><br><br><br><br><br></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://blog.csdn.net/volcan1987/article/details/11563741\" target=\"_blank\" rel=\"external\">iOS两个强制旋转屏幕的方法</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/RespondingtoDeviceOrientationChanges/RespondingtoDeviceOrientationChanges.html\" target=\"_blank\" rel=\"external\">Supporting Multiple Interface Orientations</a></li>\n</ul>\n"},{"title":"[iOS]VoIP解密","date":"2013-11-09T16:00:00.000Z","_content":"\n摘要：一般来说, IOS很少给App后台运行的权限. 仅有的方式就是 VoIP. IOS少有的为VoIP应用提供了**后台socket连接,定期唤醒并且随开机启动**的权限.而这些就是IOS上实现VoIP App的关键. 苹果官方文档对于的描述就短短的一页([点击这里][apple_reference_voip]),很多细节没有提及. 这篇微博通过具体实现和查阅资料,补充了这些细节.并且列举出了在实现过程中可能遇到的问题, 作为参考.\n\n---\n\n# 官方文档描述如是:\n\n**PS:**此节纯用来占座.如果你你E文不好或者想直接切入正题, 请看下一标题.  \n  \n  \n> There are several requirements for implementing a VoIP app:\n\n>1. Add the UIBackgroundModes key to your app’s Info.plist file. Set the value of this key to an array that includes the voip string.  \n1. Configure one of the app’s sockets for VoIP usage.  \nS\n2. Before moving to the background, call the setKeepAliveTimeout:handler: method to install a handler to be executed periodically. Your app can use this handler to maintain its service connection.  \n3. Configure your audio session to handle transitions to and from active use.  \n4. To ensure a better user experience on iPhone, use the Core Telephony framework to adjust your behavior in relation to cell-based phone calls; see Core Telephony Framework Reference.  \n5. To ensure good performance for your VoIP app, use the System Configuration framework to detect network changes and allow your app to sleep as much as possible.\n\n\n\n# 我的翻译:  \n关于IOS为VoIP应用提供的特殊权限和实现方法,我的描述如下. 我尽可能的涉及到voip实现的各种细节, 这样你能对这个运作机制有一个更好的**理解**,我觉得这远比单单贴几行代码有意义. 因为一个开发者在实际实现过程中遇到的千难险阻很少会体现在最终代码上, 就如你永远不知道台上的角儿在台下的挫折.  \n \n1. **IOS允许App的一个Socket在App切换到后台后仍然保持连接**. 这样,当有通话请求的时候,App能及时处理. 这个`socket`需要在应用第一次启动的时候创建, 并标记为\"此`socket`用于VoIP服务\". 这样当App切换到后台的时候,IOS会**接管**这个标记为\"用于VoIP服务\"的`socket`. 这个`socket`的响应函数(比如,一个`delegate`,或者是个`block`)会正常的响应, 就像App还在前台一样.  \n2. **10s魔咒**. 当`socket`有任何数据从服务端传来, 你在app里为`socket`写的响应函数都会做处理.但是, 你只有最多10s的时间来干你想干的事情. 也就意味着你在响应函数里新建一个大于10s的`timer`是没有意义的. 并且IOS并不保证给你足够10s的时间,视系统情况而定. \n3. 在`socket`的响应函数里, 你能通过`NSLocalNotification`来通知用户\"电话来了\". 除此之外, 你没法做其他任何视觉上的动作来提醒用户, 因为你的app还处于某个不知道的次元, 甚至连`window`都还没创建. \n4. 你永远也没有办法知道或者决定`NSLocalNotification`的样式是`banner`还是`alert`. 你也许钟爱后者, 但是决定权在用户手里.\n3. **允许在后台定期执行一段代码**. 你可以设定一个大于等于10分钟的时间`t`, 和一个定期执行的`handler`, IOS系统会在每次经过`t`时间的时候调用一次这个`handler`. 但是IOS不保证这个`handler`会准时运行, 只保证在时间`t`范围内的某个点会执行一次.   \n4. 我们通常用楼上的`handler`处理socket的断线重连操作. 因为网络不稳定, 或者用户开启飞行模式等原因, 我们用于voip服务的`socket`会断开连接. 在这个`handler`里,如果发现连接断开,我们只需要跟条目1一样的创建`socket`,设置一样的`socket`响应函数,一切又会恢复正常.\n5. 不建议这个`handler`做太多事情, 因为它也有**10s魔咒\u001d**.(据不完全统计,苹果所有的后台处理都有这个10s限制. 不保证绝对正确哈, 仅供参考)\n6. **自启服务**. 当IOS重新启动, 或者你的app因为其他原因退出时, IOS会马上启动你注册为voip的app, 你可以很迅速的恢复`socket`连接. 但是, 从底部多任务栏中手动关闭应用除外.更\"code\"的说明是:当程序退出的`exitcode != 0`,IOS会重启你的app.经试验发现,从底部多任务栏关闭的时候,程序的`exitcode == 0`.\n7. 如果你亲爱的用户是一个典型的\"app终结者\",那么你还剩最后一条路来通知来电提醒:`NSRemoteNotification`.  你也许会被`NSRemoteNotification`的可靠性和实时性折腾的抓狂, 但是, 谁让你选了IOS? 你享受了封闭带来的传世体验, 也得承受封闭的限制.  \n7. 当条目8描述的情况发生之后,app的`application:didFinishLaunchingWithOptions:`会被调用. 但是,请时刻提醒自己我们的app仍然处于后台. 我们以前总在这里\u001c创建`window`创建`rootController`, 但现在不必了. 现在我们需要的就是把可爱的`socket`连上, 像在条目1里一样,让一切回归正常(我不去写歌词真浪费了^_^).\n8. 在`application:didFinishLaunchingWithOptions:`里你能通过`[application applicationState] == UIApplicationStateBackground`来判断是正常启动应用还是系统自动启动, 然后决定该创建`window`还是创建voip的`socket`.\n9. 如果你看完上面一头雾水. 请回炉重造, 传送门:[Programming with Objective-C][apple_refrence_objective_c_program], [iOS Develop Library][apple_refrence_ios_develop].\n  \n\n\n\n\n[apple_reference_voip]: https://developer.apple.com/library/ios/documentation/iphone/conceptual/iphoneosprogrammingguide/AdvancedAppTricks/AdvancedAppTricks.html#//apple_ref/doc/uid/TP40007072-CH7-SW12\n[apple_refrence_objective_c_program]: https://developer.apple.com/library/mac/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html\n[apple_refrence_ios_develop]: https://developer.apple.com/library/ios/navigation/\n","source":"_posts/技术/[iOS]VoIP解密.md","raw":"---\ntitle: '[iOS]VoIP解密'\ndate: 2013-11-10\ntags: \n- ios\n- voip\n- socket\n- background\n- iphone\ncategories: \n- 技术\n---\n\n摘要：一般来说, IOS很少给App后台运行的权限. 仅有的方式就是 VoIP. IOS少有的为VoIP应用提供了**后台socket连接,定期唤醒并且随开机启动**的权限.而这些就是IOS上实现VoIP App的关键. 苹果官方文档对于的描述就短短的一页([点击这里][apple_reference_voip]),很多细节没有提及. 这篇微博通过具体实现和查阅资料,补充了这些细节.并且列举出了在实现过程中可能遇到的问题, 作为参考.\n\n---\n\n# 官方文档描述如是:\n\n**PS:**此节纯用来占座.如果你你E文不好或者想直接切入正题, 请看下一标题.  \n  \n  \n> There are several requirements for implementing a VoIP app:\n\n>1. Add the UIBackgroundModes key to your app’s Info.plist file. Set the value of this key to an array that includes the voip string.  \n1. Configure one of the app’s sockets for VoIP usage.  \nS\n2. Before moving to the background, call the setKeepAliveTimeout:handler: method to install a handler to be executed periodically. Your app can use this handler to maintain its service connection.  \n3. Configure your audio session to handle transitions to and from active use.  \n4. To ensure a better user experience on iPhone, use the Core Telephony framework to adjust your behavior in relation to cell-based phone calls; see Core Telephony Framework Reference.  \n5. To ensure good performance for your VoIP app, use the System Configuration framework to detect network changes and allow your app to sleep as much as possible.\n\n\n\n# 我的翻译:  \n关于IOS为VoIP应用提供的特殊权限和实现方法,我的描述如下. 我尽可能的涉及到voip实现的各种细节, 这样你能对这个运作机制有一个更好的**理解**,我觉得这远比单单贴几行代码有意义. 因为一个开发者在实际实现过程中遇到的千难险阻很少会体现在最终代码上, 就如你永远不知道台上的角儿在台下的挫折.  \n \n1. **IOS允许App的一个Socket在App切换到后台后仍然保持连接**. 这样,当有通话请求的时候,App能及时处理. 这个`socket`需要在应用第一次启动的时候创建, 并标记为\"此`socket`用于VoIP服务\". 这样当App切换到后台的时候,IOS会**接管**这个标记为\"用于VoIP服务\"的`socket`. 这个`socket`的响应函数(比如,一个`delegate`,或者是个`block`)会正常的响应, 就像App还在前台一样.  \n2. **10s魔咒**. 当`socket`有任何数据从服务端传来, 你在app里为`socket`写的响应函数都会做处理.但是, 你只有最多10s的时间来干你想干的事情. 也就意味着你在响应函数里新建一个大于10s的`timer`是没有意义的. 并且IOS并不保证给你足够10s的时间,视系统情况而定. \n3. 在`socket`的响应函数里, 你能通过`NSLocalNotification`来通知用户\"电话来了\". 除此之外, 你没法做其他任何视觉上的动作来提醒用户, 因为你的app还处于某个不知道的次元, 甚至连`window`都还没创建. \n4. 你永远也没有办法知道或者决定`NSLocalNotification`的样式是`banner`还是`alert`. 你也许钟爱后者, 但是决定权在用户手里.\n3. **允许在后台定期执行一段代码**. 你可以设定一个大于等于10分钟的时间`t`, 和一个定期执行的`handler`, IOS系统会在每次经过`t`时间的时候调用一次这个`handler`. 但是IOS不保证这个`handler`会准时运行, 只保证在时间`t`范围内的某个点会执行一次.   \n4. 我们通常用楼上的`handler`处理socket的断线重连操作. 因为网络不稳定, 或者用户开启飞行模式等原因, 我们用于voip服务的`socket`会断开连接. 在这个`handler`里,如果发现连接断开,我们只需要跟条目1一样的创建`socket`,设置一样的`socket`响应函数,一切又会恢复正常.\n5. 不建议这个`handler`做太多事情, 因为它也有**10s魔咒\u001d**.(据不完全统计,苹果所有的后台处理都有这个10s限制. 不保证绝对正确哈, 仅供参考)\n6. **自启服务**. 当IOS重新启动, 或者你的app因为其他原因退出时, IOS会马上启动你注册为voip的app, 你可以很迅速的恢复`socket`连接. 但是, 从底部多任务栏中手动关闭应用除外.更\"code\"的说明是:当程序退出的`exitcode != 0`,IOS会重启你的app.经试验发现,从底部多任务栏关闭的时候,程序的`exitcode == 0`.\n7. 如果你亲爱的用户是一个典型的\"app终结者\",那么你还剩最后一条路来通知来电提醒:`NSRemoteNotification`.  你也许会被`NSRemoteNotification`的可靠性和实时性折腾的抓狂, 但是, 谁让你选了IOS? 你享受了封闭带来的传世体验, 也得承受封闭的限制.  \n7. 当条目8描述的情况发生之后,app的`application:didFinishLaunchingWithOptions:`会被调用. 但是,请时刻提醒自己我们的app仍然处于后台. 我们以前总在这里\u001c创建`window`创建`rootController`, 但现在不必了. 现在我们需要的就是把可爱的`socket`连上, 像在条目1里一样,让一切回归正常(我不去写歌词真浪费了^_^).\n8. 在`application:didFinishLaunchingWithOptions:`里你能通过`[application applicationState] == UIApplicationStateBackground`来判断是正常启动应用还是系统自动启动, 然后决定该创建`window`还是创建voip的`socket`.\n9. 如果你看完上面一头雾水. 请回炉重造, 传送门:[Programming with Objective-C][apple_refrence_objective_c_program], [iOS Develop Library][apple_refrence_ios_develop].\n  \n\n\n\n\n[apple_reference_voip]: https://developer.apple.com/library/ios/documentation/iphone/conceptual/iphoneosprogrammingguide/AdvancedAppTricks/AdvancedAppTricks.html#//apple_ref/doc/uid/TP40007072-CH7-SW12\n[apple_refrence_objective_c_program]: https://developer.apple.com/library/mac/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html\n[apple_refrence_ios_develop]: https://developer.apple.com/library/ios/navigation/\n","slug":"技术/[iOS]VoIP解密","published":1,"updated":"2017-07-26T16:01:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kr70058q0d4hviwwuhh","content":"<p>摘要：一般来说, IOS很少给App后台运行的权限. 仅有的方式就是 VoIP. IOS少有的为VoIP应用提供了<strong>后台socket连接,定期唤醒并且随开机启动</strong>的权限.而这些就是IOS上实现VoIP App的关键. 苹果官方文档对于的描述就短短的一页(<a href=\"https://developer.apple.com/library/ios/documentation/iphone/conceptual/iphoneosprogrammingguide/AdvancedAppTricks/AdvancedAppTricks.html#//apple_ref/doc/uid/TP40007072-CH7-SW12\" target=\"_blank\" rel=\"external\">点击这里</a>),很多细节没有提及. 这篇微博通过具体实现和查阅资料,补充了这些细节.并且列举出了在实现过程中可能遇到的问题, 作为参考.</p>\n<hr>\n<h1 id=\"官方文档描述如是\"><a href=\"#官方文档描述如是\" class=\"headerlink\" title=\"官方文档描述如是:\"></a>官方文档描述如是:</h1><p><strong>PS:</strong>此节纯用来占座.如果你你E文不好或者想直接切入正题, 请看下一标题.  </p>\n<blockquote>\n<p>There are several requirements for implementing a VoIP app:</p>\n<ol>\n<li>Add the UIBackgroundModes key to your app’s Info.plist file. Set the value of this key to an array that includes the voip string.  </li>\n<li>Configure one of the app’s sockets for VoIP usage.<br>S</li>\n<li>Before moving to the background, call the setKeepAliveTimeout:handler: method to install a handler to be executed periodically. Your app can use this handler to maintain its service connection.  </li>\n<li>Configure your audio session to handle transitions to and from active use.  </li>\n<li>To ensure a better user experience on iPhone, use the Core Telephony framework to adjust your behavior in relation to cell-based phone calls; see Core Telephony Framework Reference.  </li>\n<li>To ensure good performance for your VoIP app, use the System Configuration framework to detect network changes and allow your app to sleep as much as possible.</li>\n</ol>\n</blockquote>\n<h1 id=\"我的翻译\"><a href=\"#我的翻译\" class=\"headerlink\" title=\"我的翻译:\"></a>我的翻译:</h1><p>关于IOS为VoIP应用提供的特殊权限和实现方法,我的描述如下. 我尽可能的涉及到voip实现的各种细节, 这样你能对这个运作机制有一个更好的<strong>理解</strong>,我觉得这远比单单贴几行代码有意义. 因为一个开发者在实际实现过程中遇到的千难险阻很少会体现在最终代码上, 就如你永远不知道台上的角儿在台下的挫折.  </p>\n<ol>\n<li><strong>IOS允许App的一个Socket在App切换到后台后仍然保持连接</strong>. 这样,当有通话请求的时候,App能及时处理. 这个<code>socket</code>需要在应用第一次启动的时候创建, 并标记为”此<code>socket</code>用于VoIP服务”. 这样当App切换到后台的时候,IOS会<strong>接管</strong>这个标记为”用于VoIP服务”的<code>socket</code>. 这个<code>socket</code>的响应函数(比如,一个<code>delegate</code>,或者是个<code>block</code>)会正常的响应, 就像App还在前台一样.  </li>\n<li><strong>10s魔咒</strong>. 当<code>socket</code>有任何数据从服务端传来, 你在app里为<code>socket</code>写的响应函数都会做处理.但是, 你只有最多10s的时间来干你想干的事情. 也就意味着你在响应函数里新建一个大于10s的<code>timer</code>是没有意义的. 并且IOS并不保证给你足够10s的时间,视系统情况而定. </li>\n<li>在<code>socket</code>的响应函数里, 你能通过<code>NSLocalNotification</code>来通知用户”电话来了”. 除此之外, 你没法做其他任何视觉上的动作来提醒用户, 因为你的app还处于某个不知道的次元, 甚至连<code>window</code>都还没创建. </li>\n<li>你永远也没有办法知道或者决定<code>NSLocalNotification</code>的样式是<code>banner</code>还是<code>alert</code>. 你也许钟爱后者, 但是决定权在用户手里.</li>\n<li><strong>允许在后台定期执行一段代码</strong>. 你可以设定一个大于等于10分钟的时间<code>t</code>, 和一个定期执行的<code>handler</code>, IOS系统会在每次经过<code>t</code>时间的时候调用一次这个<code>handler</code>. 但是IOS不保证这个<code>handler</code>会准时运行, 只保证在时间<code>t</code>范围内的某个点会执行一次.   </li>\n<li>我们通常用楼上的<code>handler</code>处理socket的断线重连操作. 因为网络不稳定, 或者用户开启飞行模式等原因, 我们用于voip服务的<code>socket</code>会断开连接. 在这个<code>handler</code>里,如果发现连接断开,我们只需要跟条目1一样的创建<code>socket</code>,设置一样的<code>socket</code>响应函数,一切又会恢复正常.</li>\n<li>不建议这个<code>handler</code>做太多事情, 因为它也有<strong>10s魔咒\u001d</strong>.(据不完全统计,苹果所有的后台处理都有这个10s限制. 不保证绝对正确哈, 仅供参考)</li>\n<li><strong>自启服务</strong>. 当IOS重新启动, 或者你的app因为其他原因退出时, IOS会马上启动你注册为voip的app, 你可以很迅速的恢复<code>socket</code>连接. 但是, 从底部多任务栏中手动关闭应用除外.更”code”的说明是:当程序退出的<code>exitcode != 0</code>,IOS会重启你的app.经试验发现,从底部多任务栏关闭的时候,程序的<code>exitcode == 0</code>.</li>\n<li>如果你亲爱的用户是一个典型的”app终结者”,那么你还剩最后一条路来通知来电提醒:<code>NSRemoteNotification</code>.  你也许会被<code>NSRemoteNotification</code>的可靠性和实时性折腾的抓狂, 但是, 谁让你选了IOS? 你享受了封闭带来的传世体验, 也得承受封闭的限制.  </li>\n<li>当条目8描述的情况发生之后,app的<code>application:didFinishLaunchingWithOptions:</code>会被调用. 但是,请时刻提醒自己我们的app仍然处于后台. 我们以前总在这里\u001c创建<code>window</code>创建<code>rootController</code>, 但现在不必了. 现在我们需要的就是把可爱的<code>socket</code>连上, 像在条目1里一样,让一切回归正常(我不去写歌词真浪费了^_^).</li>\n<li>在<code>application:didFinishLaunchingWithOptions:</code>里你能通过<code>[application applicationState] == UIApplicationStateBackground</code>来判断是正常启动应用还是系统自动启动, 然后决定该创建<code>window</code>还是创建voip的<code>socket</code>.</li>\n<li>如果你看完上面一头雾水. 请回炉重造, 传送门:<a href=\"https://developer.apple.com/library/mac/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html\" target=\"_blank\" rel=\"external\">Programming with Objective-C</a>, <a href=\"https://developer.apple.com/library/ios/navigation/\" target=\"_blank\" rel=\"external\">iOS Develop Library</a>.</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：一般来说, IOS很少给App后台运行的权限. 仅有的方式就是 VoIP. IOS少有的为VoIP应用提供了<strong>后台socket连接,定期唤醒并且随开机启动</strong>的权限.而这些就是IOS上实现VoIP App的关键. 苹果官方文档对于的描述就短短的一页(<a href=\"https://developer.apple.com/library/ios/documentation/iphone/conceptual/iphoneosprogrammingguide/AdvancedAppTricks/AdvancedAppTricks.html#//apple_ref/doc/uid/TP40007072-CH7-SW12\" target=\"_blank\" rel=\"external\">点击这里</a>),很多细节没有提及. 这篇微博通过具体实现和查阅资料,补充了这些细节.并且列举出了在实现过程中可能遇到的问题, 作为参考.</p>\n<hr>\n<h1 id=\"官方文档描述如是\"><a href=\"#官方文档描述如是\" class=\"headerlink\" title=\"官方文档描述如是:\"></a>官方文档描述如是:</h1><p><strong>PS:</strong>此节纯用来占座.如果你你E文不好或者想直接切入正题, 请看下一标题.  </p>\n<blockquote>\n<p>There are several requirements for implementing a VoIP app:</p>\n<ol>\n<li>Add the UIBackgroundModes key to your app’s Info.plist file. Set the value of this key to an array that includes the voip string.  </li>\n<li>Configure one of the app’s sockets for VoIP usage.<br>S</li>\n<li>Before moving to the background, call the setKeepAliveTimeout:handler: method to install a handler to be executed periodically. Your app can use this handler to maintain its service connection.  </li>\n<li>Configure your audio session to handle transitions to and from active use.  </li>\n<li>To ensure a better user experience on iPhone, use the Core Telephony framework to adjust your behavior in relation to cell-based phone calls; see Core Telephony Framework Reference.  </li>\n<li>To ensure good performance for your VoIP app, use the System Configuration framework to detect network changes and allow your app to sleep as much as possible.</li>\n</ol>\n</blockquote>\n<h1 id=\"我的翻译\"><a href=\"#我的翻译\" class=\"headerlink\" title=\"我的翻译:\"></a>我的翻译:</h1><p>关于IOS为VoIP应用提供的特殊权限和实现方法,我的描述如下. 我尽可能的涉及到voip实现的各种细节, 这样你能对这个运作机制有一个更好的<strong>理解</strong>,我觉得这远比单单贴几行代码有意义. 因为一个开发者在实际实现过程中遇到的千难险阻很少会体现在最终代码上, 就如你永远不知道台上的角儿在台下的挫折.  </p>\n<ol>\n<li><strong>IOS允许App的一个Socket在App切换到后台后仍然保持连接</strong>. 这样,当有通话请求的时候,App能及时处理. 这个<code>socket</code>需要在应用第一次启动的时候创建, 并标记为”此<code>socket</code>用于VoIP服务”. 这样当App切换到后台的时候,IOS会<strong>接管</strong>这个标记为”用于VoIP服务”的<code>socket</code>. 这个<code>socket</code>的响应函数(比如,一个<code>delegate</code>,或者是个<code>block</code>)会正常的响应, 就像App还在前台一样.  </li>\n<li><strong>10s魔咒</strong>. 当<code>socket</code>有任何数据从服务端传来, 你在app里为<code>socket</code>写的响应函数都会做处理.但是, 你只有最多10s的时间来干你想干的事情. 也就意味着你在响应函数里新建一个大于10s的<code>timer</code>是没有意义的. 并且IOS并不保证给你足够10s的时间,视系统情况而定. </li>\n<li>在<code>socket</code>的响应函数里, 你能通过<code>NSLocalNotification</code>来通知用户”电话来了”. 除此之外, 你没法做其他任何视觉上的动作来提醒用户, 因为你的app还处于某个不知道的次元, 甚至连<code>window</code>都还没创建. </li>\n<li>你永远也没有办法知道或者决定<code>NSLocalNotification</code>的样式是<code>banner</code>还是<code>alert</code>. 你也许钟爱后者, 但是决定权在用户手里.</li>\n<li><strong>允许在后台定期执行一段代码</strong>. 你可以设定一个大于等于10分钟的时间<code>t</code>, 和一个定期执行的<code>handler</code>, IOS系统会在每次经过<code>t</code>时间的时候调用一次这个<code>handler</code>. 但是IOS不保证这个<code>handler</code>会准时运行, 只保证在时间<code>t</code>范围内的某个点会执行一次.   </li>\n<li>我们通常用楼上的<code>handler</code>处理socket的断线重连操作. 因为网络不稳定, 或者用户开启飞行模式等原因, 我们用于voip服务的<code>socket</code>会断开连接. 在这个<code>handler</code>里,如果发现连接断开,我们只需要跟条目1一样的创建<code>socket</code>,设置一样的<code>socket</code>响应函数,一切又会恢复正常.</li>\n<li>不建议这个<code>handler</code>做太多事情, 因为它也有<strong>10s魔咒\u001d</strong>.(据不完全统计,苹果所有的后台处理都有这个10s限制. 不保证绝对正确哈, 仅供参考)</li>\n<li><strong>自启服务</strong>. 当IOS重新启动, 或者你的app因为其他原因退出时, IOS会马上启动你注册为voip的app, 你可以很迅速的恢复<code>socket</code>连接. 但是, 从底部多任务栏中手动关闭应用除外.更”code”的说明是:当程序退出的<code>exitcode != 0</code>,IOS会重启你的app.经试验发现,从底部多任务栏关闭的时候,程序的<code>exitcode == 0</code>.</li>\n<li>如果你亲爱的用户是一个典型的”app终结者”,那么你还剩最后一条路来通知来电提醒:<code>NSRemoteNotification</code>.  你也许会被<code>NSRemoteNotification</code>的可靠性和实时性折腾的抓狂, 但是, 谁让你选了IOS? 你享受了封闭带来的传世体验, 也得承受封闭的限制.  </li>\n<li>当条目8描述的情况发生之后,app的<code>application:didFinishLaunchingWithOptions:</code>会被调用. 但是,请时刻提醒自己我们的app仍然处于后台. 我们以前总在这里\u001c创建<code>window</code>创建<code>rootController</code>, 但现在不必了. 现在我们需要的就是把可爱的<code>socket</code>连上, 像在条目1里一样,让一切回归正常(我不去写歌词真浪费了^_^).</li>\n<li>在<code>application:didFinishLaunchingWithOptions:</code>里你能通过<code>[application applicationState] == UIApplicationStateBackground</code>来判断是正常启动应用还是系统自动启动, 然后决定该创建<code>window</code>还是创建voip的<code>socket</code>.</li>\n<li>如果你看完上面一头雾水. 请回炉重造, 传送门:<a href=\"https://developer.apple.com/library/mac/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html\" target=\"_blank\" rel=\"external\">Programming with Objective-C</a>, <a href=\"https://developer.apple.com/library/ios/navigation/\" target=\"_blank\" rel=\"external\">iOS Develop Library</a>.</li>\n</ol>\n"},{"title":"[opencv]Windows平台下编译openCV","date":"2013-07-22T08:06:00.000Z","_content":"\n简介: 从官网上下载的 opencv 包里有为windows平台编译好的现成的 *.dll 文件, 可以在我们的项目中使用. 但是如果我们要训练自己的 分类器, 就需要用到 haartraining 等工具. 这些工具需要我们自己编译. 本文详细讲解了这一过程\n\n见<http://www.cnblogs.com/jhzhu/p/3216840.html>","source":"_posts/技术/[opencv]Windows平台下编译openCV.md","raw":"---\ntitle: '[opencv]Windows平台下编译openCV'\ndate:  2013-07-22 16:06\ntags: \n- opencv\n- windows\n- cmake\n---\n\n简介: 从官网上下载的 opencv 包里有为windows平台编译好的现成的 *.dll 文件, 可以在我们的项目中使用. 但是如果我们要训练自己的 分类器, 就需要用到 haartraining 等工具. 这些工具需要我们自己编译. 本文详细讲解了这一过程\n\n见<http://www.cnblogs.com/jhzhu/p/3216840.html>","slug":"技术/[opencv]Windows平台下编译openCV","published":1,"updated":"2017-07-26T16:05:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6kr9005bq0d45vrej73o","content":"<p>简介: 从官网上下载的 opencv 包里有为windows平台编译好的现成的 *.dll 文件, 可以在我们的项目中使用. 但是如果我们要训练自己的 分类器, 就需要用到 haartraining 等工具. 这些工具需要我们自己编译. 本文详细讲解了这一过程</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3216840.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3216840.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介: 从官网上下载的 opencv 包里有为windows平台编译好的现成的 *.dll 文件, 可以在我们的项目中使用. 但是如果我们要训练自己的 分类器, 就需要用到 haartraining 等工具. 这些工具需要我们自己编译. 本文详细讲解了这一过程</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3216840.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3216840.html</a></p>\n"},{"title":"[opencv]opencv VS2012 环境搭建","date":"2013-07-07T02:32:00.000Z","description":"Windows 下, VS2012, opencv 环境配置. 多图, 超详细入门教程.","_content":"\n\n见<http://www.cnblogs.com/jhzhu/p/3175832.html>","source":"_posts/技术/[opencv]opencv VS2012 环境搭建.md","raw":"---\ntitle: '[opencv]opencv VS2012 环境搭建'\ndate:  2013-07-07 10:32\ndescription: Windows 下, VS2012, opencv 环境配置. 多图, 超详细入门教程.\ntags:  \n- opencv\n- 图像处理\ncategories: \n- 技术\n---\n\n\n见<http://www.cnblogs.com/jhzhu/p/3175832.html>","slug":"技术/[opencv]opencv VS2012 环境搭建","published":1,"updated":"2017-07-26T16:04:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krc005fq0d4rmhgfnrz","content":"<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3175832.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3175832.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3175832.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3175832.html</a></p>\n"},{"title":"[opencv]训练自己的识别器","date":"2013-07-26T08:06:00.000Z","description":"利用 haar 特征构建自己的识别器.","_content":"\n\n简介: 利用 haar 特征构建自己的识别器.\n\n见<http://www.cnblogs.com/jhzhu/p/3217297.html>","source":"_posts/技术/[opencv]训练自己的识别器.md","raw":"---\ntitle: '[opencv]训练自己的识别器'\ndate:  2013-07-26 16:06\ndescription: 利用 haar 特征构建自己的识别器.\ntags: \n- opencv\n- haar\n- taining\n- classifiy\n- 分类器\ncategories: \n- 技术\n---\n\n\n简介: 利用 haar 特征构建自己的识别器.\n\n见<http://www.cnblogs.com/jhzhu/p/3217297.html>","slug":"技术/[opencv]训练自己的识别器","published":1,"updated":"2017-07-26T16:04:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krj005iq0d4jl3yn5n8","content":"<p>简介: 利用 haar 特征构建自己的识别器.</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3217297.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3217297.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介: 利用 haar 特征构建自己的识别器.</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3217297.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3217297.html</a></p>\n"},{"title":"[other]该如何使用Exception","date":"2016-03-07T04:23:00.000Z","_content":"\n摘要：怎么处理别人的Exception？什么时候改抛发自己的Exception？\n\n# Exception有什么好处?\n\n1. 让你的错误信息更完整，接口更统一。\n2. 常见的，用函数返回至来标记错误的方式，灵活性很差。\n\n\n#  Gunjan Doshi的博客\n\nGunjan Doshi的博客[Best Practices for Exception Handling](http://www.onjava.com/pub/a/onjava/2003/11/19/exceptions.html)谈了一些经验，总结来说就是:\n\n## 如何抛发自己的Exception\n\n1.  如果你的客户端程序能处理它，你就抛发 checked exception；如果你的客户端程序对这个exception除了打印出来什么也做不了，就throw unchecked exception。\n2. 如果一个exception你处理不了，请不要单纯的打印出来，最好的方法是继续把它封装成 unchecked exception 继续throw.\n3. 如果你define一个新的exception，一定要提供更多的信息，不要让你的class定义只有构造函数。如果觉得没什么更多的信息，那就不要define，直接用 Exception。\n\n\n## 如何处理别人的Exception\n\n1. 在try{}catch{}后一定要记得清理现场，处理后事。e.g. 如果发生数据库连接异常，一定要在finally里断开连接。\n2. 不要用exception做flow control，效率低的一B。\n3. 如果某个exception你处理不了，重新抛发它，千万不要包庇隐藏它。\n4. 千万不要出现`catch(Exception e)`这样的代码，它会把所有的exception捕捉在这里，你能处理的，不能处理的，全在。\n5. 一个exception只log一次。\n\n# The Digital Gabeg 在 Github 上的回答\n\n当且仅当你的方法的最基本的前提假设不满足的时候，才抛发异常。\n\n举个例子：\n\n```java\nboolean isList(Object obj);//判断obj是否是List<>.\nboolean getLengthOfList(Object obj);//获得obj的长度。\n```\n\n现在，假设传入的参数不是`List<>`类型，那么，函数`isList()`就不应该throw exception. 因为这完全在意料之中啊。而函数`getLengthOfList()`的前提假设就是你传进来的参数必须是`List<>`，否则这个函数就木有意义；此时，你传进来的参数，我处理不了，所以要throw exception。\n\n\n\n","source":"_posts/技术/[other]该如何使用Exception.md","raw":"---\ntitle: '[other]该如何使用Exception'\ntags: \n- exception \n- oo\ndate: 2016-03-07 12:23\ncategories: \n- 技术\n---\n\n摘要：怎么处理别人的Exception？什么时候改抛发自己的Exception？\n\n# Exception有什么好处?\n\n1. 让你的错误信息更完整，接口更统一。\n2. 常见的，用函数返回至来标记错误的方式，灵活性很差。\n\n\n#  Gunjan Doshi的博客\n\nGunjan Doshi的博客[Best Practices for Exception Handling](http://www.onjava.com/pub/a/onjava/2003/11/19/exceptions.html)谈了一些经验，总结来说就是:\n\n## 如何抛发自己的Exception\n\n1.  如果你的客户端程序能处理它，你就抛发 checked exception；如果你的客户端程序对这个exception除了打印出来什么也做不了，就throw unchecked exception。\n2. 如果一个exception你处理不了，请不要单纯的打印出来，最好的方法是继续把它封装成 unchecked exception 继续throw.\n3. 如果你define一个新的exception，一定要提供更多的信息，不要让你的class定义只有构造函数。如果觉得没什么更多的信息，那就不要define，直接用 Exception。\n\n\n## 如何处理别人的Exception\n\n1. 在try{}catch{}后一定要记得清理现场，处理后事。e.g. 如果发生数据库连接异常，一定要在finally里断开连接。\n2. 不要用exception做flow control，效率低的一B。\n3. 如果某个exception你处理不了，重新抛发它，千万不要包庇隐藏它。\n4. 千万不要出现`catch(Exception e)`这样的代码，它会把所有的exception捕捉在这里，你能处理的，不能处理的，全在。\n5. 一个exception只log一次。\n\n# The Digital Gabeg 在 Github 上的回答\n\n当且仅当你的方法的最基本的前提假设不满足的时候，才抛发异常。\n\n举个例子：\n\n```java\nboolean isList(Object obj);//判断obj是否是List<>.\nboolean getLengthOfList(Object obj);//获得obj的长度。\n```\n\n现在，假设传入的参数不是`List<>`类型，那么，函数`isList()`就不应该throw exception. 因为这完全在意料之中啊。而函数`getLengthOfList()`的前提假设就是你传进来的参数必须是`List<>`，否则这个函数就木有意义；此时，你传进来的参数，我处理不了，所以要throw exception。\n\n\n\n","slug":"技术/[other]该如何使用Exception","published":1,"updated":"2017-07-26T16:06:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krn005mq0d49irjj64u","content":"<p>摘要：怎么处理别人的Exception？什么时候改抛发自己的Exception？</p>\n<h1 id=\"Exception有什么好处\"><a href=\"#Exception有什么好处\" class=\"headerlink\" title=\"Exception有什么好处?\"></a>Exception有什么好处?</h1><ol>\n<li>让你的错误信息更完整，接口更统一。</li>\n<li>常见的，用函数返回至来标记错误的方式，灵活性很差。</li>\n</ol>\n<h1 id=\"Gunjan-Doshi的博客\"><a href=\"#Gunjan-Doshi的博客\" class=\"headerlink\" title=\"Gunjan Doshi的博客\"></a>Gunjan Doshi的博客</h1><p>Gunjan Doshi的博客<a href=\"http://www.onjava.com/pub/a/onjava/2003/11/19/exceptions.html\" target=\"_blank\" rel=\"external\">Best Practices for Exception Handling</a>谈了一些经验，总结来说就是:</p>\n<h2 id=\"如何抛发自己的Exception\"><a href=\"#如何抛发自己的Exception\" class=\"headerlink\" title=\"如何抛发自己的Exception\"></a>如何抛发自己的Exception</h2><ol>\n<li>如果你的客户端程序能处理它，你就抛发 checked exception；如果你的客户端程序对这个exception除了打印出来什么也做不了，就throw unchecked exception。</li>\n<li>如果一个exception你处理不了，请不要单纯的打印出来，最好的方法是继续把它封装成 unchecked exception 继续throw.</li>\n<li>如果你define一个新的exception，一定要提供更多的信息，不要让你的class定义只有构造函数。如果觉得没什么更多的信息，那就不要define，直接用 Exception。</li>\n</ol>\n<h2 id=\"如何处理别人的Exception\"><a href=\"#如何处理别人的Exception\" class=\"headerlink\" title=\"如何处理别人的Exception\"></a>如何处理别人的Exception</h2><ol>\n<li>在try{}catch{}后一定要记得清理现场，处理后事。e.g. 如果发生数据库连接异常，一定要在finally里断开连接。</li>\n<li>不要用exception做flow control，效率低的一B。</li>\n<li>如果某个exception你处理不了，重新抛发它，千万不要包庇隐藏它。</li>\n<li>千万不要出现<code>catch(Exception e)</code>这样的代码，它会把所有的exception捕捉在这里，你能处理的，不能处理的，全在。</li>\n<li>一个exception只log一次。</li>\n</ol>\n<h1 id=\"The-Digital-Gabeg-在-Github-上的回答\"><a href=\"#The-Digital-Gabeg-在-Github-上的回答\" class=\"headerlink\" title=\"The Digital Gabeg 在 Github 上的回答\"></a>The Digital Gabeg 在 Github 上的回答</h1><p>当且仅当你的方法的最基本的前提假设不满足的时候，才抛发异常。</p>\n<p>举个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isList</span><span class=\"params\">(Object obj)</span></span>;<span class=\"comment\">//判断obj是否是List&lt;&gt;.</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">getLengthOfList</span><span class=\"params\">(Object obj)</span></span>;<span class=\"comment\">//获得obj的长度。</span></div></pre></td></tr></table></figure>\n<p>现在，假设传入的参数不是<code>List&lt;&gt;</code>类型，那么，函数<code>isList()</code>就不应该throw exception. 因为这完全在意料之中啊。而函数<code>getLengthOfList()</code>的前提假设就是你传进来的参数必须是<code>List&lt;&gt;</code>，否则这个函数就木有意义；此时，你传进来的参数，我处理不了，所以要throw exception。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：怎么处理别人的Exception？什么时候改抛发自己的Exception？</p>\n<h1 id=\"Exception有什么好处\"><a href=\"#Exception有什么好处\" class=\"headerlink\" title=\"Exception有什么好处?\"></a>Exception有什么好处?</h1><ol>\n<li>让你的错误信息更完整，接口更统一。</li>\n<li>常见的，用函数返回至来标记错误的方式，灵活性很差。</li>\n</ol>\n<h1 id=\"Gunjan-Doshi的博客\"><a href=\"#Gunjan-Doshi的博客\" class=\"headerlink\" title=\"Gunjan Doshi的博客\"></a>Gunjan Doshi的博客</h1><p>Gunjan Doshi的博客<a href=\"http://www.onjava.com/pub/a/onjava/2003/11/19/exceptions.html\" target=\"_blank\" rel=\"external\">Best Practices for Exception Handling</a>谈了一些经验，总结来说就是:</p>\n<h2 id=\"如何抛发自己的Exception\"><a href=\"#如何抛发自己的Exception\" class=\"headerlink\" title=\"如何抛发自己的Exception\"></a>如何抛发自己的Exception</h2><ol>\n<li>如果你的客户端程序能处理它，你就抛发 checked exception；如果你的客户端程序对这个exception除了打印出来什么也做不了，就throw unchecked exception。</li>\n<li>如果一个exception你处理不了，请不要单纯的打印出来，最好的方法是继续把它封装成 unchecked exception 继续throw.</li>\n<li>如果你define一个新的exception，一定要提供更多的信息，不要让你的class定义只有构造函数。如果觉得没什么更多的信息，那就不要define，直接用 Exception。</li>\n</ol>\n<h2 id=\"如何处理别人的Exception\"><a href=\"#如何处理别人的Exception\" class=\"headerlink\" title=\"如何处理别人的Exception\"></a>如何处理别人的Exception</h2><ol>\n<li>在try{}catch{}后一定要记得清理现场，处理后事。e.g. 如果发生数据库连接异常，一定要在finally里断开连接。</li>\n<li>不要用exception做flow control，效率低的一B。</li>\n<li>如果某个exception你处理不了，重新抛发它，千万不要包庇隐藏它。</li>\n<li>千万不要出现<code>catch(Exception e)</code>这样的代码，它会把所有的exception捕捉在这里，你能处理的，不能处理的，全在。</li>\n<li>一个exception只log一次。</li>\n</ol>\n<h1 id=\"The-Digital-Gabeg-在-Github-上的回答\"><a href=\"#The-Digital-Gabeg-在-Github-上的回答\" class=\"headerlink\" title=\"The Digital Gabeg 在 Github 上的回答\"></a>The Digital Gabeg 在 Github 上的回答</h1><p>当且仅当你的方法的最基本的前提假设不满足的时候，才抛发异常。</p>\n<p>举个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isList</span><span class=\"params\">(Object obj)</span></span>;<span class=\"comment\">//判断obj是否是List&lt;&gt;.</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">getLengthOfList</span><span class=\"params\">(Object obj)</span></span>;<span class=\"comment\">//获得obj的长度。</span></div></pre></td></tr></table></figure>\n<p>现在，假设传入的参数不是<code>List&lt;&gt;</code>类型，那么，函数<code>isList()</code>就不应该throw exception. 因为这完全在意料之中啊。而函数<code>getLengthOfList()</code>的前提假设就是你传进来的参数必须是<code>List&lt;&gt;</code>，否则这个函数就木有意义；此时，你传进来的参数，我处理不了，所以要throw exception。</p>\n"},{"title":"[other]威锋网(Weiphone) BBS排序插件","date":"2013-06-27T05:18:00.000Z","_content":"\n简介:  威锋网二手论坛的”排序”功能几乎形同虚设. 于是自己用 userScript 自己实现了根据发帖时间排序的功能.\n\n见<http://www.cnblogs.com/jhzhu/p/3158514.html>","source":"_posts/技术/[other]威锋网(Weiphone) BBS排序插件.md","raw":"---\ntitle: '[other]威锋网(Weiphone) BBS排序插件'\ndate:  2013-06-27 13:18\ntags: \n- js\n- bbs\n- weiphone\ncategories: \n- 技术\n---\n\n简介:  威锋网二手论坛的”排序”功能几乎形同虚设. 于是自己用 userScript 自己实现了根据发帖时间排序的功能.\n\n见<http://www.cnblogs.com/jhzhu/p/3158514.html>","slug":"技术/[other]威锋网(Weiphone) BBS排序插件","published":1,"updated":"2017-07-26T16:08:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krp005pq0d4iry1ah0x","content":"<p>简介:  威锋网二手论坛的”排序”功能几乎形同虚设. 于是自己用 userScript 自己实现了根据发帖时间排序的功能.</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3158514.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3158514.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介:  威锋网二手论坛的”排序”功能几乎形同虚设. 于是自己用 userScript 自己实现了根据发帖时间排序的功能.</p>\n<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3158514.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3158514.html</a></p>\n"},{"title":"利用Google Speech API实现Speech To Text","date":"2014-03-29T02:07:00.000Z","_content":"\n简介：很久很久以前, 网上流传着一个**免费的,识别率暴高的,稳定的**Speech To Text API, 那就是Google Speech API. 但是最近再使用的时候,总是返回500 Error. 后来通过查看源码知道需要增加一个参数:`key=...`. 可能是为了防止滥用吧. 并且, 最近Chrome另外发布了一个**长连接实时**的识别接口, 这对开发者来说真是巨大的福音啊. 在这里主要对这两个接口的用法进行介绍.\n\n## 关键字\n`SpeechToText,API,google,STT,ASR,SR,speech,recognition`\n## 申请Chromium API keys\n本文使用的Google Speech API是为google自家的浏览器Chrome服务的. 可以通过这个Demo体验一下实际使用的效果: [Google Speech To Text Demo][GoogleSpeechDemo].  \nChrome来源于开源项目Chromium. 为了方便开发者调试使用, google ***开放***了这个STT(Speech to Text)接口. 但是, 因为这个借口只供调试使用, 所以在流量和次数上都有限制.并且, 不提供购买.  \n\n好了, 背景介绍完毕, 我们来第一步: ***申请Chromium开发者权限***. \n具体步骤请参考[how to get chromium API keys][RequestGoogleCrhomiumAPI]). \n\n> ***Acquiring Keys***\n\n> 1. Make sure you are a member of chromium-dev@chromium.org (you can just subscribe to chromium-dev and choose not to receive mail).\nFor convenience, the APIs below are only visible to people subscribed to that group.\n2. Make sure you are logged in with the Google account associated with the email address that you used to subscribe to chromium-dev.\n3. Go to <https://cloud.google.com/console>(请使用旧版console)\n4. Click the red Create project... button.\n5. (Optional) You may add other members of your organization or team on the Team tab.\n6. In the 'APIs & auth' > APIs tab, click the On/Off button to turn each of the following APIs to the On position, and read and agree to the Terms of Service that is shown:<br> \n(This list might be out of date; try searching for APIs starting with \"Chrome\" or having \"for Chrome\" in the name.)  \t* Chrome Remote Desktop API\n\t* Chrome Spelling API\n\t* Chrome Suggest API\n\t* Chrome Sync API\n\t* Chrome Translate Element\n\t* Google Maps Geolocation API (requires enabling billing but is free to use; you can skip this one, in which case geolocation features of Chrome will not work)\n\t* Safe Browsing API\n\t* ***Speech API***\n\t* Time Zone API\n\t* Google Cloud Messaging for Chrome\n\t* Google Now For Chrome API\n\tIf any of these APIs are not shown, recheck step 1.\n8. Go to the Credentials tab under the APIs & auth tab.\n8. Click the red Create New Client ID button in the OAuth section to create an OAuth 2.0 client ID.\n\t* You want \"Installed Application\" for the Application type section\n\t* You want \"Other\" for the Installed application type section\n9. A new box should now appear titled “Client ID for installed applications”. In the next sections, we will refer to the values of the “Client ID” and “Client secret” fields in this box later (below).\n10. Click the red Create New Key button in the Public API Access section and create a new Browser key.\nYou want to leave the box on the \"Create a browser key and configure allowed referers\" empty.\n11. A new box should appear titled \"Key for browser applications\". The next sections will refer to the value of the “API key” field too.\n\n好了, 到这里, 我们已经获得了应用key, 在下文我们用`{key}`表示这个key.\n## One Shot Recognition\n我们用`curl`来向服务器发送请求:  \n\n\n```\ncurl -X POST \\\n--data-binary @speech.flac \\\n--user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7' \\\n--header 'Content-Type: audio/x-flac; rate=8000;' \\\n'https://www.google.com/speech-api/v1/recognize?client=chromium&lang=zh-CN&maxresults=5&pfilter=0&key=AIzaSyC6Tkf4*****Q0CdISn-qnHhwLaS3cg2a0'  \n```\n|参数|解释|\n|:--|:--|\n|-X POST|表示发送HTTP请求|\n|--data-binary @speech.flac| 发送音频文件`speech.flac`|\n|--user-agent '...'|http的参数,设置浏览器的`user-agent`信息|\n|--header|http的参数. 指定了传送内容的类型(`audio/flac`)和音频频率(`8000Hz`). 注意, 只支持特定的几种频率(`8000Hz,4000Hz`还有几个记不清了),上传的flac文件频率要和参数一致.|\n|https://www.google.com/.../&key=<br>AIzaSyC6Tkf*****Q0CdISn-qnHhwLaS3cg2a0|http请求地址,其中最后一部分的key,应该替换为您申请的`{key}`.|\n\n等待一分钟左右, 如果你运气好的话, 能看到如下结果:  \n![Result Image][SpeechResultImage]\n\n结果格式如下, 应该很清晰了吧:\n\n```\n{\n    \"status\": 0,\n    \"id\": \"b3447b5d98c5653e0067f35b32c0a8ca-1\",\n    \"hypotheses\": \n    [\n    \t{\n        \t\"utterance\": \"i like pickles\",\n        \t\"confidence\": 0.9012539\n    \t},\n    \t{\n        \t\"utterance\": \"i like pickle\"\n    \t}\n    ]\n}\n```\n\n\n如果您录音的格式不对的话, 可以用开源软件`sox`方便的转换格式和码率. 举个栗子:  \n\n```\nsox ./speech.mp3 -b 8 speech.flac trim 0 15\n```\n|参数|解释|\n|:--|:--|\n|./speech.mp3|输入文件|\n|-b 8 | 输出文件频率为 8kHz|\n|speech.flac|输出文件名|\n|trim 0 15|截取输入文件的0~15秒的部分, 输出出来|\n \n\n\n\n\n## Stream Recognition\n后来, Google 提供了更先进的live的双向的识别接口. 即同时打开两个HTTP连接, 一个负责实时发送(`POST`)音频流, 一个负责接受(`GET`).  \n这里有一个`PHP`版本的Demo. 可以参考实现您自己的`Stream Recognition`:  \n[Google Speech API – Full Duplex PHP Version][DumplexPhpDemo]\n\n\n## 引用:\n\n\n1. Google Speech API – Full Duplex PHP Version  \n<http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/>\n\n2. Accessing Google Speech API / Chrome 11  \n<http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/>\n\n3. Google Speech To Text API ( 9 months ago )  \n<https://gist.github.com/alotaiba/1730160>\n\n4. 避开Google Voice Search利用Google Speech API实现Android语音识别  \n<http://my.eoe.cn/sisuer/archive/5960.html>\n\n5. How to Use Google Speech API( with sox )  \n<http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/>\n\n6. Google Chomium Open Project\n<http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/>  \n<http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/google_one_shot_remote_engine.cc>\n\n\n\n[GoogleSpeechDemo]: https://www.google.com/intl/en/chrome/demos/speech.html\n[RequestGoogleCrhomiumAPI]: http://www.chromium.org/developers/how-tos/api-keys\n[SpeechResultImage]: SpeechResult.jpg \"ResultImage\"\n[DumplexPhpDemo]: http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/","source":"_posts/技术/[other]利用Google Speech API实现Speech To Text.md","raw":"---\ntitle: 利用Google Speech API实现Speech To Text\ncategories: \n- 技术\ntags: \n- SpeechToText\n- API\n- google\n- STT\n- ASR\n- SR\n- speech\n- recognition\ndate: 2014-03-29 10:07\n---\n\n简介：很久很久以前, 网上流传着一个**免费的,识别率暴高的,稳定的**Speech To Text API, 那就是Google Speech API. 但是最近再使用的时候,总是返回500 Error. 后来通过查看源码知道需要增加一个参数:`key=...`. 可能是为了防止滥用吧. 并且, 最近Chrome另外发布了一个**长连接实时**的识别接口, 这对开发者来说真是巨大的福音啊. 在这里主要对这两个接口的用法进行介绍.\n\n## 关键字\n`SpeechToText,API,google,STT,ASR,SR,speech,recognition`\n## 申请Chromium API keys\n本文使用的Google Speech API是为google自家的浏览器Chrome服务的. 可以通过这个Demo体验一下实际使用的效果: [Google Speech To Text Demo][GoogleSpeechDemo].  \nChrome来源于开源项目Chromium. 为了方便开发者调试使用, google ***开放***了这个STT(Speech to Text)接口. 但是, 因为这个借口只供调试使用, 所以在流量和次数上都有限制.并且, 不提供购买.  \n\n好了, 背景介绍完毕, 我们来第一步: ***申请Chromium开发者权限***. \n具体步骤请参考[how to get chromium API keys][RequestGoogleCrhomiumAPI]). \n\n> ***Acquiring Keys***\n\n> 1. Make sure you are a member of chromium-dev@chromium.org (you can just subscribe to chromium-dev and choose not to receive mail).\nFor convenience, the APIs below are only visible to people subscribed to that group.\n2. Make sure you are logged in with the Google account associated with the email address that you used to subscribe to chromium-dev.\n3. Go to <https://cloud.google.com/console>(请使用旧版console)\n4. Click the red Create project... button.\n5. (Optional) You may add other members of your organization or team on the Team tab.\n6. In the 'APIs & auth' > APIs tab, click the On/Off button to turn each of the following APIs to the On position, and read and agree to the Terms of Service that is shown:<br> \n(This list might be out of date; try searching for APIs starting with \"Chrome\" or having \"for Chrome\" in the name.)  \t* Chrome Remote Desktop API\n\t* Chrome Spelling API\n\t* Chrome Suggest API\n\t* Chrome Sync API\n\t* Chrome Translate Element\n\t* Google Maps Geolocation API (requires enabling billing but is free to use; you can skip this one, in which case geolocation features of Chrome will not work)\n\t* Safe Browsing API\n\t* ***Speech API***\n\t* Time Zone API\n\t* Google Cloud Messaging for Chrome\n\t* Google Now For Chrome API\n\tIf any of these APIs are not shown, recheck step 1.\n8. Go to the Credentials tab under the APIs & auth tab.\n8. Click the red Create New Client ID button in the OAuth section to create an OAuth 2.0 client ID.\n\t* You want \"Installed Application\" for the Application type section\n\t* You want \"Other\" for the Installed application type section\n9. A new box should now appear titled “Client ID for installed applications”. In the next sections, we will refer to the values of the “Client ID” and “Client secret” fields in this box later (below).\n10. Click the red Create New Key button in the Public API Access section and create a new Browser key.\nYou want to leave the box on the \"Create a browser key and configure allowed referers\" empty.\n11. A new box should appear titled \"Key for browser applications\". The next sections will refer to the value of the “API key” field too.\n\n好了, 到这里, 我们已经获得了应用key, 在下文我们用`{key}`表示这个key.\n## One Shot Recognition\n我们用`curl`来向服务器发送请求:  \n\n\n```\ncurl -X POST \\\n--data-binary @speech.flac \\\n--user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7' \\\n--header 'Content-Type: audio/x-flac; rate=8000;' \\\n'https://www.google.com/speech-api/v1/recognize?client=chromium&lang=zh-CN&maxresults=5&pfilter=0&key=AIzaSyC6Tkf4*****Q0CdISn-qnHhwLaS3cg2a0'  \n```\n|参数|解释|\n|:--|:--|\n|-X POST|表示发送HTTP请求|\n|--data-binary @speech.flac| 发送音频文件`speech.flac`|\n|--user-agent '...'|http的参数,设置浏览器的`user-agent`信息|\n|--header|http的参数. 指定了传送内容的类型(`audio/flac`)和音频频率(`8000Hz`). 注意, 只支持特定的几种频率(`8000Hz,4000Hz`还有几个记不清了),上传的flac文件频率要和参数一致.|\n|https://www.google.com/.../&key=<br>AIzaSyC6Tkf*****Q0CdISn-qnHhwLaS3cg2a0|http请求地址,其中最后一部分的key,应该替换为您申请的`{key}`.|\n\n等待一分钟左右, 如果你运气好的话, 能看到如下结果:  \n![Result Image][SpeechResultImage]\n\n结果格式如下, 应该很清晰了吧:\n\n```\n{\n    \"status\": 0,\n    \"id\": \"b3447b5d98c5653e0067f35b32c0a8ca-1\",\n    \"hypotheses\": \n    [\n    \t{\n        \t\"utterance\": \"i like pickles\",\n        \t\"confidence\": 0.9012539\n    \t},\n    \t{\n        \t\"utterance\": \"i like pickle\"\n    \t}\n    ]\n}\n```\n\n\n如果您录音的格式不对的话, 可以用开源软件`sox`方便的转换格式和码率. 举个栗子:  \n\n```\nsox ./speech.mp3 -b 8 speech.flac trim 0 15\n```\n|参数|解释|\n|:--|:--|\n|./speech.mp3|输入文件|\n|-b 8 | 输出文件频率为 8kHz|\n|speech.flac|输出文件名|\n|trim 0 15|截取输入文件的0~15秒的部分, 输出出来|\n \n\n\n\n\n## Stream Recognition\n后来, Google 提供了更先进的live的双向的识别接口. 即同时打开两个HTTP连接, 一个负责实时发送(`POST`)音频流, 一个负责接受(`GET`).  \n这里有一个`PHP`版本的Demo. 可以参考实现您自己的`Stream Recognition`:  \n[Google Speech API – Full Duplex PHP Version][DumplexPhpDemo]\n\n\n## 引用:\n\n\n1. Google Speech API – Full Duplex PHP Version  \n<http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/>\n\n2. Accessing Google Speech API / Chrome 11  \n<http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/>\n\n3. Google Speech To Text API ( 9 months ago )  \n<https://gist.github.com/alotaiba/1730160>\n\n4. 避开Google Voice Search利用Google Speech API实现Android语音识别  \n<http://my.eoe.cn/sisuer/archive/5960.html>\n\n5. How to Use Google Speech API( with sox )  \n<http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/>\n\n6. Google Chomium Open Project\n<http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/>  \n<http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/google_one_shot_remote_engine.cc>\n\n\n\n[GoogleSpeechDemo]: https://www.google.com/intl/en/chrome/demos/speech.html\n[RequestGoogleCrhomiumAPI]: http://www.chromium.org/developers/how-tos/api-keys\n[SpeechResultImage]: SpeechResult.jpg \"ResultImage\"\n[DumplexPhpDemo]: http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/","slug":"技术/[other]利用Google Speech API实现Speech To Text","published":1,"updated":"2017-07-26T16:07:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krs005tq0d4fihm2b06","content":"<p>简介：很久很久以前, 网上流传着一个<strong>免费的,识别率暴高的,稳定的</strong>Speech To Text API, 那就是Google Speech API. 但是最近再使用的时候,总是返回500 Error. 后来通过查看源码知道需要增加一个参数:<code>key=...</code>. 可能是为了防止滥用吧. 并且, 最近Chrome另外发布了一个<strong>长连接实时</strong>的识别接口, 这对开发者来说真是巨大的福音啊. 在这里主要对这两个接口的用法进行介绍.</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p><code>SpeechToText,API,google,STT,ASR,SR,speech,recognition</code></p>\n<h2 id=\"申请Chromium-API-keys\"><a href=\"#申请Chromium-API-keys\" class=\"headerlink\" title=\"申请Chromium API keys\"></a>申请Chromium API keys</h2><p>本文使用的Google Speech API是为google自家的浏览器Chrome服务的. 可以通过这个Demo体验一下实际使用的效果: <a href=\"https://www.google.com/intl/en/chrome/demos/speech.html\" target=\"_blank\" rel=\"external\">Google Speech To Text Demo</a>.<br>Chrome来源于开源项目Chromium. 为了方便开发者调试使用, google <strong><em>开放</em></strong>了这个STT(Speech to Text)接口. 但是, 因为这个借口只供调试使用, 所以在流量和次数上都有限制.并且, 不提供购买.  </p>\n<p>好了, 背景介绍完毕, 我们来第一步: <strong><em>申请Chromium开发者权限</em></strong>.<br>具体步骤请参考<a href=\"http://www.chromium.org/developers/how-tos/api-keys\" target=\"_blank\" rel=\"external\">how to get chromium API keys</a>). </p>\n<blockquote>\n<p><strong><em>Acquiring Keys</em></strong></p>\n<ol>\n<li>Make sure you are a member of chromium-dev@chromium.org (you can just subscribe to chromium-dev and choose not to receive mail).<br>For convenience, the APIs below are only visible to people subscribed to that group.</li>\n<li>Make sure you are logged in with the Google account associated with the email address that you used to subscribe to chromium-dev.</li>\n<li>Go to <a href=\"https://cloud.google.com/console\" target=\"_blank\" rel=\"external\">https://cloud.google.com/console</a>(请使用旧版console)</li>\n<li>Click the red Create project… button.</li>\n<li>(Optional) You may add other members of your organization or team on the Team tab.</li>\n<li>In the ‘APIs &amp; auth’ &gt; APIs tab, click the On/Off button to turn each of the following APIs to the On position, and read and agree to the Terms of Service that is shown:<br><br>(This list might be out of date; try searching for APIs starting with “Chrome” or having “for Chrome” in the name.)      * Chrome Remote Desktop API<ul>\n<li>Chrome Spelling API</li>\n<li>Chrome Suggest API</li>\n<li>Chrome Sync API</li>\n<li>Chrome Translate Element</li>\n<li>Google Maps Geolocation API (requires enabling billing but is free to use; you can skip this one, in which case geolocation features of Chrome will not work)</li>\n<li>Safe Browsing API</li>\n<li><strong><em>Speech API</em></strong></li>\n<li>Time Zone API</li>\n<li>Google Cloud Messaging for Chrome</li>\n<li>Google Now For Chrome API<br>If any of these APIs are not shown, recheck step 1.</li>\n</ul>\n</li>\n<li>Go to the Credentials tab under the APIs &amp; auth tab.</li>\n<li>Click the red Create New Client ID button in the OAuth section to create an OAuth 2.0 client ID.<ul>\n<li>You want “Installed Application” for the Application type section</li>\n<li>You want “Other” for the Installed application type section</li>\n</ul>\n</li>\n<li>A new box should now appear titled “Client ID for installed applications”. In the next sections, we will refer to the values of the “Client ID” and “Client secret” fields in this box later (below).</li>\n<li>Click the red Create New Key button in the Public API Access section and create a new Browser key.<br>You want to leave the box on the “Create a browser key and configure allowed referers” empty.</li>\n<li>A new box should appear titled “Key for browser applications”. The next sections will refer to the value of the “API key” field too.</li>\n</ol>\n</blockquote>\n<p>好了, 到这里, 我们已经获得了应用key, 在下文我们用<code>{key}</code>表示这个key.</p>\n<h2 id=\"One-Shot-Recognition\"><a href=\"#One-Shot-Recognition\" class=\"headerlink\" title=\"One Shot Recognition\"></a>One Shot Recognition</h2><p>我们用<code>curl</code>来向服务器发送请求:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -X POST \\</div><div class=\"line\">--data-binary @speech.flac \\</div><div class=\"line\">--user-agent &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7&apos; \\</div><div class=\"line\">--header &apos;Content-Type: audio/x-flac; rate=8000;&apos; \\</div><div class=\"line\">&apos;https://www.google.com/speech-api/v1/recognize?client=chromium&amp;lang=zh-CN&amp;maxresults=5&amp;pfilter=0&amp;key=AIzaSyC6Tkf4*****Q0CdISn-qnHhwLaS3cg2a0&apos;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">-X POST</td>\n<td style=\"text-align:left\">表示发送HTTP请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–data-binary @speech.flac</td>\n<td style=\"text-align:left\">发送音频文件<code>speech.flac</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–user-agent ‘…’</td>\n<td style=\"text-align:left\">http的参数,设置浏览器的<code>user-agent</code>信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–header</td>\n<td style=\"text-align:left\">http的参数. 指定了传送内容的类型(<code>audio/flac</code>)和音频频率(<code>8000Hz</code>). 注意, 只支持特定的几种频率(<code>8000Hz,4000Hz</code>还有几个记不清了),上传的flac文件频率要和参数一致.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.google.com/.../&amp;key=\" target=\"_blank\" rel=\"external\">https://www.google.com/.../&amp;key=</a><br>AIzaSyC6Tkf<strong>*</strong>Q0CdISn-qnHhwLaS3cg2a0</td>\n<td style=\"text-align:left\">http请求地址,其中最后一部分的key,应该替换为您申请的<code>{key}</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>等待一分钟左右, 如果你运气好的话, 能看到如下结果:<br><img src=\"SpeechResult.jpg\" alt=\"Result Image\" title=\"ResultImage\"></p>\n<p>结果格式如下, 应该很清晰了吧:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;status&quot;: 0,</div><div class=\"line\">    &quot;id&quot;: &quot;b3447b5d98c5653e0067f35b32c0a8ca-1&quot;,</div><div class=\"line\">    &quot;hypotheses&quot;: </div><div class=\"line\">    [</div><div class=\"line\">    \t&#123;</div><div class=\"line\">        \t&quot;utterance&quot;: &quot;i like pickles&quot;,</div><div class=\"line\">        \t&quot;confidence&quot;: 0.9012539</div><div class=\"line\">    \t&#125;,</div><div class=\"line\">    \t&#123;</div><div class=\"line\">        \t&quot;utterance&quot;: &quot;i like pickle&quot;</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果您录音的格式不对的话, 可以用开源软件<code>sox</code>方便的转换格式和码率. 举个栗子:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sox ./speech.mp3 -b 8 speech.flac trim 0 15</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">./speech.mp3</td>\n<td style=\"text-align:left\">输入文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-b 8</td>\n<td style=\"text-align:left\">输出文件频率为 8kHz</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">speech.flac</td>\n<td style=\"text-align:left\">输出文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">trim 0 15</td>\n<td style=\"text-align:left\">截取输入文件的0~15秒的部分, 输出出来</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Stream-Recognition\"><a href=\"#Stream-Recognition\" class=\"headerlink\" title=\"Stream Recognition\"></a>Stream Recognition</h2><p>后来, Google 提供了更先进的live的双向的识别接口. 即同时打开两个HTTP连接, 一个负责实时发送(<code>POST</code>)音频流, 一个负责接受(<code>GET</code>).<br>这里有一个<code>PHP</code>版本的Demo. 可以参考实现您自己的<code>Stream Recognition</code>:<br><a href=\"http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/\" target=\"_blank\" rel=\"external\">Google Speech API – Full Duplex PHP Version</a></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用:\"></a>引用:</h2><ol>\n<li><p>Google Speech API – Full Duplex PHP Version<br><a href=\"http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/\" target=\"_blank\" rel=\"external\">http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/</a></p>\n</li>\n<li><p>Accessing Google Speech API / Chrome 11<br><a href=\"http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/\" target=\"_blank\" rel=\"external\">http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/</a></p>\n</li>\n<li><p>Google Speech To Text API ( 9 months ago )<br><a href=\"https://gist.github.com/alotaiba/1730160\" target=\"_blank\" rel=\"external\">https://gist.github.com/alotaiba/1730160</a></p>\n</li>\n<li><p>避开Google Voice Search利用Google Speech API实现Android语音识别<br><a href=\"http://my.eoe.cn/sisuer/archive/5960.html\" target=\"_blank\" rel=\"external\">http://my.eoe.cn/sisuer/archive/5960.html</a></p>\n</li>\n<li><p>How to Use Google Speech API( with sox )<br><a href=\"http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/\" target=\"_blank\" rel=\"external\">http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/</a></p>\n</li>\n<li><p>Google Chomium Open Project<br><a href=\"http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/\" target=\"_blank\" rel=\"external\">http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/</a><br><a href=\"http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/google_one_shot_remote_engine.cc\" target=\"_blank\" rel=\"external\">http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/google_one_shot_remote_engine.cc</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>简介：很久很久以前, 网上流传着一个<strong>免费的,识别率暴高的,稳定的</strong>Speech To Text API, 那就是Google Speech API. 但是最近再使用的时候,总是返回500 Error. 后来通过查看源码知道需要增加一个参数:<code>key=...</code>. 可能是为了防止滥用吧. 并且, 最近Chrome另外发布了一个<strong>长连接实时</strong>的识别接口, 这对开发者来说真是巨大的福音啊. 在这里主要对这两个接口的用法进行介绍.</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p><code>SpeechToText,API,google,STT,ASR,SR,speech,recognition</code></p>\n<h2 id=\"申请Chromium-API-keys\"><a href=\"#申请Chromium-API-keys\" class=\"headerlink\" title=\"申请Chromium API keys\"></a>申请Chromium API keys</h2><p>本文使用的Google Speech API是为google自家的浏览器Chrome服务的. 可以通过这个Demo体验一下实际使用的效果: <a href=\"https://www.google.com/intl/en/chrome/demos/speech.html\" target=\"_blank\" rel=\"external\">Google Speech To Text Demo</a>.<br>Chrome来源于开源项目Chromium. 为了方便开发者调试使用, google <strong><em>开放</em></strong>了这个STT(Speech to Text)接口. 但是, 因为这个借口只供调试使用, 所以在流量和次数上都有限制.并且, 不提供购买.  </p>\n<p>好了, 背景介绍完毕, 我们来第一步: <strong><em>申请Chromium开发者权限</em></strong>.<br>具体步骤请参考<a href=\"http://www.chromium.org/developers/how-tos/api-keys\" target=\"_blank\" rel=\"external\">how to get chromium API keys</a>). </p>\n<blockquote>\n<p><strong><em>Acquiring Keys</em></strong></p>\n<ol>\n<li>Make sure you are a member of chromium-dev@chromium.org (you can just subscribe to chromium-dev and choose not to receive mail).<br>For convenience, the APIs below are only visible to people subscribed to that group.</li>\n<li>Make sure you are logged in with the Google account associated with the email address that you used to subscribe to chromium-dev.</li>\n<li>Go to <a href=\"https://cloud.google.com/console\" target=\"_blank\" rel=\"external\">https://cloud.google.com/console</a>(请使用旧版console)</li>\n<li>Click the red Create project… button.</li>\n<li>(Optional) You may add other members of your organization or team on the Team tab.</li>\n<li>In the ‘APIs &amp; auth’ &gt; APIs tab, click the On/Off button to turn each of the following APIs to the On position, and read and agree to the Terms of Service that is shown:<br><br>(This list might be out of date; try searching for APIs starting with “Chrome” or having “for Chrome” in the name.)      * Chrome Remote Desktop API<ul>\n<li>Chrome Spelling API</li>\n<li>Chrome Suggest API</li>\n<li>Chrome Sync API</li>\n<li>Chrome Translate Element</li>\n<li>Google Maps Geolocation API (requires enabling billing but is free to use; you can skip this one, in which case geolocation features of Chrome will not work)</li>\n<li>Safe Browsing API</li>\n<li><strong><em>Speech API</em></strong></li>\n<li>Time Zone API</li>\n<li>Google Cloud Messaging for Chrome</li>\n<li>Google Now For Chrome API<br>If any of these APIs are not shown, recheck step 1.</li>\n</ul>\n</li>\n<li>Go to the Credentials tab under the APIs &amp; auth tab.</li>\n<li>Click the red Create New Client ID button in the OAuth section to create an OAuth 2.0 client ID.<ul>\n<li>You want “Installed Application” for the Application type section</li>\n<li>You want “Other” for the Installed application type section</li>\n</ul>\n</li>\n<li>A new box should now appear titled “Client ID for installed applications”. In the next sections, we will refer to the values of the “Client ID” and “Client secret” fields in this box later (below).</li>\n<li>Click the red Create New Key button in the Public API Access section and create a new Browser key.<br>You want to leave the box on the “Create a browser key and configure allowed referers” empty.</li>\n<li>A new box should appear titled “Key for browser applications”. The next sections will refer to the value of the “API key” field too.</li>\n</ol>\n</blockquote>\n<p>好了, 到这里, 我们已经获得了应用key, 在下文我们用<code>{key}</code>表示这个key.</p>\n<h2 id=\"One-Shot-Recognition\"><a href=\"#One-Shot-Recognition\" class=\"headerlink\" title=\"One Shot Recognition\"></a>One Shot Recognition</h2><p>我们用<code>curl</code>来向服务器发送请求:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -X POST \\</div><div class=\"line\">--data-binary @speech.flac \\</div><div class=\"line\">--user-agent &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7&apos; \\</div><div class=\"line\">--header &apos;Content-Type: audio/x-flac; rate=8000;&apos; \\</div><div class=\"line\">&apos;https://www.google.com/speech-api/v1/recognize?client=chromium&amp;lang=zh-CN&amp;maxresults=5&amp;pfilter=0&amp;key=AIzaSyC6Tkf4*****Q0CdISn-qnHhwLaS3cg2a0&apos;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">-X POST</td>\n<td style=\"text-align:left\">表示发送HTTP请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–data-binary @speech.flac</td>\n<td style=\"text-align:left\">发送音频文件<code>speech.flac</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–user-agent ‘…’</td>\n<td style=\"text-align:left\">http的参数,设置浏览器的<code>user-agent</code>信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–header</td>\n<td style=\"text-align:left\">http的参数. 指定了传送内容的类型(<code>audio/flac</code>)和音频频率(<code>8000Hz</code>). 注意, 只支持特定的几种频率(<code>8000Hz,4000Hz</code>还有几个记不清了),上传的flac文件频率要和参数一致.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.google.com/.../&amp;key=\" target=\"_blank\" rel=\"external\">https://www.google.com/.../&amp;key=</a><br>AIzaSyC6Tkf<strong>*</strong>Q0CdISn-qnHhwLaS3cg2a0</td>\n<td style=\"text-align:left\">http请求地址,其中最后一部分的key,应该替换为您申请的<code>{key}</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>等待一分钟左右, 如果你运气好的话, 能看到如下结果:<br><img src=\"SpeechResult.jpg\" alt=\"Result Image\" title=\"ResultImage\"></p>\n<p>结果格式如下, 应该很清晰了吧:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;status&quot;: 0,</div><div class=\"line\">    &quot;id&quot;: &quot;b3447b5d98c5653e0067f35b32c0a8ca-1&quot;,</div><div class=\"line\">    &quot;hypotheses&quot;: </div><div class=\"line\">    [</div><div class=\"line\">    \t&#123;</div><div class=\"line\">        \t&quot;utterance&quot;: &quot;i like pickles&quot;,</div><div class=\"line\">        \t&quot;confidence&quot;: 0.9012539</div><div class=\"line\">    \t&#125;,</div><div class=\"line\">    \t&#123;</div><div class=\"line\">        \t&quot;utterance&quot;: &quot;i like pickle&quot;</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果您录音的格式不对的话, 可以用开源软件<code>sox</code>方便的转换格式和码率. 举个栗子:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sox ./speech.mp3 -b 8 speech.flac trim 0 15</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">./speech.mp3</td>\n<td style=\"text-align:left\">输入文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-b 8</td>\n<td style=\"text-align:left\">输出文件频率为 8kHz</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">speech.flac</td>\n<td style=\"text-align:left\">输出文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">trim 0 15</td>\n<td style=\"text-align:left\">截取输入文件的0~15秒的部分, 输出出来</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Stream-Recognition\"><a href=\"#Stream-Recognition\" class=\"headerlink\" title=\"Stream Recognition\"></a>Stream Recognition</h2><p>后来, Google 提供了更先进的live的双向的识别接口. 即同时打开两个HTTP连接, 一个负责实时发送(<code>POST</code>)音频流, 一个负责接受(<code>GET</code>).<br>这里有一个<code>PHP</code>版本的Demo. 可以参考实现您自己的<code>Stream Recognition</code>:<br><a href=\"http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/\" target=\"_blank\" rel=\"external\">Google Speech API – Full Duplex PHP Version</a></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用:\"></a>引用:</h2><ol>\n<li><p>Google Speech API – Full Duplex PHP Version<br><a href=\"http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/\" target=\"_blank\" rel=\"external\">http://mikepultz.com/2013/07/google-speech-api-full-duplex-php-version/</a></p>\n</li>\n<li><p>Accessing Google Speech API / Chrome 11<br><a href=\"http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/\" target=\"_blank\" rel=\"external\">http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/</a></p>\n</li>\n<li><p>Google Speech To Text API ( 9 months ago )<br><a href=\"https://gist.github.com/alotaiba/1730160\" target=\"_blank\" rel=\"external\">https://gist.github.com/alotaiba/1730160</a></p>\n</li>\n<li><p>避开Google Voice Search利用Google Speech API实现Android语音识别<br><a href=\"http://my.eoe.cn/sisuer/archive/5960.html\" target=\"_blank\" rel=\"external\">http://my.eoe.cn/sisuer/archive/5960.html</a></p>\n</li>\n<li><p>How to Use Google Speech API( with sox )<br><a href=\"http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/\" target=\"_blank\" rel=\"external\">http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/</a></p>\n</li>\n<li><p>Google Chomium Open Project<br><a href=\"http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/\" target=\"_blank\" rel=\"external\">http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/</a><br><a href=\"http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/google_one_shot_remote_engine.cc\" target=\"_blank\" rel=\"external\">http://src.chromium.org/viewvc/chrome/trunk/src/content/browser/speech/google_one_shot_remote_engine.cc</a></p>\n</li>\n</ol>\n"},{"date":"2014-08-20T16:00:00.000Z","title":"[构架]从〇开始构架前端（NLDV框架）","_content":"\n\n摘要：一个普通应用，大到微信， 小到豆瓣FM，必不可少的都包括四部分：Network、Logic、Data、View（NLDV）。如何把他们组合起来，**结构清晰**、又**协作便利**，是前端主程的基本修养。本文用通（有）俗（点）易（啰）懂（嗦）的语言，界定了这四个模块的职能范围，同时提供了一种简单易用的组织方式。知者可互动，不知者可参考。\n\n\n\n# 先唠点嗑\n说说自己吧：毕业三年，经历4个项目，前两个主做功能开发，后两个全面负责。因为大学对UI交互深感兴趣，梦想成为优秀的交互设计师，所以毕业就做了前端，想着至少也离得近点。不料一入代码深似海，以前看过的十几本交互书也随风而去，脑子里剩下的只有：几行干巴巴的代码、几个平台的API、和一点不成熟的总结。借此机会，整理一下。\n\n我把他名为**NLDV**，也就图一叫着方便（首字母的组合），并不是想标新立异。你或许会想到MVC，其实本质上跟MVC没啥区别。只是与时俱进，现在App几乎都是连着网的，也就把Network提出来了。\n\n从第三个项目开始，这个NLDV的结构在我意识里渐渐清晰。第四个项目（游戏），因为是从零开始，我把NLDV的结构应用到了项目中。经历了渲染引擎更换和网络引擎更换，过程中其它模块儿做得改动极少，切身体会到它的妙处，忍不住前来分享。\n\n# 从账号登陆谈起\n\n我们从一个最简单的登陆请求谈起。按照`NLDV`框架的思想，步骤如下：\n\n1. Logic告诉Network：以后你收到来自远方服务器的消息都跟我打声招呼，不然我告诉程序员整死你丫。(Logic向Network注册网络监听函数。)\n2. 用户点击登陆按钮，此时View调用Logic的登录方法。Logic赶紧写封信，告诉Network把这封信送到服务器。（Logic根据传入的参数，构造相应的消息体，Network负责把消息发出去）\n3. 漫长的等待。。。\n4. Network终于等到服务器发来的消息，就急急忙忙递给Logic。Logic打开信封一看：“尼玛，居然能一次成功了！32个赞！”\n    1. 可是信上还有性别，年龄，头像，邮箱等等等信息，头都大了，不记下来恐怕是隔夜就忘啊。于是，找来Logic的御用秘书Data（只有Logic能写入），这些信息就交给你了，临时存储还是永久存储我不管，反正我和View来取的时候，你要能给我。\n    2. 好消息要和大家分享，于是Logic全应用广播：“我们已经出色的完成了登陆任务，大家再接再厉”\n3. View收到此广播消息，用界面告诉用户“亲爱的，你登陆成功了”。到此，完成一次登陆。\n    （*PS：对于大多数界面实例，Logic刚刚发的这条广播是可以当耳边风的，因为跟自己业务无关。但，对于登陆界面来说，他必须时刻竖起耳朵监听这个消息，要不然就是失职。所以一般情况下登陆View会在发送登录请求之前就向系统注册监听这个消息的函数，以确保万无一失。这是后话，没看懂也没关系*）\n\n# 职责分配\n\n首先，看一幅图：  \n![NLDV Diagram][1]  \n\n\n通过上面的例子和图示，可以来总结一下NLDV四大家族各自的职能范围了：\n## Network\nNetwork的是数据交流的基础。在这里并不单指socket，并且不暴露任何底层网络的实现。而是一个更加完整、稳定，有纠错功能的职能单位。主要功能：\n\n* 响应Logic的调用，将构造好的消息体转换成服务器能识别的字节串，发送出去。\n* 接收服务器发过来的字节串，转换成前端可识别的结构体，通知Logic。\n    * 前后端在定义消息的时候，一般会用一个消息号(/或 `主消息号-子消息号`对）来唯一标识一种消息。\n    * 而Logic也不止一个，账号系统，业务系统等，每个系统有对应的Logic，分别处理相关的业务逻辑。\n    * 一个Logic仅仅会对某一些消息感兴趣，所以，它只向Network注册自己感兴趣的消息号。\n* 容错处理。比如有限次的自动重发，需要的时候自动重连，网络彻底不可用时通知Logic等。\n\n我们用最少的接口来定义它：\n\n```java\n// Real msg struct will implement this interface, adding some getter/setters.\ninterface IMessage\n{\n    uint getMsgId();// unique id for a type of msg\n    byte[] toBytes();// serialize to bytes.\n    void parseBytes( byte[] bytes); //deserialize to useful info.\n}\n\n//Generally, \"Logic\" will implement this interface for recieving data\ninterface INetworkHandler\n{\n    void onMessageRecv( IMessage msg);\n}\n\ninterface INetwork\n{\n    void send( IMessage msg );\n    void registHandler( uint msgId, INetworkHandler handler );\n    void unregistHandler( uint msgId, INetworkHandler handler );\n}\n```\n\n## Logic\nLogic是一个应用中核心实现业务逻辑的部分。主要功能有： \n\n* 响应来自用户（View）的功能请求。或通过写入Data来改变状态，或构造消息体发送到服务器。\n* 收到网络消息后，做相应的逻辑处理，将数据的改变写入Data，最后广播本地事件。\n    * 这里的本地事件通常用一个 字符串或者整数指代，称为本地事件ID。\n    * 这个过程通常会用到[观察者模式](http://baike.baidu.com/view/1854779.htm)。有一个本地消息中心`LocalMessageCenter`，监听者（通常是View）用本地事件ID来向`LocalMessageCenter`注册，而Logic调用`LocalMessageCenter.dispatch( localEventId ) ` 即可广播此本地事件。\n    * 是的，Logic直接调用View的方法也能达到同样的目的。但是，为了减小Logic和View之间的耦合性，还是选用`LocalMessageCenter`作为中间层。随着需求的改变，View类可能面目全非，但`LocalMessageCenter`的接口却可以长久不变。\n\nLogic的大致结构如下：\n\n```java\nclass SomeLogic implemets INetworkHandler\n{\n    SomeLogic()\n    {\n        Network.getInstance().registHandler(1, this);\n        Network.getInstance().registHandler(2, this);\n    }\n\n    \n    void onMessageRecv( IMessage msg)\n    {\n        switch( msg.getMsgId() )\n        {\n            case 1:\n                logicHandler1(IMessage msg);\n                break;\n            case 2:\n                logicHandler2(IMessage msg);\n                break;\n            ...\n        }\n    }\n\n    //请求操作\n    void logicReq1(...);\n    void logicReq2(...);\n    ...\n\n    //消息处理\n    void logicHandler1(IMessage msg)\n    {\n        //TODO: 收到消息，逻辑处理\n        \n        //TODO: 向Data写入数据\n        \n        //TODO: 广播本地事件\n        LocalMessageCenter.getInstance().dispatch( \"Logic1Compelete\" );\n    };\n    void logicHandler2(IMessage msg);\n    ...\n}\n\n\n\nILocalMessageHandler\n{\n    void onLocalMessage( String msg );\n}\n\nLocalMessageCenter\n{\n    static LocalMessageCenter getInstance(); // Singleton\n\n    void dispatch( String msg );\n    void regist( String msg, ILocalMessageHandler handler );\n    void unregist( String msg, ILocalMessageHandler handler );\n}\n\n\n```\n    \n## Data\n这个模块是全应用的数据中心。提供两个功能：\n\n* **存储**。前面已经提到，基本只有Logic对Data有写入权限。由于没有想到好的办法，这个规范暂时只能通过编码习惯来约定，没有做框架级的约定，如果大家有好的办法，欢迎补充。Logic 不关心数据的存储方式：同步OR异步，临时OR永久；这些都由Data自己决定。\n* **读取**。Logic和View都会使用到Data中的数据。但是**需要注意异步读取的问题**。一般App要求View对操作的响应速度要在0.1s级别。所以，若涉及大量的数据存储或读取，便需要借助异步处理。对于存储，我们可能不是那么关心异步存储什么时候结束，只需要知道它成功了既可。但对于读取，经常遇到的情况是：页面上加个菊花，数据完全读取成功之后，移除菊花。这就需要一个通知机制。此时，我们也会用`LocalMessageCenter`作为通信的桥梁。\n\n## View\nNLDV框架对View的限制，相比以上3个模块，非常少。因为，对于NLDV框架来说，View跟特定的平台无关，即它是对各种不同平台显示框架的抽象。在`IOS`里它是`UIFramework`,在`Android`里它是`xxx`，在游戏里它是`openGL`，甚至，在下面会讲到的机器人模拟器里它是一堆测试代码。\n\n在这个框架里，View只在两个过程中出现：\n\n1. 调用Logic的方法，发送逻辑请求。\n2. 监听本地事件，读取Data，显示内容。\n\n只补充一点：在View显示过程中，需要用到很多二级数据（二级数据，就是跟原始数据相对，对原始数据进行整合或者筛选后得到的数据），这些二级数据的处理过程最好在View中处理。因为这些代码大多跟特定的界面有关，而跟App的主要逻辑关系不大，为了以后更改方便，最好写在View里。\n\n# WHY NLDV?\n看到这里，读者大概能隐约的感受到NLDV的一些优点，但是又不那么清晰，要不要看下去呢？下个里程碑就到了看这个人扯淡有用么？再看下去两盘Dota的时间可就没了丫。。。\n\n别急，举几个栗子提提神。\n\n## 引擎更换\n最早，因为兼容PC版本的斗地主，我们采用了原始的字节对齐的方式进行网络传输。又因为设计失误，网络层字节的pack和unpack以及异步读取的处理，都各种出问题。（因为需要跨平台，所以我们用了C++语言，采用了最基础的BSD socket进行socket连接。）\n\n结果是，游戏在网络不稳定的情况下各种闪退。这下产品经理不高兴了。又因为当初开发网络层的同学接手了其他事情，只剩下我各种修修补补，最终也没能彻底解决问题。\n\n于是，我决定重写网络层。（妈蛋，早看这段代码不爽了）。于是我花了两天封装了一个带自动重连和容错功能，支持异步接受和发送的`GameSocket`，简单测试可以发送和接受字节。5分钟替换游戏中的旧网络层，你猜，怎么着？一次Run就登陆成功了！点了几下，所有功能完好如初！尼玛，世界上有比这还幸福的事情么？\n\n其实，别听我说的挺牛逼的，其实替换过程就改了不到10行代码。因为实在是跟Logic、Data、View没啥耦合的地方。\n\n## 制作机器人\n\n一般在线游戏，都会有一两个用户没问题，大量用户就有问题的时候。所以，机器人测试总是必要的。\n\n当我把前端代码交给后端，简单介绍了一下结构之后，后端的小伙伴儿们都惊呆了。不是因为他看到这框架有多么优秀，而是：“这样，我只要写一个while循环，500行代码就能完成一个机器人了啊。我还申请了一个星期来做这个事情呢！”（这是他的原话）。\n\n说的更具体点，制作一个机器人就这么几步：\n\n1. 把所有的View代码文件删掉。\n2. 写一个`AndroidLoop`类。在这个类里，监听斗地主主流程里必须处理的`LocalMessage`，在适当的时候发送主流程中的请求。（对于斗地主来说，主流程包括登陆、选房间、抢地主、出牌、退房间。每个应用有所不同，灵活自便。）\n3. NLD（NLDV去掉V）部分都不变，几乎不用改一行代码。\n\n\n\n## 逻辑清晰\n框架的作用，理论层面上规范了整个软件的结构；而在实现层面，通俗一点，它就规范了**什么代码该写在哪里，不要随地乱放**。\n\n作为一个针对性很强的框架，在上述过程中，NLDV约束了很多可能不需要约束的规范。其中大部分是项目中的干货经验。我知道他并不总是好的，我考略了很久要不要把他们加进来。最终，我还是写下来了，考虑到刚开始从零开始写应用的读者来说，这些可能避免他们走很多弯路；而对有经验的读者来说，可能他们有判断的能力，可以取舍自如。\n\n我想，如果严格按照NLDV框架来编写程序，显而易见的好处就是：\n\n1. 层次清晰，出现问题容易定位。\n2. 主程再也不用担心同事们把代码写得到处都是了。。。\n\n\n# 框架之外（下回分解）\n# NLDV的适用场景（下回分解）\n\n因为各种原因，这篇博客断断续续写了两个星期了，再不发布就要胎死腹中了。所以，最后两节放在这篇日志的续集中写。如果您感兴趣，请私信我，我会尽快补上。\n\n\n\n\n\n[1]: How%20to%20use%20the%20Public%20folder.png \"NLDV Dirgram\"\n\n\n\n","source":"_posts/技术/[构架]从〇开始构架前端（NLDV框架）.md","raw":"---\ndate: 2014-08-21\ntitle: '[构架]从〇开始构架前端（NLDV框架）'\ntags: \n- 框架\n- 设计模式\n- NLDV\ncategories: \n- 技术\n---\n\n\n摘要：一个普通应用，大到微信， 小到豆瓣FM，必不可少的都包括四部分：Network、Logic、Data、View（NLDV）。如何把他们组合起来，**结构清晰**、又**协作便利**，是前端主程的基本修养。本文用通（有）俗（点）易（啰）懂（嗦）的语言，界定了这四个模块的职能范围，同时提供了一种简单易用的组织方式。知者可互动，不知者可参考。\n\n\n\n# 先唠点嗑\n说说自己吧：毕业三年，经历4个项目，前两个主做功能开发，后两个全面负责。因为大学对UI交互深感兴趣，梦想成为优秀的交互设计师，所以毕业就做了前端，想着至少也离得近点。不料一入代码深似海，以前看过的十几本交互书也随风而去，脑子里剩下的只有：几行干巴巴的代码、几个平台的API、和一点不成熟的总结。借此机会，整理一下。\n\n我把他名为**NLDV**，也就图一叫着方便（首字母的组合），并不是想标新立异。你或许会想到MVC，其实本质上跟MVC没啥区别。只是与时俱进，现在App几乎都是连着网的，也就把Network提出来了。\n\n从第三个项目开始，这个NLDV的结构在我意识里渐渐清晰。第四个项目（游戏），因为是从零开始，我把NLDV的结构应用到了项目中。经历了渲染引擎更换和网络引擎更换，过程中其它模块儿做得改动极少，切身体会到它的妙处，忍不住前来分享。\n\n# 从账号登陆谈起\n\n我们从一个最简单的登陆请求谈起。按照`NLDV`框架的思想，步骤如下：\n\n1. Logic告诉Network：以后你收到来自远方服务器的消息都跟我打声招呼，不然我告诉程序员整死你丫。(Logic向Network注册网络监听函数。)\n2. 用户点击登陆按钮，此时View调用Logic的登录方法。Logic赶紧写封信，告诉Network把这封信送到服务器。（Logic根据传入的参数，构造相应的消息体，Network负责把消息发出去）\n3. 漫长的等待。。。\n4. Network终于等到服务器发来的消息，就急急忙忙递给Logic。Logic打开信封一看：“尼玛，居然能一次成功了！32个赞！”\n    1. 可是信上还有性别，年龄，头像，邮箱等等等信息，头都大了，不记下来恐怕是隔夜就忘啊。于是，找来Logic的御用秘书Data（只有Logic能写入），这些信息就交给你了，临时存储还是永久存储我不管，反正我和View来取的时候，你要能给我。\n    2. 好消息要和大家分享，于是Logic全应用广播：“我们已经出色的完成了登陆任务，大家再接再厉”\n3. View收到此广播消息，用界面告诉用户“亲爱的，你登陆成功了”。到此，完成一次登陆。\n    （*PS：对于大多数界面实例，Logic刚刚发的这条广播是可以当耳边风的，因为跟自己业务无关。但，对于登陆界面来说，他必须时刻竖起耳朵监听这个消息，要不然就是失职。所以一般情况下登陆View会在发送登录请求之前就向系统注册监听这个消息的函数，以确保万无一失。这是后话，没看懂也没关系*）\n\n# 职责分配\n\n首先，看一幅图：  \n![NLDV Diagram][1]  \n\n\n通过上面的例子和图示，可以来总结一下NLDV四大家族各自的职能范围了：\n## Network\nNetwork的是数据交流的基础。在这里并不单指socket，并且不暴露任何底层网络的实现。而是一个更加完整、稳定，有纠错功能的职能单位。主要功能：\n\n* 响应Logic的调用，将构造好的消息体转换成服务器能识别的字节串，发送出去。\n* 接收服务器发过来的字节串，转换成前端可识别的结构体，通知Logic。\n    * 前后端在定义消息的时候，一般会用一个消息号(/或 `主消息号-子消息号`对）来唯一标识一种消息。\n    * 而Logic也不止一个，账号系统，业务系统等，每个系统有对应的Logic，分别处理相关的业务逻辑。\n    * 一个Logic仅仅会对某一些消息感兴趣，所以，它只向Network注册自己感兴趣的消息号。\n* 容错处理。比如有限次的自动重发，需要的时候自动重连，网络彻底不可用时通知Logic等。\n\n我们用最少的接口来定义它：\n\n```java\n// Real msg struct will implement this interface, adding some getter/setters.\ninterface IMessage\n{\n    uint getMsgId();// unique id for a type of msg\n    byte[] toBytes();// serialize to bytes.\n    void parseBytes( byte[] bytes); //deserialize to useful info.\n}\n\n//Generally, \"Logic\" will implement this interface for recieving data\ninterface INetworkHandler\n{\n    void onMessageRecv( IMessage msg);\n}\n\ninterface INetwork\n{\n    void send( IMessage msg );\n    void registHandler( uint msgId, INetworkHandler handler );\n    void unregistHandler( uint msgId, INetworkHandler handler );\n}\n```\n\n## Logic\nLogic是一个应用中核心实现业务逻辑的部分。主要功能有： \n\n* 响应来自用户（View）的功能请求。或通过写入Data来改变状态，或构造消息体发送到服务器。\n* 收到网络消息后，做相应的逻辑处理，将数据的改变写入Data，最后广播本地事件。\n    * 这里的本地事件通常用一个 字符串或者整数指代，称为本地事件ID。\n    * 这个过程通常会用到[观察者模式](http://baike.baidu.com/view/1854779.htm)。有一个本地消息中心`LocalMessageCenter`，监听者（通常是View）用本地事件ID来向`LocalMessageCenter`注册，而Logic调用`LocalMessageCenter.dispatch( localEventId ) ` 即可广播此本地事件。\n    * 是的，Logic直接调用View的方法也能达到同样的目的。但是，为了减小Logic和View之间的耦合性，还是选用`LocalMessageCenter`作为中间层。随着需求的改变，View类可能面目全非，但`LocalMessageCenter`的接口却可以长久不变。\n\nLogic的大致结构如下：\n\n```java\nclass SomeLogic implemets INetworkHandler\n{\n    SomeLogic()\n    {\n        Network.getInstance().registHandler(1, this);\n        Network.getInstance().registHandler(2, this);\n    }\n\n    \n    void onMessageRecv( IMessage msg)\n    {\n        switch( msg.getMsgId() )\n        {\n            case 1:\n                logicHandler1(IMessage msg);\n                break;\n            case 2:\n                logicHandler2(IMessage msg);\n                break;\n            ...\n        }\n    }\n\n    //请求操作\n    void logicReq1(...);\n    void logicReq2(...);\n    ...\n\n    //消息处理\n    void logicHandler1(IMessage msg)\n    {\n        //TODO: 收到消息，逻辑处理\n        \n        //TODO: 向Data写入数据\n        \n        //TODO: 广播本地事件\n        LocalMessageCenter.getInstance().dispatch( \"Logic1Compelete\" );\n    };\n    void logicHandler2(IMessage msg);\n    ...\n}\n\n\n\nILocalMessageHandler\n{\n    void onLocalMessage( String msg );\n}\n\nLocalMessageCenter\n{\n    static LocalMessageCenter getInstance(); // Singleton\n\n    void dispatch( String msg );\n    void regist( String msg, ILocalMessageHandler handler );\n    void unregist( String msg, ILocalMessageHandler handler );\n}\n\n\n```\n    \n## Data\n这个模块是全应用的数据中心。提供两个功能：\n\n* **存储**。前面已经提到，基本只有Logic对Data有写入权限。由于没有想到好的办法，这个规范暂时只能通过编码习惯来约定，没有做框架级的约定，如果大家有好的办法，欢迎补充。Logic 不关心数据的存储方式：同步OR异步，临时OR永久；这些都由Data自己决定。\n* **读取**。Logic和View都会使用到Data中的数据。但是**需要注意异步读取的问题**。一般App要求View对操作的响应速度要在0.1s级别。所以，若涉及大量的数据存储或读取，便需要借助异步处理。对于存储，我们可能不是那么关心异步存储什么时候结束，只需要知道它成功了既可。但对于读取，经常遇到的情况是：页面上加个菊花，数据完全读取成功之后，移除菊花。这就需要一个通知机制。此时，我们也会用`LocalMessageCenter`作为通信的桥梁。\n\n## View\nNLDV框架对View的限制，相比以上3个模块，非常少。因为，对于NLDV框架来说，View跟特定的平台无关，即它是对各种不同平台显示框架的抽象。在`IOS`里它是`UIFramework`,在`Android`里它是`xxx`，在游戏里它是`openGL`，甚至，在下面会讲到的机器人模拟器里它是一堆测试代码。\n\n在这个框架里，View只在两个过程中出现：\n\n1. 调用Logic的方法，发送逻辑请求。\n2. 监听本地事件，读取Data，显示内容。\n\n只补充一点：在View显示过程中，需要用到很多二级数据（二级数据，就是跟原始数据相对，对原始数据进行整合或者筛选后得到的数据），这些二级数据的处理过程最好在View中处理。因为这些代码大多跟特定的界面有关，而跟App的主要逻辑关系不大，为了以后更改方便，最好写在View里。\n\n# WHY NLDV?\n看到这里，读者大概能隐约的感受到NLDV的一些优点，但是又不那么清晰，要不要看下去呢？下个里程碑就到了看这个人扯淡有用么？再看下去两盘Dota的时间可就没了丫。。。\n\n别急，举几个栗子提提神。\n\n## 引擎更换\n最早，因为兼容PC版本的斗地主，我们采用了原始的字节对齐的方式进行网络传输。又因为设计失误，网络层字节的pack和unpack以及异步读取的处理，都各种出问题。（因为需要跨平台，所以我们用了C++语言，采用了最基础的BSD socket进行socket连接。）\n\n结果是，游戏在网络不稳定的情况下各种闪退。这下产品经理不高兴了。又因为当初开发网络层的同学接手了其他事情，只剩下我各种修修补补，最终也没能彻底解决问题。\n\n于是，我决定重写网络层。（妈蛋，早看这段代码不爽了）。于是我花了两天封装了一个带自动重连和容错功能，支持异步接受和发送的`GameSocket`，简单测试可以发送和接受字节。5分钟替换游戏中的旧网络层，你猜，怎么着？一次Run就登陆成功了！点了几下，所有功能完好如初！尼玛，世界上有比这还幸福的事情么？\n\n其实，别听我说的挺牛逼的，其实替换过程就改了不到10行代码。因为实在是跟Logic、Data、View没啥耦合的地方。\n\n## 制作机器人\n\n一般在线游戏，都会有一两个用户没问题，大量用户就有问题的时候。所以，机器人测试总是必要的。\n\n当我把前端代码交给后端，简单介绍了一下结构之后，后端的小伙伴儿们都惊呆了。不是因为他看到这框架有多么优秀，而是：“这样，我只要写一个while循环，500行代码就能完成一个机器人了啊。我还申请了一个星期来做这个事情呢！”（这是他的原话）。\n\n说的更具体点，制作一个机器人就这么几步：\n\n1. 把所有的View代码文件删掉。\n2. 写一个`AndroidLoop`类。在这个类里，监听斗地主主流程里必须处理的`LocalMessage`，在适当的时候发送主流程中的请求。（对于斗地主来说，主流程包括登陆、选房间、抢地主、出牌、退房间。每个应用有所不同，灵活自便。）\n3. NLD（NLDV去掉V）部分都不变，几乎不用改一行代码。\n\n\n\n## 逻辑清晰\n框架的作用，理论层面上规范了整个软件的结构；而在实现层面，通俗一点，它就规范了**什么代码该写在哪里，不要随地乱放**。\n\n作为一个针对性很强的框架，在上述过程中，NLDV约束了很多可能不需要约束的规范。其中大部分是项目中的干货经验。我知道他并不总是好的，我考略了很久要不要把他们加进来。最终，我还是写下来了，考虑到刚开始从零开始写应用的读者来说，这些可能避免他们走很多弯路；而对有经验的读者来说，可能他们有判断的能力，可以取舍自如。\n\n我想，如果严格按照NLDV框架来编写程序，显而易见的好处就是：\n\n1. 层次清晰，出现问题容易定位。\n2. 主程再也不用担心同事们把代码写得到处都是了。。。\n\n\n# 框架之外（下回分解）\n# NLDV的适用场景（下回分解）\n\n因为各种原因，这篇博客断断续续写了两个星期了，再不发布就要胎死腹中了。所以，最后两节放在这篇日志的续集中写。如果您感兴趣，请私信我，我会尽快补上。\n\n\n\n\n\n[1]: How%20to%20use%20the%20Public%20folder.png \"NLDV Dirgram\"\n\n\n\n","slug":"技术/[构架]从〇开始构架前端（NLDV框架）","published":1,"updated":"2017-07-26T16:06:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krv005wq0d4onz3k3gj","content":"<p>摘要：一个普通应用，大到微信， 小到豆瓣FM，必不可少的都包括四部分：Network、Logic、Data、View（NLDV）。如何把他们组合起来，<strong>结构清晰</strong>、又<strong>协作便利</strong>，是前端主程的基本修养。本文用通（有）俗（点）易（啰）懂（嗦）的语言，界定了这四个模块的职能范围，同时提供了一种简单易用的组织方式。知者可互动，不知者可参考。</p>\n<h1 id=\"先唠点嗑\"><a href=\"#先唠点嗑\" class=\"headerlink\" title=\"先唠点嗑\"></a>先唠点嗑</h1><p>说说自己吧：毕业三年，经历4个项目，前两个主做功能开发，后两个全面负责。因为大学对UI交互深感兴趣，梦想成为优秀的交互设计师，所以毕业就做了前端，想着至少也离得近点。不料一入代码深似海，以前看过的十几本交互书也随风而去，脑子里剩下的只有：几行干巴巴的代码、几个平台的API、和一点不成熟的总结。借此机会，整理一下。</p>\n<p>我把他名为<strong>NLDV</strong>，也就图一叫着方便（首字母的组合），并不是想标新立异。你或许会想到MVC，其实本质上跟MVC没啥区别。只是与时俱进，现在App几乎都是连着网的，也就把Network提出来了。</p>\n<p>从第三个项目开始，这个NLDV的结构在我意识里渐渐清晰。第四个项目（游戏），因为是从零开始，我把NLDV的结构应用到了项目中。经历了渲染引擎更换和网络引擎更换，过程中其它模块儿做得改动极少，切身体会到它的妙处，忍不住前来分享。</p>\n<h1 id=\"从账号登陆谈起\"><a href=\"#从账号登陆谈起\" class=\"headerlink\" title=\"从账号登陆谈起\"></a>从账号登陆谈起</h1><p>我们从一个最简单的登陆请求谈起。按照<code>NLDV</code>框架的思想，步骤如下：</p>\n<ol>\n<li>Logic告诉Network：以后你收到来自远方服务器的消息都跟我打声招呼，不然我告诉程序员整死你丫。(Logic向Network注册网络监听函数。)</li>\n<li>用户点击登陆按钮，此时View调用Logic的登录方法。Logic赶紧写封信，告诉Network把这封信送到服务器。（Logic根据传入的参数，构造相应的消息体，Network负责把消息发出去）</li>\n<li>漫长的等待。。。</li>\n<li>Network终于等到服务器发来的消息，就急急忙忙递给Logic。Logic打开信封一看：“尼玛，居然能一次成功了！32个赞！”<ol>\n<li>可是信上还有性别，年龄，头像，邮箱等等等信息，头都大了，不记下来恐怕是隔夜就忘啊。于是，找来Logic的御用秘书Data（只有Logic能写入），这些信息就交给你了，临时存储还是永久存储我不管，反正我和View来取的时候，你要能给我。</li>\n<li>好消息要和大家分享，于是Logic全应用广播：“我们已经出色的完成了登陆任务，大家再接再厉”</li>\n</ol>\n</li>\n<li>View收到此广播消息，用界面告诉用户“亲爱的，你登陆成功了”。到此，完成一次登陆。<br> （<em>PS：对于大多数界面实例，Logic刚刚发的这条广播是可以当耳边风的，因为跟自己业务无关。但，对于登陆界面来说，他必须时刻竖起耳朵监听这个消息，要不然就是失职。所以一般情况下登陆View会在发送登录请求之前就向系统注册监听这个消息的函数，以确保万无一失。这是后话，没看懂也没关系</em>）</li>\n</ol>\n<h1 id=\"职责分配\"><a href=\"#职责分配\" class=\"headerlink\" title=\"职责分配\"></a>职责分配</h1><p>首先，看一幅图：<br><img src=\"How%20to%20use%20the%20Public%20folder.png\" alt=\"NLDV Diagram\" title=\"NLDV Dirgram\">  </p>\n<p>通过上面的例子和图示，可以来总结一下NLDV四大家族各自的职能范围了：</p>\n<h2 id=\"Network\"><a href=\"#Network\" class=\"headerlink\" title=\"Network\"></a>Network</h2><p>Network的是数据交流的基础。在这里并不单指socket，并且不暴露任何底层网络的实现。而是一个更加完整、稳定，有纠错功能的职能单位。主要功能：</p>\n<ul>\n<li>响应Logic的调用，将构造好的消息体转换成服务器能识别的字节串，发送出去。</li>\n<li>接收服务器发过来的字节串，转换成前端可识别的结构体，通知Logic。<ul>\n<li>前后端在定义消息的时候，一般会用一个消息号(/或 <code>主消息号-子消息号</code>对）来唯一标识一种消息。</li>\n<li>而Logic也不止一个，账号系统，业务系统等，每个系统有对应的Logic，分别处理相关的业务逻辑。</li>\n<li>一个Logic仅仅会对某一些消息感兴趣，所以，它只向Network注册自己感兴趣的消息号。</li>\n</ul>\n</li>\n<li>容错处理。比如有限次的自动重发，需要的时候自动重连，网络彻底不可用时通知Logic等。</li>\n</ul>\n<p>我们用最少的接口来定义它：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Real msg struct will implement this interface, adding some getter/setters.</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IMessage</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\">uint <span class=\"title\">getMsgId</span><span class=\"params\">()</span></span>;<span class=\"comment\">// unique id for a type of msg</span></div><div class=\"line\">    <span class=\"keyword\">byte</span>[] toBytes();<span class=\"comment\">// serialize to bytes.</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">parseBytes</span><span class=\"params\">( <span class=\"keyword\">byte</span>[] bytes)</span></span>; <span class=\"comment\">//deserialize to useful info.</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Generally, \"Logic\" will implement this interface for recieving data</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">INetworkHandler</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onMessageRecv</span><span class=\"params\">( IMessage msg)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">INetwork</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">send</span><span class=\"params\">( IMessage msg )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">registHandler</span><span class=\"params\">( uint msgId, INetworkHandler handler )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unregistHandler</span><span class=\"params\">( uint msgId, INetworkHandler handler )</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Logic\"><a href=\"#Logic\" class=\"headerlink\" title=\"Logic\"></a>Logic</h2><p>Logic是一个应用中核心实现业务逻辑的部分。主要功能有： </p>\n<ul>\n<li>响应来自用户（View）的功能请求。或通过写入Data来改变状态，或构造消息体发送到服务器。</li>\n<li>收到网络消息后，做相应的逻辑处理，将数据的改变写入Data，最后广播本地事件。<ul>\n<li>这里的本地事件通常用一个 字符串或者整数指代，称为本地事件ID。</li>\n<li>这个过程通常会用到<a href=\"http://baike.baidu.com/view/1854779.htm\" target=\"_blank\" rel=\"external\">观察者模式</a>。有一个本地消息中心<code>LocalMessageCenter</code>，监听者（通常是View）用本地事件ID来向<code>LocalMessageCenter</code>注册，而Logic调用<code>LocalMessageCenter.dispatch( localEventId )</code> 即可广播此本地事件。</li>\n<li>是的，Logic直接调用View的方法也能达到同样的目的。但是，为了减小Logic和View之间的耦合性，还是选用<code>LocalMessageCenter</code>作为中间层。随着需求的改变，View类可能面目全非，但<code>LocalMessageCenter</code>的接口却可以长久不变。</li>\n</ul>\n</li>\n</ul>\n<p>Logic的大致结构如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeLogic</span> <span class=\"title\">implemets</span> <span class=\"title\">INetworkHandler</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    SomeLogic()</div><div class=\"line\">    &#123;</div><div class=\"line\">        Network.getInstance().registHandler(<span class=\"number\">1</span>, <span class=\"keyword\">this</span>);</div><div class=\"line\">        Network.getInstance().registHandler(<span class=\"number\">2</span>, <span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onMessageRecv</span><span class=\"params\">( IMessage msg)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span>( msg.getMsgId() )</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                logicHandler1(IMessage msg);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</div><div class=\"line\">                logicHandler2(IMessage msg);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//请求操作</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicReq1</span><span class=\"params\">(...)</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicReq2</span><span class=\"params\">(...)</span></span>;</div><div class=\"line\">    ...</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//消息处理</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicHandler1</span><span class=\"params\">(IMessage msg)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 收到消息，逻辑处理</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 向Data写入数据</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 广播本地事件</span></div><div class=\"line\">        LocalMessageCenter.getInstance().dispatch( <span class=\"string\">\"Logic1Compelete\"</span> );</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicHandler2</span><span class=\"params\">(IMessage msg)</span></span>;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">ILocalMessageHandler</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onLocalMessage</span><span class=\"params\">( String msg )</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">LocalMessageCenter</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> LocalMessageCenter <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>; <span class=\"comment\">// Singleton</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dispatch</span><span class=\"params\">( String msg )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">regist</span><span class=\"params\">( String msg, ILocalMessageHandler handler )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unregist</span><span class=\"params\">( String msg, ILocalMessageHandler handler )</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h2><p>这个模块是全应用的数据中心。提供两个功能：</p>\n<ul>\n<li><strong>存储</strong>。前面已经提到，基本只有Logic对Data有写入权限。由于没有想到好的办法，这个规范暂时只能通过编码习惯来约定，没有做框架级的约定，如果大家有好的办法，欢迎补充。Logic 不关心数据的存储方式：同步OR异步，临时OR永久；这些都由Data自己决定。</li>\n<li><strong>读取</strong>。Logic和View都会使用到Data中的数据。但是<strong>需要注意异步读取的问题</strong>。一般App要求View对操作的响应速度要在0.1s级别。所以，若涉及大量的数据存储或读取，便需要借助异步处理。对于存储，我们可能不是那么关心异步存储什么时候结束，只需要知道它成功了既可。但对于读取，经常遇到的情况是：页面上加个菊花，数据完全读取成功之后，移除菊花。这就需要一个通知机制。此时，我们也会用<code>LocalMessageCenter</code>作为通信的桥梁。</li>\n</ul>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>NLDV框架对View的限制，相比以上3个模块，非常少。因为，对于NLDV框架来说，View跟特定的平台无关，即它是对各种不同平台显示框架的抽象。在<code>IOS</code>里它是<code>UIFramework</code>,在<code>Android</code>里它是<code>xxx</code>，在游戏里它是<code>openGL</code>，甚至，在下面会讲到的机器人模拟器里它是一堆测试代码。</p>\n<p>在这个框架里，View只在两个过程中出现：</p>\n<ol>\n<li>调用Logic的方法，发送逻辑请求。</li>\n<li>监听本地事件，读取Data，显示内容。</li>\n</ol>\n<p>只补充一点：在View显示过程中，需要用到很多二级数据（二级数据，就是跟原始数据相对，对原始数据进行整合或者筛选后得到的数据），这些二级数据的处理过程最好在View中处理。因为这些代码大多跟特定的界面有关，而跟App的主要逻辑关系不大，为了以后更改方便，最好写在View里。</p>\n<h1 id=\"WHY-NLDV\"><a href=\"#WHY-NLDV\" class=\"headerlink\" title=\"WHY NLDV?\"></a>WHY NLDV?</h1><p>看到这里，读者大概能隐约的感受到NLDV的一些优点，但是又不那么清晰，要不要看下去呢？下个里程碑就到了看这个人扯淡有用么？再看下去两盘Dota的时间可就没了丫。。。</p>\n<p>别急，举几个栗子提提神。</p>\n<h2 id=\"引擎更换\"><a href=\"#引擎更换\" class=\"headerlink\" title=\"引擎更换\"></a>引擎更换</h2><p>最早，因为兼容PC版本的斗地主，我们采用了原始的字节对齐的方式进行网络传输。又因为设计失误，网络层字节的pack和unpack以及异步读取的处理，都各种出问题。（因为需要跨平台，所以我们用了C++语言，采用了最基础的BSD socket进行socket连接。）</p>\n<p>结果是，游戏在网络不稳定的情况下各种闪退。这下产品经理不高兴了。又因为当初开发网络层的同学接手了其他事情，只剩下我各种修修补补，最终也没能彻底解决问题。</p>\n<p>于是，我决定重写网络层。（妈蛋，早看这段代码不爽了）。于是我花了两天封装了一个带自动重连和容错功能，支持异步接受和发送的<code>GameSocket</code>，简单测试可以发送和接受字节。5分钟替换游戏中的旧网络层，你猜，怎么着？一次Run就登陆成功了！点了几下，所有功能完好如初！尼玛，世界上有比这还幸福的事情么？</p>\n<p>其实，别听我说的挺牛逼的，其实替换过程就改了不到10行代码。因为实在是跟Logic、Data、View没啥耦合的地方。</p>\n<h2 id=\"制作机器人\"><a href=\"#制作机器人\" class=\"headerlink\" title=\"制作机器人\"></a>制作机器人</h2><p>一般在线游戏，都会有一两个用户没问题，大量用户就有问题的时候。所以，机器人测试总是必要的。</p>\n<p>当我把前端代码交给后端，简单介绍了一下结构之后，后端的小伙伴儿们都惊呆了。不是因为他看到这框架有多么优秀，而是：“这样，我只要写一个while循环，500行代码就能完成一个机器人了啊。我还申请了一个星期来做这个事情呢！”（这是他的原话）。</p>\n<p>说的更具体点，制作一个机器人就这么几步：</p>\n<ol>\n<li>把所有的View代码文件删掉。</li>\n<li>写一个<code>AndroidLoop</code>类。在这个类里，监听斗地主主流程里必须处理的<code>LocalMessage</code>，在适当的时候发送主流程中的请求。（对于斗地主来说，主流程包括登陆、选房间、抢地主、出牌、退房间。每个应用有所不同，灵活自便。）</li>\n<li>NLD（NLDV去掉V）部分都不变，几乎不用改一行代码。</li>\n</ol>\n<h2 id=\"逻辑清晰\"><a href=\"#逻辑清晰\" class=\"headerlink\" title=\"逻辑清晰\"></a>逻辑清晰</h2><p>框架的作用，理论层面上规范了整个软件的结构；而在实现层面，通俗一点，它就规范了<strong>什么代码该写在哪里，不要随地乱放</strong>。</p>\n<p>作为一个针对性很强的框架，在上述过程中，NLDV约束了很多可能不需要约束的规范。其中大部分是项目中的干货经验。我知道他并不总是好的，我考略了很久要不要把他们加进来。最终，我还是写下来了，考虑到刚开始从零开始写应用的读者来说，这些可能避免他们走很多弯路；而对有经验的读者来说，可能他们有判断的能力，可以取舍自如。</p>\n<p>我想，如果严格按照NLDV框架来编写程序，显而易见的好处就是：</p>\n<ol>\n<li>层次清晰，出现问题容易定位。</li>\n<li>主程再也不用担心同事们把代码写得到处都是了。。。</li>\n</ol>\n<h1 id=\"框架之外（下回分解）\"><a href=\"#框架之外（下回分解）\" class=\"headerlink\" title=\"框架之外（下回分解）\"></a>框架之外（下回分解）</h1><h1 id=\"NLDV的适用场景（下回分解）\"><a href=\"#NLDV的适用场景（下回分解）\" class=\"headerlink\" title=\"NLDV的适用场景（下回分解）\"></a>NLDV的适用场景（下回分解）</h1><p>因为各种原因，这篇博客断断续续写了两个星期了，再不发布就要胎死腹中了。所以，最后两节放在这篇日志的续集中写。如果您感兴趣，请私信我，我会尽快补上。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：一个普通应用，大到微信， 小到豆瓣FM，必不可少的都包括四部分：Network、Logic、Data、View（NLDV）。如何把他们组合起来，<strong>结构清晰</strong>、又<strong>协作便利</strong>，是前端主程的基本修养。本文用通（有）俗（点）易（啰）懂（嗦）的语言，界定了这四个模块的职能范围，同时提供了一种简单易用的组织方式。知者可互动，不知者可参考。</p>\n<h1 id=\"先唠点嗑\"><a href=\"#先唠点嗑\" class=\"headerlink\" title=\"先唠点嗑\"></a>先唠点嗑</h1><p>说说自己吧：毕业三年，经历4个项目，前两个主做功能开发，后两个全面负责。因为大学对UI交互深感兴趣，梦想成为优秀的交互设计师，所以毕业就做了前端，想着至少也离得近点。不料一入代码深似海，以前看过的十几本交互书也随风而去，脑子里剩下的只有：几行干巴巴的代码、几个平台的API、和一点不成熟的总结。借此机会，整理一下。</p>\n<p>我把他名为<strong>NLDV</strong>，也就图一叫着方便（首字母的组合），并不是想标新立异。你或许会想到MVC，其实本质上跟MVC没啥区别。只是与时俱进，现在App几乎都是连着网的，也就把Network提出来了。</p>\n<p>从第三个项目开始，这个NLDV的结构在我意识里渐渐清晰。第四个项目（游戏），因为是从零开始，我把NLDV的结构应用到了项目中。经历了渲染引擎更换和网络引擎更换，过程中其它模块儿做得改动极少，切身体会到它的妙处，忍不住前来分享。</p>\n<h1 id=\"从账号登陆谈起\"><a href=\"#从账号登陆谈起\" class=\"headerlink\" title=\"从账号登陆谈起\"></a>从账号登陆谈起</h1><p>我们从一个最简单的登陆请求谈起。按照<code>NLDV</code>框架的思想，步骤如下：</p>\n<ol>\n<li>Logic告诉Network：以后你收到来自远方服务器的消息都跟我打声招呼，不然我告诉程序员整死你丫。(Logic向Network注册网络监听函数。)</li>\n<li>用户点击登陆按钮，此时View调用Logic的登录方法。Logic赶紧写封信，告诉Network把这封信送到服务器。（Logic根据传入的参数，构造相应的消息体，Network负责把消息发出去）</li>\n<li>漫长的等待。。。</li>\n<li>Network终于等到服务器发来的消息，就急急忙忙递给Logic。Logic打开信封一看：“尼玛，居然能一次成功了！32个赞！”<ol>\n<li>可是信上还有性别，年龄，头像，邮箱等等等信息，头都大了，不记下来恐怕是隔夜就忘啊。于是，找来Logic的御用秘书Data（只有Logic能写入），这些信息就交给你了，临时存储还是永久存储我不管，反正我和View来取的时候，你要能给我。</li>\n<li>好消息要和大家分享，于是Logic全应用广播：“我们已经出色的完成了登陆任务，大家再接再厉”</li>\n</ol>\n</li>\n<li>View收到此广播消息，用界面告诉用户“亲爱的，你登陆成功了”。到此，完成一次登陆。<br> （<em>PS：对于大多数界面实例，Logic刚刚发的这条广播是可以当耳边风的，因为跟自己业务无关。但，对于登陆界面来说，他必须时刻竖起耳朵监听这个消息，要不然就是失职。所以一般情况下登陆View会在发送登录请求之前就向系统注册监听这个消息的函数，以确保万无一失。这是后话，没看懂也没关系</em>）</li>\n</ol>\n<h1 id=\"职责分配\"><a href=\"#职责分配\" class=\"headerlink\" title=\"职责分配\"></a>职责分配</h1><p>首先，看一幅图：<br><img src=\"How%20to%20use%20the%20Public%20folder.png\" alt=\"NLDV Diagram\" title=\"NLDV Dirgram\">  </p>\n<p>通过上面的例子和图示，可以来总结一下NLDV四大家族各自的职能范围了：</p>\n<h2 id=\"Network\"><a href=\"#Network\" class=\"headerlink\" title=\"Network\"></a>Network</h2><p>Network的是数据交流的基础。在这里并不单指socket，并且不暴露任何底层网络的实现。而是一个更加完整、稳定，有纠错功能的职能单位。主要功能：</p>\n<ul>\n<li>响应Logic的调用，将构造好的消息体转换成服务器能识别的字节串，发送出去。</li>\n<li>接收服务器发过来的字节串，转换成前端可识别的结构体，通知Logic。<ul>\n<li>前后端在定义消息的时候，一般会用一个消息号(/或 <code>主消息号-子消息号</code>对）来唯一标识一种消息。</li>\n<li>而Logic也不止一个，账号系统，业务系统等，每个系统有对应的Logic，分别处理相关的业务逻辑。</li>\n<li>一个Logic仅仅会对某一些消息感兴趣，所以，它只向Network注册自己感兴趣的消息号。</li>\n</ul>\n</li>\n<li>容错处理。比如有限次的自动重发，需要的时候自动重连，网络彻底不可用时通知Logic等。</li>\n</ul>\n<p>我们用最少的接口来定义它：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Real msg struct will implement this interface, adding some getter/setters.</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IMessage</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\">uint <span class=\"title\">getMsgId</span><span class=\"params\">()</span></span>;<span class=\"comment\">// unique id for a type of msg</span></div><div class=\"line\">    <span class=\"keyword\">byte</span>[] toBytes();<span class=\"comment\">// serialize to bytes.</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">parseBytes</span><span class=\"params\">( <span class=\"keyword\">byte</span>[] bytes)</span></span>; <span class=\"comment\">//deserialize to useful info.</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Generally, \"Logic\" will implement this interface for recieving data</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">INetworkHandler</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onMessageRecv</span><span class=\"params\">( IMessage msg)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">INetwork</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">send</span><span class=\"params\">( IMessage msg )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">registHandler</span><span class=\"params\">( uint msgId, INetworkHandler handler )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unregistHandler</span><span class=\"params\">( uint msgId, INetworkHandler handler )</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Logic\"><a href=\"#Logic\" class=\"headerlink\" title=\"Logic\"></a>Logic</h2><p>Logic是一个应用中核心实现业务逻辑的部分。主要功能有： </p>\n<ul>\n<li>响应来自用户（View）的功能请求。或通过写入Data来改变状态，或构造消息体发送到服务器。</li>\n<li>收到网络消息后，做相应的逻辑处理，将数据的改变写入Data，最后广播本地事件。<ul>\n<li>这里的本地事件通常用一个 字符串或者整数指代，称为本地事件ID。</li>\n<li>这个过程通常会用到<a href=\"http://baike.baidu.com/view/1854779.htm\" target=\"_blank\" rel=\"external\">观察者模式</a>。有一个本地消息中心<code>LocalMessageCenter</code>，监听者（通常是View）用本地事件ID来向<code>LocalMessageCenter</code>注册，而Logic调用<code>LocalMessageCenter.dispatch( localEventId )</code> 即可广播此本地事件。</li>\n<li>是的，Logic直接调用View的方法也能达到同样的目的。但是，为了减小Logic和View之间的耦合性，还是选用<code>LocalMessageCenter</code>作为中间层。随着需求的改变，View类可能面目全非，但<code>LocalMessageCenter</code>的接口却可以长久不变。</li>\n</ul>\n</li>\n</ul>\n<p>Logic的大致结构如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeLogic</span> <span class=\"title\">implemets</span> <span class=\"title\">INetworkHandler</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    SomeLogic()</div><div class=\"line\">    &#123;</div><div class=\"line\">        Network.getInstance().registHandler(<span class=\"number\">1</span>, <span class=\"keyword\">this</span>);</div><div class=\"line\">        Network.getInstance().registHandler(<span class=\"number\">2</span>, <span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onMessageRecv</span><span class=\"params\">( IMessage msg)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span>( msg.getMsgId() )</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                logicHandler1(IMessage msg);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</div><div class=\"line\">                logicHandler2(IMessage msg);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//请求操作</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicReq1</span><span class=\"params\">(...)</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicReq2</span><span class=\"params\">(...)</span></span>;</div><div class=\"line\">    ...</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//消息处理</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicHandler1</span><span class=\"params\">(IMessage msg)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 收到消息，逻辑处理</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 向Data写入数据</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 广播本地事件</span></div><div class=\"line\">        LocalMessageCenter.getInstance().dispatch( <span class=\"string\">\"Logic1Compelete\"</span> );</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">logicHandler2</span><span class=\"params\">(IMessage msg)</span></span>;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">ILocalMessageHandler</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onLocalMessage</span><span class=\"params\">( String msg )</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">LocalMessageCenter</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> LocalMessageCenter <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>; <span class=\"comment\">// Singleton</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dispatch</span><span class=\"params\">( String msg )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">regist</span><span class=\"params\">( String msg, ILocalMessageHandler handler )</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unregist</span><span class=\"params\">( String msg, ILocalMessageHandler handler )</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h2><p>这个模块是全应用的数据中心。提供两个功能：</p>\n<ul>\n<li><strong>存储</strong>。前面已经提到，基本只有Logic对Data有写入权限。由于没有想到好的办法，这个规范暂时只能通过编码习惯来约定，没有做框架级的约定，如果大家有好的办法，欢迎补充。Logic 不关心数据的存储方式：同步OR异步，临时OR永久；这些都由Data自己决定。</li>\n<li><strong>读取</strong>。Logic和View都会使用到Data中的数据。但是<strong>需要注意异步读取的问题</strong>。一般App要求View对操作的响应速度要在0.1s级别。所以，若涉及大量的数据存储或读取，便需要借助异步处理。对于存储，我们可能不是那么关心异步存储什么时候结束，只需要知道它成功了既可。但对于读取，经常遇到的情况是：页面上加个菊花，数据完全读取成功之后，移除菊花。这就需要一个通知机制。此时，我们也会用<code>LocalMessageCenter</code>作为通信的桥梁。</li>\n</ul>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>NLDV框架对View的限制，相比以上3个模块，非常少。因为，对于NLDV框架来说，View跟特定的平台无关，即它是对各种不同平台显示框架的抽象。在<code>IOS</code>里它是<code>UIFramework</code>,在<code>Android</code>里它是<code>xxx</code>，在游戏里它是<code>openGL</code>，甚至，在下面会讲到的机器人模拟器里它是一堆测试代码。</p>\n<p>在这个框架里，View只在两个过程中出现：</p>\n<ol>\n<li>调用Logic的方法，发送逻辑请求。</li>\n<li>监听本地事件，读取Data，显示内容。</li>\n</ol>\n<p>只补充一点：在View显示过程中，需要用到很多二级数据（二级数据，就是跟原始数据相对，对原始数据进行整合或者筛选后得到的数据），这些二级数据的处理过程最好在View中处理。因为这些代码大多跟特定的界面有关，而跟App的主要逻辑关系不大，为了以后更改方便，最好写在View里。</p>\n<h1 id=\"WHY-NLDV\"><a href=\"#WHY-NLDV\" class=\"headerlink\" title=\"WHY NLDV?\"></a>WHY NLDV?</h1><p>看到这里，读者大概能隐约的感受到NLDV的一些优点，但是又不那么清晰，要不要看下去呢？下个里程碑就到了看这个人扯淡有用么？再看下去两盘Dota的时间可就没了丫。。。</p>\n<p>别急，举几个栗子提提神。</p>\n<h2 id=\"引擎更换\"><a href=\"#引擎更换\" class=\"headerlink\" title=\"引擎更换\"></a>引擎更换</h2><p>最早，因为兼容PC版本的斗地主，我们采用了原始的字节对齐的方式进行网络传输。又因为设计失误，网络层字节的pack和unpack以及异步读取的处理，都各种出问题。（因为需要跨平台，所以我们用了C++语言，采用了最基础的BSD socket进行socket连接。）</p>\n<p>结果是，游戏在网络不稳定的情况下各种闪退。这下产品经理不高兴了。又因为当初开发网络层的同学接手了其他事情，只剩下我各种修修补补，最终也没能彻底解决问题。</p>\n<p>于是，我决定重写网络层。（妈蛋，早看这段代码不爽了）。于是我花了两天封装了一个带自动重连和容错功能，支持异步接受和发送的<code>GameSocket</code>，简单测试可以发送和接受字节。5分钟替换游戏中的旧网络层，你猜，怎么着？一次Run就登陆成功了！点了几下，所有功能完好如初！尼玛，世界上有比这还幸福的事情么？</p>\n<p>其实，别听我说的挺牛逼的，其实替换过程就改了不到10行代码。因为实在是跟Logic、Data、View没啥耦合的地方。</p>\n<h2 id=\"制作机器人\"><a href=\"#制作机器人\" class=\"headerlink\" title=\"制作机器人\"></a>制作机器人</h2><p>一般在线游戏，都会有一两个用户没问题，大量用户就有问题的时候。所以，机器人测试总是必要的。</p>\n<p>当我把前端代码交给后端，简单介绍了一下结构之后，后端的小伙伴儿们都惊呆了。不是因为他看到这框架有多么优秀，而是：“这样，我只要写一个while循环，500行代码就能完成一个机器人了啊。我还申请了一个星期来做这个事情呢！”（这是他的原话）。</p>\n<p>说的更具体点，制作一个机器人就这么几步：</p>\n<ol>\n<li>把所有的View代码文件删掉。</li>\n<li>写一个<code>AndroidLoop</code>类。在这个类里，监听斗地主主流程里必须处理的<code>LocalMessage</code>，在适当的时候发送主流程中的请求。（对于斗地主来说，主流程包括登陆、选房间、抢地主、出牌、退房间。每个应用有所不同，灵活自便。）</li>\n<li>NLD（NLDV去掉V）部分都不变，几乎不用改一行代码。</li>\n</ol>\n<h2 id=\"逻辑清晰\"><a href=\"#逻辑清晰\" class=\"headerlink\" title=\"逻辑清晰\"></a>逻辑清晰</h2><p>框架的作用，理论层面上规范了整个软件的结构；而在实现层面，通俗一点，它就规范了<strong>什么代码该写在哪里，不要随地乱放</strong>。</p>\n<p>作为一个针对性很强的框架，在上述过程中，NLDV约束了很多可能不需要约束的规范。其中大部分是项目中的干货经验。我知道他并不总是好的，我考略了很久要不要把他们加进来。最终，我还是写下来了，考虑到刚开始从零开始写应用的读者来说，这些可能避免他们走很多弯路；而对有经验的读者来说，可能他们有判断的能力，可以取舍自如。</p>\n<p>我想，如果严格按照NLDV框架来编写程序，显而易见的好处就是：</p>\n<ol>\n<li>层次清晰，出现问题容易定位。</li>\n<li>主程再也不用担心同事们把代码写得到处都是了。。。</li>\n</ol>\n<h1 id=\"框架之外（下回分解）\"><a href=\"#框架之外（下回分解）\" class=\"headerlink\" title=\"框架之外（下回分解）\"></a>框架之外（下回分解）</h1><h1 id=\"NLDV的适用场景（下回分解）\"><a href=\"#NLDV的适用场景（下回分解）\" class=\"headerlink\" title=\"NLDV的适用场景（下回分解）\"></a>NLDV的适用场景（下回分解）</h1><p>因为各种原因，这篇博客断断续续写了两个星期了，再不发布就要胎死腹中了。所以，最后两节放在这篇日志的续集中写。如果您感兴趣，请私信我，我会尽快补上。</p>\n"},{"title":"Color薪工作评价和反馈","date":"2016-04-02T09:30:00.000Z","_content":"\n# 评价和反馈\n\n我们在每个季度结束时会进行一次 performance review，即工作的评价和反馈。流程一定程度上借鉴了 Google 的 performance review, 但有不少简化和修改，以避免给大家造成额外的负担，毕竟我们的主要精力应该放在改进产品而不是处理内部流程上。\n\n这个流程分为两部分。\n\n# 自我评价及工作反馈\n\n在季度结束时，每个同事会收到一个 Google Docs 表格，包含以下几个问题。除了第一个问题外，其他内容都会对其他同事保密，只有自己的主管和 HR 可以看到。\n\n## 自我评价\n\n1. 请列出过去一个季度你参与的工作、承担的职责、完成的具体内容，并陈述工作实际产生的价值。请尽可能详尽。如果有在自己日常职责之外的贡献，也请单独列出。(这部分内容将对所有人公开)\n2. 针对以上列出的工作请给出对自己工作的评价。请总结得失以及原因。有哪些地方有改进的空间？\n3. 针对上面的问题和需要做的改进，请列出在下个季度的具体改进计划。\n\n## 工作反馈\n\n1. 公司在哪些方面给你提供更多资源或支持可以让你工作得更好？\n2. 对于你的主管或管理团队的工作有哪些反馈和建议？\n3. 对于团队建设、公司文化有哪些反馈和建议？\n\n\n# 主管评价\n\n每个担任 people manager 的同事会收到下属的自我评价和工作反馈。每个 manager 会为每位下属写主管评价和反馈，同时打出本季度的绩效得分。绩效分数在 0.0 至 2.0 之间，其中 1.0 表示工作达到期望，低于 1.0 表示低于期望，高于 1.0 表示高于期望。这里的「期望」和每个人的职能、级别和薪酬相关。\n\n# 对薪酬的影响\n\n绩效分数对薪酬的影响体现在年终奖上。我们的年终奖计算公式为：\n\n`年终奖 = 本年度累计实际工资 * 15% * 年度个人绩效 * 年度公司绩效`\n\n其中的年度个人绩效即为个人各季度绩效分数的平均数。年度公司绩效由管理团队在年末评定。\n\n# 结语\n\n我们的 performance review 首要目的是为每个人提供一个总结工作并听取反馈，明确得失以便改进的机会；次要目的是通过浮动的年终奖让做出更多贡献的同事能得到更高回报，做到相对的公平。希望每个人都以坦诚、认真、实事求是的态度对待这项工作。","source":"_posts/管理/Color工作的评价和反馈.md","raw":"title: Color薪工作评价和反馈\ndate: 2016-04-02 17:30:00\ntags: \n- 薪酬\n- color\ncategories: \n- 管理\n---\n\n# 评价和反馈\n\n我们在每个季度结束时会进行一次 performance review，即工作的评价和反馈。流程一定程度上借鉴了 Google 的 performance review, 但有不少简化和修改，以避免给大家造成额外的负担，毕竟我们的主要精力应该放在改进产品而不是处理内部流程上。\n\n这个流程分为两部分。\n\n# 自我评价及工作反馈\n\n在季度结束时，每个同事会收到一个 Google Docs 表格，包含以下几个问题。除了第一个问题外，其他内容都会对其他同事保密，只有自己的主管和 HR 可以看到。\n\n## 自我评价\n\n1. 请列出过去一个季度你参与的工作、承担的职责、完成的具体内容，并陈述工作实际产生的价值。请尽可能详尽。如果有在自己日常职责之外的贡献，也请单独列出。(这部分内容将对所有人公开)\n2. 针对以上列出的工作请给出对自己工作的评价。请总结得失以及原因。有哪些地方有改进的空间？\n3. 针对上面的问题和需要做的改进，请列出在下个季度的具体改进计划。\n\n## 工作反馈\n\n1. 公司在哪些方面给你提供更多资源或支持可以让你工作得更好？\n2. 对于你的主管或管理团队的工作有哪些反馈和建议？\n3. 对于团队建设、公司文化有哪些反馈和建议？\n\n\n# 主管评价\n\n每个担任 people manager 的同事会收到下属的自我评价和工作反馈。每个 manager 会为每位下属写主管评价和反馈，同时打出本季度的绩效得分。绩效分数在 0.0 至 2.0 之间，其中 1.0 表示工作达到期望，低于 1.0 表示低于期望，高于 1.0 表示高于期望。这里的「期望」和每个人的职能、级别和薪酬相关。\n\n# 对薪酬的影响\n\n绩效分数对薪酬的影响体现在年终奖上。我们的年终奖计算公式为：\n\n`年终奖 = 本年度累计实际工资 * 15% * 年度个人绩效 * 年度公司绩效`\n\n其中的年度个人绩效即为个人各季度绩效分数的平均数。年度公司绩效由管理团队在年末评定。\n\n# 结语\n\n我们的 performance review 首要目的是为每个人提供一个总结工作并听取反馈，明确得失以便改进的机会；次要目的是通过浮动的年终奖让做出更多贡献的同事能得到更高回报，做到相对的公平。希望每个人都以坦诚、认真、实事求是的态度对待这项工作。","slug":"管理/Color工作的评价和反馈","published":1,"updated":"2017-07-26T14:30:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6krx0060q0d4cqcjkuzn","content":"<h1 id=\"评价和反馈\"><a href=\"#评价和反馈\" class=\"headerlink\" title=\"评价和反馈\"></a>评价和反馈</h1><p>我们在每个季度结束时会进行一次 performance review，即工作的评价和反馈。流程一定程度上借鉴了 Google 的 performance review, 但有不少简化和修改，以避免给大家造成额外的负担，毕竟我们的主要精力应该放在改进产品而不是处理内部流程上。</p>\n<p>这个流程分为两部分。</p>\n<h1 id=\"自我评价及工作反馈\"><a href=\"#自我评价及工作反馈\" class=\"headerlink\" title=\"自我评价及工作反馈\"></a>自我评价及工作反馈</h1><p>在季度结束时，每个同事会收到一个 Google Docs 表格，包含以下几个问题。除了第一个问题外，其他内容都会对其他同事保密，只有自己的主管和 HR 可以看到。</p>\n<h2 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h2><ol>\n<li>请列出过去一个季度你参与的工作、承担的职责、完成的具体内容，并陈述工作实际产生的价值。请尽可能详尽。如果有在自己日常职责之外的贡献，也请单独列出。(这部分内容将对所有人公开)</li>\n<li>针对以上列出的工作请给出对自己工作的评价。请总结得失以及原因。有哪些地方有改进的空间？</li>\n<li>针对上面的问题和需要做的改进，请列出在下个季度的具体改进计划。</li>\n</ol>\n<h2 id=\"工作反馈\"><a href=\"#工作反馈\" class=\"headerlink\" title=\"工作反馈\"></a>工作反馈</h2><ol>\n<li>公司在哪些方面给你提供更多资源或支持可以让你工作得更好？</li>\n<li>对于你的主管或管理团队的工作有哪些反馈和建议？</li>\n<li>对于团队建设、公司文化有哪些反馈和建议？</li>\n</ol>\n<h1 id=\"主管评价\"><a href=\"#主管评价\" class=\"headerlink\" title=\"主管评价\"></a>主管评价</h1><p>每个担任 people manager 的同事会收到下属的自我评价和工作反馈。每个 manager 会为每位下属写主管评价和反馈，同时打出本季度的绩效得分。绩效分数在 0.0 至 2.0 之间，其中 1.0 表示工作达到期望，低于 1.0 表示低于期望，高于 1.0 表示高于期望。这里的「期望」和每个人的职能、级别和薪酬相关。</p>\n<h1 id=\"对薪酬的影响\"><a href=\"#对薪酬的影响\" class=\"headerlink\" title=\"对薪酬的影响\"></a>对薪酬的影响</h1><p>绩效分数对薪酬的影响体现在年终奖上。我们的年终奖计算公式为：</p>\n<p><code>年终奖 = 本年度累计实际工资 * 15% * 年度个人绩效 * 年度公司绩效</code></p>\n<p>其中的年度个人绩效即为个人各季度绩效分数的平均数。年度公司绩效由管理团队在年末评定。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>我们的 performance review 首要目的是为每个人提供一个总结工作并听取反馈，明确得失以便改进的机会；次要目的是通过浮动的年终奖让做出更多贡献的同事能得到更高回报，做到相对的公平。希望每个人都以坦诚、认真、实事求是的态度对待这项工作。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"评价和反馈\"><a href=\"#评价和反馈\" class=\"headerlink\" title=\"评价和反馈\"></a>评价和反馈</h1><p>我们在每个季度结束时会进行一次 performance review，即工作的评价和反馈。流程一定程度上借鉴了 Google 的 performance review, 但有不少简化和修改，以避免给大家造成额外的负担，毕竟我们的主要精力应该放在改进产品而不是处理内部流程上。</p>\n<p>这个流程分为两部分。</p>\n<h1 id=\"自我评价及工作反馈\"><a href=\"#自我评价及工作反馈\" class=\"headerlink\" title=\"自我评价及工作反馈\"></a>自我评价及工作反馈</h1><p>在季度结束时，每个同事会收到一个 Google Docs 表格，包含以下几个问题。除了第一个问题外，其他内容都会对其他同事保密，只有自己的主管和 HR 可以看到。</p>\n<h2 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h2><ol>\n<li>请列出过去一个季度你参与的工作、承担的职责、完成的具体内容，并陈述工作实际产生的价值。请尽可能详尽。如果有在自己日常职责之外的贡献，也请单独列出。(这部分内容将对所有人公开)</li>\n<li>针对以上列出的工作请给出对自己工作的评价。请总结得失以及原因。有哪些地方有改进的空间？</li>\n<li>针对上面的问题和需要做的改进，请列出在下个季度的具体改进计划。</li>\n</ol>\n<h2 id=\"工作反馈\"><a href=\"#工作反馈\" class=\"headerlink\" title=\"工作反馈\"></a>工作反馈</h2><ol>\n<li>公司在哪些方面给你提供更多资源或支持可以让你工作得更好？</li>\n<li>对于你的主管或管理团队的工作有哪些反馈和建议？</li>\n<li>对于团队建设、公司文化有哪些反馈和建议？</li>\n</ol>\n<h1 id=\"主管评价\"><a href=\"#主管评价\" class=\"headerlink\" title=\"主管评价\"></a>主管评价</h1><p>每个担任 people manager 的同事会收到下属的自我评价和工作反馈。每个 manager 会为每位下属写主管评价和反馈，同时打出本季度的绩效得分。绩效分数在 0.0 至 2.0 之间，其中 1.0 表示工作达到期望，低于 1.0 表示低于期望，高于 1.0 表示高于期望。这里的「期望」和每个人的职能、级别和薪酬相关。</p>\n<h1 id=\"对薪酬的影响\"><a href=\"#对薪酬的影响\" class=\"headerlink\" title=\"对薪酬的影响\"></a>对薪酬的影响</h1><p>绩效分数对薪酬的影响体现在年终奖上。我们的年终奖计算公式为：</p>\n<p><code>年终奖 = 本年度累计实际工资 * 15% * 年度个人绩效 * 年度公司绩效</code></p>\n<p>其中的年度个人绩效即为个人各季度绩效分数的平均数。年度公司绩效由管理团队在年末评定。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>我们的 performance review 首要目的是为每个人提供一个总结工作并听取反馈，明确得失以便改进的机会；次要目的是通过浮动的年终奖让做出更多贡献的同事能得到更高回报，做到相对的公平。希望每个人都以坦诚、认真、实事求是的态度对待这项工作。</p>\n"},{"title":"Color薪酬体系-研发运营团队","date":"2016-05-02T09:30:00.000Z","_content":"\n# 简介\n\n我们相信公平和透明的薪酬机制很有益于公司的长期健康发展。我们在设计薪酬体系时重点考虑了几个问题：\n\n* __避免薪酬倒挂__：很多公司，尤其是大的互联网公司在人才竞争激烈的年份给出较高的入职薪水，而老员工的薪水因为惯性没有相应提高，所以造成了新员工入职薪酬高于老员工的不公平现象。\n* __消除薪酬谈判带来的不公平__：在招聘时，很多公司往往会根据候选人之前的薪酬以及他/她的期望值在可接受的范围内确定 offer。这样的方式事实上惩罚了之前薪酬偏低的人和不善于薪酬谈判的人，而有利于之前薪酬偏高或者善于薪酬谈判的人，造成了能力和贡献相似的人薪酬产生较大差别，也就导致了组织内部的不公平。所以我们决定从机制上保证给出的 offer 完全取决于我们自己对候选人的独立评判，与其他因素无关。做到这一点，自然也就不应有任何因素导致我们对 offer 进行调整，就可以把薪酬谈判从招聘中去掉。\n* __简单透明__：作为一个精简的创业公司，我们需要一个透明、自动化的机制来保证在薪酬这样的敏感问题上尽可能的公平。当人为因素越少，机制越透明时，大家就越不需要把注意力放在这些方面，日常运作也更简单高效。\n* __保持灵活性，避免线性等级__：专业领域的专家和承担管理角色的同事对团队都很重要，这需要在薪酬体系中体现。\n\n\n# 月薪的计算\n\n每位同事的月薪由下面的公式得出：\n\n`Salary = Function × Experience + Impact + Choice + Adjustment`\n\n其中 Function 是不同职位类型的月薪基数， 会随公司发展的情况进行调整。当前各类型的基数如下：\n\n| Function | Base Amount |\n|----------|-------------|\n| 工程师   |       12000 |\n| 设计师   |        8000 |\n| 运营     |        8000 |\n| 市场     |        8000 |\n| 人力资源 |        7000 |\n    \n\n以上是我们现有的职位类型，将来会根据需要增加新的类型。\n\n__Experience__ 是不同经验和能力等级。对于新加入的成员这个等级会根据面试情况确定。对于在职的同事，会根据实际工作情况进行定期 review 和调整。这是一个团队内部的标准，和外部的通常标准或其他公司的职称标准完全无关。Experience 所对应的数值如下表所示：\n\n| Experience Level | Experience Amount |\n|------------------|-------------------|\n| E0               |               0.8 |\n| E1               |               1.0 |\n| E2               |               1.2 |\n| E3               |               1.4 |\n| E4               |               1.6 |\n| E5               |               1.8 |\n| E6               |               2.0 |\n\n    \n  \n__Impact__ 指的是在团队中的影响力和贡献，对应的数值如下图所示：\n\n| Impact Level | Impact Amount |\n|--------------|---------------|\n| I0           | 0             |\n| I1           | 5,000         |\n| I2           | 8,000         |\n| I3           | 10,000        |\n    \n\n \n \n由于在面试中无法衡量将来在团队中的实际贡献，我们在新的 offer 中通常会把 impact 定为 I0 留待将来调整。\n\nChoice 除联合创始人月薪的 Choice 部分为 0 外，其他同事在入职时默认 Choice 部分为月薪其他部分的 10%。我们会按期权激励计划授予每位同事期权。新同事在入职的第二个月底前可以在期权和月薪间做一个倾向性选择。选择期权的同事可以放弃月薪的 Choice 部分而在原定期权基础上多获得 20% 的期权。\n\nAdjustment 这是一个对所有人固定的调整，目前为 1000 元。\n\n# 例子\n\n>假设某个 function 的基数是 13000，那么这个 function 的 experience level 为 E3、impact level 为 I1 的同事，她的 Function × Experience + Impact 部分就是 13000 × 1.4 + 5000 = 23200。如果她选择更多期权，那么她的月薪就是 23200 + 1000 = 24200。如果她选择更多月薪，那么她的月薪就是 23200 × 110% + 1000 = 26520。\n\n# 奖金\n\n目前我们周期性的奖金是每年的年终奖。年终奖的金额是浮动的，规则详见 工作的评价和反馈机制。\n\n# 结语\n\n以上的机制借鉴了 Buffer 的 Open Salaries，具体的公式按照我们的情况做了调整， 希望让每个人都能清楚自己薪酬的由来以及未来的空间，也让潜在的应聘者一目了然了解可能的薪酬范围。\n\n所有同事的薪酬以及发给候选人的 offer 都严格遵照这个标准。我们有可能不定期地调整各类职位的基数以适应公司发展的不同阶段并保持竞争力。由于这样的调整是整体的，所以不会导致倒挂等问题。另外由于影响最大的因素是 function 和 experience，这个公式也保留了足够的灵活性。比如一个很资深并作为项目负责人的工程师薪酬完全可能达到或超过 VP 和 C-Level 级别的管理者。\n\n任何制度都会经历在实践中完善的过程，我们会根据反馈在发展中不断地完善这个薪酬体系。","source":"_posts/管理/Color薪酬体系.md","raw":"title: Color薪酬体系-研发运营团队\ndate: 2016-05-02 17:30:00\ntags: \n- 薪酬\n- color\ncategories: \n- 管理\n---\n\n# 简介\n\n我们相信公平和透明的薪酬机制很有益于公司的长期健康发展。我们在设计薪酬体系时重点考虑了几个问题：\n\n* __避免薪酬倒挂__：很多公司，尤其是大的互联网公司在人才竞争激烈的年份给出较高的入职薪水，而老员工的薪水因为惯性没有相应提高，所以造成了新员工入职薪酬高于老员工的不公平现象。\n* __消除薪酬谈判带来的不公平__：在招聘时，很多公司往往会根据候选人之前的薪酬以及他/她的期望值在可接受的范围内确定 offer。这样的方式事实上惩罚了之前薪酬偏低的人和不善于薪酬谈判的人，而有利于之前薪酬偏高或者善于薪酬谈判的人，造成了能力和贡献相似的人薪酬产生较大差别，也就导致了组织内部的不公平。所以我们决定从机制上保证给出的 offer 完全取决于我们自己对候选人的独立评判，与其他因素无关。做到这一点，自然也就不应有任何因素导致我们对 offer 进行调整，就可以把薪酬谈判从招聘中去掉。\n* __简单透明__：作为一个精简的创业公司，我们需要一个透明、自动化的机制来保证在薪酬这样的敏感问题上尽可能的公平。当人为因素越少，机制越透明时，大家就越不需要把注意力放在这些方面，日常运作也更简单高效。\n* __保持灵活性，避免线性等级__：专业领域的专家和承担管理角色的同事对团队都很重要，这需要在薪酬体系中体现。\n\n\n# 月薪的计算\n\n每位同事的月薪由下面的公式得出：\n\n`Salary = Function × Experience + Impact + Choice + Adjustment`\n\n其中 Function 是不同职位类型的月薪基数， 会随公司发展的情况进行调整。当前各类型的基数如下：\n\n| Function | Base Amount |\n|----------|-------------|\n| 工程师   |       12000 |\n| 设计师   |        8000 |\n| 运营     |        8000 |\n| 市场     |        8000 |\n| 人力资源 |        7000 |\n    \n\n以上是我们现有的职位类型，将来会根据需要增加新的类型。\n\n__Experience__ 是不同经验和能力等级。对于新加入的成员这个等级会根据面试情况确定。对于在职的同事，会根据实际工作情况进行定期 review 和调整。这是一个团队内部的标准，和外部的通常标准或其他公司的职称标准完全无关。Experience 所对应的数值如下表所示：\n\n| Experience Level | Experience Amount |\n|------------------|-------------------|\n| E0               |               0.8 |\n| E1               |               1.0 |\n| E2               |               1.2 |\n| E3               |               1.4 |\n| E4               |               1.6 |\n| E5               |               1.8 |\n| E6               |               2.0 |\n\n    \n  \n__Impact__ 指的是在团队中的影响力和贡献，对应的数值如下图所示：\n\n| Impact Level | Impact Amount |\n|--------------|---------------|\n| I0           | 0             |\n| I1           | 5,000         |\n| I2           | 8,000         |\n| I3           | 10,000        |\n    \n\n \n \n由于在面试中无法衡量将来在团队中的实际贡献，我们在新的 offer 中通常会把 impact 定为 I0 留待将来调整。\n\nChoice 除联合创始人月薪的 Choice 部分为 0 外，其他同事在入职时默认 Choice 部分为月薪其他部分的 10%。我们会按期权激励计划授予每位同事期权。新同事在入职的第二个月底前可以在期权和月薪间做一个倾向性选择。选择期权的同事可以放弃月薪的 Choice 部分而在原定期权基础上多获得 20% 的期权。\n\nAdjustment 这是一个对所有人固定的调整，目前为 1000 元。\n\n# 例子\n\n>假设某个 function 的基数是 13000，那么这个 function 的 experience level 为 E3、impact level 为 I1 的同事，她的 Function × Experience + Impact 部分就是 13000 × 1.4 + 5000 = 23200。如果她选择更多期权，那么她的月薪就是 23200 + 1000 = 24200。如果她选择更多月薪，那么她的月薪就是 23200 × 110% + 1000 = 26520。\n\n# 奖金\n\n目前我们周期性的奖金是每年的年终奖。年终奖的金额是浮动的，规则详见 工作的评价和反馈机制。\n\n# 结语\n\n以上的机制借鉴了 Buffer 的 Open Salaries，具体的公式按照我们的情况做了调整， 希望让每个人都能清楚自己薪酬的由来以及未来的空间，也让潜在的应聘者一目了然了解可能的薪酬范围。\n\n所有同事的薪酬以及发给候选人的 offer 都严格遵照这个标准。我们有可能不定期地调整各类职位的基数以适应公司发展的不同阶段并保持竞争力。由于这样的调整是整体的，所以不会导致倒挂等问题。另外由于影响最大的因素是 function 和 experience，这个公式也保留了足够的灵活性。比如一个很资深并作为项目负责人的工程师薪酬完全可能达到或超过 VP 和 C-Level 级别的管理者。\n\n任何制度都会经历在实践中完善的过程，我们会根据反馈在发展中不断地完善这个薪酬体系。","slug":"管理/Color薪酬体系","published":1,"updated":"2017-07-26T14:30:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ks10063q0d42o3pf79u","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>我们相信公平和透明的薪酬机制很有益于公司的长期健康发展。我们在设计薪酬体系时重点考虑了几个问题：</p>\n<ul>\n<li><strong>避免薪酬倒挂</strong>：很多公司，尤其是大的互联网公司在人才竞争激烈的年份给出较高的入职薪水，而老员工的薪水因为惯性没有相应提高，所以造成了新员工入职薪酬高于老员工的不公平现象。</li>\n<li><strong>消除薪酬谈判带来的不公平</strong>：在招聘时，很多公司往往会根据候选人之前的薪酬以及他/她的期望值在可接受的范围内确定 offer。这样的方式事实上惩罚了之前薪酬偏低的人和不善于薪酬谈判的人，而有利于之前薪酬偏高或者善于薪酬谈判的人，造成了能力和贡献相似的人薪酬产生较大差别，也就导致了组织内部的不公平。所以我们决定从机制上保证给出的 offer 完全取决于我们自己对候选人的独立评判，与其他因素无关。做到这一点，自然也就不应有任何因素导致我们对 offer 进行调整，就可以把薪酬谈判从招聘中去掉。</li>\n<li><strong>简单透明</strong>：作为一个精简的创业公司，我们需要一个透明、自动化的机制来保证在薪酬这样的敏感问题上尽可能的公平。当人为因素越少，机制越透明时，大家就越不需要把注意力放在这些方面，日常运作也更简单高效。</li>\n<li><strong>保持灵活性，避免线性等级</strong>：专业领域的专家和承担管理角色的同事对团队都很重要，这需要在薪酬体系中体现。</li>\n</ul>\n<h1 id=\"月薪的计算\"><a href=\"#月薪的计算\" class=\"headerlink\" title=\"月薪的计算\"></a>月薪的计算</h1><p>每位同事的月薪由下面的公式得出：</p>\n<p><code>Salary = Function × Experience + Impact + Choice + Adjustment</code></p>\n<p>其中 Function 是不同职位类型的月薪基数， 会随公司发展的情况进行调整。当前各类型的基数如下：</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Base Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>工程师</td>\n<td>12000</td>\n</tr>\n<tr>\n<td>设计师</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>运营</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>市场</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>人力资源</td>\n<td>7000</td>\n</tr>\n</tbody>\n</table>\n<p>以上是我们现有的职位类型，将来会根据需要增加新的类型。</p>\n<p><strong>Experience</strong> 是不同经验和能力等级。对于新加入的成员这个等级会根据面试情况确定。对于在职的同事，会根据实际工作情况进行定期 review 和调整。这是一个团队内部的标准，和外部的通常标准或其他公司的职称标准完全无关。Experience 所对应的数值如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>Experience Level</th>\n<th>Experience Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>E0</td>\n<td>0.8</td>\n</tr>\n<tr>\n<td>E1</td>\n<td>1.0</td>\n</tr>\n<tr>\n<td>E2</td>\n<td>1.2</td>\n</tr>\n<tr>\n<td>E3</td>\n<td>1.4</td>\n</tr>\n<tr>\n<td>E4</td>\n<td>1.6</td>\n</tr>\n<tr>\n<td>E5</td>\n<td>1.8</td>\n</tr>\n<tr>\n<td>E6</td>\n<td>2.0</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Impact</strong> 指的是在团队中的影响力和贡献，对应的数值如下图所示：</p>\n<table>\n<thead>\n<tr>\n<th>Impact Level</th>\n<th>Impact Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>I1</td>\n<td>5,000</td>\n</tr>\n<tr>\n<td>I2</td>\n<td>8,000</td>\n</tr>\n<tr>\n<td>I3</td>\n<td>10,000</td>\n</tr>\n</tbody>\n</table>\n<p>由于在面试中无法衡量将来在团队中的实际贡献，我们在新的 offer 中通常会把 impact 定为 I0 留待将来调整。</p>\n<p>Choice 除联合创始人月薪的 Choice 部分为 0 外，其他同事在入职时默认 Choice 部分为月薪其他部分的 10%。我们会按期权激励计划授予每位同事期权。新同事在入职的第二个月底前可以在期权和月薪间做一个倾向性选择。选择期权的同事可以放弃月薪的 Choice 部分而在原定期权基础上多获得 20% 的期权。</p>\n<p>Adjustment 这是一个对所有人固定的调整，目前为 1000 元。</p>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><blockquote>\n<p>假设某个 function 的基数是 13000，那么这个 function 的 experience level 为 E3、impact level 为 I1 的同事，她的 Function × Experience + Impact 部分就是 13000 × 1.4 + 5000 = 23200。如果她选择更多期权，那么她的月薪就是 23200 + 1000 = 24200。如果她选择更多月薪，那么她的月薪就是 23200 × 110% + 1000 = 26520。</p>\n</blockquote>\n<h1 id=\"奖金\"><a href=\"#奖金\" class=\"headerlink\" title=\"奖金\"></a>奖金</h1><p>目前我们周期性的奖金是每年的年终奖。年终奖的金额是浮动的，规则详见 工作的评价和反馈机制。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>以上的机制借鉴了 Buffer 的 Open Salaries，具体的公式按照我们的情况做了调整， 希望让每个人都能清楚自己薪酬的由来以及未来的空间，也让潜在的应聘者一目了然了解可能的薪酬范围。</p>\n<p>所有同事的薪酬以及发给候选人的 offer 都严格遵照这个标准。我们有可能不定期地调整各类职位的基数以适应公司发展的不同阶段并保持竞争力。由于这样的调整是整体的，所以不会导致倒挂等问题。另外由于影响最大的因素是 function 和 experience，这个公式也保留了足够的灵活性。比如一个很资深并作为项目负责人的工程师薪酬完全可能达到或超过 VP 和 C-Level 级别的管理者。</p>\n<p>任何制度都会经历在实践中完善的过程，我们会根据反馈在发展中不断地完善这个薪酬体系。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>我们相信公平和透明的薪酬机制很有益于公司的长期健康发展。我们在设计薪酬体系时重点考虑了几个问题：</p>\n<ul>\n<li><strong>避免薪酬倒挂</strong>：很多公司，尤其是大的互联网公司在人才竞争激烈的年份给出较高的入职薪水，而老员工的薪水因为惯性没有相应提高，所以造成了新员工入职薪酬高于老员工的不公平现象。</li>\n<li><strong>消除薪酬谈判带来的不公平</strong>：在招聘时，很多公司往往会根据候选人之前的薪酬以及他/她的期望值在可接受的范围内确定 offer。这样的方式事实上惩罚了之前薪酬偏低的人和不善于薪酬谈判的人，而有利于之前薪酬偏高或者善于薪酬谈判的人，造成了能力和贡献相似的人薪酬产生较大差别，也就导致了组织内部的不公平。所以我们决定从机制上保证给出的 offer 完全取决于我们自己对候选人的独立评判，与其他因素无关。做到这一点，自然也就不应有任何因素导致我们对 offer 进行调整，就可以把薪酬谈判从招聘中去掉。</li>\n<li><strong>简单透明</strong>：作为一个精简的创业公司，我们需要一个透明、自动化的机制来保证在薪酬这样的敏感问题上尽可能的公平。当人为因素越少，机制越透明时，大家就越不需要把注意力放在这些方面，日常运作也更简单高效。</li>\n<li><strong>保持灵活性，避免线性等级</strong>：专业领域的专家和承担管理角色的同事对团队都很重要，这需要在薪酬体系中体现。</li>\n</ul>\n<h1 id=\"月薪的计算\"><a href=\"#月薪的计算\" class=\"headerlink\" title=\"月薪的计算\"></a>月薪的计算</h1><p>每位同事的月薪由下面的公式得出：</p>\n<p><code>Salary = Function × Experience + Impact + Choice + Adjustment</code></p>\n<p>其中 Function 是不同职位类型的月薪基数， 会随公司发展的情况进行调整。当前各类型的基数如下：</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Base Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>工程师</td>\n<td>12000</td>\n</tr>\n<tr>\n<td>设计师</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>运营</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>市场</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>人力资源</td>\n<td>7000</td>\n</tr>\n</tbody>\n</table>\n<p>以上是我们现有的职位类型，将来会根据需要增加新的类型。</p>\n<p><strong>Experience</strong> 是不同经验和能力等级。对于新加入的成员这个等级会根据面试情况确定。对于在职的同事，会根据实际工作情况进行定期 review 和调整。这是一个团队内部的标准，和外部的通常标准或其他公司的职称标准完全无关。Experience 所对应的数值如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>Experience Level</th>\n<th>Experience Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>E0</td>\n<td>0.8</td>\n</tr>\n<tr>\n<td>E1</td>\n<td>1.0</td>\n</tr>\n<tr>\n<td>E2</td>\n<td>1.2</td>\n</tr>\n<tr>\n<td>E3</td>\n<td>1.4</td>\n</tr>\n<tr>\n<td>E4</td>\n<td>1.6</td>\n</tr>\n<tr>\n<td>E5</td>\n<td>1.8</td>\n</tr>\n<tr>\n<td>E6</td>\n<td>2.0</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Impact</strong> 指的是在团队中的影响力和贡献，对应的数值如下图所示：</p>\n<table>\n<thead>\n<tr>\n<th>Impact Level</th>\n<th>Impact Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>I1</td>\n<td>5,000</td>\n</tr>\n<tr>\n<td>I2</td>\n<td>8,000</td>\n</tr>\n<tr>\n<td>I3</td>\n<td>10,000</td>\n</tr>\n</tbody>\n</table>\n<p>由于在面试中无法衡量将来在团队中的实际贡献，我们在新的 offer 中通常会把 impact 定为 I0 留待将来调整。</p>\n<p>Choice 除联合创始人月薪的 Choice 部分为 0 外，其他同事在入职时默认 Choice 部分为月薪其他部分的 10%。我们会按期权激励计划授予每位同事期权。新同事在入职的第二个月底前可以在期权和月薪间做一个倾向性选择。选择期权的同事可以放弃月薪的 Choice 部分而在原定期权基础上多获得 20% 的期权。</p>\n<p>Adjustment 这是一个对所有人固定的调整，目前为 1000 元。</p>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><blockquote>\n<p>假设某个 function 的基数是 13000，那么这个 function 的 experience level 为 E3、impact level 为 I1 的同事，她的 Function × Experience + Impact 部分就是 13000 × 1.4 + 5000 = 23200。如果她选择更多期权，那么她的月薪就是 23200 + 1000 = 24200。如果她选择更多月薪，那么她的月薪就是 23200 × 110% + 1000 = 26520。</p>\n</blockquote>\n<h1 id=\"奖金\"><a href=\"#奖金\" class=\"headerlink\" title=\"奖金\"></a>奖金</h1><p>目前我们周期性的奖金是每年的年终奖。年终奖的金额是浮动的，规则详见 工作的评价和反馈机制。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>以上的机制借鉴了 Buffer 的 Open Salaries，具体的公式按照我们的情况做了调整， 希望让每个人都能清楚自己薪酬的由来以及未来的空间，也让潜在的应聘者一目了然了解可能的薪酬范围。</p>\n<p>所有同事的薪酬以及发给候选人的 offer 都严格遵照这个标准。我们有可能不定期地调整各类职位的基数以适应公司发展的不同阶段并保持竞争力。由于这样的调整是整体的，所以不会导致倒挂等问题。另外由于影响最大的因素是 function 和 experience，这个公式也保留了足够的灵活性。比如一个很资深并作为项目负责人的工程师薪酬完全可能达到或超过 VP 和 C-Level 级别的管理者。</p>\n<p>任何制度都会经历在实践中完善的过程，我们会根据反馈在发展中不断地完善这个薪酬体系。</p>\n"},{"_content":"date: 2016-04-02 09:30:00\nauthor: aitanjupt\nemail: aitanjupt@hotmail.com\nsite: \nip: 119.9.74.18\n\nvery very good!\n\n- - - - - - - - - - - - - - - -\n\n","source":"_posts/管理/Color工作的评价和反馈.comments.md","raw":"date: 2016-04-02 09:30:00\nauthor: aitanjupt\nemail: aitanjupt@hotmail.com\nsite: \nip: 119.9.74.18\n\nvery very good!\n\n- - - - - - - - - - - - - - - -\n\n","slug":"管理/Color工作的评价和反馈.comments","published":1,"date":"2016-04-02T01:30:00.000Z","updated":"2016-04-02T01:30:00.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ks30067q0d4kwjxd901","content":"<p>date: 2016-04-02 09:30:00<br>author: aitanjupt<br>email: aitanjupt@hotmail.com<br>site:<br>ip: 119.9.74.18</p>\n<p>very very good!</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>date: 2016-04-02 09:30:00<br>author: aitanjupt<br>email: aitanjupt@hotmail.com<br>site:<br>ip: 119.9.74.18</p>\n<p>very very good!</p>\n<hr>\n"},{"title":"Color期权激励计划","date":"2016-04-03T11:30:00.000Z","_content":"\n\n# 简介\n\n在 Color 我们希望每个人都和团队有一致的长期利益，而不是把在这里工作看做一份一般的 day job，每个人也都应该分享产品的成功带来的长期价值，所以我们的期权激励计划包括每位全职员工。\n\n无论是薪酬还是期权，绝对的公平都是难以保证的。我们制定这些规则的目的是为了在日常的运转中有一致的 guideline 可以遵循，保证管理团队诚实且相对公平地做出决策。\n\n# 期权的计算\n\n每位同事的期权数由以下公式算出：\n\n`(Function × Experience + Impact) / Risk`\n\n其中 Function、Experience、Impact 的含义与薪酬体系一致，但具体数值不同。Risk 代表目前公司面临的风险，在公司发展的不同阶段取值不同，在正常的发展过程中是递增的（代表风险的降低）。\n\n每个同事在入职的第二个月底前可以选择放弃薪酬中的 Choice 部分（详见薪酬体系）交换 20% 的更多期权。\n\n# Vesting Schedule\n\n授予的期权分四年授予（vest），在入职满第一年的时候 vest 25%，之后每个月匀速 vest。\n\n员工离职的时候可以选择对已经 vest 的部分行权从而保留股份；对于做出突出贡献的员工，董事会可以免除行权的要求，从而让他/她直接保留已经 vest 的期权。\n\n# 期权的调整\n\n当一个同事的级别和角色发生变化时，我们会按照上面的公式重新计算（Risk 的取值为发生变化时的取值）。如果结果大于原来已分配的期权，则会分配新的期权补足差额，新分配的期权从变化发生时开始 vest。\n\n也就是说，在公司内成长的速度大于公司本身成长速度的同事将获得更多的期权。","source":"_posts/管理/Color期权激励.md","raw":"title: Color期权激励计划\ndate: 2016-04-03 19:30:00\ntags: \n- 期权\n- color\ncategories: \n- 管理\n---\n\n\n# 简介\n\n在 Color 我们希望每个人都和团队有一致的长期利益，而不是把在这里工作看做一份一般的 day job，每个人也都应该分享产品的成功带来的长期价值，所以我们的期权激励计划包括每位全职员工。\n\n无论是薪酬还是期权，绝对的公平都是难以保证的。我们制定这些规则的目的是为了在日常的运转中有一致的 guideline 可以遵循，保证管理团队诚实且相对公平地做出决策。\n\n# 期权的计算\n\n每位同事的期权数由以下公式算出：\n\n`(Function × Experience + Impact) / Risk`\n\n其中 Function、Experience、Impact 的含义与薪酬体系一致，但具体数值不同。Risk 代表目前公司面临的风险，在公司发展的不同阶段取值不同，在正常的发展过程中是递增的（代表风险的降低）。\n\n每个同事在入职的第二个月底前可以选择放弃薪酬中的 Choice 部分（详见薪酬体系）交换 20% 的更多期权。\n\n# Vesting Schedule\n\n授予的期权分四年授予（vest），在入职满第一年的时候 vest 25%，之后每个月匀速 vest。\n\n员工离职的时候可以选择对已经 vest 的部分行权从而保留股份；对于做出突出贡献的员工，董事会可以免除行权的要求，从而让他/她直接保留已经 vest 的期权。\n\n# 期权的调整\n\n当一个同事的级别和角色发生变化时，我们会按照上面的公式重新计算（Risk 的取值为发生变化时的取值）。如果结果大于原来已分配的期权，则会分配新的期权补足差额，新分配的期权从变化发生时开始 vest。\n\n也就是说，在公司内成长的速度大于公司本身成长速度的同事将获得更多的期权。","slug":"管理/Color期权激励","published":1,"updated":"2017-07-26T14:30:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ks4006bq0d4j0di4f69","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>在 Color 我们希望每个人都和团队有一致的长期利益，而不是把在这里工作看做一份一般的 day job，每个人也都应该分享产品的成功带来的长期价值，所以我们的期权激励计划包括每位全职员工。</p>\n<p>无论是薪酬还是期权，绝对的公平都是难以保证的。我们制定这些规则的目的是为了在日常的运转中有一致的 guideline 可以遵循，保证管理团队诚实且相对公平地做出决策。</p>\n<h1 id=\"期权的计算\"><a href=\"#期权的计算\" class=\"headerlink\" title=\"期权的计算\"></a>期权的计算</h1><p>每位同事的期权数由以下公式算出：</p>\n<p><code>(Function × Experience + Impact) / Risk</code></p>\n<p>其中 Function、Experience、Impact 的含义与薪酬体系一致，但具体数值不同。Risk 代表目前公司面临的风险，在公司发展的不同阶段取值不同，在正常的发展过程中是递增的（代表风险的降低）。</p>\n<p>每个同事在入职的第二个月底前可以选择放弃薪酬中的 Choice 部分（详见薪酬体系）交换 20% 的更多期权。</p>\n<h1 id=\"Vesting-Schedule\"><a href=\"#Vesting-Schedule\" class=\"headerlink\" title=\"Vesting Schedule\"></a>Vesting Schedule</h1><p>授予的期权分四年授予（vest），在入职满第一年的时候 vest 25%，之后每个月匀速 vest。</p>\n<p>员工离职的时候可以选择对已经 vest 的部分行权从而保留股份；对于做出突出贡献的员工，董事会可以免除行权的要求，从而让他/她直接保留已经 vest 的期权。</p>\n<h1 id=\"期权的调整\"><a href=\"#期权的调整\" class=\"headerlink\" title=\"期权的调整\"></a>期权的调整</h1><p>当一个同事的级别和角色发生变化时，我们会按照上面的公式重新计算（Risk 的取值为发生变化时的取值）。如果结果大于原来已分配的期权，则会分配新的期权补足差额，新分配的期权从变化发生时开始 vest。</p>\n<p>也就是说，在公司内成长的速度大于公司本身成长速度的同事将获得更多的期权。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>在 Color 我们希望每个人都和团队有一致的长期利益，而不是把在这里工作看做一份一般的 day job，每个人也都应该分享产品的成功带来的长期价值，所以我们的期权激励计划包括每位全职员工。</p>\n<p>无论是薪酬还是期权，绝对的公平都是难以保证的。我们制定这些规则的目的是为了在日常的运转中有一致的 guideline 可以遵循，保证管理团队诚实且相对公平地做出决策。</p>\n<h1 id=\"期权的计算\"><a href=\"#期权的计算\" class=\"headerlink\" title=\"期权的计算\"></a>期权的计算</h1><p>每位同事的期权数由以下公式算出：</p>\n<p><code>(Function × Experience + Impact) / Risk</code></p>\n<p>其中 Function、Experience、Impact 的含义与薪酬体系一致，但具体数值不同。Risk 代表目前公司面临的风险，在公司发展的不同阶段取值不同，在正常的发展过程中是递增的（代表风险的降低）。</p>\n<p>每个同事在入职的第二个月底前可以选择放弃薪酬中的 Choice 部分（详见薪酬体系）交换 20% 的更多期权。</p>\n<h1 id=\"Vesting-Schedule\"><a href=\"#Vesting-Schedule\" class=\"headerlink\" title=\"Vesting Schedule\"></a>Vesting Schedule</h1><p>授予的期权分四年授予（vest），在入职满第一年的时候 vest 25%，之后每个月匀速 vest。</p>\n<p>员工离职的时候可以选择对已经 vest 的部分行权从而保留股份；对于做出突出贡献的员工，董事会可以免除行权的要求，从而让他/她直接保留已经 vest 的期权。</p>\n<h1 id=\"期权的调整\"><a href=\"#期权的调整\" class=\"headerlink\" title=\"期权的调整\"></a>期权的调整</h1><p>当一个同事的级别和角色发生变化时，我们会按照上面的公式重新计算（Risk 的取值为发生变化时的取值）。如果结果大于原来已分配的期权，则会分配新的期权补足差额，新分配的期权从变化发生时开始 vest。</p>\n<p>也就是说，在公司内成长的速度大于公司本身成长速度的同事将获得更多的期权。</p>\n"},{"title":"技术领导者的任务","description":"一个技术领导者应该做什么？或者说如何定义一个好的技术领导者，从三方面考虑：首先，他必须是技术决策者；其次，他必须和各部门沟通排除干扰；最后，他必须监督制度的执行和项目进度。","_content":"\n摘要：一个技术领导者应该做什么？或者说如何定义一个好的技术领导者，从三方面考虑：首先，他必须是技术决策者；其次，他必须和各部门沟通排除干扰；最后，他必须监督制度的执行和项目进度。\n\n![技术领导者的任务](%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E8%80%85%E7%9A%84%E4%BB%BB%E5%8A%A1.png)\n\n\n## 技术决策者\n\n* 确定平台和框架\n* 参与构架设计\n* 调整设计方案\n* 重要局部设计\n* 攻克技术难题，掌握关键技术点\n* 部署方案\n* 关注代码腐化\n\n## 开发流程监督者\n\n* 贯彻良好开发实践\n* 自动化测试\n* 单元测试，功能测试\n* 决定开发环境\n* 团队技能培训\n\n## 干扰过滤器/沟通者\n\n* 团队技能培训\n* 和产品经理沟通\n* 与测试工程师沟通\n* 和客户沟通\n\n\n","source":"_posts/管理/技术领导者的任务.md","raw":"title: 技术领导者的任务\ntags: \n- 团队管理\n- 沟通\n- 决策\n- 流程监督\ncategories: \n- 管理\ndescription: 一个技术领导者应该做什么？或者说如何定义一个好的技术领导者，从三方面考虑：首先，他必须是技术决策者；其次，他必须和各部门沟通排除干扰；最后，他必须监督制度的执行和项目进度。\n---\n\n摘要：一个技术领导者应该做什么？或者说如何定义一个好的技术领导者，从三方面考虑：首先，他必须是技术决策者；其次，他必须和各部门沟通排除干扰；最后，他必须监督制度的执行和项目进度。\n\n![技术领导者的任务](%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E8%80%85%E7%9A%84%E4%BB%BB%E5%8A%A1.png)\n\n\n## 技术决策者\n\n* 确定平台和框架\n* 参与构架设计\n* 调整设计方案\n* 重要局部设计\n* 攻克技术难题，掌握关键技术点\n* 部署方案\n* 关注代码腐化\n\n## 开发流程监督者\n\n* 贯彻良好开发实践\n* 自动化测试\n* 单元测试，功能测试\n* 决定开发环境\n* 团队技能培训\n\n## 干扰过滤器/沟通者\n\n* 团队技能培训\n* 和产品经理沟通\n* 与测试工程师沟通\n* 和客户沟通\n\n\n","slug":"管理/技术领导者的任务","published":1,"date":"2016-01-19T13:25:29.000Z","updated":"2017-07-26T14:30:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ks4006eq0d44wje75ga","content":"<p>摘要：一个技术领导者应该做什么？或者说如何定义一个好的技术领导者，从三方面考虑：首先，他必须是技术决策者；其次，他必须和各部门沟通排除干扰；最后，他必须监督制度的执行和项目进度。</p>\n<p><img src=\"%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E8%80%85%E7%9A%84%E4%BB%BB%E5%8A%A1.png\" alt=\"技术领导者的任务\"></p>\n<h2 id=\"技术决策者\"><a href=\"#技术决策者\" class=\"headerlink\" title=\"技术决策者\"></a>技术决策者</h2><ul>\n<li>确定平台和框架</li>\n<li>参与构架设计</li>\n<li>调整设计方案</li>\n<li>重要局部设计</li>\n<li>攻克技术难题，掌握关键技术点</li>\n<li>部署方案</li>\n<li>关注代码腐化</li>\n</ul>\n<h2 id=\"开发流程监督者\"><a href=\"#开发流程监督者\" class=\"headerlink\" title=\"开发流程监督者\"></a>开发流程监督者</h2><ul>\n<li>贯彻良好开发实践</li>\n<li>自动化测试</li>\n<li>单元测试，功能测试</li>\n<li>决定开发环境</li>\n<li>团队技能培训</li>\n</ul>\n<h2 id=\"干扰过滤器-沟通者\"><a href=\"#干扰过滤器-沟通者\" class=\"headerlink\" title=\"干扰过滤器/沟通者\"></a>干扰过滤器/沟通者</h2><ul>\n<li>团队技能培训</li>\n<li>和产品经理沟通</li>\n<li>与测试工程师沟通</li>\n<li>和客户沟通</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：一个技术领导者应该做什么？或者说如何定义一个好的技术领导者，从三方面考虑：首先，他必须是技术决策者；其次，他必须和各部门沟通排除干扰；最后，他必须监督制度的执行和项目进度。</p>\n<p><img src=\"%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E8%80%85%E7%9A%84%E4%BB%BB%E5%8A%A1.png\" alt=\"技术领导者的任务\"></p>\n<h2 id=\"技术决策者\"><a href=\"#技术决策者\" class=\"headerlink\" title=\"技术决策者\"></a>技术决策者</h2><ul>\n<li>确定平台和框架</li>\n<li>参与构架设计</li>\n<li>调整设计方案</li>\n<li>重要局部设计</li>\n<li>攻克技术难题，掌握关键技术点</li>\n<li>部署方案</li>\n<li>关注代码腐化</li>\n</ul>\n<h2 id=\"开发流程监督者\"><a href=\"#开发流程监督者\" class=\"headerlink\" title=\"开发流程监督者\"></a>开发流程监督者</h2><ul>\n<li>贯彻良好开发实践</li>\n<li>自动化测试</li>\n<li>单元测试，功能测试</li>\n<li>决定开发环境</li>\n<li>团队技能培训</li>\n</ul>\n<h2 id=\"干扰过滤器-沟通者\"><a href=\"#干扰过滤器-沟通者\" class=\"headerlink\" title=\"干扰过滤器/沟通者\"></a>干扰过滤器/沟通者</h2><ul>\n<li>团队技能培训</li>\n<li>和产品经理沟通</li>\n<li>与测试工程师沟通</li>\n<li>和客户沟通</li>\n</ul>\n"},{"title":"Color Scrum项目管理规范","date":"2016-03-11T03:44:00.000Z","description":"此文为Scrum极限编程在worktile工具中的应用规范。需要读者对Scrum极限编程有基本的认识，对worktile有过操作经历。因为worktile并不是专门为scrum设计的工具，所以在很多方面需要我们自己规范自己遵守。此篇文章，结合了worktile自身特点，整理出了一份操作规范。","_content":"\n\n摘要：此文为Scrum极限编程在worktile工具中的应用规范。需要读者对Scrum极限编程有基本的认识，对worktile有过操作经历。因为worktile并不是专门为scrum设计的工具，所以在很多方面需要我们自己规范自己遵守。此篇文章，结合了worktile自身特点，整理出了一份操作规范。\n\n\n## 任务看板\n\n任务看板分为两种：\n\n1. 产品列表。显示名称为`产品列表`。此列表是一个愿望列表，表示希望在将来的产品中看到的功能。任何人都可以向此列表中添加项目。\n2. 冲刺列表。显示名称为`S5:冲刺目标名称`。此列表代表一个冲刺周期中，应该完成的任务。已完成的冲刺周期将会逐渐归档。为了方便回溯查找，我们将保留3个已完成的冲刺列表。\n\n![](Scrum-backlog.png)\n\n## 任务字段\n\n1. **名称**：`T(/B){id}:H{hour}:{任务名称}`。举例：`T1:H4:注册和登录页面`，`B1:H2:上个冲刺周期有个Bug`。\n    2. 任务类型：`T`表示普通任务（Task）；`B`表示Bug，表示已结束的冲刺周期中出现的问题。\n    2. `{id}`表示任务的唯一ID,为纯数字，从1开始递增。大家在添加任务的时候，请查看下当前列表的最大任务ID号。\n    3. `{hour}`表示完成该任务的计划时间，单位为小时。\n    4. `{任务名称}`是该任务的简短描述，让同事看到名称，能想起来是哪件事情。\n2. **标签**。分为`低，中，高，紧急`四个等级，优先级依次底层。完成时从高往低开始做。\n3. **关注的人**。为所有与此相关的人。\n4. **分配任务给**。为任务当前的执行者。一般一个任务会涉及多个参与者，所有的参与者在“关注的人”中指定。当一个人做完之后会交接到下一个人。而当前任务执行者，指的是任务的当前处理者。当前任务的处理者完成自己的那部分任务后，或指给项目负责人处理，或指给下一个处理人。\n5. **截止时间**。冲刺周期开始时，为每个任务指定截止时间为本周期结束日。在每日站立会议中，讨论接下来一到两天的任务，再次设定这些任务的截止日期。\n6. **任务描述**。详细的任务描述，执行人可通过任务描述详细的了解该怎么执行。如果任务创建者和执行者已经进行过口头沟通，需在任务描述中标注`已沟通`，并把要点写上，方便以后回忆。\n7. **检查项**。表示此任务的补充任务。在冲刺周期还未结束时，用来对执行者已经完成的任务进行补充。比如，在开发过程中，执行者已经完成该任务，但任务发起者发现有些细节跟最初设计的不同，则需要重新打开此任务，在“检查项”中写明那些地方不对，需要继续修改。\n    8. **检查项名称**。每一个检查项需要以格式`B{ID}:{任务名称}（见评论）`来命名。如果需要补充说明，请添加在评论区中，并在检查项名称的末尾加上`（见评论）`。\n    9. **检查项补充说明**。如果检查项描述比较复杂，可在评论区中添加对此检查项的描述。评论区的说明内容也需要以`B{ID}`开始，与检查项的ID对应，以便其它同事快速查找。\n\n\n![](Scrum-task.png)\n\n\n\n## 任务操作\n\n上述已经规范过的操作规范，不再赘述。补充以下操作规范：\n\n1. 任务管理者，需要每日整理任务看板，使得：\n    2. 已完成的任务拖动到冲刺列表的末尾。\n    3. 所有的任务按照优先级从高到低排列。\n4. 不要轻易归档已完成任务。已完成任务会在每次周期结束时统一归档。为方便查找，还会保留最近三个周期的任务暂不归档。\n","source":"_posts/管理/Scrum项目管理规范.md","raw":"title: Color Scrum项目管理规范\ndate: 2016-03-11 11:44\ncategories: \n- 管理\ntags: \n- color\n- worktile\n- scrum\n- 项目管理\ndescription: 此文为Scrum极限编程在worktile工具中的应用规范。需要读者对Scrum极限编程有基本的认识，对worktile有过操作经历。因为worktile并不是专门为scrum设计的工具，所以在很多方面需要我们自己规范自己遵守。此篇文章，结合了worktile自身特点，整理出了一份操作规范。\n---\n\n\n摘要：此文为Scrum极限编程在worktile工具中的应用规范。需要读者对Scrum极限编程有基本的认识，对worktile有过操作经历。因为worktile并不是专门为scrum设计的工具，所以在很多方面需要我们自己规范自己遵守。此篇文章，结合了worktile自身特点，整理出了一份操作规范。\n\n\n## 任务看板\n\n任务看板分为两种：\n\n1. 产品列表。显示名称为`产品列表`。此列表是一个愿望列表，表示希望在将来的产品中看到的功能。任何人都可以向此列表中添加项目。\n2. 冲刺列表。显示名称为`S5:冲刺目标名称`。此列表代表一个冲刺周期中，应该完成的任务。已完成的冲刺周期将会逐渐归档。为了方便回溯查找，我们将保留3个已完成的冲刺列表。\n\n![](Scrum-backlog.png)\n\n## 任务字段\n\n1. **名称**：`T(/B){id}:H{hour}:{任务名称}`。举例：`T1:H4:注册和登录页面`，`B1:H2:上个冲刺周期有个Bug`。\n    2. 任务类型：`T`表示普通任务（Task）；`B`表示Bug，表示已结束的冲刺周期中出现的问题。\n    2. `{id}`表示任务的唯一ID,为纯数字，从1开始递增。大家在添加任务的时候，请查看下当前列表的最大任务ID号。\n    3. `{hour}`表示完成该任务的计划时间，单位为小时。\n    4. `{任务名称}`是该任务的简短描述，让同事看到名称，能想起来是哪件事情。\n2. **标签**。分为`低，中，高，紧急`四个等级，优先级依次底层。完成时从高往低开始做。\n3. **关注的人**。为所有与此相关的人。\n4. **分配任务给**。为任务当前的执行者。一般一个任务会涉及多个参与者，所有的参与者在“关注的人”中指定。当一个人做完之后会交接到下一个人。而当前任务执行者，指的是任务的当前处理者。当前任务的处理者完成自己的那部分任务后，或指给项目负责人处理，或指给下一个处理人。\n5. **截止时间**。冲刺周期开始时，为每个任务指定截止时间为本周期结束日。在每日站立会议中，讨论接下来一到两天的任务，再次设定这些任务的截止日期。\n6. **任务描述**。详细的任务描述，执行人可通过任务描述详细的了解该怎么执行。如果任务创建者和执行者已经进行过口头沟通，需在任务描述中标注`已沟通`，并把要点写上，方便以后回忆。\n7. **检查项**。表示此任务的补充任务。在冲刺周期还未结束时，用来对执行者已经完成的任务进行补充。比如，在开发过程中，执行者已经完成该任务，但任务发起者发现有些细节跟最初设计的不同，则需要重新打开此任务，在“检查项”中写明那些地方不对，需要继续修改。\n    8. **检查项名称**。每一个检查项需要以格式`B{ID}:{任务名称}（见评论）`来命名。如果需要补充说明，请添加在评论区中，并在检查项名称的末尾加上`（见评论）`。\n    9. **检查项补充说明**。如果检查项描述比较复杂，可在评论区中添加对此检查项的描述。评论区的说明内容也需要以`B{ID}`开始，与检查项的ID对应，以便其它同事快速查找。\n\n\n![](Scrum-task.png)\n\n\n\n## 任务操作\n\n上述已经规范过的操作规范，不再赘述。补充以下操作规范：\n\n1. 任务管理者，需要每日整理任务看板，使得：\n    2. 已完成的任务拖动到冲刺列表的末尾。\n    3. 所有的任务按照优先级从高到低排列。\n4. 不要轻易归档已完成任务。已完成任务会在每次周期结束时统一归档。为方便查找，还会保留最近三个周期的任务暂不归档。\n","slug":"管理/Scrum项目管理规范","published":1,"updated":"2017-07-26T14:29:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ks7006iq0d4ijh22jrf","content":"<p>摘要：此文为Scrum极限编程在worktile工具中的应用规范。需要读者对Scrum极限编程有基本的认识，对worktile有过操作经历。因为worktile并不是专门为scrum设计的工具，所以在很多方面需要我们自己规范自己遵守。此篇文章，结合了worktile自身特点，整理出了一份操作规范。</p>\n<h2 id=\"任务看板\"><a href=\"#任务看板\" class=\"headerlink\" title=\"任务看板\"></a>任务看板</h2><p>任务看板分为两种：</p>\n<ol>\n<li>产品列表。显示名称为<code>产品列表</code>。此列表是一个愿望列表，表示希望在将来的产品中看到的功能。任何人都可以向此列表中添加项目。</li>\n<li>冲刺列表。显示名称为<code>S5:冲刺目标名称</code>。此列表代表一个冲刺周期中，应该完成的任务。已完成的冲刺周期将会逐渐归档。为了方便回溯查找，我们将保留3个已完成的冲刺列表。</li>\n</ol>\n<p><img src=\"Scrum-backlog.png\" alt=\"\"></p>\n<h2 id=\"任务字段\"><a href=\"#任务字段\" class=\"headerlink\" title=\"任务字段\"></a>任务字段</h2><ol>\n<li><strong>名称</strong>：<code>T(/B){id}:H{hour}:{任务名称}</code>。举例：<code>T1:H4:注册和登录页面</code>，<code>B1:H2:上个冲刺周期有个Bug</code>。<ol>\n<li>任务类型：<code>T</code>表示普通任务（Task）；<code>B</code>表示Bug，表示已结束的冲刺周期中出现的问题。</li>\n<li><code>{id}</code>表示任务的唯一ID,为纯数字，从1开始递增。大家在添加任务的时候，请查看下当前列表的最大任务ID号。</li>\n<li><code>{hour}</code>表示完成该任务的计划时间，单位为小时。</li>\n<li><code>{任务名称}</code>是该任务的简短描述，让同事看到名称，能想起来是哪件事情。</li>\n</ol>\n</li>\n<li><strong>标签</strong>。分为<code>低，中，高，紧急</code>四个等级，优先级依次底层。完成时从高往低开始做。</li>\n<li><strong>关注的人</strong>。为所有与此相关的人。</li>\n<li><strong>分配任务给</strong>。为任务当前的执行者。一般一个任务会涉及多个参与者，所有的参与者在“关注的人”中指定。当一个人做完之后会交接到下一个人。而当前任务执行者，指的是任务的当前处理者。当前任务的处理者完成自己的那部分任务后，或指给项目负责人处理，或指给下一个处理人。</li>\n<li><strong>截止时间</strong>。冲刺周期开始时，为每个任务指定截止时间为本周期结束日。在每日站立会议中，讨论接下来一到两天的任务，再次设定这些任务的截止日期。</li>\n<li><strong>任务描述</strong>。详细的任务描述，执行人可通过任务描述详细的了解该怎么执行。如果任务创建者和执行者已经进行过口头沟通，需在任务描述中标注<code>已沟通</code>，并把要点写上，方便以后回忆。</li>\n<li><strong>检查项</strong>。表示此任务的补充任务。在冲刺周期还未结束时，用来对执行者已经完成的任务进行补充。比如，在开发过程中，执行者已经完成该任务，但任务发起者发现有些细节跟最初设计的不同，则需要重新打开此任务，在“检查项”中写明那些地方不对，需要继续修改。<ol>\n<li><strong>检查项名称</strong>。每一个检查项需要以格式<code>B{ID}:{任务名称}（见评论）</code>来命名。如果需要补充说明，请添加在评论区中，并在检查项名称的末尾加上<code>（见评论）</code>。</li>\n<li><strong>检查项补充说明</strong>。如果检查项描述比较复杂，可在评论区中添加对此检查项的描述。评论区的说明内容也需要以<code>B{ID}</code>开始，与检查项的ID对应，以便其它同事快速查找。</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"Scrum-task.png\" alt=\"\"></p>\n<h2 id=\"任务操作\"><a href=\"#任务操作\" class=\"headerlink\" title=\"任务操作\"></a>任务操作</h2><p>上述已经规范过的操作规范，不再赘述。补充以下操作规范：</p>\n<ol>\n<li>任务管理者，需要每日整理任务看板，使得：<ol>\n<li>已完成的任务拖动到冲刺列表的末尾。</li>\n<li>所有的任务按照优先级从高到低排列。</li>\n</ol>\n</li>\n<li>不要轻易归档已完成任务。已完成任务会在每次周期结束时统一归档。为方便查找，还会保留最近三个周期的任务暂不归档。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：此文为Scrum极限编程在worktile工具中的应用规范。需要读者对Scrum极限编程有基本的认识，对worktile有过操作经历。因为worktile并不是专门为scrum设计的工具，所以在很多方面需要我们自己规范自己遵守。此篇文章，结合了worktile自身特点，整理出了一份操作规范。</p>\n<h2 id=\"任务看板\"><a href=\"#任务看板\" class=\"headerlink\" title=\"任务看板\"></a>任务看板</h2><p>任务看板分为两种：</p>\n<ol>\n<li>产品列表。显示名称为<code>产品列表</code>。此列表是一个愿望列表，表示希望在将来的产品中看到的功能。任何人都可以向此列表中添加项目。</li>\n<li>冲刺列表。显示名称为<code>S5:冲刺目标名称</code>。此列表代表一个冲刺周期中，应该完成的任务。已完成的冲刺周期将会逐渐归档。为了方便回溯查找，我们将保留3个已完成的冲刺列表。</li>\n</ol>\n<p><img src=\"Scrum-backlog.png\" alt=\"\"></p>\n<h2 id=\"任务字段\"><a href=\"#任务字段\" class=\"headerlink\" title=\"任务字段\"></a>任务字段</h2><ol>\n<li><strong>名称</strong>：<code>T(/B){id}:H{hour}:{任务名称}</code>。举例：<code>T1:H4:注册和登录页面</code>，<code>B1:H2:上个冲刺周期有个Bug</code>。<ol>\n<li>任务类型：<code>T</code>表示普通任务（Task）；<code>B</code>表示Bug，表示已结束的冲刺周期中出现的问题。</li>\n<li><code>{id}</code>表示任务的唯一ID,为纯数字，从1开始递增。大家在添加任务的时候，请查看下当前列表的最大任务ID号。</li>\n<li><code>{hour}</code>表示完成该任务的计划时间，单位为小时。</li>\n<li><code>{任务名称}</code>是该任务的简短描述，让同事看到名称，能想起来是哪件事情。</li>\n</ol>\n</li>\n<li><strong>标签</strong>。分为<code>低，中，高，紧急</code>四个等级，优先级依次底层。完成时从高往低开始做。</li>\n<li><strong>关注的人</strong>。为所有与此相关的人。</li>\n<li><strong>分配任务给</strong>。为任务当前的执行者。一般一个任务会涉及多个参与者，所有的参与者在“关注的人”中指定。当一个人做完之后会交接到下一个人。而当前任务执行者，指的是任务的当前处理者。当前任务的处理者完成自己的那部分任务后，或指给项目负责人处理，或指给下一个处理人。</li>\n<li><strong>截止时间</strong>。冲刺周期开始时，为每个任务指定截止时间为本周期结束日。在每日站立会议中，讨论接下来一到两天的任务，再次设定这些任务的截止日期。</li>\n<li><strong>任务描述</strong>。详细的任务描述，执行人可通过任务描述详细的了解该怎么执行。如果任务创建者和执行者已经进行过口头沟通，需在任务描述中标注<code>已沟通</code>，并把要点写上，方便以后回忆。</li>\n<li><strong>检查项</strong>。表示此任务的补充任务。在冲刺周期还未结束时，用来对执行者已经完成的任务进行补充。比如，在开发过程中，执行者已经完成该任务，但任务发起者发现有些细节跟最初设计的不同，则需要重新打开此任务，在“检查项”中写明那些地方不对，需要继续修改。<ol>\n<li><strong>检查项名称</strong>。每一个检查项需要以格式<code>B{ID}:{任务名称}（见评论）</code>来命名。如果需要补充说明，请添加在评论区中，并在检查项名称的末尾加上<code>（见评论）</code>。</li>\n<li><strong>检查项补充说明</strong>。如果检查项描述比较复杂，可在评论区中添加对此检查项的描述。评论区的说明内容也需要以<code>B{ID}</code>开始，与检查项的ID对应，以便其它同事快速查找。</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"Scrum-task.png\" alt=\"\"></p>\n<h2 id=\"任务操作\"><a href=\"#任务操作\" class=\"headerlink\" title=\"任务操作\"></a>任务操作</h2><p>上述已经规范过的操作规范，不再赘述。补充以下操作规范：</p>\n<ol>\n<li>任务管理者，需要每日整理任务看板，使得：<ol>\n<li>已完成的任务拖动到冲刺列表的末尾。</li>\n<li>所有的任务按照优先级从高到低排列。</li>\n</ol>\n</li>\n<li>不要轻易归档已完成任务。已完成任务会在每次周期结束时统一归档。为方便查找，还会保留最近三个周期的任务暂不归档。</li>\n</ol>\n"},{"date":"2014-04-17T16:00:00.000Z","title":"如何管理IT技术团队","_content":"\n摘要:此文是书籍《行之有效:IT技术团队管理之道》的读书笔记. 主要是方便自己回顾. 您也可以通过此文简要了解此书的内容.\n\n## IT技术团队员工的特点\n\n1. 高学历, 知识密集型. **技术立身**. \n2. **人际关系简单**. 摩擦大多数由技术产生, 相处也比较容易. \n3. 需要较高的**自由度**.( 经理的职能不是强迫人们工作, 而是让人自觉地工作 ). 一是希望完成任务之后能做自己的事情; 二是希望以自己的方式完成工作.\n4. **发展前途**. 没有发展前途, 就会离开.\n5. 敏感, 流动性大.\n\n\n## 关于招聘的考量\n\n1. 技术能力满足基本要求\n2. 做事风格与团队匹配\n3. 沟通能力\n4. 工作努力.\n\n员工的本性很重要, 将来的塑造过程中很难改变.\n\n## 关于员工塑造\n\n通常把员工看作是一员大将, 他们各自为团队镇守一方. 这样, 一个团队的战斗力才全面, 强劲.\n\n另一个方面来讲, 一个人认为应该帮他(她)的人越多, 他的责任感就越小. 我们需要明确每一个人的责任.\n\n\n## 员工责任感与参与度\n  \n  一个人的积极性和责任感是性格的一部分, 虽然可以提高, 但是不要寄予太大的希望. 招聘的时候对这一方面要好好考察.\n  \n  管理者的一个重要责任就是**让员工负责**. 如果员工不明白自己的职责所在, 或者总认为自己可以部分责任, 管理者会很辛苦, 而且团队和项目会走向失败. \n  \n  \n  员工会执行分配下来的任务, 但是会**支持**自己参与的事情. 简单的执行和内心的支持是不一样的.\n  \n  提高员工参与度的方法:\n  \n  1. 外围的事情, 可以由\"民主\"决定.\n  2. 日常的工作, 比如Code review也可以由员工参与\n  3. 制定规则前, 征询大家的意见，最好能在会议中通过公开的讨论“诱导”大家得出此规则.\n  \n### 激发员工的责任感\n\n* 第一个要素就是: 自己**以身作则**. 自己处处率先垂范, 不管怎么样的员工都会慢慢跟上.\n* 光环理论: 如果你希望员工做到什么, 就要去表扬他们,好像他们已经做到了. 员工**主动维护这个形象**的力量是很大的.\n\n\n## 权利和影响力\n\n### 官方权利的基础上培养个人影响力\n\n新管理者要给员工心理上接受和磨合的时间. ( 自己招聘的员工会有先天的\"拥护\"光环. )\n\n管理者怎么提高个人影响力: \n\n1. 专业能力要强\n2. 工作努力.( 风格可有差异 )\n3. 对人态度好, 公平, 关心员工. \n\n### 分清楚管与不管的界限\n\n一个典型的IT技术团队的管理者被授予的权利包括:\n\n1. 团队日常管理\n2. 项目管理\n3. 绩效考核.\n4. 招聘新员工 ( 其中于技术相关的部分, 一部分的建议权 )\n5. 晋升, 加薪, 解雇等方面的建议权.\n\n**不包括**:\n\n1. 财务权\n2. 采购权\n3. 完全的人事权\n4. 参与公司商业活动\n5. 参与公司决策\n\n对于员工的关心, 原则是**只管工作, 不管生活**. \n但是, 一个人情的社会, 必要的关心也不可缺少, 这里有一个比较简易的划分:\n\n> 每个人的生活中, 有两部分, 一是普通的生活, 称为公生活, 例如身体不适, 孩子上学, 回家探亲, 周末逛街, 等等. 另一个是私密生活, 包括宗教恋情, 婚姻状态, 性取向, 价值观, 人生观, 等等. 公生活可以谈论, 而且管理者应该主动关心公生活. 对于私生活, 即使员工主动提及, 也不要深入探究. \n\n### 要约和领地\n\n心理要约, 是指公司级管理者与员工达成的约定, 特别是没有明文规定的, 彼此在内心达成的一致.\n\n领地, 可以通俗的理解为\"地盘\". 员工都有自己的\"领地\", 比如座位空间, 其负责的工作, 等等. 应该尽量尊重他们的\"领地\".\n\n\n史玉柱说:\n> 一定要尊重部下. 因为你这样做了, 他假如换个单位就碰不到这么好的领导. 所以遇到困难的时候他也不会走. \n> 最重要的是你从内心深处一定要把他堪称是和你平等的人,有的老板会觉得你比我低一筹, 我是老板, 你是我的\"马仔\". 假如你真的有这种想法, 必然会通过你的言行表现出来. 这样你周围的人必然不会跟你一条心. 人是对等的, 你一旦尊重他们, 他们就会更加尊重你.\n\n\n### 关于个性\n一般来说, 比较稳妥的做法是, 管理者只在团队前展示相对中性的喜好和个人观点, 例如读书, 锻炼, 旅游, 等等. 容易引起争论的则要避免, 不要有意或者无意的在团队面前强调, 例如对宗教,民族,社会问题比较尖锐的立场等. \n\n对于管理者来说, 包容下属以与自己不同的方式工作, 是一大挑战. 君子和而不同, 除非真的有必要, 管理者不要去干预员工的工作方式. \n\n\n## 保持距离\n\n>并不是对每一个人好, 就能获得尊重. 尊重原则, 有效执行, 才是管理的真谛.\n\n## 随时激励\n\n每个人都需要激励. 激励有一个保鲜期, 所以要及时, 多次激励.\n\n## 考核\n> 鼓励并没有错. 但是, 不同的人有不同的性格. 有的同事, 你要委婉一些. 有的同事, 你需要直接一些. 目标是一样的, 让他们能清楚的了解你的意思, 不用去猜. 在绩效考核的时候更要说得清楚, 否则, 会产生误解.\n\n\n\n\n  \n  \n\n\n\n\n\n","source":"_posts/管理/IT技术团队管理-总结.md","raw":"---\ndate: 2014-04-18\ntitle: 如何管理IT技术团队\ntags: \n- 团队管理\n- 招聘 \n- 责任感\n- 参与度\ncategories: \n- 管理\n---\n\n摘要:此文是书籍《行之有效:IT技术团队管理之道》的读书笔记. 主要是方便自己回顾. 您也可以通过此文简要了解此书的内容.\n\n## IT技术团队员工的特点\n\n1. 高学历, 知识密集型. **技术立身**. \n2. **人际关系简单**. 摩擦大多数由技术产生, 相处也比较容易. \n3. 需要较高的**自由度**.( 经理的职能不是强迫人们工作, 而是让人自觉地工作 ). 一是希望完成任务之后能做自己的事情; 二是希望以自己的方式完成工作.\n4. **发展前途**. 没有发展前途, 就会离开.\n5. 敏感, 流动性大.\n\n\n## 关于招聘的考量\n\n1. 技术能力满足基本要求\n2. 做事风格与团队匹配\n3. 沟通能力\n4. 工作努力.\n\n员工的本性很重要, 将来的塑造过程中很难改变.\n\n## 关于员工塑造\n\n通常把员工看作是一员大将, 他们各自为团队镇守一方. 这样, 一个团队的战斗力才全面, 强劲.\n\n另一个方面来讲, 一个人认为应该帮他(她)的人越多, 他的责任感就越小. 我们需要明确每一个人的责任.\n\n\n## 员工责任感与参与度\n  \n  一个人的积极性和责任感是性格的一部分, 虽然可以提高, 但是不要寄予太大的希望. 招聘的时候对这一方面要好好考察.\n  \n  管理者的一个重要责任就是**让员工负责**. 如果员工不明白自己的职责所在, 或者总认为自己可以部分责任, 管理者会很辛苦, 而且团队和项目会走向失败. \n  \n  \n  员工会执行分配下来的任务, 但是会**支持**自己参与的事情. 简单的执行和内心的支持是不一样的.\n  \n  提高员工参与度的方法:\n  \n  1. 外围的事情, 可以由\"民主\"决定.\n  2. 日常的工作, 比如Code review也可以由员工参与\n  3. 制定规则前, 征询大家的意见，最好能在会议中通过公开的讨论“诱导”大家得出此规则.\n  \n### 激发员工的责任感\n\n* 第一个要素就是: 自己**以身作则**. 自己处处率先垂范, 不管怎么样的员工都会慢慢跟上.\n* 光环理论: 如果你希望员工做到什么, 就要去表扬他们,好像他们已经做到了. 员工**主动维护这个形象**的力量是很大的.\n\n\n## 权利和影响力\n\n### 官方权利的基础上培养个人影响力\n\n新管理者要给员工心理上接受和磨合的时间. ( 自己招聘的员工会有先天的\"拥护\"光环. )\n\n管理者怎么提高个人影响力: \n\n1. 专业能力要强\n2. 工作努力.( 风格可有差异 )\n3. 对人态度好, 公平, 关心员工. \n\n### 分清楚管与不管的界限\n\n一个典型的IT技术团队的管理者被授予的权利包括:\n\n1. 团队日常管理\n2. 项目管理\n3. 绩效考核.\n4. 招聘新员工 ( 其中于技术相关的部分, 一部分的建议权 )\n5. 晋升, 加薪, 解雇等方面的建议权.\n\n**不包括**:\n\n1. 财务权\n2. 采购权\n3. 完全的人事权\n4. 参与公司商业活动\n5. 参与公司决策\n\n对于员工的关心, 原则是**只管工作, 不管生活**. \n但是, 一个人情的社会, 必要的关心也不可缺少, 这里有一个比较简易的划分:\n\n> 每个人的生活中, 有两部分, 一是普通的生活, 称为公生活, 例如身体不适, 孩子上学, 回家探亲, 周末逛街, 等等. 另一个是私密生活, 包括宗教恋情, 婚姻状态, 性取向, 价值观, 人生观, 等等. 公生活可以谈论, 而且管理者应该主动关心公生活. 对于私生活, 即使员工主动提及, 也不要深入探究. \n\n### 要约和领地\n\n心理要约, 是指公司级管理者与员工达成的约定, 特别是没有明文规定的, 彼此在内心达成的一致.\n\n领地, 可以通俗的理解为\"地盘\". 员工都有自己的\"领地\", 比如座位空间, 其负责的工作, 等等. 应该尽量尊重他们的\"领地\".\n\n\n史玉柱说:\n> 一定要尊重部下. 因为你这样做了, 他假如换个单位就碰不到这么好的领导. 所以遇到困难的时候他也不会走. \n> 最重要的是你从内心深处一定要把他堪称是和你平等的人,有的老板会觉得你比我低一筹, 我是老板, 你是我的\"马仔\". 假如你真的有这种想法, 必然会通过你的言行表现出来. 这样你周围的人必然不会跟你一条心. 人是对等的, 你一旦尊重他们, 他们就会更加尊重你.\n\n\n### 关于个性\n一般来说, 比较稳妥的做法是, 管理者只在团队前展示相对中性的喜好和个人观点, 例如读书, 锻炼, 旅游, 等等. 容易引起争论的则要避免, 不要有意或者无意的在团队面前强调, 例如对宗教,民族,社会问题比较尖锐的立场等. \n\n对于管理者来说, 包容下属以与自己不同的方式工作, 是一大挑战. 君子和而不同, 除非真的有必要, 管理者不要去干预员工的工作方式. \n\n\n## 保持距离\n\n>并不是对每一个人好, 就能获得尊重. 尊重原则, 有效执行, 才是管理的真谛.\n\n## 随时激励\n\n每个人都需要激励. 激励有一个保鲜期, 所以要及时, 多次激励.\n\n## 考核\n> 鼓励并没有错. 但是, 不同的人有不同的性格. 有的同事, 你要委婉一些. 有的同事, 你需要直接一些. 目标是一样的, 让他们能清楚的了解你的意思, 不用去猜. 在绩效考核的时候更要说得清楚, 否则, 会产生误解.\n\n\n\n\n  \n  \n\n\n\n\n\n","slug":"管理/IT技术团队管理-总结","published":1,"updated":"2017-07-26T16:27:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ks8006lq0d43jd1libm","content":"<p>摘要:此文是书籍《行之有效:IT技术团队管理之道》的读书笔记. 主要是方便自己回顾. 您也可以通过此文简要了解此书的内容.</p>\n<h2 id=\"IT技术团队员工的特点\"><a href=\"#IT技术团队员工的特点\" class=\"headerlink\" title=\"IT技术团队员工的特点\"></a>IT技术团队员工的特点</h2><ol>\n<li>高学历, 知识密集型. <strong>技术立身</strong>. </li>\n<li><strong>人际关系简单</strong>. 摩擦大多数由技术产生, 相处也比较容易. </li>\n<li>需要较高的<strong>自由度</strong>.( 经理的职能不是强迫人们工作, 而是让人自觉地工作 ). 一是希望完成任务之后能做自己的事情; 二是希望以自己的方式完成工作.</li>\n<li><strong>发展前途</strong>. 没有发展前途, 就会离开.</li>\n<li>敏感, 流动性大.</li>\n</ol>\n<h2 id=\"关于招聘的考量\"><a href=\"#关于招聘的考量\" class=\"headerlink\" title=\"关于招聘的考量\"></a>关于招聘的考量</h2><ol>\n<li>技术能力满足基本要求</li>\n<li>做事风格与团队匹配</li>\n<li>沟通能力</li>\n<li>工作努力.</li>\n</ol>\n<p>员工的本性很重要, 将来的塑造过程中很难改变.</p>\n<h2 id=\"关于员工塑造\"><a href=\"#关于员工塑造\" class=\"headerlink\" title=\"关于员工塑造\"></a>关于员工塑造</h2><p>通常把员工看作是一员大将, 他们各自为团队镇守一方. 这样, 一个团队的战斗力才全面, 强劲.</p>\n<p>另一个方面来讲, 一个人认为应该帮他(她)的人越多, 他的责任感就越小. 我们需要明确每一个人的责任.</p>\n<h2 id=\"员工责任感与参与度\"><a href=\"#员工责任感与参与度\" class=\"headerlink\" title=\"员工责任感与参与度\"></a>员工责任感与参与度</h2><p>  一个人的积极性和责任感是性格的一部分, 虽然可以提高, 但是不要寄予太大的希望. 招聘的时候对这一方面要好好考察.</p>\n<p>  管理者的一个重要责任就是<strong>让员工负责</strong>. 如果员工不明白自己的职责所在, 或者总认为自己可以部分责任, 管理者会很辛苦, 而且团队和项目会走向失败. </p>\n<p>  员工会执行分配下来的任务, 但是会<strong>支持</strong>自己参与的事情. 简单的执行和内心的支持是不一样的.</p>\n<p>  提高员工参与度的方法:</p>\n<ol>\n<li>外围的事情, 可以由”民主”决定.</li>\n<li>日常的工作, 比如Code review也可以由员工参与</li>\n<li>制定规则前, 征询大家的意见，最好能在会议中通过公开的讨论“诱导”大家得出此规则.</li>\n</ol>\n<h3 id=\"激发员工的责任感\"><a href=\"#激发员工的责任感\" class=\"headerlink\" title=\"激发员工的责任感\"></a>激发员工的责任感</h3><ul>\n<li>第一个要素就是: 自己<strong>以身作则</strong>. 自己处处率先垂范, 不管怎么样的员工都会慢慢跟上.</li>\n<li>光环理论: 如果你希望员工做到什么, 就要去表扬他们,好像他们已经做到了. 员工<strong>主动维护这个形象</strong>的力量是很大的.</li>\n</ul>\n<h2 id=\"权利和影响力\"><a href=\"#权利和影响力\" class=\"headerlink\" title=\"权利和影响力\"></a>权利和影响力</h2><h3 id=\"官方权利的基础上培养个人影响力\"><a href=\"#官方权利的基础上培养个人影响力\" class=\"headerlink\" title=\"官方权利的基础上培养个人影响力\"></a>官方权利的基础上培养个人影响力</h3><p>新管理者要给员工心理上接受和磨合的时间. ( 自己招聘的员工会有先天的”拥护”光环. )</p>\n<p>管理者怎么提高个人影响力: </p>\n<ol>\n<li>专业能力要强</li>\n<li>工作努力.( 风格可有差异 )</li>\n<li>对人态度好, 公平, 关心员工. </li>\n</ol>\n<h3 id=\"分清楚管与不管的界限\"><a href=\"#分清楚管与不管的界限\" class=\"headerlink\" title=\"分清楚管与不管的界限\"></a>分清楚管与不管的界限</h3><p>一个典型的IT技术团队的管理者被授予的权利包括:</p>\n<ol>\n<li>团队日常管理</li>\n<li>项目管理</li>\n<li>绩效考核.</li>\n<li>招聘新员工 ( 其中于技术相关的部分, 一部分的建议权 )</li>\n<li>晋升, 加薪, 解雇等方面的建议权.</li>\n</ol>\n<p><strong>不包括</strong>:</p>\n<ol>\n<li>财务权</li>\n<li>采购权</li>\n<li>完全的人事权</li>\n<li>参与公司商业活动</li>\n<li>参与公司决策</li>\n</ol>\n<p>对于员工的关心, 原则是<strong>只管工作, 不管生活</strong>.<br>但是, 一个人情的社会, 必要的关心也不可缺少, 这里有一个比较简易的划分:</p>\n<blockquote>\n<p>每个人的生活中, 有两部分, 一是普通的生活, 称为公生活, 例如身体不适, 孩子上学, 回家探亲, 周末逛街, 等等. 另一个是私密生活, 包括宗教恋情, 婚姻状态, 性取向, 价值观, 人生观, 等等. 公生活可以谈论, 而且管理者应该主动关心公生活. 对于私生活, 即使员工主动提及, 也不要深入探究. </p>\n</blockquote>\n<h3 id=\"要约和领地\"><a href=\"#要约和领地\" class=\"headerlink\" title=\"要约和领地\"></a>要约和领地</h3><p>心理要约, 是指公司级管理者与员工达成的约定, 特别是没有明文规定的, 彼此在内心达成的一致.</p>\n<p>领地, 可以通俗的理解为”地盘”. 员工都有自己的”领地”, 比如座位空间, 其负责的工作, 等等. 应该尽量尊重他们的”领地”.</p>\n<p>史玉柱说:</p>\n<blockquote>\n<p>一定要尊重部下. 因为你这样做了, 他假如换个单位就碰不到这么好的领导. 所以遇到困难的时候他也不会走.<br>最重要的是你从内心深处一定要把他堪称是和你平等的人,有的老板会觉得你比我低一筹, 我是老板, 你是我的”马仔”. 假如你真的有这种想法, 必然会通过你的言行表现出来. 这样你周围的人必然不会跟你一条心. 人是对等的, 你一旦尊重他们, 他们就会更加尊重你.</p>\n</blockquote>\n<h3 id=\"关于个性\"><a href=\"#关于个性\" class=\"headerlink\" title=\"关于个性\"></a>关于个性</h3><p>一般来说, 比较稳妥的做法是, 管理者只在团队前展示相对中性的喜好和个人观点, 例如读书, 锻炼, 旅游, 等等. 容易引起争论的则要避免, 不要有意或者无意的在团队面前强调, 例如对宗教,民族,社会问题比较尖锐的立场等. </p>\n<p>对于管理者来说, 包容下属以与自己不同的方式工作, 是一大挑战. 君子和而不同, 除非真的有必要, 管理者不要去干预员工的工作方式. </p>\n<h2 id=\"保持距离\"><a href=\"#保持距离\" class=\"headerlink\" title=\"保持距离\"></a>保持距离</h2><blockquote>\n<p>并不是对每一个人好, 就能获得尊重. 尊重原则, 有效执行, 才是管理的真谛.</p>\n</blockquote>\n<h2 id=\"随时激励\"><a href=\"#随时激励\" class=\"headerlink\" title=\"随时激励\"></a>随时激励</h2><p>每个人都需要激励. 激励有一个保鲜期, 所以要及时, 多次激励.</p>\n<h2 id=\"考核\"><a href=\"#考核\" class=\"headerlink\" title=\"考核\"></a>考核</h2><blockquote>\n<p>鼓励并没有错. 但是, 不同的人有不同的性格. 有的同事, 你要委婉一些. 有的同事, 你需要直接一些. 目标是一样的, 让他们能清楚的了解你的意思, 不用去猜. 在绩效考核的时候更要说得清楚, 否则, 会产生误解.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要:此文是书籍《行之有效:IT技术团队管理之道》的读书笔记. 主要是方便自己回顾. 您也可以通过此文简要了解此书的内容.</p>\n<h2 id=\"IT技术团队员工的特点\"><a href=\"#IT技术团队员工的特点\" class=\"headerlink\" title=\"IT技术团队员工的特点\"></a>IT技术团队员工的特点</h2><ol>\n<li>高学历, 知识密集型. <strong>技术立身</strong>. </li>\n<li><strong>人际关系简单</strong>. 摩擦大多数由技术产生, 相处也比较容易. </li>\n<li>需要较高的<strong>自由度</strong>.( 经理的职能不是强迫人们工作, 而是让人自觉地工作 ). 一是希望完成任务之后能做自己的事情; 二是希望以自己的方式完成工作.</li>\n<li><strong>发展前途</strong>. 没有发展前途, 就会离开.</li>\n<li>敏感, 流动性大.</li>\n</ol>\n<h2 id=\"关于招聘的考量\"><a href=\"#关于招聘的考量\" class=\"headerlink\" title=\"关于招聘的考量\"></a>关于招聘的考量</h2><ol>\n<li>技术能力满足基本要求</li>\n<li>做事风格与团队匹配</li>\n<li>沟通能力</li>\n<li>工作努力.</li>\n</ol>\n<p>员工的本性很重要, 将来的塑造过程中很难改变.</p>\n<h2 id=\"关于员工塑造\"><a href=\"#关于员工塑造\" class=\"headerlink\" title=\"关于员工塑造\"></a>关于员工塑造</h2><p>通常把员工看作是一员大将, 他们各自为团队镇守一方. 这样, 一个团队的战斗力才全面, 强劲.</p>\n<p>另一个方面来讲, 一个人认为应该帮他(她)的人越多, 他的责任感就越小. 我们需要明确每一个人的责任.</p>\n<h2 id=\"员工责任感与参与度\"><a href=\"#员工责任感与参与度\" class=\"headerlink\" title=\"员工责任感与参与度\"></a>员工责任感与参与度</h2><p>  一个人的积极性和责任感是性格的一部分, 虽然可以提高, 但是不要寄予太大的希望. 招聘的时候对这一方面要好好考察.</p>\n<p>  管理者的一个重要责任就是<strong>让员工负责</strong>. 如果员工不明白自己的职责所在, 或者总认为自己可以部分责任, 管理者会很辛苦, 而且团队和项目会走向失败. </p>\n<p>  员工会执行分配下来的任务, 但是会<strong>支持</strong>自己参与的事情. 简单的执行和内心的支持是不一样的.</p>\n<p>  提高员工参与度的方法:</p>\n<ol>\n<li>外围的事情, 可以由”民主”决定.</li>\n<li>日常的工作, 比如Code review也可以由员工参与</li>\n<li>制定规则前, 征询大家的意见，最好能在会议中通过公开的讨论“诱导”大家得出此规则.</li>\n</ol>\n<h3 id=\"激发员工的责任感\"><a href=\"#激发员工的责任感\" class=\"headerlink\" title=\"激发员工的责任感\"></a>激发员工的责任感</h3><ul>\n<li>第一个要素就是: 自己<strong>以身作则</strong>. 自己处处率先垂范, 不管怎么样的员工都会慢慢跟上.</li>\n<li>光环理论: 如果你希望员工做到什么, 就要去表扬他们,好像他们已经做到了. 员工<strong>主动维护这个形象</strong>的力量是很大的.</li>\n</ul>\n<h2 id=\"权利和影响力\"><a href=\"#权利和影响力\" class=\"headerlink\" title=\"权利和影响力\"></a>权利和影响力</h2><h3 id=\"官方权利的基础上培养个人影响力\"><a href=\"#官方权利的基础上培养个人影响力\" class=\"headerlink\" title=\"官方权利的基础上培养个人影响力\"></a>官方权利的基础上培养个人影响力</h3><p>新管理者要给员工心理上接受和磨合的时间. ( 自己招聘的员工会有先天的”拥护”光环. )</p>\n<p>管理者怎么提高个人影响力: </p>\n<ol>\n<li>专业能力要强</li>\n<li>工作努力.( 风格可有差异 )</li>\n<li>对人态度好, 公平, 关心员工. </li>\n</ol>\n<h3 id=\"分清楚管与不管的界限\"><a href=\"#分清楚管与不管的界限\" class=\"headerlink\" title=\"分清楚管与不管的界限\"></a>分清楚管与不管的界限</h3><p>一个典型的IT技术团队的管理者被授予的权利包括:</p>\n<ol>\n<li>团队日常管理</li>\n<li>项目管理</li>\n<li>绩效考核.</li>\n<li>招聘新员工 ( 其中于技术相关的部分, 一部分的建议权 )</li>\n<li>晋升, 加薪, 解雇等方面的建议权.</li>\n</ol>\n<p><strong>不包括</strong>:</p>\n<ol>\n<li>财务权</li>\n<li>采购权</li>\n<li>完全的人事权</li>\n<li>参与公司商业活动</li>\n<li>参与公司决策</li>\n</ol>\n<p>对于员工的关心, 原则是<strong>只管工作, 不管生活</strong>.<br>但是, 一个人情的社会, 必要的关心也不可缺少, 这里有一个比较简易的划分:</p>\n<blockquote>\n<p>每个人的生活中, 有两部分, 一是普通的生活, 称为公生活, 例如身体不适, 孩子上学, 回家探亲, 周末逛街, 等等. 另一个是私密生活, 包括宗教恋情, 婚姻状态, 性取向, 价值观, 人生观, 等等. 公生活可以谈论, 而且管理者应该主动关心公生活. 对于私生活, 即使员工主动提及, 也不要深入探究. </p>\n</blockquote>\n<h3 id=\"要约和领地\"><a href=\"#要约和领地\" class=\"headerlink\" title=\"要约和领地\"></a>要约和领地</h3><p>心理要约, 是指公司级管理者与员工达成的约定, 特别是没有明文规定的, 彼此在内心达成的一致.</p>\n<p>领地, 可以通俗的理解为”地盘”. 员工都有自己的”领地”, 比如座位空间, 其负责的工作, 等等. 应该尽量尊重他们的”领地”.</p>\n<p>史玉柱说:</p>\n<blockquote>\n<p>一定要尊重部下. 因为你这样做了, 他假如换个单位就碰不到这么好的领导. 所以遇到困难的时候他也不会走.<br>最重要的是你从内心深处一定要把他堪称是和你平等的人,有的老板会觉得你比我低一筹, 我是老板, 你是我的”马仔”. 假如你真的有这种想法, 必然会通过你的言行表现出来. 这样你周围的人必然不会跟你一条心. 人是对等的, 你一旦尊重他们, 他们就会更加尊重你.</p>\n</blockquote>\n<h3 id=\"关于个性\"><a href=\"#关于个性\" class=\"headerlink\" title=\"关于个性\"></a>关于个性</h3><p>一般来说, 比较稳妥的做法是, 管理者只在团队前展示相对中性的喜好和个人观点, 例如读书, 锻炼, 旅游, 等等. 容易引起争论的则要避免, 不要有意或者无意的在团队面前强调, 例如对宗教,民族,社会问题比较尖锐的立场等. </p>\n<p>对于管理者来说, 包容下属以与自己不同的方式工作, 是一大挑战. 君子和而不同, 除非真的有必要, 管理者不要去干预员工的工作方式. </p>\n<h2 id=\"保持距离\"><a href=\"#保持距离\" class=\"headerlink\" title=\"保持距离\"></a>保持距离</h2><blockquote>\n<p>并不是对每一个人好, 就能获得尊重. 尊重原则, 有效执行, 才是管理的真谛.</p>\n</blockquote>\n<h2 id=\"随时激励\"><a href=\"#随时激励\" class=\"headerlink\" title=\"随时激励\"></a>随时激励</h2><p>每个人都需要激励. 激励有一个保鲜期, 所以要及时, 多次激励.</p>\n<h2 id=\"考核\"><a href=\"#考核\" class=\"headerlink\" title=\"考核\"></a>考核</h2><blockquote>\n<p>鼓励并没有错. 但是, 不同的人有不同的性格. 有的同事, 你要委婉一些. 有的同事, 你需要直接一些. 目标是一样的, 让他们能清楚的了解你的意思, 不用去猜. 在绩效考核的时候更要说得清楚, 否则, 会产生误解.</p>\n</blockquote>\n"},{"date":"2016-03-17T16:00:00.000Z","title":"《关键对话》读书笔记","description":"什么是关键对话？有不同意见；事关重大；情绪激动。","_content":"\n# 什么是关键对话\n\n1. 有不同意见。\n2. 事关重大。\n3. 情绪激动。\n\n\n# 用心开始 \n## 共享信息库\n\n我们每个人都会将自己的观点、感受、理论和经验带入谈话。这些想法和感受构成了我们自己的信息库。这些信息不仅告诉我们如何去做，并且直接推动我们的每一个行动。\n\n共享信息库代表一个团队的智商，信息库越大，决定就会越聪明。\n\n当人们能够坦诚地说出自己的观点，信息能够自由流动的时候，共享信息库能够极大地提高团队的能力，使他们做出更要的决定。\n\n## 从我开始\n\n不要指望别人能有所改观，从自己做起。你唯一能够直接控制的人就是你自己。\n\n## 清楚交流的目的\n\n提醒自己目标是什么，然后专注于它。\n避免“一心求胜”的心态。\n总有一种方法能达到你想要的，又能避免你不想要的，Think about it.\n\n# 学会观察\n\n## 注意形势\n当事情变得糟糕时，我一方面关注谈话的内容，一方面观察人们在做什么。我会研究这是怎么回事儿以及为什么会这样。\n\n## 沉默和语言暴力\n\n当人们开始觉得不安全的时候，或走向沉默（隐瞒自己的信息），或宿主语言的暴力（将自己的信息强加给别人）。\n\n沉默包含了所有企图隐藏信息的行为，比如掩饰、回避和退缩：  \n* **掩饰**包括不完全或者有选择的表述我们真实地观点。讽刺、甜言蜜语和语焉不详是掩饰的常用方式。\n* **回避**是指彻底额避开敏感的话题。我们的确在说话，但不会触及实质问题。\n* **逃避**是指完全回避谈话——不是结束讨论，就是离开现场。\n\n# 保持安全\n\n## 共同目标\n\n## 处理不安全信号\n\n当你发现共同目标或者互相尊重受到威胁时，你需要走出谈话，简历安全的形势。有三种技巧可以应对：**道歉、对比、CRIB**。\n\n\n## 对比法的使用方法\n\n* 强调一下别人所担心的内容，即他们认为你不尊重他们或你的用意是恶毒的。\n* 明确你是尊重他们的，并澄清你的真实目的。\n\n## CRIB\n\n* 承诺寻找共同目标\n* 确认策略背后的目的\n* 创造共同目的\n* 通过头脑风暴寻找新的策略\n\n# 掌握自己的故事\n\n当你创造了情绪，你有两种选择：对它施加影响或者被他影响。\n","source":"_posts/读书/《关键对话》读书笔记.md","raw":"date: 2016-03-18\ntags:\n- 读书笔记\n- 谈话\n- 交流\ntitle: 《关键对话》读书笔记\ndescription: 什么是关键对话？有不同意见；事关重大；情绪激动。\ncategories: \n- 读书\n---\n\n# 什么是关键对话\n\n1. 有不同意见。\n2. 事关重大。\n3. 情绪激动。\n\n\n# 用心开始 \n## 共享信息库\n\n我们每个人都会将自己的观点、感受、理论和经验带入谈话。这些想法和感受构成了我们自己的信息库。这些信息不仅告诉我们如何去做，并且直接推动我们的每一个行动。\n\n共享信息库代表一个团队的智商，信息库越大，决定就会越聪明。\n\n当人们能够坦诚地说出自己的观点，信息能够自由流动的时候，共享信息库能够极大地提高团队的能力，使他们做出更要的决定。\n\n## 从我开始\n\n不要指望别人能有所改观，从自己做起。你唯一能够直接控制的人就是你自己。\n\n## 清楚交流的目的\n\n提醒自己目标是什么，然后专注于它。\n避免“一心求胜”的心态。\n总有一种方法能达到你想要的，又能避免你不想要的，Think about it.\n\n# 学会观察\n\n## 注意形势\n当事情变得糟糕时，我一方面关注谈话的内容，一方面观察人们在做什么。我会研究这是怎么回事儿以及为什么会这样。\n\n## 沉默和语言暴力\n\n当人们开始觉得不安全的时候，或走向沉默（隐瞒自己的信息），或宿主语言的暴力（将自己的信息强加给别人）。\n\n沉默包含了所有企图隐藏信息的行为，比如掩饰、回避和退缩：  \n* **掩饰**包括不完全或者有选择的表述我们真实地观点。讽刺、甜言蜜语和语焉不详是掩饰的常用方式。\n* **回避**是指彻底额避开敏感的话题。我们的确在说话，但不会触及实质问题。\n* **逃避**是指完全回避谈话——不是结束讨论，就是离开现场。\n\n# 保持安全\n\n## 共同目标\n\n## 处理不安全信号\n\n当你发现共同目标或者互相尊重受到威胁时，你需要走出谈话，简历安全的形势。有三种技巧可以应对：**道歉、对比、CRIB**。\n\n\n## 对比法的使用方法\n\n* 强调一下别人所担心的内容，即他们认为你不尊重他们或你的用意是恶毒的。\n* 明确你是尊重他们的，并澄清你的真实目的。\n\n## CRIB\n\n* 承诺寻找共同目标\n* 确认策略背后的目的\n* 创造共同目的\n* 通过头脑风暴寻找新的策略\n\n# 掌握自己的故事\n\n当你创造了情绪，你有两种选择：对它施加影响或者被他影响。\n","slug":"读书/《关键对话》读书笔记","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksc006pq0d4qe9zz22v","content":"<h1 id=\"什么是关键对话\"><a href=\"#什么是关键对话\" class=\"headerlink\" title=\"什么是关键对话\"></a>什么是关键对话</h1><ol>\n<li>有不同意见。</li>\n<li>事关重大。</li>\n<li>情绪激动。</li>\n</ol>\n<h1 id=\"用心开始\"><a href=\"#用心开始\" class=\"headerlink\" title=\"用心开始\"></a>用心开始</h1><h2 id=\"共享信息库\"><a href=\"#共享信息库\" class=\"headerlink\" title=\"共享信息库\"></a>共享信息库</h2><p>我们每个人都会将自己的观点、感受、理论和经验带入谈话。这些想法和感受构成了我们自己的信息库。这些信息不仅告诉我们如何去做，并且直接推动我们的每一个行动。</p>\n<p>共享信息库代表一个团队的智商，信息库越大，决定就会越聪明。</p>\n<p>当人们能够坦诚地说出自己的观点，信息能够自由流动的时候，共享信息库能够极大地提高团队的能力，使他们做出更要的决定。</p>\n<h2 id=\"从我开始\"><a href=\"#从我开始\" class=\"headerlink\" title=\"从我开始\"></a>从我开始</h2><p>不要指望别人能有所改观，从自己做起。你唯一能够直接控制的人就是你自己。</p>\n<h2 id=\"清楚交流的目的\"><a href=\"#清楚交流的目的\" class=\"headerlink\" title=\"清楚交流的目的\"></a>清楚交流的目的</h2><p>提醒自己目标是什么，然后专注于它。<br>避免“一心求胜”的心态。<br>总有一种方法能达到你想要的，又能避免你不想要的，Think about it.</p>\n<h1 id=\"学会观察\"><a href=\"#学会观察\" class=\"headerlink\" title=\"学会观察\"></a>学会观察</h1><h2 id=\"注意形势\"><a href=\"#注意形势\" class=\"headerlink\" title=\"注意形势\"></a>注意形势</h2><p>当事情变得糟糕时，我一方面关注谈话的内容，一方面观察人们在做什么。我会研究这是怎么回事儿以及为什么会这样。</p>\n<h2 id=\"沉默和语言暴力\"><a href=\"#沉默和语言暴力\" class=\"headerlink\" title=\"沉默和语言暴力\"></a>沉默和语言暴力</h2><p>当人们开始觉得不安全的时候，或走向沉默（隐瞒自己的信息），或宿主语言的暴力（将自己的信息强加给别人）。</p>\n<p>沉默包含了所有企图隐藏信息的行为，比如掩饰、回避和退缩：  </p>\n<ul>\n<li><strong>掩饰</strong>包括不完全或者有选择的表述我们真实地观点。讽刺、甜言蜜语和语焉不详是掩饰的常用方式。</li>\n<li><strong>回避</strong>是指彻底额避开敏感的话题。我们的确在说话，但不会触及实质问题。</li>\n<li><strong>逃避</strong>是指完全回避谈话——不是结束讨论，就是离开现场。</li>\n</ul>\n<h1 id=\"保持安全\"><a href=\"#保持安全\" class=\"headerlink\" title=\"保持安全\"></a>保持安全</h1><h2 id=\"共同目标\"><a href=\"#共同目标\" class=\"headerlink\" title=\"共同目标\"></a>共同目标</h2><h2 id=\"处理不安全信号\"><a href=\"#处理不安全信号\" class=\"headerlink\" title=\"处理不安全信号\"></a>处理不安全信号</h2><p>当你发现共同目标或者互相尊重受到威胁时，你需要走出谈话，简历安全的形势。有三种技巧可以应对：<strong>道歉、对比、CRIB</strong>。</p>\n<h2 id=\"对比法的使用方法\"><a href=\"#对比法的使用方法\" class=\"headerlink\" title=\"对比法的使用方法\"></a>对比法的使用方法</h2><ul>\n<li>强调一下别人所担心的内容，即他们认为你不尊重他们或你的用意是恶毒的。</li>\n<li>明确你是尊重他们的，并澄清你的真实目的。</li>\n</ul>\n<h2 id=\"CRIB\"><a href=\"#CRIB\" class=\"headerlink\" title=\"CRIB\"></a>CRIB</h2><ul>\n<li>承诺寻找共同目标</li>\n<li>确认策略背后的目的</li>\n<li>创造共同目的</li>\n<li>通过头脑风暴寻找新的策略</li>\n</ul>\n<h1 id=\"掌握自己的故事\"><a href=\"#掌握自己的故事\" class=\"headerlink\" title=\"掌握自己的故事\"></a>掌握自己的故事</h1><p>当你创造了情绪，你有两种选择：对它施加影响或者被他影响。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是关键对话\"><a href=\"#什么是关键对话\" class=\"headerlink\" title=\"什么是关键对话\"></a>什么是关键对话</h1><ol>\n<li>有不同意见。</li>\n<li>事关重大。</li>\n<li>情绪激动。</li>\n</ol>\n<h1 id=\"用心开始\"><a href=\"#用心开始\" class=\"headerlink\" title=\"用心开始\"></a>用心开始</h1><h2 id=\"共享信息库\"><a href=\"#共享信息库\" class=\"headerlink\" title=\"共享信息库\"></a>共享信息库</h2><p>我们每个人都会将自己的观点、感受、理论和经验带入谈话。这些想法和感受构成了我们自己的信息库。这些信息不仅告诉我们如何去做，并且直接推动我们的每一个行动。</p>\n<p>共享信息库代表一个团队的智商，信息库越大，决定就会越聪明。</p>\n<p>当人们能够坦诚地说出自己的观点，信息能够自由流动的时候，共享信息库能够极大地提高团队的能力，使他们做出更要的决定。</p>\n<h2 id=\"从我开始\"><a href=\"#从我开始\" class=\"headerlink\" title=\"从我开始\"></a>从我开始</h2><p>不要指望别人能有所改观，从自己做起。你唯一能够直接控制的人就是你自己。</p>\n<h2 id=\"清楚交流的目的\"><a href=\"#清楚交流的目的\" class=\"headerlink\" title=\"清楚交流的目的\"></a>清楚交流的目的</h2><p>提醒自己目标是什么，然后专注于它。<br>避免“一心求胜”的心态。<br>总有一种方法能达到你想要的，又能避免你不想要的，Think about it.</p>\n<h1 id=\"学会观察\"><a href=\"#学会观察\" class=\"headerlink\" title=\"学会观察\"></a>学会观察</h1><h2 id=\"注意形势\"><a href=\"#注意形势\" class=\"headerlink\" title=\"注意形势\"></a>注意形势</h2><p>当事情变得糟糕时，我一方面关注谈话的内容，一方面观察人们在做什么。我会研究这是怎么回事儿以及为什么会这样。</p>\n<h2 id=\"沉默和语言暴力\"><a href=\"#沉默和语言暴力\" class=\"headerlink\" title=\"沉默和语言暴力\"></a>沉默和语言暴力</h2><p>当人们开始觉得不安全的时候，或走向沉默（隐瞒自己的信息），或宿主语言的暴力（将自己的信息强加给别人）。</p>\n<p>沉默包含了所有企图隐藏信息的行为，比如掩饰、回避和退缩：  </p>\n<ul>\n<li><strong>掩饰</strong>包括不完全或者有选择的表述我们真实地观点。讽刺、甜言蜜语和语焉不详是掩饰的常用方式。</li>\n<li><strong>回避</strong>是指彻底额避开敏感的话题。我们的确在说话，但不会触及实质问题。</li>\n<li><strong>逃避</strong>是指完全回避谈话——不是结束讨论，就是离开现场。</li>\n</ul>\n<h1 id=\"保持安全\"><a href=\"#保持安全\" class=\"headerlink\" title=\"保持安全\"></a>保持安全</h1><h2 id=\"共同目标\"><a href=\"#共同目标\" class=\"headerlink\" title=\"共同目标\"></a>共同目标</h2><h2 id=\"处理不安全信号\"><a href=\"#处理不安全信号\" class=\"headerlink\" title=\"处理不安全信号\"></a>处理不安全信号</h2><p>当你发现共同目标或者互相尊重受到威胁时，你需要走出谈话，简历安全的形势。有三种技巧可以应对：<strong>道歉、对比、CRIB</strong>。</p>\n<h2 id=\"对比法的使用方法\"><a href=\"#对比法的使用方法\" class=\"headerlink\" title=\"对比法的使用方法\"></a>对比法的使用方法</h2><ul>\n<li>强调一下别人所担心的内容，即他们认为你不尊重他们或你的用意是恶毒的。</li>\n<li>明确你是尊重他们的，并澄清你的真实目的。</li>\n</ul>\n<h2 id=\"CRIB\"><a href=\"#CRIB\" class=\"headerlink\" title=\"CRIB\"></a>CRIB</h2><ul>\n<li>承诺寻找共同目标</li>\n<li>确认策略背后的目的</li>\n<li>创造共同目的</li>\n<li>通过头脑风暴寻找新的策略</li>\n</ul>\n<h1 id=\"掌握自己的故事\"><a href=\"#掌握自己的故事\" class=\"headerlink\" title=\"掌握自己的故事\"></a>掌握自己的故事</h1><p>当你创造了情绪，你有两种选择：对它施加影响或者被他影响。</p>\n"},{"date":"2016-07-01T07:57:00.000Z","title":"《Principles》思维导航","description":"What you want? What is true? What to do about it?","_content":"\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:760px; height:760px;\" src=\"https://www.processon.com/embed/57762082e4b0eecdb18b6615\"></iframe>","source":"_posts/读书/《Principles》思维导航.md","raw":"date: 2016-07-01 15:57:00\ntitle: 《Principles》思维导航\ntags: \n- 读书笔记 \n- 原则 \ncategories: \n- 读书\ndescription: What you want? What is true? What to do about it?\n---\n\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:760px; height:760px;\" src=\"https://www.processon.com/embed/57762082e4b0eecdb18b6615\"></iframe>","slug":"读书/《Principles》思维导航","published":1,"updated":"2017-07-26T14:42:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksf006sq0d4sf1ljvtj","content":"<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:760px; height:760px;\" src=\"https://www.processon.com/embed/57762082e4b0eecdb18b6615\"></iframe>","site":{"data":{}},"excerpt":"","more":"<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:760px; height:760px;\" src=\"https://www.processon.com/embed/57762082e4b0eecdb18b6615\"></iframe>"},{"date":"2016-03-22T12:35:00.000Z","title":"《自我》读书笔记","_content":"\n# 自我测验\n\n用20个短句描述自己\n\n1. 20岁，男，170cm，65kg\n4. 良好的审美\n5. 聪明，学东西快\n6. 中国科大本科毕业\n7. 程序员\n8. 语言表达能力一般\n9. 爱打篮球\n10. 爱看书\n11. 腰有毛病\n12. 戴眼镜，头发黑，稍长\n13. 情商一般，不能很好的觉察到对方的情绪变化\n14. 德行好，让人感觉舒服\n15. 喜欢老爸，不喜欢老妈\n16. 家境一般\n17. 积极向上，有事业心\n18. 不善于做决定，有些犹豫\n19. 一家创业公司的CTO和创始人\n20. 不健谈，有时候会让人尴尬\n","source":"_posts/读书/《自我》读书笔记.md","raw":"date: 2016-03-22 20:35\ntags:\n- 读书笔记 \n- 心理 \n- 自我 \n- 自尊\ntitle: 《自我》读书笔记\ncategories: \n- 读书\n\n---\n\n# 自我测验\n\n用20个短句描述自己\n\n1. 20岁，男，170cm，65kg\n4. 良好的审美\n5. 聪明，学东西快\n6. 中国科大本科毕业\n7. 程序员\n8. 语言表达能力一般\n9. 爱打篮球\n10. 爱看书\n11. 腰有毛病\n12. 戴眼镜，头发黑，稍长\n13. 情商一般，不能很好的觉察到对方的情绪变化\n14. 德行好，让人感觉舒服\n15. 喜欢老爸，不喜欢老妈\n16. 家境一般\n17. 积极向上，有事业心\n18. 不善于做决定，有些犹豫\n19. 一家创业公司的CTO和创始人\n20. 不健谈，有时候会让人尴尬\n","slug":"读书/《自我》读书笔记","published":1,"updated":"2017-07-26T14:42:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksj006xq0d4katybaxh","content":"<h1 id=\"自我测验\"><a href=\"#自我测验\" class=\"headerlink\" title=\"自我测验\"></a>自我测验</h1><p>用20个短句描述自己</p>\n<ol>\n<li>20岁，男，170cm，65kg</li>\n<li>良好的审美</li>\n<li>聪明，学东西快</li>\n<li>中国科大本科毕业</li>\n<li>程序员</li>\n<li>语言表达能力一般</li>\n<li>爱打篮球</li>\n<li>爱看书</li>\n<li>腰有毛病</li>\n<li>戴眼镜，头发黑，稍长</li>\n<li>情商一般，不能很好的觉察到对方的情绪变化</li>\n<li>德行好，让人感觉舒服</li>\n<li>喜欢老爸，不喜欢老妈</li>\n<li>家境一般</li>\n<li>积极向上，有事业心</li>\n<li>不善于做决定，有些犹豫</li>\n<li>一家创业公司的CTO和创始人</li>\n<li>不健谈，有时候会让人尴尬</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"自我测验\"><a href=\"#自我测验\" class=\"headerlink\" title=\"自我测验\"></a>自我测验</h1><p>用20个短句描述自己</p>\n<ol>\n<li>20岁，男，170cm，65kg</li>\n<li>良好的审美</li>\n<li>聪明，学东西快</li>\n<li>中国科大本科毕业</li>\n<li>程序员</li>\n<li>语言表达能力一般</li>\n<li>爱打篮球</li>\n<li>爱看书</li>\n<li>腰有毛病</li>\n<li>戴眼镜，头发黑，稍长</li>\n<li>情商一般，不能很好的觉察到对方的情绪变化</li>\n<li>德行好，让人感觉舒服</li>\n<li>喜欢老爸，不喜欢老妈</li>\n<li>家境一般</li>\n<li>积极向上，有事业心</li>\n<li>不善于做决定，有些犹豫</li>\n<li>一家创业公司的CTO和创始人</li>\n<li>不健谈，有时候会让人尴尬</li>\n</ol>\n"},{"date":"2016-03-14T16:00:00.000Z","title":"《淘宝技术这十年》读书笔记","_content":"\n\n\n>微博上有人说“好的架构是进化来的,不是设计来的”。的 确如此,其实还可以再加上一句“好的功能也是进化来的,不是 设计来的”。\n\n\n>现在摆在他们面前的问题是用什么办法把一个庞大的网站从PHP语言迁移到Java?而且要求在迁移的过程中,不停止服务,原来系统的bugfix 和功能改进不受影响。亲,你要是架构师,你怎么做?有人的答案是写一个翻译器,如同把中文翻译成英文一样,自动翻译。我只能说你这个想法太超前了,“too young, too simple, sometimesnaive”。当时没有,现在也没有人能做到。他们的大致方案是 给业务分模块,一个模块一个模块地渐进式替换。如用户模块, 老的member.taobao.com继续维护,不添加新功能,新功能在新 的模块上开发,跟老的模块共用一个数据库,开发完毕之后放到 不同的应用集群上,另开一个域名member1.taobao.com,同时再 替换老的功能,替换一个,就把老的模块上的功能关闭一个,逐 渐把用户引导到member1.taobao.com,等所有的功能都替换完之 后,关闭member.taobao.com上。从设计上来看,这个member1的二级域名应该是一个过渡状态,但我们把member域名的代码下线以后,发现很难把member1切换回member,因为有些地方把 链接写死了,于是后来很长时间里我们都是在用member1.taobao. com这样奇怪的域名。\n\n\n\n>其实在任何时候,开发语言本身都不是系统的瓶颈,业务带来的压力更多的存在于数据和存储方面。前面也说到,MySQL撑 不住之后换为Oracle,Oracle的存储一开始在本机上,后来在NAS 上,NAS撑不住了用EMC的SAN存储,再后来,Oracle的RAC撑 不住了,数据的存储方面就不得不考虑使用小型机。\n\n\n>说到商品详情,这个字段比较恐 怖,有人统计过,淘宝商品详情打印出来平均有5米长,在系统里其实放在哪里都不招人待见。笔者清楚地记得,我来淘宝之后担任项目经理做的第一个项目就是把商品详情从商品表中移出来。它最早与商品的价格、运费等信息放在一个表中,拖慢了整张表的查询速度,而很多时候查询商品信息是不需要查看详情的。于 是在2005年的时候,我把商品详情放在数据库的另外一张表中, 再往后,这个大字段被从数据库中请了出来,先是放入了缓存系 统,到现在是放进了文件系统TFS中。\n\n>在某个规模以下采用现有的商业解决方案,达 到某种规模之后,商业的解决方案无法满足,只有自己创造解 决方案了。\n","source":"_posts/读书/《淘宝技术这十年》读书笔记.md","raw":"date: 2016-03-15\ntitle: 《淘宝技术这十年》读书笔记\ntags: \n- 读书笔记 \n- 淘宝 \n- 构架 \n- 数据库\ncategories: \n- 读书\n---\n\n\n\n>微博上有人说“好的架构是进化来的,不是设计来的”。的 确如此,其实还可以再加上一句“好的功能也是进化来的,不是 设计来的”。\n\n\n>现在摆在他们面前的问题是用什么办法把一个庞大的网站从PHP语言迁移到Java?而且要求在迁移的过程中,不停止服务,原来系统的bugfix 和功能改进不受影响。亲,你要是架构师,你怎么做?有人的答案是写一个翻译器,如同把中文翻译成英文一样,自动翻译。我只能说你这个想法太超前了,“too young, too simple, sometimesnaive”。当时没有,现在也没有人能做到。他们的大致方案是 给业务分模块,一个模块一个模块地渐进式替换。如用户模块, 老的member.taobao.com继续维护,不添加新功能,新功能在新 的模块上开发,跟老的模块共用一个数据库,开发完毕之后放到 不同的应用集群上,另开一个域名member1.taobao.com,同时再 替换老的功能,替换一个,就把老的模块上的功能关闭一个,逐 渐把用户引导到member1.taobao.com,等所有的功能都替换完之 后,关闭member.taobao.com上。从设计上来看,这个member1的二级域名应该是一个过渡状态,但我们把member域名的代码下线以后,发现很难把member1切换回member,因为有些地方把 链接写死了,于是后来很长时间里我们都是在用member1.taobao. com这样奇怪的域名。\n\n\n\n>其实在任何时候,开发语言本身都不是系统的瓶颈,业务带来的压力更多的存在于数据和存储方面。前面也说到,MySQL撑 不住之后换为Oracle,Oracle的存储一开始在本机上,后来在NAS 上,NAS撑不住了用EMC的SAN存储,再后来,Oracle的RAC撑 不住了,数据的存储方面就不得不考虑使用小型机。\n\n\n>说到商品详情,这个字段比较恐 怖,有人统计过,淘宝商品详情打印出来平均有5米长,在系统里其实放在哪里都不招人待见。笔者清楚地记得,我来淘宝之后担任项目经理做的第一个项目就是把商品详情从商品表中移出来。它最早与商品的价格、运费等信息放在一个表中,拖慢了整张表的查询速度,而很多时候查询商品信息是不需要查看详情的。于 是在2005年的时候,我把商品详情放在数据库的另外一张表中, 再往后,这个大字段被从数据库中请了出来,先是放入了缓存系 统,到现在是放进了文件系统TFS中。\n\n>在某个规模以下采用现有的商业解决方案,达 到某种规模之后,商业的解决方案无法满足,只有自己创造解 决方案了。\n","slug":"读书/《淘宝技术这十年》读书笔记","published":1,"updated":"2017-07-26T14:42:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksk0070q0d49chhpkft","content":"<blockquote>\n<p>微博上有人说“好的架构是进化来的,不是设计来的”。的 确如此,其实还可以再加上一句“好的功能也是进化来的,不是 设计来的”。</p>\n<p>现在摆在他们面前的问题是用什么办法把一个庞大的网站从PHP语言迁移到Java?而且要求在迁移的过程中,不停止服务,原来系统的bugfix 和功能改进不受影响。亲,你要是架构师,你怎么做?有人的答案是写一个翻译器,如同把中文翻译成英文一样,自动翻译。我只能说你这个想法太超前了,“too young, too simple, sometimesnaive”。当时没有,现在也没有人能做到。他们的大致方案是 给业务分模块,一个模块一个模块地渐进式替换。如用户模块, 老的member.taobao.com继续维护,不添加新功能,新功能在新 的模块上开发,跟老的模块共用一个数据库,开发完毕之后放到 不同的应用集群上,另开一个域名member1.taobao.com,同时再 替换老的功能,替换一个,就把老的模块上的功能关闭一个,逐 渐把用户引导到member1.taobao.com,等所有的功能都替换完之 后,关闭member.taobao.com上。从设计上来看,这个member1的二级域名应该是一个过渡状态,但我们把member域名的代码下线以后,发现很难把member1切换回member,因为有些地方把 链接写死了,于是后来很长时间里我们都是在用member1.taobao. com这样奇怪的域名。</p>\n<p>其实在任何时候,开发语言本身都不是系统的瓶颈,业务带来的压力更多的存在于数据和存储方面。前面也说到,MySQL撑 不住之后换为Oracle,Oracle的存储一开始在本机上,后来在NAS 上,NAS撑不住了用EMC的SAN存储,再后来,Oracle的RAC撑 不住了,数据的存储方面就不得不考虑使用小型机。</p>\n<p>说到商品详情,这个字段比较恐 怖,有人统计过,淘宝商品详情打印出来平均有5米长,在系统里其实放在哪里都不招人待见。笔者清楚地记得,我来淘宝之后担任项目经理做的第一个项目就是把商品详情从商品表中移出来。它最早与商品的价格、运费等信息放在一个表中,拖慢了整张表的查询速度,而很多时候查询商品信息是不需要查看详情的。于 是在2005年的时候,我把商品详情放在数据库的另外一张表中, 再往后,这个大字段被从数据库中请了出来,先是放入了缓存系 统,到现在是放进了文件系统TFS中。</p>\n<p>在某个规模以下采用现有的商业解决方案,达 到某种规模之后,商业的解决方案无法满足,只有自己创造解 决方案了。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>微博上有人说“好的架构是进化来的,不是设计来的”。的 确如此,其实还可以再加上一句“好的功能也是进化来的,不是 设计来的”。</p>\n<p>现在摆在他们面前的问题是用什么办法把一个庞大的网站从PHP语言迁移到Java?而且要求在迁移的过程中,不停止服务,原来系统的bugfix 和功能改进不受影响。亲,你要是架构师,你怎么做?有人的答案是写一个翻译器,如同把中文翻译成英文一样,自动翻译。我只能说你这个想法太超前了,“too young, too simple, sometimesnaive”。当时没有,现在也没有人能做到。他们的大致方案是 给业务分模块,一个模块一个模块地渐进式替换。如用户模块, 老的member.taobao.com继续维护,不添加新功能,新功能在新 的模块上开发,跟老的模块共用一个数据库,开发完毕之后放到 不同的应用集群上,另开一个域名member1.taobao.com,同时再 替换老的功能,替换一个,就把老的模块上的功能关闭一个,逐 渐把用户引导到member1.taobao.com,等所有的功能都替换完之 后,关闭member.taobao.com上。从设计上来看,这个member1的二级域名应该是一个过渡状态,但我们把member域名的代码下线以后,发现很难把member1切换回member,因为有些地方把 链接写死了,于是后来很长时间里我们都是在用member1.taobao. com这样奇怪的域名。</p>\n<p>其实在任何时候,开发语言本身都不是系统的瓶颈,业务带来的压力更多的存在于数据和存储方面。前面也说到,MySQL撑 不住之后换为Oracle,Oracle的存储一开始在本机上,后来在NAS 上,NAS撑不住了用EMC的SAN存储,再后来,Oracle的RAC撑 不住了,数据的存储方面就不得不考虑使用小型机。</p>\n<p>说到商品详情,这个字段比较恐 怖,有人统计过,淘宝商品详情打印出来平均有5米长,在系统里其实放在哪里都不招人待见。笔者清楚地记得,我来淘宝之后担任项目经理做的第一个项目就是把商品详情从商品表中移出来。它最早与商品的价格、运费等信息放在一个表中,拖慢了整张表的查询速度,而很多时候查询商品信息是不需要查看详情的。于 是在2005年的时候,我把商品详情放在数据库的另外一张表中, 再往后,这个大字段被从数据库中请了出来,先是放入了缓存系 统,到现在是放进了文件系统TFS中。</p>\n<p>在某个规模以下采用现有的商业解决方案,达 到某种规模之后,商业的解决方案无法满足,只有自己创造解 决方案了。</p>\n</blockquote>\n"},{"title":"《人类简史》读书笔记","date":"2015-12-05T08:52:00.000Z","description":"同时读过《全球通史》和《人类简史》，各有千秋。《人类简史》对历史细节刻画较少，而更注重历史中影响人类进程的关键节点；同时，更多了添加了自己对历史的见解和思考，更趋向于哲学层面，更引人深思。","_content":"\n《人类简史》的信息简要可参考豆瓣链接：<http://book.douban.com/subject/25985021/>。  \n本文只转述一下我觉得有意思的点。\n\n## 人类，一种没什么特别的物种\n\n\n### 人类的亲戚哪去了？\n\n人类（Human）已经习惯以为自己是唯一的“人”，因为在过去1万年间，“人种”确实只剩下智人一种。然而，“Human”一词的真正意思是“属于人属的动物”，而在过去，这可不只是“智人”而已。曾经，我们“人种”还有很多兄弟姐妹，而且他们并没有什么文明。\n\n\n### 大大大？脑？\n\n对于60公斤的哺乳动物来说，平均脑容量是200立方厘米。但现代的智人，平均脑容量是1200~1400立方厘米。（这让我想起我有一位高中同学，我觉得他至少有1600，然并卵，好像并没有得到与容量成正比的智商。我的高中同学们请严肃点，我们是在讨论历史）\n\n人类深深迷恋着自己的智能，在很长一段时间类，人类的脑容量是不断增大的。但是，我们并没发展成为叮当猫那样的比例。因为，庞大的大脑同时也是一个庞大的负担：它的结构脆弱，容易损坏；并且还消耗着巨大的能量，高达25%。\n\n你或许会说，人类的大脑要是再大一点，智商再高一点，或许现在已经可以去火星上居住了。但是，这是现在。在漫长的200万年的历史里，人类比动物高明一点的也许就是能做一些刀具和木叉，强大的运动能力仍然是生存的必需品。\n\n### 直立行走\n\n人类还有另一个值得一说的特点：独立行走。\n\n人类经过数百万年才形成了现在这种方便直立行走的骨架。这其实是一个非常大的挑战：本来骨架调整成直立就很难（会带来各种背痛、脊椎僵硬等问题），还要支撑这么大一个大脑。饿。。。\n\n独立行走有还一个非常大的缺点，然而可能就是这个缺点，给人类带来了成为食物链国王的可能性。直立行走使的人类的盆腔变小，于是产道也变小，但头颅却与来越大（为妈妈和其它女性朋友感到遗憾）。为了解决这一矛盾，人类只能提前分娩。这也就是为啥小牛生下来就能满地跑而婴儿却。。。。不说也罢。独自一人的母亲加上需要照顾的孩子，显然是无法生存的。于是，只能寄托于家庭成员和群落邻居。这也，造就了人类突出的社交技巧。\n\n你会发现，**世界并没有想象中的那么倾向于人类。人类也只是在不停的解决自己问题的同时，“被”发展到了现在的这个样子。**\n\n\n### 99%的时间里我们只是食物链中间的物种\n\n你知道吗，我看到这一节的时候，脑部了一串儿台词：\n\n“你丫祖祖辈辈都是捡破烂儿的，血液里都是破烂儿的血，没有教养、没有底蕴，凭借一单生意成了暴发户，现在却在我这里撒野。我祖上可是大清重臣，直隶总督，万人之上，赶紧给我滚得远远儿的。”\n\n其实，这里描述的像极了人类的发展史。在漫长的几百万年里，人类只是整个生物链中级的物种。他们一直担心受到肉食动物的威胁，很少捕杀大型动物，主要以采集植物和猎杀小型动物为生。有证据显示，人类经常需要在大型动物、中性动物分完了好吃的肉之后，才能靠近被猎杀动物的遗体，分一点脑髓（大概是其他动物不好取出的部分）。\n\n但是，你有没有想过一个问题：**到底为什么，长达几百万年里，人类都生活在食物链中层，却在近万年里，像是踏上高速公路一样，一跃成为世界主宰？**\n\n这就是“发明工具”的能力。从海洋里的一个分子，到现在世界上成千上万种不同的物种；他们每一次的进化，都是对新环境的适应。但是，**依靠自然选择和基因突变的进化，太慢了**！\n\n生物从海洋到适应陆地环境，用了几千万年；从陆生到长出翅膀飞翔，又要几千万年；穿山甲要长出坚固而锋利的铠甲，至少几百万年。\n\n反观人类，发明汽车、轮船、航天飞机、通信技术，让人类有更广阔的活动空间和秒杀任何物种的沟通能力。而这一切，仅仅在几千年内就完成了。并且，**当人类已经踏上了高速公路，便没有任何物种可以从外面干扰，除了人类自己发生车祸**。\n\n\n\n\n\n## 农业革命\n\n未完待续","source":"_posts/读书/人类，一个没什么特别的物种.md","raw":"title: 《人类简史》读书笔记\ndate: 2015-12-05 16:52\ntags: \n- 读书笔记\n- 人类简史\n- 历史\n- 大脑\n- 食物链\n- 农业革命\ncategories: \n- 读书\ndescription: 同时读过《全球通史》和《人类简史》，各有千秋。《人类简史》对历史细节刻画较少，而更注重历史中影响人类进程的关键节点；同时，更多了添加了自己对历史的见解和思考，更趋向于哲学层面，更引人深思。\n---\n\n《人类简史》的信息简要可参考豆瓣链接：<http://book.douban.com/subject/25985021/>。  \n本文只转述一下我觉得有意思的点。\n\n## 人类，一种没什么特别的物种\n\n\n### 人类的亲戚哪去了？\n\n人类（Human）已经习惯以为自己是唯一的“人”，因为在过去1万年间，“人种”确实只剩下智人一种。然而，“Human”一词的真正意思是“属于人属的动物”，而在过去，这可不只是“智人”而已。曾经，我们“人种”还有很多兄弟姐妹，而且他们并没有什么文明。\n\n\n### 大大大？脑？\n\n对于60公斤的哺乳动物来说，平均脑容量是200立方厘米。但现代的智人，平均脑容量是1200~1400立方厘米。（这让我想起我有一位高中同学，我觉得他至少有1600，然并卵，好像并没有得到与容量成正比的智商。我的高中同学们请严肃点，我们是在讨论历史）\n\n人类深深迷恋着自己的智能，在很长一段时间类，人类的脑容量是不断增大的。但是，我们并没发展成为叮当猫那样的比例。因为，庞大的大脑同时也是一个庞大的负担：它的结构脆弱，容易损坏；并且还消耗着巨大的能量，高达25%。\n\n你或许会说，人类的大脑要是再大一点，智商再高一点，或许现在已经可以去火星上居住了。但是，这是现在。在漫长的200万年的历史里，人类比动物高明一点的也许就是能做一些刀具和木叉，强大的运动能力仍然是生存的必需品。\n\n### 直立行走\n\n人类还有另一个值得一说的特点：独立行走。\n\n人类经过数百万年才形成了现在这种方便直立行走的骨架。这其实是一个非常大的挑战：本来骨架调整成直立就很难（会带来各种背痛、脊椎僵硬等问题），还要支撑这么大一个大脑。饿。。。\n\n独立行走有还一个非常大的缺点，然而可能就是这个缺点，给人类带来了成为食物链国王的可能性。直立行走使的人类的盆腔变小，于是产道也变小，但头颅却与来越大（为妈妈和其它女性朋友感到遗憾）。为了解决这一矛盾，人类只能提前分娩。这也就是为啥小牛生下来就能满地跑而婴儿却。。。。不说也罢。独自一人的母亲加上需要照顾的孩子，显然是无法生存的。于是，只能寄托于家庭成员和群落邻居。这也，造就了人类突出的社交技巧。\n\n你会发现，**世界并没有想象中的那么倾向于人类。人类也只是在不停的解决自己问题的同时，“被”发展到了现在的这个样子。**\n\n\n### 99%的时间里我们只是食物链中间的物种\n\n你知道吗，我看到这一节的时候，脑部了一串儿台词：\n\n“你丫祖祖辈辈都是捡破烂儿的，血液里都是破烂儿的血，没有教养、没有底蕴，凭借一单生意成了暴发户，现在却在我这里撒野。我祖上可是大清重臣，直隶总督，万人之上，赶紧给我滚得远远儿的。”\n\n其实，这里描述的像极了人类的发展史。在漫长的几百万年里，人类只是整个生物链中级的物种。他们一直担心受到肉食动物的威胁，很少捕杀大型动物，主要以采集植物和猎杀小型动物为生。有证据显示，人类经常需要在大型动物、中性动物分完了好吃的肉之后，才能靠近被猎杀动物的遗体，分一点脑髓（大概是其他动物不好取出的部分）。\n\n但是，你有没有想过一个问题：**到底为什么，长达几百万年里，人类都生活在食物链中层，却在近万年里，像是踏上高速公路一样，一跃成为世界主宰？**\n\n这就是“发明工具”的能力。从海洋里的一个分子，到现在世界上成千上万种不同的物种；他们每一次的进化，都是对新环境的适应。但是，**依靠自然选择和基因突变的进化，太慢了**！\n\n生物从海洋到适应陆地环境，用了几千万年；从陆生到长出翅膀飞翔，又要几千万年；穿山甲要长出坚固而锋利的铠甲，至少几百万年。\n\n反观人类，发明汽车、轮船、航天飞机、通信技术，让人类有更广阔的活动空间和秒杀任何物种的沟通能力。而这一切，仅仅在几千年内就完成了。并且，**当人类已经踏上了高速公路，便没有任何物种可以从外面干扰，除了人类自己发生车祸**。\n\n\n\n\n\n## 农业革命\n\n未完待续","slug":"读书/人类，一个没什么特别的物种","published":1,"updated":"2017-07-26T14:41:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksl0073q0d4cnbg4kh9","content":"<p>《人类简史》的信息简要可参考豆瓣链接：<a href=\"http://book.douban.com/subject/25985021/\" target=\"_blank\" rel=\"external\">http://book.douban.com/subject/25985021/</a>。<br>本文只转述一下我觉得有意思的点。</p>\n<h2 id=\"人类，一种没什么特别的物种\"><a href=\"#人类，一种没什么特别的物种\" class=\"headerlink\" title=\"人类，一种没什么特别的物种\"></a>人类，一种没什么特别的物种</h2><h3 id=\"人类的亲戚哪去了？\"><a href=\"#人类的亲戚哪去了？\" class=\"headerlink\" title=\"人类的亲戚哪去了？\"></a>人类的亲戚哪去了？</h3><p>人类（Human）已经习惯以为自己是唯一的“人”，因为在过去1万年间，“人种”确实只剩下智人一种。然而，“Human”一词的真正意思是“属于人属的动物”，而在过去，这可不只是“智人”而已。曾经，我们“人种”还有很多兄弟姐妹，而且他们并没有什么文明。</p>\n<h3 id=\"大大大？脑？\"><a href=\"#大大大？脑？\" class=\"headerlink\" title=\"大大大？脑？\"></a>大大大？脑？</h3><p>对于60公斤的哺乳动物来说，平均脑容量是200立方厘米。但现代的智人，平均脑容量是1200~1400立方厘米。（这让我想起我有一位高中同学，我觉得他至少有1600，然并卵，好像并没有得到与容量成正比的智商。我的高中同学们请严肃点，我们是在讨论历史）</p>\n<p>人类深深迷恋着自己的智能，在很长一段时间类，人类的脑容量是不断增大的。但是，我们并没发展成为叮当猫那样的比例。因为，庞大的大脑同时也是一个庞大的负担：它的结构脆弱，容易损坏；并且还消耗着巨大的能量，高达25%。</p>\n<p>你或许会说，人类的大脑要是再大一点，智商再高一点，或许现在已经可以去火星上居住了。但是，这是现在。在漫长的200万年的历史里，人类比动物高明一点的也许就是能做一些刀具和木叉，强大的运动能力仍然是生存的必需品。</p>\n<h3 id=\"直立行走\"><a href=\"#直立行走\" class=\"headerlink\" title=\"直立行走\"></a>直立行走</h3><p>人类还有另一个值得一说的特点：独立行走。</p>\n<p>人类经过数百万年才形成了现在这种方便直立行走的骨架。这其实是一个非常大的挑战：本来骨架调整成直立就很难（会带来各种背痛、脊椎僵硬等问题），还要支撑这么大一个大脑。饿。。。</p>\n<p>独立行走有还一个非常大的缺点，然而可能就是这个缺点，给人类带来了成为食物链国王的可能性。直立行走使的人类的盆腔变小，于是产道也变小，但头颅却与来越大（为妈妈和其它女性朋友感到遗憾）。为了解决这一矛盾，人类只能提前分娩。这也就是为啥小牛生下来就能满地跑而婴儿却。。。。不说也罢。独自一人的母亲加上需要照顾的孩子，显然是无法生存的。于是，只能寄托于家庭成员和群落邻居。这也，造就了人类突出的社交技巧。</p>\n<p>你会发现，<strong>世界并没有想象中的那么倾向于人类。人类也只是在不停的解决自己问题的同时，“被”发展到了现在的这个样子。</strong></p>\n<h3 id=\"99-的时间里我们只是食物链中间的物种\"><a href=\"#99-的时间里我们只是食物链中间的物种\" class=\"headerlink\" title=\"99%的时间里我们只是食物链中间的物种\"></a>99%的时间里我们只是食物链中间的物种</h3><p>你知道吗，我看到这一节的时候，脑部了一串儿台词：</p>\n<p>“你丫祖祖辈辈都是捡破烂儿的，血液里都是破烂儿的血，没有教养、没有底蕴，凭借一单生意成了暴发户，现在却在我这里撒野。我祖上可是大清重臣，直隶总督，万人之上，赶紧给我滚得远远儿的。”</p>\n<p>其实，这里描述的像极了人类的发展史。在漫长的几百万年里，人类只是整个生物链中级的物种。他们一直担心受到肉食动物的威胁，很少捕杀大型动物，主要以采集植物和猎杀小型动物为生。有证据显示，人类经常需要在大型动物、中性动物分完了好吃的肉之后，才能靠近被猎杀动物的遗体，分一点脑髓（大概是其他动物不好取出的部分）。</p>\n<p>但是，你有没有想过一个问题：<strong>到底为什么，长达几百万年里，人类都生活在食物链中层，却在近万年里，像是踏上高速公路一样，一跃成为世界主宰？</strong></p>\n<p>这就是“发明工具”的能力。从海洋里的一个分子，到现在世界上成千上万种不同的物种；他们每一次的进化，都是对新环境的适应。但是，<strong>依靠自然选择和基因突变的进化，太慢了</strong>！</p>\n<p>生物从海洋到适应陆地环境，用了几千万年；从陆生到长出翅膀飞翔，又要几千万年；穿山甲要长出坚固而锋利的铠甲，至少几百万年。</p>\n<p>反观人类，发明汽车、轮船、航天飞机、通信技术，让人类有更广阔的活动空间和秒杀任何物种的沟通能力。而这一切，仅仅在几千年内就完成了。并且，<strong>当人类已经踏上了高速公路，便没有任何物种可以从外面干扰，除了人类自己发生车祸</strong>。</p>\n<h2 id=\"农业革命\"><a href=\"#农业革命\" class=\"headerlink\" title=\"农业革命\"></a>农业革命</h2><p>未完待续</p>\n","site":{"data":{}},"excerpt":"","more":"<p>《人类简史》的信息简要可参考豆瓣链接：<a href=\"http://book.douban.com/subject/25985021/\" target=\"_blank\" rel=\"external\">http://book.douban.com/subject/25985021/</a>。<br>本文只转述一下我觉得有意思的点。</p>\n<h2 id=\"人类，一种没什么特别的物种\"><a href=\"#人类，一种没什么特别的物种\" class=\"headerlink\" title=\"人类，一种没什么特别的物种\"></a>人类，一种没什么特别的物种</h2><h3 id=\"人类的亲戚哪去了？\"><a href=\"#人类的亲戚哪去了？\" class=\"headerlink\" title=\"人类的亲戚哪去了？\"></a>人类的亲戚哪去了？</h3><p>人类（Human）已经习惯以为自己是唯一的“人”，因为在过去1万年间，“人种”确实只剩下智人一种。然而，“Human”一词的真正意思是“属于人属的动物”，而在过去，这可不只是“智人”而已。曾经，我们“人种”还有很多兄弟姐妹，而且他们并没有什么文明。</p>\n<h3 id=\"大大大？脑？\"><a href=\"#大大大？脑？\" class=\"headerlink\" title=\"大大大？脑？\"></a>大大大？脑？</h3><p>对于60公斤的哺乳动物来说，平均脑容量是200立方厘米。但现代的智人，平均脑容量是1200~1400立方厘米。（这让我想起我有一位高中同学，我觉得他至少有1600，然并卵，好像并没有得到与容量成正比的智商。我的高中同学们请严肃点，我们是在讨论历史）</p>\n<p>人类深深迷恋着自己的智能，在很长一段时间类，人类的脑容量是不断增大的。但是，我们并没发展成为叮当猫那样的比例。因为，庞大的大脑同时也是一个庞大的负担：它的结构脆弱，容易损坏；并且还消耗着巨大的能量，高达25%。</p>\n<p>你或许会说，人类的大脑要是再大一点，智商再高一点，或许现在已经可以去火星上居住了。但是，这是现在。在漫长的200万年的历史里，人类比动物高明一点的也许就是能做一些刀具和木叉，强大的运动能力仍然是生存的必需品。</p>\n<h3 id=\"直立行走\"><a href=\"#直立行走\" class=\"headerlink\" title=\"直立行走\"></a>直立行走</h3><p>人类还有另一个值得一说的特点：独立行走。</p>\n<p>人类经过数百万年才形成了现在这种方便直立行走的骨架。这其实是一个非常大的挑战：本来骨架调整成直立就很难（会带来各种背痛、脊椎僵硬等问题），还要支撑这么大一个大脑。饿。。。</p>\n<p>独立行走有还一个非常大的缺点，然而可能就是这个缺点，给人类带来了成为食物链国王的可能性。直立行走使的人类的盆腔变小，于是产道也变小，但头颅却与来越大（为妈妈和其它女性朋友感到遗憾）。为了解决这一矛盾，人类只能提前分娩。这也就是为啥小牛生下来就能满地跑而婴儿却。。。。不说也罢。独自一人的母亲加上需要照顾的孩子，显然是无法生存的。于是，只能寄托于家庭成员和群落邻居。这也，造就了人类突出的社交技巧。</p>\n<p>你会发现，<strong>世界并没有想象中的那么倾向于人类。人类也只是在不停的解决自己问题的同时，“被”发展到了现在的这个样子。</strong></p>\n<h3 id=\"99-的时间里我们只是食物链中间的物种\"><a href=\"#99-的时间里我们只是食物链中间的物种\" class=\"headerlink\" title=\"99%的时间里我们只是食物链中间的物种\"></a>99%的时间里我们只是食物链中间的物种</h3><p>你知道吗，我看到这一节的时候，脑部了一串儿台词：</p>\n<p>“你丫祖祖辈辈都是捡破烂儿的，血液里都是破烂儿的血，没有教养、没有底蕴，凭借一单生意成了暴发户，现在却在我这里撒野。我祖上可是大清重臣，直隶总督，万人之上，赶紧给我滚得远远儿的。”</p>\n<p>其实，这里描述的像极了人类的发展史。在漫长的几百万年里，人类只是整个生物链中级的物种。他们一直担心受到肉食动物的威胁，很少捕杀大型动物，主要以采集植物和猎杀小型动物为生。有证据显示，人类经常需要在大型动物、中性动物分完了好吃的肉之后，才能靠近被猎杀动物的遗体，分一点脑髓（大概是其他动物不好取出的部分）。</p>\n<p>但是，你有没有想过一个问题：<strong>到底为什么，长达几百万年里，人类都生活在食物链中层，却在近万年里，像是踏上高速公路一样，一跃成为世界主宰？</strong></p>\n<p>这就是“发明工具”的能力。从海洋里的一个分子，到现在世界上成千上万种不同的物种；他们每一次的进化，都是对新环境的适应。但是，<strong>依靠自然选择和基因突变的进化，太慢了</strong>！</p>\n<p>生物从海洋到适应陆地环境，用了几千万年；从陆生到长出翅膀飞翔，又要几千万年；穿山甲要长出坚固而锋利的铠甲，至少几百万年。</p>\n<p>反观人类，发明汽车、轮船、航天飞机、通信技术，让人类有更广阔的活动空间和秒杀任何物种的沟通能力。而这一切，仅仅在几千年内就完成了。并且，<strong>当人类已经踏上了高速公路，便没有任何物种可以从外面干扰，除了人类自己发生车祸</strong>。</p>\n<h2 id=\"农业革命\"><a href=\"#农业革命\" class=\"headerlink\" title=\"农业革命\"></a>农业革命</h2><p>未完待续</p>\n"},{"title":"失去的二十年-日本经济长期停滞的真正原因","_content":"\n(待补充)\n\n\n\n\n","source":"_posts/读书/失去的二十年.md","raw":"title: 失去的二十年-日本经济长期停滞的真正原因\ntags: \n- 日本 \n- 金融危机 \n- 经济 \n- 历史 \n- 读书笔记\ncategories: \n- 读书\n---\n\n(待补充)\n\n\n\n\n","slug":"读书/失去的二十年","published":1,"date":"2016-03-03T02:11:45.000Z","updated":"2017-07-26T14:40:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksm0077q0d4bx70ekqj","content":"<p>(待补充)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>(待补充)</p>\n"},{"date":"2014-08-11T01:14:00.000Z","title":"《如何阅读一本书》读书笔记","description":"每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，你的责任就是要找出这个骨架。一本书出现在你面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。你用不着揭开它的外衣或是撕去它的肌肉，才能得到在柔软表皮下的那套骨架。但是你一定要用一双X光般的透视眼来看这本书，因为那是你了解一本书、掌握其骨架的基础。","_content":"\n# 厌书\n\n我亲爱的妈妈是小学教师, 我也像大多数老师的孩子一样有着不错的成绩、 傲娇的姿态、顽皮的性格.\n**可我一点都不爱看书.**\n虽然我学习很好, 但我几乎不看除了课本以外的书。 倒不是人教版的课本有多么优秀, 只是我太讨厌书。\n\n我对书籍如此忽视的态度, 一直很难找到一个准确的解释. \n如果实在要深究, 可能是因为, **那时资源很有限的小镇小学, 支撑不起小伙伴儿们丰富的兴趣**. 我隐约记得几个爱看书的小伙伴, 有一个爱军事政治武器, 还有两个爱武侠. 还有一些我也不知道他们\"爱\"看啥, 因为他们总拿着《故事会》, 《知音》之类, 这可能是他们仅有的可以容易拿到的书籍资源. \n**对饥饿的人, 很难判断他对食物的喜好**. \n而这些“不正统”的书籍, 不会得到任何官方的支持, 甚至会被打上“无用、低俗”的标签. 而学习方面, 我一直是很“听(官方的)话”的.  \n作文书是唯一被官方认证的一类，而它，实在**太**乏味。\n\n# 爱书\n解释可能有些牵强，但事实是，一直到上大学，我读过的课外书两个手都可以数过来。\n一般，20来岁的人便开始要思考“我是谁”，“我从哪儿来”，“我要到哪儿去”之类的哲学问题了。我一边思考这些问题，顺便吃喝玩乐的荒度了两年最宝贵得时间。突然有一天，我发现，身边的人都好像都知道自己在做什么，只有我在茫然踱步。于是，我问自己：是不是该起床了？\n\n庆幸的是，我有这样两个朋友：\n\n* 一个很会生活，带我学会欣赏交响乐和路边的风景。\n* 一个很有思想，让我认识更有意义却与众不同的生活方式；更重要的，让我懂得：**在迷茫的时候，看书是最快能让你平静下来的方式，也是从来都不会错的指路牌**。\n\n\n迟到的醒悟如老来得子，越发珍贵。但在尝试阅读的初期我遇到各种问题：比如很难有毅力看完一整本书，总是半途而废；比如看完了却不知道作者在讲什么；也有时候看完了才发现这并不是我想看的；等等。。。\n\n直到，我遇见了她。。。\n\n\n# 如何阅读一本书\n<table>\n<tr>\n<td align=\"center\" >\n\n<a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\"><img src=\"http://ec8.images-amazon.com/images/I/51r2R9-QW3L._SL500_AA300_.jpg\" width=\"100\"><br/><p align=\"center\">如何阅读一本书<br/>（在线试读）</p></a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=milo2012-23&l=as2&o=28&a=B00FEEB7JK\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />\n\n</td>\n<td>\n<b>简介：</b><br/>\n每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。\n</td>\n</tr>\n</table>\n\n\n\n这本书有两位作者：\n\n* 莫提默·J.艾德勒（1902－2001）以学者、教育家、编辑人等多重面貌享有盛名。除了写作《如何阅读一本书》外，以主编《西方世界的经典人》并担任1974年第十五版《大英百科全书》的编辑相异而闻名于世。\n\n* 查尔斯·范多伦（1926－）先曾任美国哥伦比亚大学教授。后因故离任，和艾德勒一起工作。一方面襄助艾德勒编辑《大英百科全书》，一方面将本书1940年初版内容大幅度增补改写。\n\n\n**莫提默·J.艾德勒**（\nMortimer J. Adler） 出生于纽约的一个犹太家庭，14岁辍学为太阳报送报。但他不满足于此，立志要当一名记者。为了这个梦想，他上了哥伦比亚大学的夜校。在这里，他受到柏拉图、亚里斯多德、托马斯·阿奎那等哲学家的影响，立志成为一名哲学家。在奖学金的帮助下，他非常轻松的完成了哲学学位的主要课程。但是，如中国80年代品学兼优的孩子一样，艾德勒也特别不擅长体育，以致挂掉了必修的游泳课，没有拿到学位证书。。。⊙﹏⊙b汗。他希望能在哥伦比亚大学注册一门课程，却遭到很多同事的白眼：我不承认你的学历。在他的不屑努力和美国好同事 [John Erskine](http://en.wikipedia.org/wiki/John_Erskine_(educator)) 的帮助下，最终还是做到了。\n[John Erskine](http://en.wikipedia.org/wiki/John_Erskine_(educator))，作为“[Great Books of the Western World](http://en.wikipedia.org/wiki/Great_Books_of_the_Western_World)”的最早发起人，把Adler带入了西方经典书籍的世界，也用他先进的思想和出色的人格魅力把Adler纳入了伙。随后，他一直致力于把西方经典带给更多年轻人和与之相关的教育方面的改革。\n\n## 为何写这本书\n一个有责任感的教育家、学者，总是走在社会的前面，先天下之忧而忧。在书中，作者也对当前教育中对阅读能力的忽视和常人在阅读技巧方面的拙劣表示了忧虑。\n\nAdler一生的努力都致力于改革教育和强调经典书籍在大学人文教育方面的重要地位。\n> Adler himself later said that he would like to see the studies of the classics, much of the undergraduate B.A. curriculum, brought down into the high school level. And that undergraduates would be then freed (and intellectually better prepared) to focus on their own area of specialization, their own career field.\n> --《Mortimer J. Adler - NNDB》\n\n<a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\">《如何阅读一本书》</a>，便是他一生事业的自然产物。\n\n# 阅读的四个层次\n\n《如何阅读一本书》（以下简称《如》）把阅读分为清晰的四个层次，循序渐进。全书便以此为骨架展开。\n## 第一层次：基础阅读\n\n**即你的语言水平能明白作者在说啥。**\n这方面就不用多讲了。\n\n\n## 第二层次：检视阅读\n检视阅读，即在很短时间内，了解作者表达的重点。从表面上观察这本书，能够回答下面几个问题：**这本书在谈什么，他由哪几部分构成，构架如何。**\n\n这非常有别于普通人常用的阅读方式，**表现出更多的主动性：是你在追求什么，而不仅是它告诉你什么**。所以，也需要不同的技巧。作者给了非常实用的建议：先从包装，作者简介，引言，目录等信息入手；然后决定要不要流畅快速的扫一下内容，偶尔停下来仔细读几段；书本的最后一节往往是主旨的提炼，切不可错过。\n\n这是一个从模糊到精确的渐进方式，它的优势体现在：**如何这本书显然不是你想要的，能立马停下，不至于浪费时间**。\n\n我个人经常购买电子书，因为基本可以在免费的“试读版”里完成“检视阅读”，以免浪费。\n\n## 第三层次：分析阅读\n分析阅读，**就是在无限的时间里，全盘、完整、优质的阅读**。\n作为前提，你最好能知道这是一本什么类别的书，因为不同类别的书结构和表达方式都千差万别。它需要达到的条件是：\n**能将书的重要章节归纳出来，理解他们如何按照顺序——可能是事情发展顺序也可能是逻辑推理顺序——串联起来，判断作者的主旨，并对这个主旨做自己的评价。**\n\n\n这一部分是全书篇幅最多的部分，描述了非常多实用的阅读技巧方法，引用了大量的经典书籍，涵盖了做笔记技巧，主动阅读的核心，快速为书籍分类、分优劣，定位关键词，归纳主旨，如何正确的评判一本书等很多方面。可以说是阅读指导方面的百科全书。\n\n## 第四层次：主题阅读\n主题阅读，是阅读的最高层次，\n\n\n----------\n\n\n**通常需要阅读与一本书同类的很多书，列举出其中的相关性，并从中构架出任何一单本书都没提炼的新主题**。\n对于一个特定的问题，绝不是一本书就足够的，但哪些书于这个主题相关呢？换个角度讲，茫茫书海，怎样才能找到对的信息？没错，在一大堆书单里，你需要快速选择出你需要的，又需要回到“检视阅读”。（作为一个程序员，我简直惊呆了！原来不只代码里有如此美妙的递归）\n\n更多的技巧，在这里无法一一列数，仅摘抄一段大家体味：\n\n> 能够熟练检视阅读的读者，不但能在心中将书籍分类，而且能对内容有一个粗浅的了解。他也会用非常短的时间就发现，这本书谈的内容对他研究的主题到底重不重要。这时他可能还不清楚哪些资料才是最重要的—这可能要等到读下本书的时候才能发现。但是有两件事至少他已经知道其中之一。那就是他不是发现这本书必须回头再读一次，以获得启发，便是知道不论这本书多有趣又多丰富，却毫无启发性，因此不值得重新再读。\n\n>这个忠告通常会被忽略是有原因的。我们说过，在分析阅读中，技巧熟练的阅读者可以同时用上许多技巧，而初学者却必须把步骤分开来。同样的，主题阅读的准备工作—先检视书目上所有的书，在开始做分析阅读之前先检视一遍—可以在做分析阅读时一并进行。但我们不相信任何读者能做到这一点，就算技巧再熟练也不行。这也是许多年轻研究生所犯的毛病。他们自以为两个步骤可以融合为一个，结果阅读任何书都用同样的速度，对某些特殊的作品来说不是太快就是太慢，但无论如何，对他们阅读的大部分书来说，这样的方法都是不对的。\n\n> --《如何阅读一本书》\n\n\n\n# 结语\n\n作为百科全书的编者，作者在《如》中展现出惊人的阅读广度，在历史、经济、科学等各个行业的经典书籍都有深刻的理解。我想，如果有外星人想要了解人类近300年的成就，只需这本书和它的引用书籍奉上即可：第一本用来教会外星人怎么读，剩下的则把人类精华呈现给它。\n\n\n最后：\n\n> 所谓的艺术或技巧，只属于那些能养成习惯，并且能依照规则来运作的人。\n> --《如何阅读一本书》\n\n与君共勉。\n\n# 引用\n\n1. [The Beginnings of the Great Books Movement at Columbia by John Van Doren](http://www.columbia.edu/cu/alumni/Magazine/Winter2001/greatBooks.html)\n2. [Mortimer J. Adler - Wikipedia, the free encyclopedia](http://en.wikipedia.org/wiki/Mortimer_J._Adler)\n3. [Mortimer J. Adler - NNDB ](http://www.nndb.com/people/593/000089326/)\n\n> Written with [StackEdit](https://stackedit.io/).","source":"_posts/读书/如何阅读一本书.md","raw":"date:  2014-08-11 09:14\ntitle: 《如何阅读一本书》读书笔记\ntags: \n- 如何阅读一本书\n- 检视阅读\n- 分析阅读\n- 主题阅读\n- 读书笔记\ncategories: \n- 读书\ndescription: 每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，你的责任就是要找出这个骨架。一本书出现在你面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。你用不着揭开它的外衣或是撕去它的肌肉，才能得到在柔软表皮下的那套骨架。但是你一定要用一双X光般的透视眼来看这本书，因为那是你了解一本书、掌握其骨架的基础。\n---\n\n# 厌书\n\n我亲爱的妈妈是小学教师, 我也像大多数老师的孩子一样有着不错的成绩、 傲娇的姿态、顽皮的性格.\n**可我一点都不爱看书.**\n虽然我学习很好, 但我几乎不看除了课本以外的书。 倒不是人教版的课本有多么优秀, 只是我太讨厌书。\n\n我对书籍如此忽视的态度, 一直很难找到一个准确的解释. \n如果实在要深究, 可能是因为, **那时资源很有限的小镇小学, 支撑不起小伙伴儿们丰富的兴趣**. 我隐约记得几个爱看书的小伙伴, 有一个爱军事政治武器, 还有两个爱武侠. 还有一些我也不知道他们\"爱\"看啥, 因为他们总拿着《故事会》, 《知音》之类, 这可能是他们仅有的可以容易拿到的书籍资源. \n**对饥饿的人, 很难判断他对食物的喜好**. \n而这些“不正统”的书籍, 不会得到任何官方的支持, 甚至会被打上“无用、低俗”的标签. 而学习方面, 我一直是很“听(官方的)话”的.  \n作文书是唯一被官方认证的一类，而它，实在**太**乏味。\n\n# 爱书\n解释可能有些牵强，但事实是，一直到上大学，我读过的课外书两个手都可以数过来。\n一般，20来岁的人便开始要思考“我是谁”，“我从哪儿来”，“我要到哪儿去”之类的哲学问题了。我一边思考这些问题，顺便吃喝玩乐的荒度了两年最宝贵得时间。突然有一天，我发现，身边的人都好像都知道自己在做什么，只有我在茫然踱步。于是，我问自己：是不是该起床了？\n\n庆幸的是，我有这样两个朋友：\n\n* 一个很会生活，带我学会欣赏交响乐和路边的风景。\n* 一个很有思想，让我认识更有意义却与众不同的生活方式；更重要的，让我懂得：**在迷茫的时候，看书是最快能让你平静下来的方式，也是从来都不会错的指路牌**。\n\n\n迟到的醒悟如老来得子，越发珍贵。但在尝试阅读的初期我遇到各种问题：比如很难有毅力看完一整本书，总是半途而废；比如看完了却不知道作者在讲什么；也有时候看完了才发现这并不是我想看的；等等。。。\n\n直到，我遇见了她。。。\n\n\n# 如何阅读一本书\n<table>\n<tr>\n<td align=\"center\" >\n\n<a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\"><img src=\"http://ec8.images-amazon.com/images/I/51r2R9-QW3L._SL500_AA300_.jpg\" width=\"100\"><br/><p align=\"center\">如何阅读一本书<br/>（在线试读）</p></a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=milo2012-23&l=as2&o=28&a=B00FEEB7JK\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />\n\n</td>\n<td>\n<b>简介：</b><br/>\n每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。\n</td>\n</tr>\n</table>\n\n\n\n这本书有两位作者：\n\n* 莫提默·J.艾德勒（1902－2001）以学者、教育家、编辑人等多重面貌享有盛名。除了写作《如何阅读一本书》外，以主编《西方世界的经典人》并担任1974年第十五版《大英百科全书》的编辑相异而闻名于世。\n\n* 查尔斯·范多伦（1926－）先曾任美国哥伦比亚大学教授。后因故离任，和艾德勒一起工作。一方面襄助艾德勒编辑《大英百科全书》，一方面将本书1940年初版内容大幅度增补改写。\n\n\n**莫提默·J.艾德勒**（\nMortimer J. Adler） 出生于纽约的一个犹太家庭，14岁辍学为太阳报送报。但他不满足于此，立志要当一名记者。为了这个梦想，他上了哥伦比亚大学的夜校。在这里，他受到柏拉图、亚里斯多德、托马斯·阿奎那等哲学家的影响，立志成为一名哲学家。在奖学金的帮助下，他非常轻松的完成了哲学学位的主要课程。但是，如中国80年代品学兼优的孩子一样，艾德勒也特别不擅长体育，以致挂掉了必修的游泳课，没有拿到学位证书。。。⊙﹏⊙b汗。他希望能在哥伦比亚大学注册一门课程，却遭到很多同事的白眼：我不承认你的学历。在他的不屑努力和美国好同事 [John Erskine](http://en.wikipedia.org/wiki/John_Erskine_(educator)) 的帮助下，最终还是做到了。\n[John Erskine](http://en.wikipedia.org/wiki/John_Erskine_(educator))，作为“[Great Books of the Western World](http://en.wikipedia.org/wiki/Great_Books_of_the_Western_World)”的最早发起人，把Adler带入了西方经典书籍的世界，也用他先进的思想和出色的人格魅力把Adler纳入了伙。随后，他一直致力于把西方经典带给更多年轻人和与之相关的教育方面的改革。\n\n## 为何写这本书\n一个有责任感的教育家、学者，总是走在社会的前面，先天下之忧而忧。在书中，作者也对当前教育中对阅读能力的忽视和常人在阅读技巧方面的拙劣表示了忧虑。\n\nAdler一生的努力都致力于改革教育和强调经典书籍在大学人文教育方面的重要地位。\n> Adler himself later said that he would like to see the studies of the classics, much of the undergraduate B.A. curriculum, brought down into the high school level. And that undergraduates would be then freed (and intellectually better prepared) to focus on their own area of specialization, their own career field.\n> --《Mortimer J. Adler - NNDB》\n\n<a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\">《如何阅读一本书》</a>，便是他一生事业的自然产物。\n\n# 阅读的四个层次\n\n《如何阅读一本书》（以下简称《如》）把阅读分为清晰的四个层次，循序渐进。全书便以此为骨架展开。\n## 第一层次：基础阅读\n\n**即你的语言水平能明白作者在说啥。**\n这方面就不用多讲了。\n\n\n## 第二层次：检视阅读\n检视阅读，即在很短时间内，了解作者表达的重点。从表面上观察这本书，能够回答下面几个问题：**这本书在谈什么，他由哪几部分构成，构架如何。**\n\n这非常有别于普通人常用的阅读方式，**表现出更多的主动性：是你在追求什么，而不仅是它告诉你什么**。所以，也需要不同的技巧。作者给了非常实用的建议：先从包装，作者简介，引言，目录等信息入手；然后决定要不要流畅快速的扫一下内容，偶尔停下来仔细读几段；书本的最后一节往往是主旨的提炼，切不可错过。\n\n这是一个从模糊到精确的渐进方式，它的优势体现在：**如何这本书显然不是你想要的，能立马停下，不至于浪费时间**。\n\n我个人经常购买电子书，因为基本可以在免费的“试读版”里完成“检视阅读”，以免浪费。\n\n## 第三层次：分析阅读\n分析阅读，**就是在无限的时间里，全盘、完整、优质的阅读**。\n作为前提，你最好能知道这是一本什么类别的书，因为不同类别的书结构和表达方式都千差万别。它需要达到的条件是：\n**能将书的重要章节归纳出来，理解他们如何按照顺序——可能是事情发展顺序也可能是逻辑推理顺序——串联起来，判断作者的主旨，并对这个主旨做自己的评价。**\n\n\n这一部分是全书篇幅最多的部分，描述了非常多实用的阅读技巧方法，引用了大量的经典书籍，涵盖了做笔记技巧，主动阅读的核心，快速为书籍分类、分优劣，定位关键词，归纳主旨，如何正确的评判一本书等很多方面。可以说是阅读指导方面的百科全书。\n\n## 第四层次：主题阅读\n主题阅读，是阅读的最高层次，\n\n\n----------\n\n\n**通常需要阅读与一本书同类的很多书，列举出其中的相关性，并从中构架出任何一单本书都没提炼的新主题**。\n对于一个特定的问题，绝不是一本书就足够的，但哪些书于这个主题相关呢？换个角度讲，茫茫书海，怎样才能找到对的信息？没错，在一大堆书单里，你需要快速选择出你需要的，又需要回到“检视阅读”。（作为一个程序员，我简直惊呆了！原来不只代码里有如此美妙的递归）\n\n更多的技巧，在这里无法一一列数，仅摘抄一段大家体味：\n\n> 能够熟练检视阅读的读者，不但能在心中将书籍分类，而且能对内容有一个粗浅的了解。他也会用非常短的时间就发现，这本书谈的内容对他研究的主题到底重不重要。这时他可能还不清楚哪些资料才是最重要的—这可能要等到读下本书的时候才能发现。但是有两件事至少他已经知道其中之一。那就是他不是发现这本书必须回头再读一次，以获得启发，便是知道不论这本书多有趣又多丰富，却毫无启发性，因此不值得重新再读。\n\n>这个忠告通常会被忽略是有原因的。我们说过，在分析阅读中，技巧熟练的阅读者可以同时用上许多技巧，而初学者却必须把步骤分开来。同样的，主题阅读的准备工作—先检视书目上所有的书，在开始做分析阅读之前先检视一遍—可以在做分析阅读时一并进行。但我们不相信任何读者能做到这一点，就算技巧再熟练也不行。这也是许多年轻研究生所犯的毛病。他们自以为两个步骤可以融合为一个，结果阅读任何书都用同样的速度，对某些特殊的作品来说不是太快就是太慢，但无论如何，对他们阅读的大部分书来说，这样的方法都是不对的。\n\n> --《如何阅读一本书》\n\n\n\n# 结语\n\n作为百科全书的编者，作者在《如》中展现出惊人的阅读广度，在历史、经济、科学等各个行业的经典书籍都有深刻的理解。我想，如果有外星人想要了解人类近300年的成就，只需这本书和它的引用书籍奉上即可：第一本用来教会外星人怎么读，剩下的则把人类精华呈现给它。\n\n\n最后：\n\n> 所谓的艺术或技巧，只属于那些能养成习惯，并且能依照规则来运作的人。\n> --《如何阅读一本书》\n\n与君共勉。\n\n# 引用\n\n1. [The Beginnings of the Great Books Movement at Columbia by John Van Doren](http://www.columbia.edu/cu/alumni/Magazine/Winter2001/greatBooks.html)\n2. [Mortimer J. Adler - Wikipedia, the free encyclopedia](http://en.wikipedia.org/wiki/Mortimer_J._Adler)\n3. [Mortimer J. Adler - NNDB ](http://www.nndb.com/people/593/000089326/)\n\n> Written with [StackEdit](https://stackedit.io/).","slug":"读书/如何阅读一本书","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksn007aq0d4i3m4yilz","content":"<h1 id=\"厌书\"><a href=\"#厌书\" class=\"headerlink\" title=\"厌书\"></a>厌书</h1><p>我亲爱的妈妈是小学教师, 我也像大多数老师的孩子一样有着不错的成绩、 傲娇的姿态、顽皮的性格.<br><strong>可我一点都不爱看书.</strong><br>虽然我学习很好, 但我几乎不看除了课本以外的书。 倒不是人教版的课本有多么优秀, 只是我太讨厌书。</p>\n<p>我对书籍如此忽视的态度, 一直很难找到一个准确的解释.<br>如果实在要深究, 可能是因为, <strong>那时资源很有限的小镇小学, 支撑不起小伙伴儿们丰富的兴趣</strong>. 我隐约记得几个爱看书的小伙伴, 有一个爱军事政治武器, 还有两个爱武侠. 还有一些我也不知道他们”爱”看啥, 因为他们总拿着《故事会》, 《知音》之类, 这可能是他们仅有的可以容易拿到的书籍资源.<br><strong>对饥饿的人, 很难判断他对食物的喜好</strong>.<br>而这些“不正统”的书籍, 不会得到任何官方的支持, 甚至会被打上“无用、低俗”的标签. 而学习方面, 我一直是很“听(官方的)话”的.<br>作文书是唯一被官方认证的一类，而它，实在<strong>太</strong>乏味。</p>\n<h1 id=\"爱书\"><a href=\"#爱书\" class=\"headerlink\" title=\"爱书\"></a>爱书</h1><p>解释可能有些牵强，但事实是，一直到上大学，我读过的课外书两个手都可以数过来。<br>一般，20来岁的人便开始要思考“我是谁”，“我从哪儿来”，“我要到哪儿去”之类的哲学问题了。我一边思考这些问题，顺便吃喝玩乐的荒度了两年最宝贵得时间。突然有一天，我发现，身边的人都好像都知道自己在做什么，只有我在茫然踱步。于是，我问自己：是不是该起床了？</p>\n<p>庆幸的是，我有这样两个朋友：</p>\n<ul>\n<li>一个很会生活，带我学会欣赏交响乐和路边的风景。</li>\n<li>一个很有思想，让我认识更有意义却与众不同的生活方式；更重要的，让我懂得：<strong>在迷茫的时候，看书是最快能让你平静下来的方式，也是从来都不会错的指路牌</strong>。</li>\n</ul>\n<p>迟到的醒悟如老来得子，越发珍贵。但在尝试阅读的初期我遇到各种问题：比如很难有毅力看完一整本书，总是半途而废；比如看完了却不知道作者在讲什么；也有时候看完了才发现这并不是我想看的；等等。。。</p>\n<p>直到，我遇见了她。。。</p>\n<h1 id=\"如何阅读一本书\"><a href=\"#如何阅读一本书\" class=\"headerlink\" title=\"如何阅读一本书\"></a>如何阅读一本书</h1><table><br><tr><br><td align=\"center\"><br><br><a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\" target=\"_blank\" rel=\"external\"><img src=\"http://ec8.images-amazon.com/images/I/51r2R9-QW3L._SL500_AA300_.jpg\" width=\"100\"><br><p align=\"center\">如何阅读一本书<br>（在线试读）</p></a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=milo2012-23&l=as2&o=28&a=B00FEEB7JK\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\"><br><br></td><br><td><br><b>简介：</b><br><br>每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。<br></td><br></tr><br></table>\n\n\n\n<p>这本书有两位作者：</p>\n<ul>\n<li><p>莫提默·J.艾德勒（1902－2001）以学者、教育家、编辑人等多重面貌享有盛名。除了写作《如何阅读一本书》外，以主编《西方世界的经典人》并担任1974年第十五版《大英百科全书》的编辑相异而闻名于世。</p>\n</li>\n<li><p>查尔斯·范多伦（1926－）先曾任美国哥伦比亚大学教授。后因故离任，和艾德勒一起工作。一方面襄助艾德勒编辑《大英百科全书》，一方面将本书1940年初版内容大幅度增补改写。</p>\n</li>\n</ul>\n<p><strong>莫提默·J.艾德勒</strong>（<br>Mortimer J. Adler） 出生于纽约的一个犹太家庭，14岁辍学为太阳报送报。但他不满足于此，立志要当一名记者。为了这个梦想，他上了哥伦比亚大学的夜校。在这里，他受到柏拉图、亚里斯多德、托马斯·阿奎那等哲学家的影响，立志成为一名哲学家。在奖学金的帮助下，他非常轻松的完成了哲学学位的主要课程。但是，如中国80年代品学兼优的孩子一样，艾德勒也特别不擅长体育，以致挂掉了必修的游泳课，没有拿到学位证书。。。⊙﹏⊙b汗。他希望能在哥伦比亚大学注册一门课程，却遭到很多同事的白眼：我不承认你的学历。在他的不屑努力和美国好同事 <a href=\"http://en.wikipedia.org/wiki/John_Erskine_(educator\" target=\"_blank\" rel=\"external\">John Erskine</a>) 的帮助下，最终还是做到了。<br><a href=\"http://en.wikipedia.org/wiki/John_Erskine_(educator\" target=\"_blank\" rel=\"external\">John Erskine</a>)，作为“<a href=\"http://en.wikipedia.org/wiki/Great_Books_of_the_Western_World\" target=\"_blank\" rel=\"external\">Great Books of the Western World</a>”的最早发起人，把Adler带入了西方经典书籍的世界，也用他先进的思想和出色的人格魅力把Adler纳入了伙。随后，他一直致力于把西方经典带给更多年轻人和与之相关的教育方面的改革。</p>\n<h2 id=\"为何写这本书\"><a href=\"#为何写这本书\" class=\"headerlink\" title=\"为何写这本书\"></a>为何写这本书</h2><p>一个有责任感的教育家、学者，总是走在社会的前面，先天下之忧而忧。在书中，作者也对当前教育中对阅读能力的忽视和常人在阅读技巧方面的拙劣表示了忧虑。</p>\n<p>Adler一生的努力都致力于改革教育和强调经典书籍在大学人文教育方面的重要地位。</p>\n<blockquote>\n<p>Adler himself later said that he would like to see the studies of the classics, much of the undergraduate B.A. curriculum, brought down into the high school level. And that undergraduates would be then freed (and intellectually better prepared) to focus on their own area of specialization, their own career field.<br>–《Mortimer J. Adler - NNDB》</p>\n</blockquote>\n<p><a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\" target=\"_blank\" rel=\"external\">《如何阅读一本书》</a>，便是他一生事业的自然产物。</p>\n<h1 id=\"阅读的四个层次\"><a href=\"#阅读的四个层次\" class=\"headerlink\" title=\"阅读的四个层次\"></a>阅读的四个层次</h1><p>《如何阅读一本书》（以下简称《如》）把阅读分为清晰的四个层次，循序渐进。全书便以此为骨架展开。</p>\n<h2 id=\"第一层次：基础阅读\"><a href=\"#第一层次：基础阅读\" class=\"headerlink\" title=\"第一层次：基础阅读\"></a>第一层次：基础阅读</h2><p><strong>即你的语言水平能明白作者在说啥。</strong><br>这方面就不用多讲了。</p>\n<h2 id=\"第二层次：检视阅读\"><a href=\"#第二层次：检视阅读\" class=\"headerlink\" title=\"第二层次：检视阅读\"></a>第二层次：检视阅读</h2><p>检视阅读，即在很短时间内，了解作者表达的重点。从表面上观察这本书，能够回答下面几个问题：<strong>这本书在谈什么，他由哪几部分构成，构架如何。</strong></p>\n<p>这非常有别于普通人常用的阅读方式，<strong>表现出更多的主动性：是你在追求什么，而不仅是它告诉你什么</strong>。所以，也需要不同的技巧。作者给了非常实用的建议：先从包装，作者简介，引言，目录等信息入手；然后决定要不要流畅快速的扫一下内容，偶尔停下来仔细读几段；书本的最后一节往往是主旨的提炼，切不可错过。</p>\n<p>这是一个从模糊到精确的渐进方式，它的优势体现在：<strong>如何这本书显然不是你想要的，能立马停下，不至于浪费时间</strong>。</p>\n<p>我个人经常购买电子书，因为基本可以在免费的“试读版”里完成“检视阅读”，以免浪费。</p>\n<h2 id=\"第三层次：分析阅读\"><a href=\"#第三层次：分析阅读\" class=\"headerlink\" title=\"第三层次：分析阅读\"></a>第三层次：分析阅读</h2><p>分析阅读，<strong>就是在无限的时间里，全盘、完整、优质的阅读</strong>。<br>作为前提，你最好能知道这是一本什么类别的书，因为不同类别的书结构和表达方式都千差万别。它需要达到的条件是：<br><strong>能将书的重要章节归纳出来，理解他们如何按照顺序——可能是事情发展顺序也可能是逻辑推理顺序——串联起来，判断作者的主旨，并对这个主旨做自己的评价。</strong></p>\n<p>这一部分是全书篇幅最多的部分，描述了非常多实用的阅读技巧方法，引用了大量的经典书籍，涵盖了做笔记技巧，主动阅读的核心，快速为书籍分类、分优劣，定位关键词，归纳主旨，如何正确的评判一本书等很多方面。可以说是阅读指导方面的百科全书。</p>\n<h2 id=\"第四层次：主题阅读\"><a href=\"#第四层次：主题阅读\" class=\"headerlink\" title=\"第四层次：主题阅读\"></a>第四层次：主题阅读</h2><p>主题阅读，是阅读的最高层次，</p>\n<hr>\n<p><strong>通常需要阅读与一本书同类的很多书，列举出其中的相关性，并从中构架出任何一单本书都没提炼的新主题</strong>。<br>对于一个特定的问题，绝不是一本书就足够的，但哪些书于这个主题相关呢？换个角度讲，茫茫书海，怎样才能找到对的信息？没错，在一大堆书单里，你需要快速选择出你需要的，又需要回到“检视阅读”。（作为一个程序员，我简直惊呆了！原来不只代码里有如此美妙的递归）</p>\n<p>更多的技巧，在这里无法一一列数，仅摘抄一段大家体味：</p>\n<blockquote>\n<p>能够熟练检视阅读的读者，不但能在心中将书籍分类，而且能对内容有一个粗浅的了解。他也会用非常短的时间就发现，这本书谈的内容对他研究的主题到底重不重要。这时他可能还不清楚哪些资料才是最重要的—这可能要等到读下本书的时候才能发现。但是有两件事至少他已经知道其中之一。那就是他不是发现这本书必须回头再读一次，以获得启发，便是知道不论这本书多有趣又多丰富，却毫无启发性，因此不值得重新再读。</p>\n<p>这个忠告通常会被忽略是有原因的。我们说过，在分析阅读中，技巧熟练的阅读者可以同时用上许多技巧，而初学者却必须把步骤分开来。同样的，主题阅读的准备工作—先检视书目上所有的书，在开始做分析阅读之前先检视一遍—可以在做分析阅读时一并进行。但我们不相信任何读者能做到这一点，就算技巧再熟练也不行。这也是许多年轻研究生所犯的毛病。他们自以为两个步骤可以融合为一个，结果阅读任何书都用同样的速度，对某些特殊的作品来说不是太快就是太慢，但无论如何，对他们阅读的大部分书来说，这样的方法都是不对的。</p>\n<p>–《如何阅读一本书》</p>\n</blockquote>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>作为百科全书的编者，作者在《如》中展现出惊人的阅读广度，在历史、经济、科学等各个行业的经典书籍都有深刻的理解。我想，如果有外星人想要了解人类近300年的成就，只需这本书和它的引用书籍奉上即可：第一本用来教会外星人怎么读，剩下的则把人类精华呈现给它。</p>\n<p>最后：</p>\n<blockquote>\n<p>所谓的艺术或技巧，只属于那些能养成习惯，并且能依照规则来运作的人。<br>–《如何阅读一本书》</p>\n</blockquote>\n<p>与君共勉。</p>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.columbia.edu/cu/alumni/Magazine/Winter2001/greatBooks.html\" target=\"_blank\" rel=\"external\">The Beginnings of the Great Books Movement at Columbia by John Van Doren</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Mortimer_J._Adler\" target=\"_blank\" rel=\"external\">Mortimer J. Adler - Wikipedia, the free encyclopedia</a></li>\n<li><a href=\"http://www.nndb.com/people/593/000089326/\" target=\"_blank\" rel=\"external\">Mortimer J. Adler - NNDB </a></li>\n</ol>\n<blockquote>\n<p>Written with <a href=\"https://stackedit.io/\" target=\"_blank\" rel=\"external\">StackEdit</a>.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"厌书\"><a href=\"#厌书\" class=\"headerlink\" title=\"厌书\"></a>厌书</h1><p>我亲爱的妈妈是小学教师, 我也像大多数老师的孩子一样有着不错的成绩、 傲娇的姿态、顽皮的性格.<br><strong>可我一点都不爱看书.</strong><br>虽然我学习很好, 但我几乎不看除了课本以外的书。 倒不是人教版的课本有多么优秀, 只是我太讨厌书。</p>\n<p>我对书籍如此忽视的态度, 一直很难找到一个准确的解释.<br>如果实在要深究, 可能是因为, <strong>那时资源很有限的小镇小学, 支撑不起小伙伴儿们丰富的兴趣</strong>. 我隐约记得几个爱看书的小伙伴, 有一个爱军事政治武器, 还有两个爱武侠. 还有一些我也不知道他们”爱”看啥, 因为他们总拿着《故事会》, 《知音》之类, 这可能是他们仅有的可以容易拿到的书籍资源.<br><strong>对饥饿的人, 很难判断他对食物的喜好</strong>.<br>而这些“不正统”的书籍, 不会得到任何官方的支持, 甚至会被打上“无用、低俗”的标签. 而学习方面, 我一直是很“听(官方的)话”的.<br>作文书是唯一被官方认证的一类，而它，实在<strong>太</strong>乏味。</p>\n<h1 id=\"爱书\"><a href=\"#爱书\" class=\"headerlink\" title=\"爱书\"></a>爱书</h1><p>解释可能有些牵强，但事实是，一直到上大学，我读过的课外书两个手都可以数过来。<br>一般，20来岁的人便开始要思考“我是谁”，“我从哪儿来”，“我要到哪儿去”之类的哲学问题了。我一边思考这些问题，顺便吃喝玩乐的荒度了两年最宝贵得时间。突然有一天，我发现，身边的人都好像都知道自己在做什么，只有我在茫然踱步。于是，我问自己：是不是该起床了？</p>\n<p>庆幸的是，我有这样两个朋友：</p>\n<ul>\n<li>一个很会生活，带我学会欣赏交响乐和路边的风景。</li>\n<li>一个很有思想，让我认识更有意义却与众不同的生活方式；更重要的，让我懂得：<strong>在迷茫的时候，看书是最快能让你平静下来的方式，也是从来都不会错的指路牌</strong>。</li>\n</ul>\n<p>迟到的醒悟如老来得子，越发珍贵。但在尝试阅读的初期我遇到各种问题：比如很难有毅力看完一整本书，总是半途而废；比如看完了却不知道作者在讲什么；也有时候看完了才发现这并不是我想看的；等等。。。</p>\n<p>直到，我遇见了她。。。</p>\n<h1 id=\"如何阅读一本书\"><a href=\"#如何阅读一本书\" class=\"headerlink\" title=\"如何阅读一本书\"></a>如何阅读一本书</h1><table><br><tr><br><td align=\"center\"><br><br><a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\" target=\"_blank\" rel=\"external\"><img src=\"http://ec8.images-amazon.com/images/I/51r2R9-QW3L._SL500_AA300_.jpg\" width=\"100\"><br><p align=\"center\">如何阅读一本书<br>（在线试读）</p></a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=milo2012-23&l=as2&o=28&a=B00FEEB7JK\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\"><br><br></td><br><td><br><b>简介：</b><br><br>每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。<br></td><br></tr><br></table>\n\n\n\n<p>这本书有两位作者：</p>\n<ul>\n<li><p>莫提默·J.艾德勒（1902－2001）以学者、教育家、编辑人等多重面貌享有盛名。除了写作《如何阅读一本书》外，以主编《西方世界的经典人》并担任1974年第十五版《大英百科全书》的编辑相异而闻名于世。</p>\n</li>\n<li><p>查尔斯·范多伦（1926－）先曾任美国哥伦比亚大学教授。后因故离任，和艾德勒一起工作。一方面襄助艾德勒编辑《大英百科全书》，一方面将本书1940年初版内容大幅度增补改写。</p>\n</li>\n</ul>\n<p><strong>莫提默·J.艾德勒</strong>（<br>Mortimer J. Adler） 出生于纽约的一个犹太家庭，14岁辍学为太阳报送报。但他不满足于此，立志要当一名记者。为了这个梦想，他上了哥伦比亚大学的夜校。在这里，他受到柏拉图、亚里斯多德、托马斯·阿奎那等哲学家的影响，立志成为一名哲学家。在奖学金的帮助下，他非常轻松的完成了哲学学位的主要课程。但是，如中国80年代品学兼优的孩子一样，艾德勒也特别不擅长体育，以致挂掉了必修的游泳课，没有拿到学位证书。。。⊙﹏⊙b汗。他希望能在哥伦比亚大学注册一门课程，却遭到很多同事的白眼：我不承认你的学历。在他的不屑努力和美国好同事 <a href=\"http://en.wikipedia.org/wiki/John_Erskine_(educator\" target=\"_blank\" rel=\"external\">John Erskine</a>) 的帮助下，最终还是做到了。<br><a href=\"http://en.wikipedia.org/wiki/John_Erskine_(educator\" target=\"_blank\" rel=\"external\">John Erskine</a>)，作为“<a href=\"http://en.wikipedia.org/wiki/Great_Books_of_the_Western_World\" target=\"_blank\" rel=\"external\">Great Books of the Western World</a>”的最早发起人，把Adler带入了西方经典书籍的世界，也用他先进的思想和出色的人格魅力把Adler纳入了伙。随后，他一直致力于把西方经典带给更多年轻人和与之相关的教育方面的改革。</p>\n<h2 id=\"为何写这本书\"><a href=\"#为何写这本书\" class=\"headerlink\" title=\"为何写这本书\"></a>为何写这本书</h2><p>一个有责任感的教育家、学者，总是走在社会的前面，先天下之忧而忧。在书中，作者也对当前教育中对阅读能力的忽视和常人在阅读技巧方面的拙劣表示了忧虑。</p>\n<p>Adler一生的努力都致力于改革教育和强调经典书籍在大学人文教育方面的重要地位。</p>\n<blockquote>\n<p>Adler himself later said that he would like to see the studies of the classics, much of the undergraduate B.A. curriculum, brought down into the high school level. And that undergraduates would be then freed (and intellectually better prepared) to focus on their own area of specialization, their own career field.<br>–《Mortimer J. Adler - NNDB》</p>\n</blockquote>\n<p><a href=\"http://www.amazon.cn/gp/product/B00IX8NX5A/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IX8NX5A&linkCode=as2&tag=milo2012-23\" target=\"_blank\" rel=\"external\">《如何阅读一本书》</a>，便是他一生事业的自然产物。</p>\n<h1 id=\"阅读的四个层次\"><a href=\"#阅读的四个层次\" class=\"headerlink\" title=\"阅读的四个层次\"></a>阅读的四个层次</h1><p>《如何阅读一本书》（以下简称《如》）把阅读分为清晰的四个层次，循序渐进。全书便以此为骨架展开。</p>\n<h2 id=\"第一层次：基础阅读\"><a href=\"#第一层次：基础阅读\" class=\"headerlink\" title=\"第一层次：基础阅读\"></a>第一层次：基础阅读</h2><p><strong>即你的语言水平能明白作者在说啥。</strong><br>这方面就不用多讲了。</p>\n<h2 id=\"第二层次：检视阅读\"><a href=\"#第二层次：检视阅读\" class=\"headerlink\" title=\"第二层次：检视阅读\"></a>第二层次：检视阅读</h2><p>检视阅读，即在很短时间内，了解作者表达的重点。从表面上观察这本书，能够回答下面几个问题：<strong>这本书在谈什么，他由哪几部分构成，构架如何。</strong></p>\n<p>这非常有别于普通人常用的阅读方式，<strong>表现出更多的主动性：是你在追求什么，而不仅是它告诉你什么</strong>。所以，也需要不同的技巧。作者给了非常实用的建议：先从包装，作者简介，引言，目录等信息入手；然后决定要不要流畅快速的扫一下内容，偶尔停下来仔细读几段；书本的最后一节往往是主旨的提炼，切不可错过。</p>\n<p>这是一个从模糊到精确的渐进方式，它的优势体现在：<strong>如何这本书显然不是你想要的，能立马停下，不至于浪费时间</strong>。</p>\n<p>我个人经常购买电子书，因为基本可以在免费的“试读版”里完成“检视阅读”，以免浪费。</p>\n<h2 id=\"第三层次：分析阅读\"><a href=\"#第三层次：分析阅读\" class=\"headerlink\" title=\"第三层次：分析阅读\"></a>第三层次：分析阅读</h2><p>分析阅读，<strong>就是在无限的时间里，全盘、完整、优质的阅读</strong>。<br>作为前提，你最好能知道这是一本什么类别的书，因为不同类别的书结构和表达方式都千差万别。它需要达到的条件是：<br><strong>能将书的重要章节归纳出来，理解他们如何按照顺序——可能是事情发展顺序也可能是逻辑推理顺序——串联起来，判断作者的主旨，并对这个主旨做自己的评价。</strong></p>\n<p>这一部分是全书篇幅最多的部分，描述了非常多实用的阅读技巧方法，引用了大量的经典书籍，涵盖了做笔记技巧，主动阅读的核心，快速为书籍分类、分优劣，定位关键词，归纳主旨，如何正确的评判一本书等很多方面。可以说是阅读指导方面的百科全书。</p>\n<h2 id=\"第四层次：主题阅读\"><a href=\"#第四层次：主题阅读\" class=\"headerlink\" title=\"第四层次：主题阅读\"></a>第四层次：主题阅读</h2><p>主题阅读，是阅读的最高层次，</p>\n<hr>\n<p><strong>通常需要阅读与一本书同类的很多书，列举出其中的相关性，并从中构架出任何一单本书都没提炼的新主题</strong>。<br>对于一个特定的问题，绝不是一本书就足够的，但哪些书于这个主题相关呢？换个角度讲，茫茫书海，怎样才能找到对的信息？没错，在一大堆书单里，你需要快速选择出你需要的，又需要回到“检视阅读”。（作为一个程序员，我简直惊呆了！原来不只代码里有如此美妙的递归）</p>\n<p>更多的技巧，在这里无法一一列数，仅摘抄一段大家体味：</p>\n<blockquote>\n<p>能够熟练检视阅读的读者，不但能在心中将书籍分类，而且能对内容有一个粗浅的了解。他也会用非常短的时间就发现，这本书谈的内容对他研究的主题到底重不重要。这时他可能还不清楚哪些资料才是最重要的—这可能要等到读下本书的时候才能发现。但是有两件事至少他已经知道其中之一。那就是他不是发现这本书必须回头再读一次，以获得启发，便是知道不论这本书多有趣又多丰富，却毫无启发性，因此不值得重新再读。</p>\n<p>这个忠告通常会被忽略是有原因的。我们说过，在分析阅读中，技巧熟练的阅读者可以同时用上许多技巧，而初学者却必须把步骤分开来。同样的，主题阅读的准备工作—先检视书目上所有的书，在开始做分析阅读之前先检视一遍—可以在做分析阅读时一并进行。但我们不相信任何读者能做到这一点，就算技巧再熟练也不行。这也是许多年轻研究生所犯的毛病。他们自以为两个步骤可以融合为一个，结果阅读任何书都用同样的速度，对某些特殊的作品来说不是太快就是太慢，但无论如何，对他们阅读的大部分书来说，这样的方法都是不对的。</p>\n<p>–《如何阅读一本书》</p>\n</blockquote>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>作为百科全书的编者，作者在《如》中展现出惊人的阅读广度，在历史、经济、科学等各个行业的经典书籍都有深刻的理解。我想，如果有外星人想要了解人类近300年的成就，只需这本书和它的引用书籍奉上即可：第一本用来教会外星人怎么读，剩下的则把人类精华呈现给它。</p>\n<p>最后：</p>\n<blockquote>\n<p>所谓的艺术或技巧，只属于那些能养成习惯，并且能依照规则来运作的人。<br>–《如何阅读一本书》</p>\n</blockquote>\n<p>与君共勉。</p>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.columbia.edu/cu/alumni/Magazine/Winter2001/greatBooks.html\" target=\"_blank\" rel=\"external\">The Beginnings of the Great Books Movement at Columbia by John Van Doren</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Mortimer_J._Adler\" target=\"_blank\" rel=\"external\">Mortimer J. Adler - Wikipedia, the free encyclopedia</a></li>\n<li><a href=\"http://www.nndb.com/people/593/000089326/\" target=\"_blank\" rel=\"external\">Mortimer J. Adler - NNDB </a></li>\n</ol>\n<blockquote>\n<p>Written with <a href=\"https://stackedit.io/\" target=\"_blank\" rel=\"external\">StackEdit</a>.</p>\n</blockquote>\n"},{"date":"2015-09-01T12:55:00.000Z","title":"《国富论》读书笔记","description":"《国》是一本非常通俗易懂的经济书籍，用简单的语言讲解从个体，到小型市场，再到国家和政府的经济结构和规律。虽然亚当·斯密的一些观点在现代经济学中已经淘汰，但大部分依然使用。更重要的是，作者用通俗的语言和简单的生活实例中总结出普适的规律，这个探索过程，让我由衷的敬佩。我也经常让我思考：为什么我也从小到大生活在市场经济里，却对周围的种种经济规律没有深入的理解，只把它当作空气一样透明和理所当然。","_content":"\n\n# 书籍\n\n《国富论》-亚当·斯密-陕西师范大学出版社\n\n# 推荐理由\n\n《国》是一本非常通俗易懂的经济书籍，用简单的语言讲解从个体，到小型市场，再到国家和政府的经济结构和规律。虽然亚当·斯密的一些观点在现代经济学中已经淘汰，但大部分依然使用。更重要的是，作者用通俗的语言和简单的生活实例中总结出普适的规律，这个探索过程，让我由衷的敬佩。我也经常让我思考：为什么我也从小到大生活在市场经济里，却对周围的种种经济规律没有深入的理解，只把它当作空气一样透明和理所当然。\n\n# 内容简介\n\n这本书的论点很分散，以至于想使用七八句话来总结全书变成了不可能。无奈只能在此列举一下第一卷的内容：\n\n1. **劳动分工会提高生产力**，这种提高来源于三种原因：\n    * 工人熟练程度的提高；\n    * 节约了从一种工作到另一种工作的转换时间；\n    * 简单的工作可以交给机器做。\n2. **分工来源于“互通有无，物物交换”的倾向**。当人们在物物交换过程中发现，生产单一品种并通过交换来获得其他物品，能最大化自己的收益的事后，分工便渐渐形成了。\n3. **市场的大小限制了分工的程度**，由于市场小，它不具备把一个人消费后剩余的劳动产物任意换取他人劳动产物的能力。\n4. **频繁的交易诱导了货币的产生**，因为物物交换是在太他妈麻烦了，必须找一个**易于衡量、性质稳定、便于携带**的没接作为货币。\n5. 商品的价格由**劳动者的工资和资本利润**组成。\n6. 劳动者的工资。虽然雇主极力压低工资，但有一个最低限度：工资必须足以维系劳动者的生活，并且大多数情况下还必须维系劳动者一家人的生活。除此之外，劳动者的工资跟国家的绝对经济实力无关，却与经济的增长速度息息相关，因为增长的社会劳动者需求更迫切。\n7. 资本的利润。当一个行业的资本被大量投入的时候，会提高工资，降低利润（是不是像极了现在的互联网？）。\n8. 用于不同用途的劳动和资本其所有利与弊在同一地区肯定完全相同或者不间断地趋于相同。假如在同一个地区内有某一用途显著优于或者差于其他用途，那么在之前一种情况之下许多人就会涌进那一种用途，而在后一种情况之下，许多人就会离开那一种用途。这样那种用途的利益时间不长便会回归到和其他用途的利益相等的水平。（我觉得这一点不完全正确，这个 **趋于相同**的过程比较漫长，在这个漫长的过程中，必然又有一些新产生的市场和职业带来利润的差异。这样，在一个动态的过程里，始终存在不同行业间的利润或工资差异）\n9. 职业性质在哪些方面引起了收入的不平等：\n    * 职业本身的舒适性\n    * 职业的易学性，或者学习困难，或者费用昂贵。\n    * 职业的长久不变性或者易变性。\n    * 所需要担负责任的大小。 \n    * 职业成功的可能性。\n10. **土地的租金取决于在这块土地上的劳动能带来的价值**。\n\n\n","source":"_posts/读书/货币如何产生，国家财富如何积累？.md","raw":"date: 2015-09-01 20:55\ntitle: 《国富论》读书笔记\ntags: \n- 读书笔记\n- 经济\n- 政治\n- 财富\n- 货币\n- 土地\n- 劳动价值\ncategories: \n- 读书\ndescription: 《国》是一本非常通俗易懂的经济书籍，用简单的语言讲解从个体，到小型市场，再到国家和政府的经济结构和规律。虽然亚当·斯密的一些观点在现代经济学中已经淘汰，但大部分依然使用。更重要的是，作者用通俗的语言和简单的生活实例中总结出普适的规律，这个探索过程，让我由衷的敬佩。我也经常让我思考：为什么我也从小到大生活在市场经济里，却对周围的种种经济规律没有深入的理解，只把它当作空气一样透明和理所当然。\n---\n\n\n# 书籍\n\n《国富论》-亚当·斯密-陕西师范大学出版社\n\n# 推荐理由\n\n《国》是一本非常通俗易懂的经济书籍，用简单的语言讲解从个体，到小型市场，再到国家和政府的经济结构和规律。虽然亚当·斯密的一些观点在现代经济学中已经淘汰，但大部分依然使用。更重要的是，作者用通俗的语言和简单的生活实例中总结出普适的规律，这个探索过程，让我由衷的敬佩。我也经常让我思考：为什么我也从小到大生活在市场经济里，却对周围的种种经济规律没有深入的理解，只把它当作空气一样透明和理所当然。\n\n# 内容简介\n\n这本书的论点很分散，以至于想使用七八句话来总结全书变成了不可能。无奈只能在此列举一下第一卷的内容：\n\n1. **劳动分工会提高生产力**，这种提高来源于三种原因：\n    * 工人熟练程度的提高；\n    * 节约了从一种工作到另一种工作的转换时间；\n    * 简单的工作可以交给机器做。\n2. **分工来源于“互通有无，物物交换”的倾向**。当人们在物物交换过程中发现，生产单一品种并通过交换来获得其他物品，能最大化自己的收益的事后，分工便渐渐形成了。\n3. **市场的大小限制了分工的程度**，由于市场小，它不具备把一个人消费后剩余的劳动产物任意换取他人劳动产物的能力。\n4. **频繁的交易诱导了货币的产生**，因为物物交换是在太他妈麻烦了，必须找一个**易于衡量、性质稳定、便于携带**的没接作为货币。\n5. 商品的价格由**劳动者的工资和资本利润**组成。\n6. 劳动者的工资。虽然雇主极力压低工资，但有一个最低限度：工资必须足以维系劳动者的生活，并且大多数情况下还必须维系劳动者一家人的生活。除此之外，劳动者的工资跟国家的绝对经济实力无关，却与经济的增长速度息息相关，因为增长的社会劳动者需求更迫切。\n7. 资本的利润。当一个行业的资本被大量投入的时候，会提高工资，降低利润（是不是像极了现在的互联网？）。\n8. 用于不同用途的劳动和资本其所有利与弊在同一地区肯定完全相同或者不间断地趋于相同。假如在同一个地区内有某一用途显著优于或者差于其他用途，那么在之前一种情况之下许多人就会涌进那一种用途，而在后一种情况之下，许多人就会离开那一种用途。这样那种用途的利益时间不长便会回归到和其他用途的利益相等的水平。（我觉得这一点不完全正确，这个 **趋于相同**的过程比较漫长，在这个漫长的过程中，必然又有一些新产生的市场和职业带来利润的差异。这样，在一个动态的过程里，始终存在不同行业间的利润或工资差异）\n9. 职业性质在哪些方面引起了收入的不平等：\n    * 职业本身的舒适性\n    * 职业的易学性，或者学习困难，或者费用昂贵。\n    * 职业的长久不变性或者易变性。\n    * 所需要担负责任的大小。 \n    * 职业成功的可能性。\n10. **土地的租金取决于在这块土地上的劳动能带来的价值**。\n\n\n","slug":"读书/货币如何产生，国家财富如何积累？","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksp007fq0d43cbf3rkp","content":"<h1 id=\"书籍\"><a href=\"#书籍\" class=\"headerlink\" title=\"书籍\"></a>书籍</h1><p>《国富论》-亚当·斯密-陕西师范大学出版社</p>\n<h1 id=\"推荐理由\"><a href=\"#推荐理由\" class=\"headerlink\" title=\"推荐理由\"></a>推荐理由</h1><p>《国》是一本非常通俗易懂的经济书籍，用简单的语言讲解从个体，到小型市场，再到国家和政府的经济结构和规律。虽然亚当·斯密的一些观点在现代经济学中已经淘汰，但大部分依然使用。更重要的是，作者用通俗的语言和简单的生活实例中总结出普适的规律，这个探索过程，让我由衷的敬佩。我也经常让我思考：为什么我也从小到大生活在市场经济里，却对周围的种种经济规律没有深入的理解，只把它当作空气一样透明和理所当然。</p>\n<h1 id=\"内容简介\"><a href=\"#内容简介\" class=\"headerlink\" title=\"内容简介\"></a>内容简介</h1><p>这本书的论点很分散，以至于想使用七八句话来总结全书变成了不可能。无奈只能在此列举一下第一卷的内容：</p>\n<ol>\n<li><strong>劳动分工会提高生产力</strong>，这种提高来源于三种原因：<ul>\n<li>工人熟练程度的提高；</li>\n<li>节约了从一种工作到另一种工作的转换时间；</li>\n<li>简单的工作可以交给机器做。</li>\n</ul>\n</li>\n<li><strong>分工来源于“互通有无，物物交换”的倾向</strong>。当人们在物物交换过程中发现，生产单一品种并通过交换来获得其他物品，能最大化自己的收益的事后，分工便渐渐形成了。</li>\n<li><strong>市场的大小限制了分工的程度</strong>，由于市场小，它不具备把一个人消费后剩余的劳动产物任意换取他人劳动产物的能力。</li>\n<li><strong>频繁的交易诱导了货币的产生</strong>，因为物物交换是在太他妈麻烦了，必须找一个<strong>易于衡量、性质稳定、便于携带</strong>的没接作为货币。</li>\n<li>商品的价格由<strong>劳动者的工资和资本利润</strong>组成。</li>\n<li>劳动者的工资。虽然雇主极力压低工资，但有一个最低限度：工资必须足以维系劳动者的生活，并且大多数情况下还必须维系劳动者一家人的生活。除此之外，劳动者的工资跟国家的绝对经济实力无关，却与经济的增长速度息息相关，因为增长的社会劳动者需求更迫切。</li>\n<li>资本的利润。当一个行业的资本被大量投入的时候，会提高工资，降低利润（是不是像极了现在的互联网？）。</li>\n<li>用于不同用途的劳动和资本其所有利与弊在同一地区肯定完全相同或者不间断地趋于相同。假如在同一个地区内有某一用途显著优于或者差于其他用途，那么在之前一种情况之下许多人就会涌进那一种用途，而在后一种情况之下，许多人就会离开那一种用途。这样那种用途的利益时间不长便会回归到和其他用途的利益相等的水平。（我觉得这一点不完全正确，这个 <strong>趋于相同</strong>的过程比较漫长，在这个漫长的过程中，必然又有一些新产生的市场和职业带来利润的差异。这样，在一个动态的过程里，始终存在不同行业间的利润或工资差异）</li>\n<li>职业性质在哪些方面引起了收入的不平等：<ul>\n<li>职业本身的舒适性</li>\n<li>职业的易学性，或者学习困难，或者费用昂贵。</li>\n<li>职业的长久不变性或者易变性。</li>\n<li>所需要担负责任的大小。 </li>\n<li>职业成功的可能性。</li>\n</ul>\n</li>\n<li><strong>土地的租金取决于在这块土地上的劳动能带来的价值</strong>。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"书籍\"><a href=\"#书籍\" class=\"headerlink\" title=\"书籍\"></a>书籍</h1><p>《国富论》-亚当·斯密-陕西师范大学出版社</p>\n<h1 id=\"推荐理由\"><a href=\"#推荐理由\" class=\"headerlink\" title=\"推荐理由\"></a>推荐理由</h1><p>《国》是一本非常通俗易懂的经济书籍，用简单的语言讲解从个体，到小型市场，再到国家和政府的经济结构和规律。虽然亚当·斯密的一些观点在现代经济学中已经淘汰，但大部分依然使用。更重要的是，作者用通俗的语言和简单的生活实例中总结出普适的规律，这个探索过程，让我由衷的敬佩。我也经常让我思考：为什么我也从小到大生活在市场经济里，却对周围的种种经济规律没有深入的理解，只把它当作空气一样透明和理所当然。</p>\n<h1 id=\"内容简介\"><a href=\"#内容简介\" class=\"headerlink\" title=\"内容简介\"></a>内容简介</h1><p>这本书的论点很分散，以至于想使用七八句话来总结全书变成了不可能。无奈只能在此列举一下第一卷的内容：</p>\n<ol>\n<li><strong>劳动分工会提高生产力</strong>，这种提高来源于三种原因：<ul>\n<li>工人熟练程度的提高；</li>\n<li>节约了从一种工作到另一种工作的转换时间；</li>\n<li>简单的工作可以交给机器做。</li>\n</ul>\n</li>\n<li><strong>分工来源于“互通有无，物物交换”的倾向</strong>。当人们在物物交换过程中发现，生产单一品种并通过交换来获得其他物品，能最大化自己的收益的事后，分工便渐渐形成了。</li>\n<li><strong>市场的大小限制了分工的程度</strong>，由于市场小，它不具备把一个人消费后剩余的劳动产物任意换取他人劳动产物的能力。</li>\n<li><strong>频繁的交易诱导了货币的产生</strong>，因为物物交换是在太他妈麻烦了，必须找一个<strong>易于衡量、性质稳定、便于携带</strong>的没接作为货币。</li>\n<li>商品的价格由<strong>劳动者的工资和资本利润</strong>组成。</li>\n<li>劳动者的工资。虽然雇主极力压低工资，但有一个最低限度：工资必须足以维系劳动者的生活，并且大多数情况下还必须维系劳动者一家人的生活。除此之外，劳动者的工资跟国家的绝对经济实力无关，却与经济的增长速度息息相关，因为增长的社会劳动者需求更迫切。</li>\n<li>资本的利润。当一个行业的资本被大量投入的时候，会提高工资，降低利润（是不是像极了现在的互联网？）。</li>\n<li>用于不同用途的劳动和资本其所有利与弊在同一地区肯定完全相同或者不间断地趋于相同。假如在同一个地区内有某一用途显著优于或者差于其他用途，那么在之前一种情况之下许多人就会涌进那一种用途，而在后一种情况之下，许多人就会离开那一种用途。这样那种用途的利益时间不长便会回归到和其他用途的利益相等的水平。（我觉得这一点不完全正确，这个 <strong>趋于相同</strong>的过程比较漫长，在这个漫长的过程中，必然又有一些新产生的市场和职业带来利润的差异。这样，在一个动态的过程里，始终存在不同行业间的利润或工资差异）</li>\n<li>职业性质在哪些方面引起了收入的不平等：<ul>\n<li>职业本身的舒适性</li>\n<li>职业的易学性，或者学习困难，或者费用昂贵。</li>\n<li>职业的长久不变性或者易变性。</li>\n<li>所需要担负责任的大小。 </li>\n<li>职业成功的可能性。</li>\n</ul>\n</li>\n<li><strong>土地的租金取决于在这块土地上的劳动能带来的价值</strong>。</li>\n</ol>\n"},{"date":"2015-11-08T04:32:00.000Z","title":"社会学分析阅读","description":"社会科学是用科学的方法，研究人类社会的种种现象。如社会学研究人类社会（主要是当代），政治学研究政治、政策和有关的活动，经济学研究资源分配。20世纪初才开始发展，所以历史不是很长，经典学者也就有限的几个，不难理解各个学派的理论和之间的关系。但这些学说对理解人与人之间的面对面社交和网络社交都提供了坚实的理论基础，仔细消化之后，很有意思。","_content":"\n摘要：社会科学是用科学的方法，研究人类社会的种种现象。如社会学研究人类社会（主要是当代），政治学研究政治、政策和有关的活动，经济学研究资源分配。20世纪初才开始发展，所以历史不是很长，经典学者也就有限的几个，不难理解各个学派的理论和之间的关系。但这些学说对理解人与人之间的面对面社交和网络社交都提供了坚实的理论基础，仔细消化之后，很有意思。 \n\n---\n\n* 博客: <http://www.cnblogs.com/jhzhu>\n* 邮箱: <jhzhuustc@gmail.com>\n* 作者: 知明所以\n* 时间: 2015-11-08\n\n---\n\n## 目录\n\n[TOC]\n\n## 扯扯淡\n\n本来对社会科学了解甚微，是一个偶然的原因让我接近了她，才发现她的魅力。\n\n是这样的，工作原因，需要在客户间建立一个活跃的、有影响力的、可以体现每个人自身价值的社区。所以，就要了解社交的基本需求和规律。于是就到处找资料，但畅销书中对于社交关系讲的透彻的几乎没有，一度让我非常难受。偶然一次，在书店看到一本[《纯粹关系-数字媒介变革书系》][1]，不论是看书名还是封面，给我的第一感觉都很好，翻了几页感觉还蛮深入，就买了下来。\n\n后来证明，这是一本让我又悲又喜的书：\n\n* 忧：作者语言功底实在是。。。很多超长语句，晦涩难懂。提取一下主干，发现很多语句连“主谓宾”都不完整。且没有什么自主思想，整书都在各种引用他人理论，感觉像是东拼西凑了一本书。\n* 喜：但是，我仍然十分感谢这本书，因为他打开了我深入了解社会科学的大门。必须肯定的一点是：这位作者加社会科学博士是读了不少论文的。所以，书中的超多出引用，都是名家名点，顺藤摸瓜，犹如桃花源记，进去之后，发现另有一番天地。 \n\n这件事情，让我理解到：现在畅销书泛滥，真正有营养的书可能并不多，但还是要去看。因为，有可能它作为一个索引能把你带到正确的方向上去，也有可能他能激活你平时想不到的一些想法（有时候，凭空想是很难想到很全面的，但是当你阅读到其他人在跟你做类似的事情的时候，可以激发你在这一块儿的想象力）。\n\n## 关于社会科学\n\n涂尔干、韦伯、马克思三人并成为社会科学的三大奠基人，为世人研究社会科学开了先河，直到现在的各种社科类文献中，都省不掉这三人的引用。\n\n因为此次阅读内容比较广，加之我也没有像真正的**主题阅读**那样有无限的时间去研究这一个主题，所以，很难把这些思想有条理的整理起来。在此，我只列数几个有意思的主题，如果感兴趣，可以看看相应的书籍。\n\n## 《宗教生活的基本形式》-涂尔干\n\n首先，我为什么要研究宗教呢？\n\n因为究其本质，我想达到的效果跟宗教的表现是很类似的。我想建立一个忠诚度高、活动频繁、对外人有吸引力、对内有良好秩序并满足成员需求的群体，在这几点上，宗教都是完美的模板。\n\n>《宗》这本书的宗旨，就是要研究，实际上已经为人所知的最原始的和最简单的宗教，分析这种宗教，并尝试作出解释。一个宗教体系，倘若能满足以下两个条件，我们就可以说他是我们能见到的最原始的宗教：首先，应该能在组织得最简单的社会中找到它；其次，不必借用先前宗教的任何要素便有可能对他作出解释。\n\n简单来说，就是现代宗教发展了好几千年，成分动机等已经不像原始宗教那么单纯，有很多干扰我们探究宗教本质的因素，所以，涂尔干老先生决定去其皮表，取其筋骨，就研究最原始的宗教。 \n\n\n\n\n### 宗教的定义\n\n本书讨论宗教的本质和定义：对精神存在的基本信仰就是宗教最低限度的定义。在通过各种宗教的对比中，去除了一些表面上看起来像本质实际却不是的杂质，比如自然崇拜、神灵、赎罪、祭祀等。\n\n>宗教现象可以自然而然的氛围两个范畴：信仰和仪式。信仰是舆论的状态，是由各种表现构成的；仪式是某些明确的行为方式。这两类事实的差别，就是思想和行动的差别。 \n\n>所有已知的宗教，还表现出一个共同特性：他们对所有事物都预设了分类，把人类所能想到的所有事物，不管是真实的还是理想的，都分为两类，或者两个对立的门类，并在一般意义上用两个截然不同的术语来称呼他们，其中的含义可以十分恰当的用**凡俗的**和**神圣的**这两个词传达出来。\n\n### 与众不同的佛教\n\n在这里有一个有意思的点，讲了佛教的特殊性。佛教的“四圣谛”是\n\n>第一个前提主张，在一切事物永恒的迁流变动中总是伴随着苦的存在；  \n>第二个前提主张，贪爱是苦的原因；  \n>第三个前提主张，消灭贪爱是灭段烦恼的唯一方式；  \n>第四个前提主张，列举了证灭所必须的三个阶段：正道，静虑和智慧，这亦佛教的全部教义所在。\n\n其实想象，真的很有道理。只怪以前对佛教的误解是在太深。\n\n佛教与其它主流宗教相比，最大的不同是，它没有对“神”的依赖。在典型的其它宗教里，神是无所不能的宇宙主宰，顺从他，按照神的行为准则来行事，神就赐予你美好生活；否则，就会经受灾难。而佛教，没有对应的神的角色。在佛教里，一切皆取决于自我修行，消灭自己的贪爱。而佛祖的角色并**不是主宰，而是榜样**，佛祖已经涅槃，并不能直接影响人们的生活。\n\n### 宗教中的仪式\n\n\n**仪式**这个词非常有意思，我们经常被他影响却鲜有感觉到他的存在。举几个例子：\n\n* 大家在升国旗奏国歌的过程中，有没有那么一刻全身共鸣，觉得自己非常爱国？\n* 虽然春晚并不好看，但是大家还是会开着电视机，此时此刻，“全中国”这个概念在心里更加深刻。\n\n政府的这些规定和安排，无形中加深了人们对国家和政府的认可，这就是仪式的作用。\n\n>宗教中的仪式完全凭着自身，产生的效力也不是神的力量所使然的；他们能够机械的产生效应，而这正是他们得以存在的原因。这些仪式并非由祈祷或供奉构成，人们预期的结果也并非出于神的善意；仪式的自动运作就可以获得这样的结果。\n\n## 人在社会中的表演\n\n这个观点在[《日常生活中的自我呈现》-（美）欧文·戈夫曼 ][日常]中完整有完整的表现。如果总结成一句话就是：**社交就是人们在社会中的自我表演，进而控制在他人心目中的形象。**\n\n（详细的笔记在公司的笔记本上，明日补充。其实有篇读书笔记做了非常美妙和形象的整理，比我讲的好太多，墙裂建议看看：<http://book.douban.com/review/1629531/>）\n\n## 马斯洛需求层次\n\n马斯洛需求层次，大家都耳熟能详，不做赘述。他的这个理论第一次是在[《动机与人格》][动机]中论述。其实在阐述需求层次之前，还有一些基本的前提条件更值得思考：\n\n>有一个事实尽管看起来十分明显，但却几乎是被普遍的忽略了。对此，我也必须唤起大家的注意。那就是，我们已经得到的好处，慢慢的会被认为是理所当然的，会被忘记，会从意识中消失，最后甚至不会再被珍惜--至少它被再剥夺之前是这样的。\n\n## 互动仪式链\n\n[《互动仪式链》-兰德尔·柯林斯][互动]是这一系列书中最有学术范儿且晦涩难懂的，所以，尽我所能也没读到1/3。但是对其主旨思想有了简单的了解，希望下次可以更深入的讲讲。\n\n\n柯林斯指出，\n\n>微观社会学的研究对象是情景结构与其动力学。人们的一切互动都发生在一定的情境之中，其中至少包括两个人组成的机遇。故，局部情境是社会学分析的起点，而不是终点。但柯林斯指出，微观情境不是单个人的，而是经由个人所形成的社会关联或网络。因此，其理论的出发点之一是研究情境而不是个体，认为人类社会的全部历史都是有情境所构成的。\n\n\n互动仪式，包括以下四个要素：  \n>（1）两个或两个以上的人聚集在统一场所，因此不管他们是否有特别有意识地关注对方，都能通过其身体在场而相互影响。  \n>（2）对局外人进行了界限，因此参与者知道谁在参与，而谁被排除在外。  \n>（3）人们将其注意力集中在共同的对象活动上，并通过相互传达该关注焦点，而彼此知道了关注焦点。  \n（4）人们分享着共同的情绪或情感。  \n\n\n互动仪式能得到以下几种结果，让参与者得到以下体验：\n\n>1. 群体团结，一种成员身份的感觉。\n>2. 个人情感能量：一种采取行动时自信、兴高采烈、有力量、满腔热忱与主动进取的感觉。\n>3. 代表群体的符号： 标识或其他代表物（形象化图标、文字、姿势），是成员感到自己与集体相关。充满集体团结感的人格外尊重符号，并会捍卫符号以避免其受到局外人的轻视，甚至内部人员的背弃。\n>4. 道德感：维护群体中正义感，尊重群体符号，防止受到违背者的侵害。\n\n\n柯林斯还提出了一个人类的行动模型：人们趋向于那些感觉是当前可得到的最高强度的互动仪式的互动；也就是说，他们趋向于获得最高的情感能量回报。所以，行动收市场式机制的驱动。\n\n有一段话很有意思：\n\n>当一个群体在失去一个成员时，葬礼起了重新整合的作用：约过其外在的表面，其仪式是为活人做的，而不是为死者做的，举行仪式对死者带来的热情越高涨，它对集体的威力越大，它需要重新整合自己的力量越大。\n\n\n\n[1]:http://book.douban.com/subject/26592157/\n[日常]:http://book.douban.com/subject/3062632/\n[动机]:http://book.douban.com/subject/1419685/\n[互动]:http://book.douban.com/subject/3792191/\n","source":"_posts/读书/学习了12小时的社会科学.md","raw":"date: 2015-11-08 12:32\ntitle: 社会学分析阅读\ntags:\n- 读书笔记\n- 社会学\n- 马斯洛需求层次\ncategories: \n- 读书\ndescription: 社会科学是用科学的方法，研究人类社会的种种现象。如社会学研究人类社会（主要是当代），政治学研究政治、政策和有关的活动，经济学研究资源分配。20世纪初才开始发展，所以历史不是很长，经典学者也就有限的几个，不难理解各个学派的理论和之间的关系。但这些学说对理解人与人之间的面对面社交和网络社交都提供了坚实的理论基础，仔细消化之后，很有意思。 \n---\n\n摘要：社会科学是用科学的方法，研究人类社会的种种现象。如社会学研究人类社会（主要是当代），政治学研究政治、政策和有关的活动，经济学研究资源分配。20世纪初才开始发展，所以历史不是很长，经典学者也就有限的几个，不难理解各个学派的理论和之间的关系。但这些学说对理解人与人之间的面对面社交和网络社交都提供了坚实的理论基础，仔细消化之后，很有意思。 \n\n---\n\n* 博客: <http://www.cnblogs.com/jhzhu>\n* 邮箱: <jhzhuustc@gmail.com>\n* 作者: 知明所以\n* 时间: 2015-11-08\n\n---\n\n## 目录\n\n[TOC]\n\n## 扯扯淡\n\n本来对社会科学了解甚微，是一个偶然的原因让我接近了她，才发现她的魅力。\n\n是这样的，工作原因，需要在客户间建立一个活跃的、有影响力的、可以体现每个人自身价值的社区。所以，就要了解社交的基本需求和规律。于是就到处找资料，但畅销书中对于社交关系讲的透彻的几乎没有，一度让我非常难受。偶然一次，在书店看到一本[《纯粹关系-数字媒介变革书系》][1]，不论是看书名还是封面，给我的第一感觉都很好，翻了几页感觉还蛮深入，就买了下来。\n\n后来证明，这是一本让我又悲又喜的书：\n\n* 忧：作者语言功底实在是。。。很多超长语句，晦涩难懂。提取一下主干，发现很多语句连“主谓宾”都不完整。且没有什么自主思想，整书都在各种引用他人理论，感觉像是东拼西凑了一本书。\n* 喜：但是，我仍然十分感谢这本书，因为他打开了我深入了解社会科学的大门。必须肯定的一点是：这位作者加社会科学博士是读了不少论文的。所以，书中的超多出引用，都是名家名点，顺藤摸瓜，犹如桃花源记，进去之后，发现另有一番天地。 \n\n这件事情，让我理解到：现在畅销书泛滥，真正有营养的书可能并不多，但还是要去看。因为，有可能它作为一个索引能把你带到正确的方向上去，也有可能他能激活你平时想不到的一些想法（有时候，凭空想是很难想到很全面的，但是当你阅读到其他人在跟你做类似的事情的时候，可以激发你在这一块儿的想象力）。\n\n## 关于社会科学\n\n涂尔干、韦伯、马克思三人并成为社会科学的三大奠基人，为世人研究社会科学开了先河，直到现在的各种社科类文献中，都省不掉这三人的引用。\n\n因为此次阅读内容比较广，加之我也没有像真正的**主题阅读**那样有无限的时间去研究这一个主题，所以，很难把这些思想有条理的整理起来。在此，我只列数几个有意思的主题，如果感兴趣，可以看看相应的书籍。\n\n## 《宗教生活的基本形式》-涂尔干\n\n首先，我为什么要研究宗教呢？\n\n因为究其本质，我想达到的效果跟宗教的表现是很类似的。我想建立一个忠诚度高、活动频繁、对外人有吸引力、对内有良好秩序并满足成员需求的群体，在这几点上，宗教都是完美的模板。\n\n>《宗》这本书的宗旨，就是要研究，实际上已经为人所知的最原始的和最简单的宗教，分析这种宗教，并尝试作出解释。一个宗教体系，倘若能满足以下两个条件，我们就可以说他是我们能见到的最原始的宗教：首先，应该能在组织得最简单的社会中找到它；其次，不必借用先前宗教的任何要素便有可能对他作出解释。\n\n简单来说，就是现代宗教发展了好几千年，成分动机等已经不像原始宗教那么单纯，有很多干扰我们探究宗教本质的因素，所以，涂尔干老先生决定去其皮表，取其筋骨，就研究最原始的宗教。 \n\n\n\n\n### 宗教的定义\n\n本书讨论宗教的本质和定义：对精神存在的基本信仰就是宗教最低限度的定义。在通过各种宗教的对比中，去除了一些表面上看起来像本质实际却不是的杂质，比如自然崇拜、神灵、赎罪、祭祀等。\n\n>宗教现象可以自然而然的氛围两个范畴：信仰和仪式。信仰是舆论的状态，是由各种表现构成的；仪式是某些明确的行为方式。这两类事实的差别，就是思想和行动的差别。 \n\n>所有已知的宗教，还表现出一个共同特性：他们对所有事物都预设了分类，把人类所能想到的所有事物，不管是真实的还是理想的，都分为两类，或者两个对立的门类，并在一般意义上用两个截然不同的术语来称呼他们，其中的含义可以十分恰当的用**凡俗的**和**神圣的**这两个词传达出来。\n\n### 与众不同的佛教\n\n在这里有一个有意思的点，讲了佛教的特殊性。佛教的“四圣谛”是\n\n>第一个前提主张，在一切事物永恒的迁流变动中总是伴随着苦的存在；  \n>第二个前提主张，贪爱是苦的原因；  \n>第三个前提主张，消灭贪爱是灭段烦恼的唯一方式；  \n>第四个前提主张，列举了证灭所必须的三个阶段：正道，静虑和智慧，这亦佛教的全部教义所在。\n\n其实想象，真的很有道理。只怪以前对佛教的误解是在太深。\n\n佛教与其它主流宗教相比，最大的不同是，它没有对“神”的依赖。在典型的其它宗教里，神是无所不能的宇宙主宰，顺从他，按照神的行为准则来行事，神就赐予你美好生活；否则，就会经受灾难。而佛教，没有对应的神的角色。在佛教里，一切皆取决于自我修行，消灭自己的贪爱。而佛祖的角色并**不是主宰，而是榜样**，佛祖已经涅槃，并不能直接影响人们的生活。\n\n### 宗教中的仪式\n\n\n**仪式**这个词非常有意思，我们经常被他影响却鲜有感觉到他的存在。举几个例子：\n\n* 大家在升国旗奏国歌的过程中，有没有那么一刻全身共鸣，觉得自己非常爱国？\n* 虽然春晚并不好看，但是大家还是会开着电视机，此时此刻，“全中国”这个概念在心里更加深刻。\n\n政府的这些规定和安排，无形中加深了人们对国家和政府的认可，这就是仪式的作用。\n\n>宗教中的仪式完全凭着自身，产生的效力也不是神的力量所使然的；他们能够机械的产生效应，而这正是他们得以存在的原因。这些仪式并非由祈祷或供奉构成，人们预期的结果也并非出于神的善意；仪式的自动运作就可以获得这样的结果。\n\n## 人在社会中的表演\n\n这个观点在[《日常生活中的自我呈现》-（美）欧文·戈夫曼 ][日常]中完整有完整的表现。如果总结成一句话就是：**社交就是人们在社会中的自我表演，进而控制在他人心目中的形象。**\n\n（详细的笔记在公司的笔记本上，明日补充。其实有篇读书笔记做了非常美妙和形象的整理，比我讲的好太多，墙裂建议看看：<http://book.douban.com/review/1629531/>）\n\n## 马斯洛需求层次\n\n马斯洛需求层次，大家都耳熟能详，不做赘述。他的这个理论第一次是在[《动机与人格》][动机]中论述。其实在阐述需求层次之前，还有一些基本的前提条件更值得思考：\n\n>有一个事实尽管看起来十分明显，但却几乎是被普遍的忽略了。对此，我也必须唤起大家的注意。那就是，我们已经得到的好处，慢慢的会被认为是理所当然的，会被忘记，会从意识中消失，最后甚至不会再被珍惜--至少它被再剥夺之前是这样的。\n\n## 互动仪式链\n\n[《互动仪式链》-兰德尔·柯林斯][互动]是这一系列书中最有学术范儿且晦涩难懂的，所以，尽我所能也没读到1/3。但是对其主旨思想有了简单的了解，希望下次可以更深入的讲讲。\n\n\n柯林斯指出，\n\n>微观社会学的研究对象是情景结构与其动力学。人们的一切互动都发生在一定的情境之中，其中至少包括两个人组成的机遇。故，局部情境是社会学分析的起点，而不是终点。但柯林斯指出，微观情境不是单个人的，而是经由个人所形成的社会关联或网络。因此，其理论的出发点之一是研究情境而不是个体，认为人类社会的全部历史都是有情境所构成的。\n\n\n互动仪式，包括以下四个要素：  \n>（1）两个或两个以上的人聚集在统一场所，因此不管他们是否有特别有意识地关注对方，都能通过其身体在场而相互影响。  \n>（2）对局外人进行了界限，因此参与者知道谁在参与，而谁被排除在外。  \n>（3）人们将其注意力集中在共同的对象活动上，并通过相互传达该关注焦点，而彼此知道了关注焦点。  \n（4）人们分享着共同的情绪或情感。  \n\n\n互动仪式能得到以下几种结果，让参与者得到以下体验：\n\n>1. 群体团结，一种成员身份的感觉。\n>2. 个人情感能量：一种采取行动时自信、兴高采烈、有力量、满腔热忱与主动进取的感觉。\n>3. 代表群体的符号： 标识或其他代表物（形象化图标、文字、姿势），是成员感到自己与集体相关。充满集体团结感的人格外尊重符号，并会捍卫符号以避免其受到局外人的轻视，甚至内部人员的背弃。\n>4. 道德感：维护群体中正义感，尊重群体符号，防止受到违背者的侵害。\n\n\n柯林斯还提出了一个人类的行动模型：人们趋向于那些感觉是当前可得到的最高强度的互动仪式的互动；也就是说，他们趋向于获得最高的情感能量回报。所以，行动收市场式机制的驱动。\n\n有一段话很有意思：\n\n>当一个群体在失去一个成员时，葬礼起了重新整合的作用：约过其外在的表面，其仪式是为活人做的，而不是为死者做的，举行仪式对死者带来的热情越高涨，它对集体的威力越大，它需要重新整合自己的力量越大。\n\n\n\n[1]:http://book.douban.com/subject/26592157/\n[日常]:http://book.douban.com/subject/3062632/\n[动机]:http://book.douban.com/subject/1419685/\n[互动]:http://book.douban.com/subject/3792191/\n","slug":"读书/学习了12小时的社会科学","published":1,"updated":"2017-07-26T14:39:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksp007iq0d44l0ebkzx","content":"<p>摘要：社会科学是用科学的方法，研究人类社会的种种现象。如社会学研究人类社会（主要是当代），政治学研究政治、政策和有关的活动，经济学研究资源分配。20世纪初才开始发展，所以历史不是很长，经典学者也就有限的几个，不难理解各个学派的理论和之间的关系。但这些学说对理解人与人之间的面对面社交和网络社交都提供了坚实的理论基础，仔细消化之后，很有意思。 </p>\n<hr>\n<ul>\n<li>博客: <a href=\"http://www.cnblogs.com/jhzhu\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu</a></li>\n<li>邮箱: <a href=\"&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#106;&#x68;&#122;&#x68;&#117;&#117;&#115;&#x74;&#99;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;\">&#106;&#x68;&#122;&#x68;&#117;&#117;&#115;&#x74;&#99;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></li>\n<li>作者: 知明所以</li>\n<li>时间: 2015-11-08</li>\n</ul>\n<hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>[TOC]</p>\n<h2 id=\"扯扯淡\"><a href=\"#扯扯淡\" class=\"headerlink\" title=\"扯扯淡\"></a>扯扯淡</h2><p>本来对社会科学了解甚微，是一个偶然的原因让我接近了她，才发现她的魅力。</p>\n<p>是这样的，工作原因，需要在客户间建立一个活跃的、有影响力的、可以体现每个人自身价值的社区。所以，就要了解社交的基本需求和规律。于是就到处找资料，但畅销书中对于社交关系讲的透彻的几乎没有，一度让我非常难受。偶然一次，在书店看到一本<a href=\"http://book.douban.com/subject/26592157/\" target=\"_blank\" rel=\"external\">《纯粹关系-数字媒介变革书系》</a>，不论是看书名还是封面，给我的第一感觉都很好，翻了几页感觉还蛮深入，就买了下来。</p>\n<p>后来证明，这是一本让我又悲又喜的书：</p>\n<ul>\n<li>忧：作者语言功底实在是。。。很多超长语句，晦涩难懂。提取一下主干，发现很多语句连“主谓宾”都不完整。且没有什么自主思想，整书都在各种引用他人理论，感觉像是东拼西凑了一本书。</li>\n<li>喜：但是，我仍然十分感谢这本书，因为他打开了我深入了解社会科学的大门。必须肯定的一点是：这位作者加社会科学博士是读了不少论文的。所以，书中的超多出引用，都是名家名点，顺藤摸瓜，犹如桃花源记，进去之后，发现另有一番天地。 </li>\n</ul>\n<p>这件事情，让我理解到：现在畅销书泛滥，真正有营养的书可能并不多，但还是要去看。因为，有可能它作为一个索引能把你带到正确的方向上去，也有可能他能激活你平时想不到的一些想法（有时候，凭空想是很难想到很全面的，但是当你阅读到其他人在跟你做类似的事情的时候，可以激发你在这一块儿的想象力）。</p>\n<h2 id=\"关于社会科学\"><a href=\"#关于社会科学\" class=\"headerlink\" title=\"关于社会科学\"></a>关于社会科学</h2><p>涂尔干、韦伯、马克思三人并成为社会科学的三大奠基人，为世人研究社会科学开了先河，直到现在的各种社科类文献中，都省不掉这三人的引用。</p>\n<p>因为此次阅读内容比较广，加之我也没有像真正的<strong>主题阅读</strong>那样有无限的时间去研究这一个主题，所以，很难把这些思想有条理的整理起来。在此，我只列数几个有意思的主题，如果感兴趣，可以看看相应的书籍。</p>\n<h2 id=\"《宗教生活的基本形式》-涂尔干\"><a href=\"#《宗教生活的基本形式》-涂尔干\" class=\"headerlink\" title=\"《宗教生活的基本形式》-涂尔干\"></a>《宗教生活的基本形式》-涂尔干</h2><p>首先，我为什么要研究宗教呢？</p>\n<p>因为究其本质，我想达到的效果跟宗教的表现是很类似的。我想建立一个忠诚度高、活动频繁、对外人有吸引力、对内有良好秩序并满足成员需求的群体，在这几点上，宗教都是完美的模板。</p>\n<blockquote>\n<p>《宗》这本书的宗旨，就是要研究，实际上已经为人所知的最原始的和最简单的宗教，分析这种宗教，并尝试作出解释。一个宗教体系，倘若能满足以下两个条件，我们就可以说他是我们能见到的最原始的宗教：首先，应该能在组织得最简单的社会中找到它；其次，不必借用先前宗教的任何要素便有可能对他作出解释。</p>\n</blockquote>\n<p>简单来说，就是现代宗教发展了好几千年，成分动机等已经不像原始宗教那么单纯，有很多干扰我们探究宗教本质的因素，所以，涂尔干老先生决定去其皮表，取其筋骨，就研究最原始的宗教。 </p>\n<h3 id=\"宗教的定义\"><a href=\"#宗教的定义\" class=\"headerlink\" title=\"宗教的定义\"></a>宗教的定义</h3><p>本书讨论宗教的本质和定义：对精神存在的基本信仰就是宗教最低限度的定义。在通过各种宗教的对比中，去除了一些表面上看起来像本质实际却不是的杂质，比如自然崇拜、神灵、赎罪、祭祀等。</p>\n<blockquote>\n<p>宗教现象可以自然而然的氛围两个范畴：信仰和仪式。信仰是舆论的状态，是由各种表现构成的；仪式是某些明确的行为方式。这两类事实的差别，就是思想和行动的差别。 </p>\n<p>所有已知的宗教，还表现出一个共同特性：他们对所有事物都预设了分类，把人类所能想到的所有事物，不管是真实的还是理想的，都分为两类，或者两个对立的门类，并在一般意义上用两个截然不同的术语来称呼他们，其中的含义可以十分恰当的用<strong>凡俗的</strong>和<strong>神圣的</strong>这两个词传达出来。</p>\n</blockquote>\n<h3 id=\"与众不同的佛教\"><a href=\"#与众不同的佛教\" class=\"headerlink\" title=\"与众不同的佛教\"></a>与众不同的佛教</h3><p>在这里有一个有意思的点，讲了佛教的特殊性。佛教的“四圣谛”是</p>\n<blockquote>\n<p>第一个前提主张，在一切事物永恒的迁流变动中总是伴随着苦的存在；<br>第二个前提主张，贪爱是苦的原因；<br>第三个前提主张，消灭贪爱是灭段烦恼的唯一方式；<br>第四个前提主张，列举了证灭所必须的三个阶段：正道，静虑和智慧，这亦佛教的全部教义所在。</p>\n</blockquote>\n<p>其实想象，真的很有道理。只怪以前对佛教的误解是在太深。</p>\n<p>佛教与其它主流宗教相比，最大的不同是，它没有对“神”的依赖。在典型的其它宗教里，神是无所不能的宇宙主宰，顺从他，按照神的行为准则来行事，神就赐予你美好生活；否则，就会经受灾难。而佛教，没有对应的神的角色。在佛教里，一切皆取决于自我修行，消灭自己的贪爱。而佛祖的角色并<strong>不是主宰，而是榜样</strong>，佛祖已经涅槃，并不能直接影响人们的生活。</p>\n<h3 id=\"宗教中的仪式\"><a href=\"#宗教中的仪式\" class=\"headerlink\" title=\"宗教中的仪式\"></a>宗教中的仪式</h3><p><strong>仪式</strong>这个词非常有意思，我们经常被他影响却鲜有感觉到他的存在。举几个例子：</p>\n<ul>\n<li>大家在升国旗奏国歌的过程中，有没有那么一刻全身共鸣，觉得自己非常爱国？</li>\n<li>虽然春晚并不好看，但是大家还是会开着电视机，此时此刻，“全中国”这个概念在心里更加深刻。</li>\n</ul>\n<p>政府的这些规定和安排，无形中加深了人们对国家和政府的认可，这就是仪式的作用。</p>\n<blockquote>\n<p>宗教中的仪式完全凭着自身，产生的效力也不是神的力量所使然的；他们能够机械的产生效应，而这正是他们得以存在的原因。这些仪式并非由祈祷或供奉构成，人们预期的结果也并非出于神的善意；仪式的自动运作就可以获得这样的结果。</p>\n</blockquote>\n<h2 id=\"人在社会中的表演\"><a href=\"#人在社会中的表演\" class=\"headerlink\" title=\"人在社会中的表演\"></a>人在社会中的表演</h2><p>这个观点在<a href=\"http://book.douban.com/subject/3062632/\" target=\"_blank\" rel=\"external\">《日常生活中的自我呈现》-（美）欧文·戈夫曼 </a>中完整有完整的表现。如果总结成一句话就是：<strong>社交就是人们在社会中的自我表演，进而控制在他人心目中的形象。</strong></p>\n<p>（详细的笔记在公司的笔记本上，明日补充。其实有篇读书笔记做了非常美妙和形象的整理，比我讲的好太多，墙裂建议看看：<a href=\"http://book.douban.com/review/1629531/\" target=\"_blank\" rel=\"external\">http://book.douban.com/review/1629531/</a>）</p>\n<h2 id=\"马斯洛需求层次\"><a href=\"#马斯洛需求层次\" class=\"headerlink\" title=\"马斯洛需求层次\"></a>马斯洛需求层次</h2><p>马斯洛需求层次，大家都耳熟能详，不做赘述。他的这个理论第一次是在<a href=\"http://book.douban.com/subject/1419685/\" target=\"_blank\" rel=\"external\">《动机与人格》</a>中论述。其实在阐述需求层次之前，还有一些基本的前提条件更值得思考：</p>\n<blockquote>\n<p>有一个事实尽管看起来十分明显，但却几乎是被普遍的忽略了。对此，我也必须唤起大家的注意。那就是，我们已经得到的好处，慢慢的会被认为是理所当然的，会被忘记，会从意识中消失，最后甚至不会再被珍惜–至少它被再剥夺之前是这样的。</p>\n</blockquote>\n<h2 id=\"互动仪式链\"><a href=\"#互动仪式链\" class=\"headerlink\" title=\"互动仪式链\"></a>互动仪式链</h2><p><a href=\"http://book.douban.com/subject/3792191/\" target=\"_blank\" rel=\"external\">《互动仪式链》-兰德尔·柯林斯</a>是这一系列书中最有学术范儿且晦涩难懂的，所以，尽我所能也没读到1/3。但是对其主旨思想有了简单的了解，希望下次可以更深入的讲讲。</p>\n<p>柯林斯指出，</p>\n<blockquote>\n<p>微观社会学的研究对象是情景结构与其动力学。人们的一切互动都发生在一定的情境之中，其中至少包括两个人组成的机遇。故，局部情境是社会学分析的起点，而不是终点。但柯林斯指出，微观情境不是单个人的，而是经由个人所形成的社会关联或网络。因此，其理论的出发点之一是研究情境而不是个体，认为人类社会的全部历史都是有情境所构成的。</p>\n</blockquote>\n<p>互动仪式，包括以下四个要素：  </p>\n<blockquote>\n<p>（1）两个或两个以上的人聚集在统一场所，因此不管他们是否有特别有意识地关注对方，都能通过其身体在场而相互影响。<br>（2）对局外人进行了界限，因此参与者知道谁在参与，而谁被排除在外。<br>（3）人们将其注意力集中在共同的对象活动上，并通过相互传达该关注焦点，而彼此知道了关注焦点。<br>（4）人们分享着共同的情绪或情感。  </p>\n</blockquote>\n<p>互动仪式能得到以下几种结果，让参与者得到以下体验：</p>\n<blockquote>\n<ol>\n<li>群体团结，一种成员身份的感觉。</li>\n<li>个人情感能量：一种采取行动时自信、兴高采烈、有力量、满腔热忱与主动进取的感觉。</li>\n<li>代表群体的符号： 标识或其他代表物（形象化图标、文字、姿势），是成员感到自己与集体相关。充满集体团结感的人格外尊重符号，并会捍卫符号以避免其受到局外人的轻视，甚至内部人员的背弃。</li>\n<li>道德感：维护群体中正义感，尊重群体符号，防止受到违背者的侵害。</li>\n</ol>\n</blockquote>\n<p>柯林斯还提出了一个人类的行动模型：人们趋向于那些感觉是当前可得到的最高强度的互动仪式的互动；也就是说，他们趋向于获得最高的情感能量回报。所以，行动收市场式机制的驱动。</p>\n<p>有一段话很有意思：</p>\n<blockquote>\n<p>当一个群体在失去一个成员时，葬礼起了重新整合的作用：约过其外在的表面，其仪式是为活人做的，而不是为死者做的，举行仪式对死者带来的热情越高涨，它对集体的威力越大，它需要重新整合自己的力量越大。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：社会科学是用科学的方法，研究人类社会的种种现象。如社会学研究人类社会（主要是当代），政治学研究政治、政策和有关的活动，经济学研究资源分配。20世纪初才开始发展，所以历史不是很长，经典学者也就有限的几个，不难理解各个学派的理论和之间的关系。但这些学说对理解人与人之间的面对面社交和网络社交都提供了坚实的理论基础，仔细消化之后，很有意思。 </p>\n<hr>\n<ul>\n<li>博客: <a href=\"http://www.cnblogs.com/jhzhu\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu</a></li>\n<li>邮箱: <a href=\"&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#106;&#x68;&#122;&#x68;&#117;&#117;&#115;&#x74;&#99;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;\">&#106;&#x68;&#122;&#x68;&#117;&#117;&#115;&#x74;&#99;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></li>\n<li>作者: 知明所以</li>\n<li>时间: 2015-11-08</li>\n</ul>\n<hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>[TOC]</p>\n<h2 id=\"扯扯淡\"><a href=\"#扯扯淡\" class=\"headerlink\" title=\"扯扯淡\"></a>扯扯淡</h2><p>本来对社会科学了解甚微，是一个偶然的原因让我接近了她，才发现她的魅力。</p>\n<p>是这样的，工作原因，需要在客户间建立一个活跃的、有影响力的、可以体现每个人自身价值的社区。所以，就要了解社交的基本需求和规律。于是就到处找资料，但畅销书中对于社交关系讲的透彻的几乎没有，一度让我非常难受。偶然一次，在书店看到一本<a href=\"http://book.douban.com/subject/26592157/\" target=\"_blank\" rel=\"external\">《纯粹关系-数字媒介变革书系》</a>，不论是看书名还是封面，给我的第一感觉都很好，翻了几页感觉还蛮深入，就买了下来。</p>\n<p>后来证明，这是一本让我又悲又喜的书：</p>\n<ul>\n<li>忧：作者语言功底实在是。。。很多超长语句，晦涩难懂。提取一下主干，发现很多语句连“主谓宾”都不完整。且没有什么自主思想，整书都在各种引用他人理论，感觉像是东拼西凑了一本书。</li>\n<li>喜：但是，我仍然十分感谢这本书，因为他打开了我深入了解社会科学的大门。必须肯定的一点是：这位作者加社会科学博士是读了不少论文的。所以，书中的超多出引用，都是名家名点，顺藤摸瓜，犹如桃花源记，进去之后，发现另有一番天地。 </li>\n</ul>\n<p>这件事情，让我理解到：现在畅销书泛滥，真正有营养的书可能并不多，但还是要去看。因为，有可能它作为一个索引能把你带到正确的方向上去，也有可能他能激活你平时想不到的一些想法（有时候，凭空想是很难想到很全面的，但是当你阅读到其他人在跟你做类似的事情的时候，可以激发你在这一块儿的想象力）。</p>\n<h2 id=\"关于社会科学\"><a href=\"#关于社会科学\" class=\"headerlink\" title=\"关于社会科学\"></a>关于社会科学</h2><p>涂尔干、韦伯、马克思三人并成为社会科学的三大奠基人，为世人研究社会科学开了先河，直到现在的各种社科类文献中，都省不掉这三人的引用。</p>\n<p>因为此次阅读内容比较广，加之我也没有像真正的<strong>主题阅读</strong>那样有无限的时间去研究这一个主题，所以，很难把这些思想有条理的整理起来。在此，我只列数几个有意思的主题，如果感兴趣，可以看看相应的书籍。</p>\n<h2 id=\"《宗教生活的基本形式》-涂尔干\"><a href=\"#《宗教生活的基本形式》-涂尔干\" class=\"headerlink\" title=\"《宗教生活的基本形式》-涂尔干\"></a>《宗教生活的基本形式》-涂尔干</h2><p>首先，我为什么要研究宗教呢？</p>\n<p>因为究其本质，我想达到的效果跟宗教的表现是很类似的。我想建立一个忠诚度高、活动频繁、对外人有吸引力、对内有良好秩序并满足成员需求的群体，在这几点上，宗教都是完美的模板。</p>\n<blockquote>\n<p>《宗》这本书的宗旨，就是要研究，实际上已经为人所知的最原始的和最简单的宗教，分析这种宗教，并尝试作出解释。一个宗教体系，倘若能满足以下两个条件，我们就可以说他是我们能见到的最原始的宗教：首先，应该能在组织得最简单的社会中找到它；其次，不必借用先前宗教的任何要素便有可能对他作出解释。</p>\n</blockquote>\n<p>简单来说，就是现代宗教发展了好几千年，成分动机等已经不像原始宗教那么单纯，有很多干扰我们探究宗教本质的因素，所以，涂尔干老先生决定去其皮表，取其筋骨，就研究最原始的宗教。 </p>\n<h3 id=\"宗教的定义\"><a href=\"#宗教的定义\" class=\"headerlink\" title=\"宗教的定义\"></a>宗教的定义</h3><p>本书讨论宗教的本质和定义：对精神存在的基本信仰就是宗教最低限度的定义。在通过各种宗教的对比中，去除了一些表面上看起来像本质实际却不是的杂质，比如自然崇拜、神灵、赎罪、祭祀等。</p>\n<blockquote>\n<p>宗教现象可以自然而然的氛围两个范畴：信仰和仪式。信仰是舆论的状态，是由各种表现构成的；仪式是某些明确的行为方式。这两类事实的差别，就是思想和行动的差别。 </p>\n<p>所有已知的宗教，还表现出一个共同特性：他们对所有事物都预设了分类，把人类所能想到的所有事物，不管是真实的还是理想的，都分为两类，或者两个对立的门类，并在一般意义上用两个截然不同的术语来称呼他们，其中的含义可以十分恰当的用<strong>凡俗的</strong>和<strong>神圣的</strong>这两个词传达出来。</p>\n</blockquote>\n<h3 id=\"与众不同的佛教\"><a href=\"#与众不同的佛教\" class=\"headerlink\" title=\"与众不同的佛教\"></a>与众不同的佛教</h3><p>在这里有一个有意思的点，讲了佛教的特殊性。佛教的“四圣谛”是</p>\n<blockquote>\n<p>第一个前提主张，在一切事物永恒的迁流变动中总是伴随着苦的存在；<br>第二个前提主张，贪爱是苦的原因；<br>第三个前提主张，消灭贪爱是灭段烦恼的唯一方式；<br>第四个前提主张，列举了证灭所必须的三个阶段：正道，静虑和智慧，这亦佛教的全部教义所在。</p>\n</blockquote>\n<p>其实想象，真的很有道理。只怪以前对佛教的误解是在太深。</p>\n<p>佛教与其它主流宗教相比，最大的不同是，它没有对“神”的依赖。在典型的其它宗教里，神是无所不能的宇宙主宰，顺从他，按照神的行为准则来行事，神就赐予你美好生活；否则，就会经受灾难。而佛教，没有对应的神的角色。在佛教里，一切皆取决于自我修行，消灭自己的贪爱。而佛祖的角色并<strong>不是主宰，而是榜样</strong>，佛祖已经涅槃，并不能直接影响人们的生活。</p>\n<h3 id=\"宗教中的仪式\"><a href=\"#宗教中的仪式\" class=\"headerlink\" title=\"宗教中的仪式\"></a>宗教中的仪式</h3><p><strong>仪式</strong>这个词非常有意思，我们经常被他影响却鲜有感觉到他的存在。举几个例子：</p>\n<ul>\n<li>大家在升国旗奏国歌的过程中，有没有那么一刻全身共鸣，觉得自己非常爱国？</li>\n<li>虽然春晚并不好看，但是大家还是会开着电视机，此时此刻，“全中国”这个概念在心里更加深刻。</li>\n</ul>\n<p>政府的这些规定和安排，无形中加深了人们对国家和政府的认可，这就是仪式的作用。</p>\n<blockquote>\n<p>宗教中的仪式完全凭着自身，产生的效力也不是神的力量所使然的；他们能够机械的产生效应，而这正是他们得以存在的原因。这些仪式并非由祈祷或供奉构成，人们预期的结果也并非出于神的善意；仪式的自动运作就可以获得这样的结果。</p>\n</blockquote>\n<h2 id=\"人在社会中的表演\"><a href=\"#人在社会中的表演\" class=\"headerlink\" title=\"人在社会中的表演\"></a>人在社会中的表演</h2><p>这个观点在<a href=\"http://book.douban.com/subject/3062632/\" target=\"_blank\" rel=\"external\">《日常生活中的自我呈现》-（美）欧文·戈夫曼 </a>中完整有完整的表现。如果总结成一句话就是：<strong>社交就是人们在社会中的自我表演，进而控制在他人心目中的形象。</strong></p>\n<p>（详细的笔记在公司的笔记本上，明日补充。其实有篇读书笔记做了非常美妙和形象的整理，比我讲的好太多，墙裂建议看看：<a href=\"http://book.douban.com/review/1629531/\" target=\"_blank\" rel=\"external\">http://book.douban.com/review/1629531/</a>）</p>\n<h2 id=\"马斯洛需求层次\"><a href=\"#马斯洛需求层次\" class=\"headerlink\" title=\"马斯洛需求层次\"></a>马斯洛需求层次</h2><p>马斯洛需求层次，大家都耳熟能详，不做赘述。他的这个理论第一次是在<a href=\"http://book.douban.com/subject/1419685/\" target=\"_blank\" rel=\"external\">《动机与人格》</a>中论述。其实在阐述需求层次之前，还有一些基本的前提条件更值得思考：</p>\n<blockquote>\n<p>有一个事实尽管看起来十分明显，但却几乎是被普遍的忽略了。对此，我也必须唤起大家的注意。那就是，我们已经得到的好处，慢慢的会被认为是理所当然的，会被忘记，会从意识中消失，最后甚至不会再被珍惜–至少它被再剥夺之前是这样的。</p>\n</blockquote>\n<h2 id=\"互动仪式链\"><a href=\"#互动仪式链\" class=\"headerlink\" title=\"互动仪式链\"></a>互动仪式链</h2><p><a href=\"http://book.douban.com/subject/3792191/\" target=\"_blank\" rel=\"external\">《互动仪式链》-兰德尔·柯林斯</a>是这一系列书中最有学术范儿且晦涩难懂的，所以，尽我所能也没读到1/3。但是对其主旨思想有了简单的了解，希望下次可以更深入的讲讲。</p>\n<p>柯林斯指出，</p>\n<blockquote>\n<p>微观社会学的研究对象是情景结构与其动力学。人们的一切互动都发生在一定的情境之中，其中至少包括两个人组成的机遇。故，局部情境是社会学分析的起点，而不是终点。但柯林斯指出，微观情境不是单个人的，而是经由个人所形成的社会关联或网络。因此，其理论的出发点之一是研究情境而不是个体，认为人类社会的全部历史都是有情境所构成的。</p>\n</blockquote>\n<p>互动仪式，包括以下四个要素：  </p>\n<blockquote>\n<p>（1）两个或两个以上的人聚集在统一场所，因此不管他们是否有特别有意识地关注对方，都能通过其身体在场而相互影响。<br>（2）对局外人进行了界限，因此参与者知道谁在参与，而谁被排除在外。<br>（3）人们将其注意力集中在共同的对象活动上，并通过相互传达该关注焦点，而彼此知道了关注焦点。<br>（4）人们分享着共同的情绪或情感。  </p>\n</blockquote>\n<p>互动仪式能得到以下几种结果，让参与者得到以下体验：</p>\n<blockquote>\n<ol>\n<li>群体团结，一种成员身份的感觉。</li>\n<li>个人情感能量：一种采取行动时自信、兴高采烈、有力量、满腔热忱与主动进取的感觉。</li>\n<li>代表群体的符号： 标识或其他代表物（形象化图标、文字、姿势），是成员感到自己与集体相关。充满集体团结感的人格外尊重符号，并会捍卫符号以避免其受到局外人的轻视，甚至内部人员的背弃。</li>\n<li>道德感：维护群体中正义感，尊重群体符号，防止受到违背者的侵害。</li>\n</ol>\n</blockquote>\n<p>柯林斯还提出了一个人类的行动模型：人们趋向于那些感觉是当前可得到的最高强度的互动仪式的互动；也就是说，他们趋向于获得最高的情感能量回报。所以，行动收市场式机制的驱动。</p>\n<p>有一段话很有意思：</p>\n<blockquote>\n<p>当一个群体在失去一个成员时，葬礼起了重新整合的作用：约过其外在的表面，其仪式是为活人做的，而不是为死者做的，举行仪式对死者带来的热情越高涨，它对集体的威力越大，它需要重新整合自己的力量越大。</p>\n</blockquote>\n"},{"_content":"date: 2015-10-6\ntitle: 《学会提问》读书笔记\ntags: \n- 读书笔记\n- 学会提问\n- 批判性思维\n- 选择性吸收\ncategories: \n- 读书\ndescription: 这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：\n\n# 书籍\n\n* 书名：学会提问(原书第10版)\n* 作者：尼尔•布朗 (Neil Browne) (作者)，斯图尔特•基利 (Stuart Keeley) (作者)，吴礼敬 (译者)\n* 出版社：机械工业出版社\n* 外文书名：Asking the Right Questions:A Guide to Critical Thinking\n\n# 感想\n\n介绍《学》之前，我先讲一个亲身经历的故事。\n这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：\n\n1. 此贴语言毫无逻辑型，细节干瘪，无凭无据，居然得到这么多人支持。\n2. 作为中国知名学府的学生，我为他们感到悲哀：如此不明事理人云亦云，跟没受过高等教育的网民有何区别？（作为校友，多少有些恋校情节）\n\n故事的后续是：王同学看到此贴，详细解释了事情经过。王同学觉得A同学过于浮躁，合法的在试用期结束之时结束了合约。A同学离职之前，有一个星期在找其他工作，王同学也照付了正常薪水。描述过程有理有据，时间节点十分清楚，工资单和邮件记录也一一列出。\n\n我并不想讨论应届生去校友的创业公司是否明智，我关心的是：**互联网信息浩瀚，如何明辨是非，选择性吸收？**而《学》帮我们完美得回答了此问题。\n\n# 内容介绍\n\n好了，回归正题，我们来介绍本期主角。\n\n### 一切从批判性思维开始\n\n>很多影评家迫不及待地告诉我们，哪些电影不容错过，哪些电影不看为妙。可是他们的看法到底有哪些我们可以笃信不疑呢？有哪位影评界的权威但凡做出结论一定会提供最令人信服的理由？\n>作为一个富有思想的人，对自己的所见所闻如何回应，你必须要做出选择，这就需要批判性思维。\n\n### 什么是批判性思维\n\n>批判性思维是本书使用的一个术语，其内容主要涵盖以下几方面： \n\n>1. 有一套相互关联、环环相扣的关键问题的意识；\n2. 恰如其分地提出和回答关键问题的能力；\n3. 积极主动地利用关键问题的强烈愿望。\n\n### 内容梗要\n\n第一章，作为全书的引导章，主要介绍了下面几个方面：\n\n1. 介绍批判性思维的概念，已在本文上一节中展示。\n2. 批判性思维的人应该拥有的价值观：自主性、好奇心、谦恭有礼、以理服人。\n3. 我们思考时时刻都有明确的目标，绝大多数时候，思考的过程就是捍卫自己的过程，故很容易成为自己思想的盲目捍卫者。更加明智的做法是：一旦思考，目的就要让我们的思考更加有深度更加精确，这样可以锻炼自己。\n\n\n### 后续章节，如何提问的七个方面\n\n后续11个章节，以10个角度，全面介绍了正确提问的方法和思考方式，分别是：\n\n1. 结论和论题是什么\n2. 理由是什么，他们为什么相信这个观点？常见的理由的提示词有：“由于、基于这个事实、研究显示、鉴于。。。”\n3. 哪些词语意思不够明确，哪些词是关键词，一个多义词在前后的语境里意义是否改变，某些饱含情感的词的意义超出了字典里的解释。\n4. 什么是价值观假设和描述性假设，如何找出幕后的价值观假设，\n5. 推理过程有没有谬误\n6. 证据的效力如何，证据来源于何处，取证过程是否合乎常理。\n7. 有没有替代原因\n8. 数据有没有欺骗性，数据用了什么表现形式，经过了怎样的处理，对比条件是什么。\n9. 有什么重要信息被省略了\n10. 能得出哪些合理的结论\n\n如果对重要的观点，都仔细了问了这些问题，就不难做出正确的判断了。\n","source":"_posts/读书/学会提问.md","raw":"date: 2015-10-6\ntitle: 《学会提问》读书笔记\ntags: \n- 读书笔记\n- 学会提问\n- 批判性思维\n- 选择性吸收\ncategories: \n- 读书\ndescription: 这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：\n\n# 书籍\n\n* 书名：学会提问(原书第10版)\n* 作者：尼尔•布朗 (Neil Browne) (作者)，斯图尔特•基利 (Stuart Keeley) (作者)，吴礼敬 (译者)\n* 出版社：机械工业出版社\n* 外文书名：Asking the Right Questions:A Guide to Critical Thinking\n\n# 感想\n\n介绍《学》之前，我先讲一个亲身经历的故事。\n这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：\n\n1. 此贴语言毫无逻辑型，细节干瘪，无凭无据，居然得到这么多人支持。\n2. 作为中国知名学府的学生，我为他们感到悲哀：如此不明事理人云亦云，跟没受过高等教育的网民有何区别？（作为校友，多少有些恋校情节）\n\n故事的后续是：王同学看到此贴，详细解释了事情经过。王同学觉得A同学过于浮躁，合法的在试用期结束之时结束了合约。A同学离职之前，有一个星期在找其他工作，王同学也照付了正常薪水。描述过程有理有据，时间节点十分清楚，工资单和邮件记录也一一列出。\n\n我并不想讨论应届生去校友的创业公司是否明智，我关心的是：**互联网信息浩瀚，如何明辨是非，选择性吸收？**而《学》帮我们完美得回答了此问题。\n\n# 内容介绍\n\n好了，回归正题，我们来介绍本期主角。\n\n### 一切从批判性思维开始\n\n>很多影评家迫不及待地告诉我们，哪些电影不容错过，哪些电影不看为妙。可是他们的看法到底有哪些我们可以笃信不疑呢？有哪位影评界的权威但凡做出结论一定会提供最令人信服的理由？\n>作为一个富有思想的人，对自己的所见所闻如何回应，你必须要做出选择，这就需要批判性思维。\n\n### 什么是批判性思维\n\n>批判性思维是本书使用的一个术语，其内容主要涵盖以下几方面： \n\n>1. 有一套相互关联、环环相扣的关键问题的意识；\n2. 恰如其分地提出和回答关键问题的能力；\n3. 积极主动地利用关键问题的强烈愿望。\n\n### 内容梗要\n\n第一章，作为全书的引导章，主要介绍了下面几个方面：\n\n1. 介绍批判性思维的概念，已在本文上一节中展示。\n2. 批判性思维的人应该拥有的价值观：自主性、好奇心、谦恭有礼、以理服人。\n3. 我们思考时时刻都有明确的目标，绝大多数时候，思考的过程就是捍卫自己的过程，故很容易成为自己思想的盲目捍卫者。更加明智的做法是：一旦思考，目的就要让我们的思考更加有深度更加精确，这样可以锻炼自己。\n\n\n### 后续章节，如何提问的七个方面\n\n后续11个章节，以10个角度，全面介绍了正确提问的方法和思考方式，分别是：\n\n1. 结论和论题是什么\n2. 理由是什么，他们为什么相信这个观点？常见的理由的提示词有：“由于、基于这个事实、研究显示、鉴于。。。”\n3. 哪些词语意思不够明确，哪些词是关键词，一个多义词在前后的语境里意义是否改变，某些饱含情感的词的意义超出了字典里的解释。\n4. 什么是价值观假设和描述性假设，如何找出幕后的价值观假设，\n5. 推理过程有没有谬误\n6. 证据的效力如何，证据来源于何处，取证过程是否合乎常理。\n7. 有没有替代原因\n8. 数据有没有欺骗性，数据用了什么表现形式，经过了怎样的处理，对比条件是什么。\n9. 有什么重要信息被省略了\n10. 能得出哪些合理的结论\n\n如果对重要的观点，都仔细了问了这些问题，就不难做出正确的判断了。\n","slug":"读书/学会提问","published":1,"date":"2016-03-15T08:01:25.000Z","updated":"2017-07-26T14:40:16.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksu007lq0d4whcwas5o","content":"<p>date: 2015-10-6<br>title: 《学会提问》读书笔记<br>tags: </p>\n<ul>\n<li>读书笔记</li>\n<li>学会提问</li>\n<li>批判性思维</li>\n<li>选择性吸收<br>categories: </li>\n<li>读书<br>description: 这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：</li>\n</ul>\n<h1 id=\"书籍\"><a href=\"#书籍\" class=\"headerlink\" title=\"书籍\"></a>书籍</h1><ul>\n<li>书名：学会提问(原书第10版)</li>\n<li>作者：尼尔•布朗 (Neil Browne) (作者)，斯图尔特•基利 (Stuart Keeley) (作者)，吴礼敬 (译者)</li>\n<li>出版社：机械工业出版社</li>\n<li>外文书名：Asking the Right Questions:A Guide to Critical Thinking</li>\n</ul>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>介绍《学》之前，我先讲一个亲身经历的故事。<br>这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：</p>\n<ol>\n<li>此贴语言毫无逻辑型，细节干瘪，无凭无据，居然得到这么多人支持。</li>\n<li>作为中国知名学府的学生，我为他们感到悲哀：如此不明事理人云亦云，跟没受过高等教育的网民有何区别？（作为校友，多少有些恋校情节）</li>\n</ol>\n<p>故事的后续是：王同学看到此贴，详细解释了事情经过。王同学觉得A同学过于浮躁，合法的在试用期结束之时结束了合约。A同学离职之前，有一个星期在找其他工作，王同学也照付了正常薪水。描述过程有理有据，时间节点十分清楚，工资单和邮件记录也一一列出。</p>\n<p>我并不想讨论应届生去校友的创业公司是否明智，我关心的是：<strong>互联网信息浩瀚，如何明辨是非，选择性吸收？</strong>而《学》帮我们完美得回答了此问题。</p>\n<h1 id=\"内容介绍\"><a href=\"#内容介绍\" class=\"headerlink\" title=\"内容介绍\"></a>内容介绍</h1><p>好了，回归正题，我们来介绍本期主角。</p>\n<h3 id=\"一切从批判性思维开始\"><a href=\"#一切从批判性思维开始\" class=\"headerlink\" title=\"一切从批判性思维开始\"></a>一切从批判性思维开始</h3><blockquote>\n<p>很多影评家迫不及待地告诉我们，哪些电影不容错过，哪些电影不看为妙。可是他们的看法到底有哪些我们可以笃信不疑呢？有哪位影评界的权威但凡做出结论一定会提供最令人信服的理由？<br>作为一个富有思想的人，对自己的所见所闻如何回应，你必须要做出选择，这就需要批判性思维。</p>\n</blockquote>\n<h3 id=\"什么是批判性思维\"><a href=\"#什么是批判性思维\" class=\"headerlink\" title=\"什么是批判性思维\"></a>什么是批判性思维</h3><blockquote>\n<p>批判性思维是本书使用的一个术语，其内容主要涵盖以下几方面： </p>\n<ol>\n<li>有一套相互关联、环环相扣的关键问题的意识；</li>\n<li>恰如其分地提出和回答关键问题的能力；</li>\n<li>积极主动地利用关键问题的强烈愿望。</li>\n</ol>\n</blockquote>\n<h3 id=\"内容梗要\"><a href=\"#内容梗要\" class=\"headerlink\" title=\"内容梗要\"></a>内容梗要</h3><p>第一章，作为全书的引导章，主要介绍了下面几个方面：</p>\n<ol>\n<li>介绍批判性思维的概念，已在本文上一节中展示。</li>\n<li>批判性思维的人应该拥有的价值观：自主性、好奇心、谦恭有礼、以理服人。</li>\n<li>我们思考时时刻都有明确的目标，绝大多数时候，思考的过程就是捍卫自己的过程，故很容易成为自己思想的盲目捍卫者。更加明智的做法是：一旦思考，目的就要让我们的思考更加有深度更加精确，这样可以锻炼自己。</li>\n</ol>\n<h3 id=\"后续章节，如何提问的七个方面\"><a href=\"#后续章节，如何提问的七个方面\" class=\"headerlink\" title=\"后续章节，如何提问的七个方面\"></a>后续章节，如何提问的七个方面</h3><p>后续11个章节，以10个角度，全面介绍了正确提问的方法和思考方式，分别是：</p>\n<ol>\n<li>结论和论题是什么</li>\n<li>理由是什么，他们为什么相信这个观点？常见的理由的提示词有：“由于、基于这个事实、研究显示、鉴于。。。”</li>\n<li>哪些词语意思不够明确，哪些词是关键词，一个多义词在前后的语境里意义是否改变，某些饱含情感的词的意义超出了字典里的解释。</li>\n<li>什么是价值观假设和描述性假设，如何找出幕后的价值观假设，</li>\n<li>推理过程有没有谬误</li>\n<li>证据的效力如何，证据来源于何处，取证过程是否合乎常理。</li>\n<li>有没有替代原因</li>\n<li>数据有没有欺骗性，数据用了什么表现形式，经过了怎样的处理，对比条件是什么。</li>\n<li>有什么重要信息被省略了</li>\n<li>能得出哪些合理的结论</li>\n</ol>\n<p>如果对重要的观点，都仔细了问了这些问题，就不难做出正确的判断了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>date: 2015-10-6<br>title: 《学会提问》读书笔记<br>tags: </p>\n<ul>\n<li>读书笔记</li>\n<li>学会提问</li>\n<li>批判性思维</li>\n<li>选择性吸收<br>categories: </li>\n<li>读书<br>description: 这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：</li>\n</ul>\n<h1 id=\"书籍\"><a href=\"#书籍\" class=\"headerlink\" title=\"书籍\"></a>书籍</h1><ul>\n<li>书名：学会提问(原书第10版)</li>\n<li>作者：尼尔•布朗 (Neil Browne) (作者)，斯图尔特•基利 (Stuart Keeley) (作者)，吴礼敬 (译者)</li>\n<li>出版社：机械工业出版社</li>\n<li>外文书名：Asking the Right Questions:A Guide to Critical Thinking</li>\n</ul>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>介绍《学》之前，我先讲一个亲身经历的故事。<br>这个故事发生在大约一个月前，案发现场是我本科学校的BBS，参与者有我的本科同班同学王同学（创业中）、一位在王同学公司工作过的10级师弟A、其它混迹于BBS的科大在校生。故事开始于A同学的吐槽贴，声情并茂的控诉了王同学如何待他刻薄，得出结论“以后进校友公司要谨慎，都不是好东西，容易被剥削”。从文字中看，他感情上很激动，但去掉感情词汇之后我只看出一个事实：他试用期结束被开除了。更让我惊讶的是，此贴大概有20多条回帖，几乎全是表达“校友公司要格外注意，谨防被骗”。我太失望了：</p>\n<ol>\n<li>此贴语言毫无逻辑型，细节干瘪，无凭无据，居然得到这么多人支持。</li>\n<li>作为中国知名学府的学生，我为他们感到悲哀：如此不明事理人云亦云，跟没受过高等教育的网民有何区别？（作为校友，多少有些恋校情节）</li>\n</ol>\n<p>故事的后续是：王同学看到此贴，详细解释了事情经过。王同学觉得A同学过于浮躁，合法的在试用期结束之时结束了合约。A同学离职之前，有一个星期在找其他工作，王同学也照付了正常薪水。描述过程有理有据，时间节点十分清楚，工资单和邮件记录也一一列出。</p>\n<p>我并不想讨论应届生去校友的创业公司是否明智，我关心的是：<strong>互联网信息浩瀚，如何明辨是非，选择性吸收？</strong>而《学》帮我们完美得回答了此问题。</p>\n<h1 id=\"内容介绍\"><a href=\"#内容介绍\" class=\"headerlink\" title=\"内容介绍\"></a>内容介绍</h1><p>好了，回归正题，我们来介绍本期主角。</p>\n<h3 id=\"一切从批判性思维开始\"><a href=\"#一切从批判性思维开始\" class=\"headerlink\" title=\"一切从批判性思维开始\"></a>一切从批判性思维开始</h3><blockquote>\n<p>很多影评家迫不及待地告诉我们，哪些电影不容错过，哪些电影不看为妙。可是他们的看法到底有哪些我们可以笃信不疑呢？有哪位影评界的权威但凡做出结论一定会提供最令人信服的理由？<br>作为一个富有思想的人，对自己的所见所闻如何回应，你必须要做出选择，这就需要批判性思维。</p>\n</blockquote>\n<h3 id=\"什么是批判性思维\"><a href=\"#什么是批判性思维\" class=\"headerlink\" title=\"什么是批判性思维\"></a>什么是批判性思维</h3><blockquote>\n<p>批判性思维是本书使用的一个术语，其内容主要涵盖以下几方面： </p>\n<ol>\n<li>有一套相互关联、环环相扣的关键问题的意识；</li>\n<li>恰如其分地提出和回答关键问题的能力；</li>\n<li>积极主动地利用关键问题的强烈愿望。</li>\n</ol>\n</blockquote>\n<h3 id=\"内容梗要\"><a href=\"#内容梗要\" class=\"headerlink\" title=\"内容梗要\"></a>内容梗要</h3><p>第一章，作为全书的引导章，主要介绍了下面几个方面：</p>\n<ol>\n<li>介绍批判性思维的概念，已在本文上一节中展示。</li>\n<li>批判性思维的人应该拥有的价值观：自主性、好奇心、谦恭有礼、以理服人。</li>\n<li>我们思考时时刻都有明确的目标，绝大多数时候，思考的过程就是捍卫自己的过程，故很容易成为自己思想的盲目捍卫者。更加明智的做法是：一旦思考，目的就要让我们的思考更加有深度更加精确，这样可以锻炼自己。</li>\n</ol>\n<h3 id=\"后续章节，如何提问的七个方面\"><a href=\"#后续章节，如何提问的七个方面\" class=\"headerlink\" title=\"后续章节，如何提问的七个方面\"></a>后续章节，如何提问的七个方面</h3><p>后续11个章节，以10个角度，全面介绍了正确提问的方法和思考方式，分别是：</p>\n<ol>\n<li>结论和论题是什么</li>\n<li>理由是什么，他们为什么相信这个观点？常见的理由的提示词有：“由于、基于这个事实、研究显示、鉴于。。。”</li>\n<li>哪些词语意思不够明确，哪些词是关键词，一个多义词在前后的语境里意义是否改变，某些饱含情感的词的意义超出了字典里的解释。</li>\n<li>什么是价值观假设和描述性假设，如何找出幕后的价值观假设，</li>\n<li>推理过程有没有谬误</li>\n<li>证据的效力如何，证据来源于何处，取证过程是否合乎常理。</li>\n<li>有没有替代原因</li>\n<li>数据有没有欺骗性，数据用了什么表现形式，经过了怎样的处理，对比条件是什么。</li>\n<li>有什么重要信息被省略了</li>\n<li>能得出哪些合理的结论</li>\n</ol>\n<p>如果对重要的观点，都仔细了问了这些问题，就不难做出正确的判断了。</p>\n"},{"title":"《掌舵》读书笔记","date":"2014-11-30T11:56:00.000Z","description":"我从来不相信好人必定有好报。这个社会不是因为你是个好人就给你好的回报，而是因为你比别人更了解这个社会的运转机制并做了正确的选择。送礼有送礼的规矩，做生意有做生意的规矩，做官有做官的规矩，要混得好，你得比别人在更多方面都要懂得生存规则。我还坚信的：如果你懂得并遵守了各行各业的规矩，一般来说也会是个好人。","_content":"\n\n# 简介\n\n[《掌舵》](http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KD7SHNW&linkCode=as2&tag=milo2012-23)是一本当代商场+官场小说。有上下两本（[《掌舵》](http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KD7SHNW&linkCode=as2&tag=milo2012-23)、[《掌舵2》](http://www.amazon.cn/gp/product/B00N3GAC9M/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00N3GAC9M&linkCode=as2&tag=milo2012-23)）。书中主人翁杜林祥是一个没有什么文化的包工头。小说描述了他从一个屌丝包工头到港股上市地产公司老板的起伏人生。每一次搭上新的“关系”，每已次在各种阴险狡诈中斡旋，都真实而刺激，生动的还原了当代中国政商圈的生态。\n\n有句话说，**历史里，人是真的，事是假的；小说里，人是假的，事是真的。**所以，想了解些猛料，还是看小说吧。\n\n\n# 精选章节\n\n> 望着万顺龙一脸为难的表情，杜林祥心中窃喜。在商场摸爬滚打多年，杜林祥深知，任何大生意，不可能一蹴而就，都是砍价砍出来的。你报出一个价格，对方没有断然拒绝，而是做出一副为难表情，恰恰说明他已经动心，这样才有谈下去的可能。\n\n反思：很多事情都要留有余地，不要一棒子打死。\n  \n---  \n  \n>自从上次安幼琪叮嘱他，不要让卓伯均知道他们私下有联系之后，杜林祥就悟出一个道理，在这些达官显贵之间周旋，千万不要去炫耀同谁的关系很铁，最好是装作彼此都不认识。\n\n反思：有些东西可以炫耀，有些东西不能炫耀，要拿捏得体。\n\n---\n>从机场开车回市区的路上，杜林祥感觉过去一天的经历仿佛做梦一般。当初因为要信守承诺，狠狠心送给了周志斌两百万；前几天仅仅是因为面子上抹不过去，所以才心不甘情不愿地去了趟三亚。正因为这一连串的无心插柳，却和常务副市长攀上了关系。杜林祥只得感叹，行走江湖，还是得多结善缘啊！\n\n反思：多条朋友多条路，在没认定此人不可交之前，保持必要的礼貌和原则。\n\n---\n\n>“人啊，还是要给自己留点缺陷。”杜林祥说，“我以前听一位教授讲过，台湾旺旺集团的老板蔡衍明就立下家规，所有的儿子都不准上大学。蔡衍明对儿子说，你将来会领导很多博士，如果你自己既是老板，又是博士，就不会谦虚地听那些博士的意见，就算那些博士想帮你，都帮不到你了。应该有些事输给人家，有点自卑感，对人家才会客气一点。”\n\n反思：虚心是自我提高的前提\n\n---\n\n>卓伯均叹了一口气：“我是玩政治的。政治家与科学家最大的不同就在于，决定科学家一生成就的关键在于他最好的一步棋有多好。而决定政治家一生成就的，在于他最臭的那步棋，究竟有多臭。”\n\n反思：相对而言，当官更不易。但是在权力面前，金钱的吸引力太微不足道了。权力的致命缺点在于它的“短暂”。\n\n---\n>有种说法，勤政又廉政的官员，只需要有人送政绩；勤政而不廉政的官员，既需要有人送钱，又需要有人送政绩；既不勤政又不廉政的官员，眼里就只有钱。一个高明的领导还必须有识人之明，分清哪些人只会送钱，哪些人能给自己带来政绩，哪些是只会摇尾巴的哈巴狗，哪些才是能斗的鹰犬。\n\n反思：为官之人，或要政绩，或要钱财；要政绩的官，无非是想达到更大的高度换取更大的利润，类似于放长线钓大鱼。\n\n---\n>有句古话叫作“王不见王”，如果杜林祥一上来就和贺小军直接交锋，真要谈崩了就没有转圜余地了。让安幼琪冲在前面，谈得好，杜林祥就能直接拍板，陷入僵局时，他又能出手挽回。\n\n反思：还是那句话，“余地”在交往中必须处处考虑，慎之又慎。\n\n---\n>“还有第二个原因。” 杜林祥说，“ 招揽一个中层管理人员，我只管他上班时间的表现，只要能完成我交代下去的任务，其他时间哪怕狂嫖滥赌，我也没兴趣管。但招揽一个高级管理人员，我更关心他下班时间干什么，白天喝什么酒，晚上读什么书，有什么个人爱好，如何对待亲人朋友，我通通关心。中层人员是做事的，高管则是做人的。能做好事，不一定能做好人；能做好人，就一定能做好事。”\n\n反思：不要希望所有人都是能人，让不同的人发挥不同的功用，是管理者能力的体现。\n\n---\n>“是啊！” 杜林祥感叹道，“ 一个人越是怀才不遇，越会对提拔他的人感恩戴德。我当初就是这样想的。只是不如吕市长学识渊博，能将历史典故信手拈来。”\n\n反思：笼络人心\n\n---\n>谷伟民毕竟是个精明的商人，他不仅不会走出未战先输的臭棋，反而是在谋划着未战先胜。刚才一番话，巧妙地传递出一个信息，我手里有一个壳，如果价钱合适可以出手。但谷伟民又不把话讲透—— 我可没说要卖给你杜林祥。当然，如果买家感兴趣，尽可自己开口。更绝的是，谷伟民搬出了万顺龙，相当于谈判开始前就给杜林祥制造了一个强劲对手。想买我手里的壳，可得看你们谁出价高！\n\n反思：老教父说：不要让别人知道你在想什么。异曲同工。\n\n---\n>尹小茵欢喜地拍着手说：“ 这书我也看过。” 尹小茵没有那些白领丽人的成熟知性，却多了份青春活泼。谷伟民笑着说：“ 小茵，接下来的段子就由你讲。书里对上海是怎么形容的？”\n\n反思：很多人不喜欢自己的段子被人“劫走”，但，表现出分享“段子”的大度，更是优雅绅士的体现。\n\n---\n>万顺龙点头说：“ 安总说得太对了。甭说在国外，哪怕就是北上广深这些城市，估计也没人信这套。但中国太大了，依旧有许许多多像河州这样的城市。另外还有更多的城市，比河州还落后。仔细一想，这不是发财致富的契机吗？几十年经济发展下来，老百姓兜里都有点钱，也具备一些购买力了。可大多数人的意识，还是相当落后。正所谓人傻钱多，就看生意人能不能速来了。”\n\n反思：每一个资本的原始积累都是带着罪的，无非是利用信息的不对等、智商的不对等。世上哪有绝对无罪的财富。\n\n---\n>杜林祥今天心情不错。不仅因为众人的发言条分缕析，思路清楚，更缘于今天会上的每一句话，他都听懂了。以前来战略发展部开会，那些专业的资本市场名词，经常让他听得云里雾里的。杜林祥曾找庄智奇谈过：“ 咱们两方面都要努力啊。我这边要加强学习，尽量补课；你那边的人也要学习，学会用通俗易懂的语言，把资本市场的事讲明白。”\n\n反思：作为下属，展现出才华的同时，必然不要忘了知道你的上司在想什么。\n\n---\n>两人对阵，强弱分明。这时，强者如果处处谨慎，步步为营，绝不轻易出杀招，弱者反而没有赢的机会，还会因为实力的悬殊被活活耗死。相反，强者若是招招凌厉、剑剑封喉呢？弱者纵然狼狈不堪，但强者自己终究也会露出破绽。就像足球比赛，强队不大举压上，弱队怎能打出一击致命的防守反击！“ 万顺龙，你就放马过来吧。鹿死谁手还未可知！” 杜林祥在心中为自己打气。\n\n反思：杀死我有很多种容易的方式，你却选了最能激起我斗志的一种！\n\n---\n>“别着急，听我讲个故事。” 吕有顺不徐不疾地说，“ 冷战时期，苏联击落了一架在其境内从事间谍侦察的U- 2 飞机，并俘虏了机上的美国飞行员。赫鲁晓夫手里抓到了一副好牌，可他并不急着打出去。相反，苏联透过各种渠道散布消息，说U- 2 是机毁人亡。美国人一看，觉得反正死无对证，就开始放心大胆地撒谎，一会说飞机是搜集气象信息的，一会说飞机导航系统出了问题，才误入苏联国境。看到美国人表演得差不多了，赫鲁晓夫就在莫斯科搞了场公开审判，让被俘虏的美国飞行员，自己站出来揭穿这一个个谎言。这一来，美国对别国实行间谍侦察，同时还公然对国际社会撒谎的事实，就彻底暴露了”\n\n反思：当你有一手好太好的牌的时候，别急着高兴。或许，利用这副牌你能打出3翻再加一个春天。","source":"_posts/读书/还原一个真实的政商圈.md","raw":"title: 《掌舵》读书笔记\ndate: 2014-11-30 19:56\ntags: \n- 读书笔记\n- 官场\n- 经济\n- 房地产\n- 厚黑学\ncategories: \n- 读书\ndescription: 我从来不相信好人必定有好报。这个社会不是因为你是个好人就给你好的回报，而是因为你比别人更了解这个社会的运转机制并做了正确的选择。送礼有送礼的规矩，做生意有做生意的规矩，做官有做官的规矩，要混得好，你得比别人在更多方面都要懂得生存规则。我还坚信的：如果你懂得并遵守了各行各业的规矩，一般来说也会是个好人。\n---\n\n\n# 简介\n\n[《掌舵》](http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KD7SHNW&linkCode=as2&tag=milo2012-23)是一本当代商场+官场小说。有上下两本（[《掌舵》](http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KD7SHNW&linkCode=as2&tag=milo2012-23)、[《掌舵2》](http://www.amazon.cn/gp/product/B00N3GAC9M/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00N3GAC9M&linkCode=as2&tag=milo2012-23)）。书中主人翁杜林祥是一个没有什么文化的包工头。小说描述了他从一个屌丝包工头到港股上市地产公司老板的起伏人生。每一次搭上新的“关系”，每已次在各种阴险狡诈中斡旋，都真实而刺激，生动的还原了当代中国政商圈的生态。\n\n有句话说，**历史里，人是真的，事是假的；小说里，人是假的，事是真的。**所以，想了解些猛料，还是看小说吧。\n\n\n# 精选章节\n\n> 望着万顺龙一脸为难的表情，杜林祥心中窃喜。在商场摸爬滚打多年，杜林祥深知，任何大生意，不可能一蹴而就，都是砍价砍出来的。你报出一个价格，对方没有断然拒绝，而是做出一副为难表情，恰恰说明他已经动心，这样才有谈下去的可能。\n\n反思：很多事情都要留有余地，不要一棒子打死。\n  \n---  \n  \n>自从上次安幼琪叮嘱他，不要让卓伯均知道他们私下有联系之后，杜林祥就悟出一个道理，在这些达官显贵之间周旋，千万不要去炫耀同谁的关系很铁，最好是装作彼此都不认识。\n\n反思：有些东西可以炫耀，有些东西不能炫耀，要拿捏得体。\n\n---\n>从机场开车回市区的路上，杜林祥感觉过去一天的经历仿佛做梦一般。当初因为要信守承诺，狠狠心送给了周志斌两百万；前几天仅仅是因为面子上抹不过去，所以才心不甘情不愿地去了趟三亚。正因为这一连串的无心插柳，却和常务副市长攀上了关系。杜林祥只得感叹，行走江湖，还是得多结善缘啊！\n\n反思：多条朋友多条路，在没认定此人不可交之前，保持必要的礼貌和原则。\n\n---\n\n>“人啊，还是要给自己留点缺陷。”杜林祥说，“我以前听一位教授讲过，台湾旺旺集团的老板蔡衍明就立下家规，所有的儿子都不准上大学。蔡衍明对儿子说，你将来会领导很多博士，如果你自己既是老板，又是博士，就不会谦虚地听那些博士的意见，就算那些博士想帮你，都帮不到你了。应该有些事输给人家，有点自卑感，对人家才会客气一点。”\n\n反思：虚心是自我提高的前提\n\n---\n\n>卓伯均叹了一口气：“我是玩政治的。政治家与科学家最大的不同就在于，决定科学家一生成就的关键在于他最好的一步棋有多好。而决定政治家一生成就的，在于他最臭的那步棋，究竟有多臭。”\n\n反思：相对而言，当官更不易。但是在权力面前，金钱的吸引力太微不足道了。权力的致命缺点在于它的“短暂”。\n\n---\n>有种说法，勤政又廉政的官员，只需要有人送政绩；勤政而不廉政的官员，既需要有人送钱，又需要有人送政绩；既不勤政又不廉政的官员，眼里就只有钱。一个高明的领导还必须有识人之明，分清哪些人只会送钱，哪些人能给自己带来政绩，哪些是只会摇尾巴的哈巴狗，哪些才是能斗的鹰犬。\n\n反思：为官之人，或要政绩，或要钱财；要政绩的官，无非是想达到更大的高度换取更大的利润，类似于放长线钓大鱼。\n\n---\n>有句古话叫作“王不见王”，如果杜林祥一上来就和贺小军直接交锋，真要谈崩了就没有转圜余地了。让安幼琪冲在前面，谈得好，杜林祥就能直接拍板，陷入僵局时，他又能出手挽回。\n\n反思：还是那句话，“余地”在交往中必须处处考虑，慎之又慎。\n\n---\n>“还有第二个原因。” 杜林祥说，“ 招揽一个中层管理人员，我只管他上班时间的表现，只要能完成我交代下去的任务，其他时间哪怕狂嫖滥赌，我也没兴趣管。但招揽一个高级管理人员，我更关心他下班时间干什么，白天喝什么酒，晚上读什么书，有什么个人爱好，如何对待亲人朋友，我通通关心。中层人员是做事的，高管则是做人的。能做好事，不一定能做好人；能做好人，就一定能做好事。”\n\n反思：不要希望所有人都是能人，让不同的人发挥不同的功用，是管理者能力的体现。\n\n---\n>“是啊！” 杜林祥感叹道，“ 一个人越是怀才不遇，越会对提拔他的人感恩戴德。我当初就是这样想的。只是不如吕市长学识渊博，能将历史典故信手拈来。”\n\n反思：笼络人心\n\n---\n>谷伟民毕竟是个精明的商人，他不仅不会走出未战先输的臭棋，反而是在谋划着未战先胜。刚才一番话，巧妙地传递出一个信息，我手里有一个壳，如果价钱合适可以出手。但谷伟民又不把话讲透—— 我可没说要卖给你杜林祥。当然，如果买家感兴趣，尽可自己开口。更绝的是，谷伟民搬出了万顺龙，相当于谈判开始前就给杜林祥制造了一个强劲对手。想买我手里的壳，可得看你们谁出价高！\n\n反思：老教父说：不要让别人知道你在想什么。异曲同工。\n\n---\n>尹小茵欢喜地拍着手说：“ 这书我也看过。” 尹小茵没有那些白领丽人的成熟知性，却多了份青春活泼。谷伟民笑着说：“ 小茵，接下来的段子就由你讲。书里对上海是怎么形容的？”\n\n反思：很多人不喜欢自己的段子被人“劫走”，但，表现出分享“段子”的大度，更是优雅绅士的体现。\n\n---\n>万顺龙点头说：“ 安总说得太对了。甭说在国外，哪怕就是北上广深这些城市，估计也没人信这套。但中国太大了，依旧有许许多多像河州这样的城市。另外还有更多的城市，比河州还落后。仔细一想，这不是发财致富的契机吗？几十年经济发展下来，老百姓兜里都有点钱，也具备一些购买力了。可大多数人的意识，还是相当落后。正所谓人傻钱多，就看生意人能不能速来了。”\n\n反思：每一个资本的原始积累都是带着罪的，无非是利用信息的不对等、智商的不对等。世上哪有绝对无罪的财富。\n\n---\n>杜林祥今天心情不错。不仅因为众人的发言条分缕析，思路清楚，更缘于今天会上的每一句话，他都听懂了。以前来战略发展部开会，那些专业的资本市场名词，经常让他听得云里雾里的。杜林祥曾找庄智奇谈过：“ 咱们两方面都要努力啊。我这边要加强学习，尽量补课；你那边的人也要学习，学会用通俗易懂的语言，把资本市场的事讲明白。”\n\n反思：作为下属，展现出才华的同时，必然不要忘了知道你的上司在想什么。\n\n---\n>两人对阵，强弱分明。这时，强者如果处处谨慎，步步为营，绝不轻易出杀招，弱者反而没有赢的机会，还会因为实力的悬殊被活活耗死。相反，强者若是招招凌厉、剑剑封喉呢？弱者纵然狼狈不堪，但强者自己终究也会露出破绽。就像足球比赛，强队不大举压上，弱队怎能打出一击致命的防守反击！“ 万顺龙，你就放马过来吧。鹿死谁手还未可知！” 杜林祥在心中为自己打气。\n\n反思：杀死我有很多种容易的方式，你却选了最能激起我斗志的一种！\n\n---\n>“别着急，听我讲个故事。” 吕有顺不徐不疾地说，“ 冷战时期，苏联击落了一架在其境内从事间谍侦察的U- 2 飞机，并俘虏了机上的美国飞行员。赫鲁晓夫手里抓到了一副好牌，可他并不急着打出去。相反，苏联透过各种渠道散布消息，说U- 2 是机毁人亡。美国人一看，觉得反正死无对证，就开始放心大胆地撒谎，一会说飞机是搜集气象信息的，一会说飞机导航系统出了问题，才误入苏联国境。看到美国人表演得差不多了，赫鲁晓夫就在莫斯科搞了场公开审判，让被俘虏的美国飞行员，自己站出来揭穿这一个个谎言。这一来，美国对别国实行间谍侦察，同时还公然对国际社会撒谎的事实，就彻底暴露了”\n\n反思：当你有一手好太好的牌的时候，别急着高兴。或许，利用这副牌你能打出3翻再加一个春天。","slug":"读书/还原一个真实的政商圈","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6ksv007nq0d4c25vvxo5","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p><a href=\"http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KD7SHNW&amp;linkCode=as2&amp;tag=milo2012-23\" target=\"_blank\" rel=\"external\">《掌舵》</a>是一本当代商场+官场小说。有上下两本（<a href=\"http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KD7SHNW&amp;linkCode=as2&amp;tag=milo2012-23\" target=\"_blank\" rel=\"external\">《掌舵》</a>、<a href=\"http://www.amazon.cn/gp/product/B00N3GAC9M/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00N3GAC9M&amp;linkCode=as2&amp;tag=milo2012-23\" target=\"_blank\" rel=\"external\">《掌舵2》</a>）。书中主人翁杜林祥是一个没有什么文化的包工头。小说描述了他从一个屌丝包工头到港股上市地产公司老板的起伏人生。每一次搭上新的“关系”，每已次在各种阴险狡诈中斡旋，都真实而刺激，生动的还原了当代中国政商圈的生态。</p>\n<p>有句话说，<strong>历史里，人是真的，事是假的；小说里，人是假的，事是真的。</strong>所以，想了解些猛料，还是看小说吧。</p>\n<h1 id=\"精选章节\"><a href=\"#精选章节\" class=\"headerlink\" title=\"精选章节\"></a>精选章节</h1><blockquote>\n<p>望着万顺龙一脸为难的表情，杜林祥心中窃喜。在商场摸爬滚打多年，杜林祥深知，任何大生意，不可能一蹴而就，都是砍价砍出来的。你报出一个价格，对方没有断然拒绝，而是做出一副为难表情，恰恰说明他已经动心，这样才有谈下去的可能。</p>\n</blockquote>\n<p>反思：很多事情都要留有余地，不要一棒子打死。</p>\n<hr>\n<blockquote>\n<p>自从上次安幼琪叮嘱他，不要让卓伯均知道他们私下有联系之后，杜林祥就悟出一个道理，在这些达官显贵之间周旋，千万不要去炫耀同谁的关系很铁，最好是装作彼此都不认识。</p>\n</blockquote>\n<p>反思：有些东西可以炫耀，有些东西不能炫耀，要拿捏得体。</p>\n<hr>\n<blockquote>\n<p>从机场开车回市区的路上，杜林祥感觉过去一天的经历仿佛做梦一般。当初因为要信守承诺，狠狠心送给了周志斌两百万；前几天仅仅是因为面子上抹不过去，所以才心不甘情不愿地去了趟三亚。正因为这一连串的无心插柳，却和常务副市长攀上了关系。杜林祥只得感叹，行走江湖，还是得多结善缘啊！</p>\n</blockquote>\n<p>反思：多条朋友多条路，在没认定此人不可交之前，保持必要的礼貌和原则。</p>\n<hr>\n<blockquote>\n<p>“人啊，还是要给自己留点缺陷。”杜林祥说，“我以前听一位教授讲过，台湾旺旺集团的老板蔡衍明就立下家规，所有的儿子都不准上大学。蔡衍明对儿子说，你将来会领导很多博士，如果你自己既是老板，又是博士，就不会谦虚地听那些博士的意见，就算那些博士想帮你，都帮不到你了。应该有些事输给人家，有点自卑感，对人家才会客气一点。”</p>\n</blockquote>\n<p>反思：虚心是自我提高的前提</p>\n<hr>\n<blockquote>\n<p>卓伯均叹了一口气：“我是玩政治的。政治家与科学家最大的不同就在于，决定科学家一生成就的关键在于他最好的一步棋有多好。而决定政治家一生成就的，在于他最臭的那步棋，究竟有多臭。”</p>\n</blockquote>\n<p>反思：相对而言，当官更不易。但是在权力面前，金钱的吸引力太微不足道了。权力的致命缺点在于它的“短暂”。</p>\n<hr>\n<blockquote>\n<p>有种说法，勤政又廉政的官员，只需要有人送政绩；勤政而不廉政的官员，既需要有人送钱，又需要有人送政绩；既不勤政又不廉政的官员，眼里就只有钱。一个高明的领导还必须有识人之明，分清哪些人只会送钱，哪些人能给自己带来政绩，哪些是只会摇尾巴的哈巴狗，哪些才是能斗的鹰犬。</p>\n</blockquote>\n<p>反思：为官之人，或要政绩，或要钱财；要政绩的官，无非是想达到更大的高度换取更大的利润，类似于放长线钓大鱼。</p>\n<hr>\n<blockquote>\n<p>有句古话叫作“王不见王”，如果杜林祥一上来就和贺小军直接交锋，真要谈崩了就没有转圜余地了。让安幼琪冲在前面，谈得好，杜林祥就能直接拍板，陷入僵局时，他又能出手挽回。</p>\n</blockquote>\n<p>反思：还是那句话，“余地”在交往中必须处处考虑，慎之又慎。</p>\n<hr>\n<blockquote>\n<p>“还有第二个原因。” 杜林祥说，“ 招揽一个中层管理人员，我只管他上班时间的表现，只要能完成我交代下去的任务，其他时间哪怕狂嫖滥赌，我也没兴趣管。但招揽一个高级管理人员，我更关心他下班时间干什么，白天喝什么酒，晚上读什么书，有什么个人爱好，如何对待亲人朋友，我通通关心。中层人员是做事的，高管则是做人的。能做好事，不一定能做好人；能做好人，就一定能做好事。”</p>\n</blockquote>\n<p>反思：不要希望所有人都是能人，让不同的人发挥不同的功用，是管理者能力的体现。</p>\n<hr>\n<blockquote>\n<p>“是啊！” 杜林祥感叹道，“ 一个人越是怀才不遇，越会对提拔他的人感恩戴德。我当初就是这样想的。只是不如吕市长学识渊博，能将历史典故信手拈来。”</p>\n</blockquote>\n<p>反思：笼络人心</p>\n<hr>\n<blockquote>\n<p>谷伟民毕竟是个精明的商人，他不仅不会走出未战先输的臭棋，反而是在谋划着未战先胜。刚才一番话，巧妙地传递出一个信息，我手里有一个壳，如果价钱合适可以出手。但谷伟民又不把话讲透—— 我可没说要卖给你杜林祥。当然，如果买家感兴趣，尽可自己开口。更绝的是，谷伟民搬出了万顺龙，相当于谈判开始前就给杜林祥制造了一个强劲对手。想买我手里的壳，可得看你们谁出价高！</p>\n</blockquote>\n<p>反思：老教父说：不要让别人知道你在想什么。异曲同工。</p>\n<hr>\n<blockquote>\n<p>尹小茵欢喜地拍着手说：“ 这书我也看过。” 尹小茵没有那些白领丽人的成熟知性，却多了份青春活泼。谷伟民笑着说：“ 小茵，接下来的段子就由你讲。书里对上海是怎么形容的？”</p>\n</blockquote>\n<p>反思：很多人不喜欢自己的段子被人“劫走”，但，表现出分享“段子”的大度，更是优雅绅士的体现。</p>\n<hr>\n<blockquote>\n<p>万顺龙点头说：“ 安总说得太对了。甭说在国外，哪怕就是北上广深这些城市，估计也没人信这套。但中国太大了，依旧有许许多多像河州这样的城市。另外还有更多的城市，比河州还落后。仔细一想，这不是发财致富的契机吗？几十年经济发展下来，老百姓兜里都有点钱，也具备一些购买力了。可大多数人的意识，还是相当落后。正所谓人傻钱多，就看生意人能不能速来了。”</p>\n</blockquote>\n<p>反思：每一个资本的原始积累都是带着罪的，无非是利用信息的不对等、智商的不对等。世上哪有绝对无罪的财富。</p>\n<hr>\n<blockquote>\n<p>杜林祥今天心情不错。不仅因为众人的发言条分缕析，思路清楚，更缘于今天会上的每一句话，他都听懂了。以前来战略发展部开会，那些专业的资本市场名词，经常让他听得云里雾里的。杜林祥曾找庄智奇谈过：“ 咱们两方面都要努力啊。我这边要加强学习，尽量补课；你那边的人也要学习，学会用通俗易懂的语言，把资本市场的事讲明白。”</p>\n</blockquote>\n<p>反思：作为下属，展现出才华的同时，必然不要忘了知道你的上司在想什么。</p>\n<hr>\n<blockquote>\n<p>两人对阵，强弱分明。这时，强者如果处处谨慎，步步为营，绝不轻易出杀招，弱者反而没有赢的机会，还会因为实力的悬殊被活活耗死。相反，强者若是招招凌厉、剑剑封喉呢？弱者纵然狼狈不堪，但强者自己终究也会露出破绽。就像足球比赛，强队不大举压上，弱队怎能打出一击致命的防守反击！“ 万顺龙，你就放马过来吧。鹿死谁手还未可知！” 杜林祥在心中为自己打气。</p>\n</blockquote>\n<p>反思：杀死我有很多种容易的方式，你却选了最能激起我斗志的一种！</p>\n<hr>\n<blockquote>\n<p>“别着急，听我讲个故事。” 吕有顺不徐不疾地说，“ 冷战时期，苏联击落了一架在其境内从事间谍侦察的U- 2 飞机，并俘虏了机上的美国飞行员。赫鲁晓夫手里抓到了一副好牌，可他并不急着打出去。相反，苏联透过各种渠道散布消息，说U- 2 是机毁人亡。美国人一看，觉得反正死无对证，就开始放心大胆地撒谎，一会说飞机是搜集气象信息的，一会说飞机导航系统出了问题，才误入苏联国境。看到美国人表演得差不多了，赫鲁晓夫就在莫斯科搞了场公开审判，让被俘虏的美国飞行员，自己站出来揭穿这一个个谎言。这一来，美国对别国实行间谍侦察，同时还公然对国际社会撒谎的事实，就彻底暴露了”</p>\n</blockquote>\n<p>反思：当你有一手好太好的牌的时候，别急着高兴。或许，利用这副牌你能打出3翻再加一个春天。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p><a href=\"http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KD7SHNW&amp;linkCode=as2&amp;tag=milo2012-23\" target=\"_blank\" rel=\"external\">《掌舵》</a>是一本当代商场+官场小说。有上下两本（<a href=\"http://www.amazon.cn/gp/product/B00KD7SHNW/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KD7SHNW&amp;linkCode=as2&amp;tag=milo2012-23\" target=\"_blank\" rel=\"external\">《掌舵》</a>、<a href=\"http://www.amazon.cn/gp/product/B00N3GAC9M/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00N3GAC9M&amp;linkCode=as2&amp;tag=milo2012-23\" target=\"_blank\" rel=\"external\">《掌舵2》</a>）。书中主人翁杜林祥是一个没有什么文化的包工头。小说描述了他从一个屌丝包工头到港股上市地产公司老板的起伏人生。每一次搭上新的“关系”，每已次在各种阴险狡诈中斡旋，都真实而刺激，生动的还原了当代中国政商圈的生态。</p>\n<p>有句话说，<strong>历史里，人是真的，事是假的；小说里，人是假的，事是真的。</strong>所以，想了解些猛料，还是看小说吧。</p>\n<h1 id=\"精选章节\"><a href=\"#精选章节\" class=\"headerlink\" title=\"精选章节\"></a>精选章节</h1><blockquote>\n<p>望着万顺龙一脸为难的表情，杜林祥心中窃喜。在商场摸爬滚打多年，杜林祥深知，任何大生意，不可能一蹴而就，都是砍价砍出来的。你报出一个价格，对方没有断然拒绝，而是做出一副为难表情，恰恰说明他已经动心，这样才有谈下去的可能。</p>\n</blockquote>\n<p>反思：很多事情都要留有余地，不要一棒子打死。</p>\n<hr>\n<blockquote>\n<p>自从上次安幼琪叮嘱他，不要让卓伯均知道他们私下有联系之后，杜林祥就悟出一个道理，在这些达官显贵之间周旋，千万不要去炫耀同谁的关系很铁，最好是装作彼此都不认识。</p>\n</blockquote>\n<p>反思：有些东西可以炫耀，有些东西不能炫耀，要拿捏得体。</p>\n<hr>\n<blockquote>\n<p>从机场开车回市区的路上，杜林祥感觉过去一天的经历仿佛做梦一般。当初因为要信守承诺，狠狠心送给了周志斌两百万；前几天仅仅是因为面子上抹不过去，所以才心不甘情不愿地去了趟三亚。正因为这一连串的无心插柳，却和常务副市长攀上了关系。杜林祥只得感叹，行走江湖，还是得多结善缘啊！</p>\n</blockquote>\n<p>反思：多条朋友多条路，在没认定此人不可交之前，保持必要的礼貌和原则。</p>\n<hr>\n<blockquote>\n<p>“人啊，还是要给自己留点缺陷。”杜林祥说，“我以前听一位教授讲过，台湾旺旺集团的老板蔡衍明就立下家规，所有的儿子都不准上大学。蔡衍明对儿子说，你将来会领导很多博士，如果你自己既是老板，又是博士，就不会谦虚地听那些博士的意见，就算那些博士想帮你，都帮不到你了。应该有些事输给人家，有点自卑感，对人家才会客气一点。”</p>\n</blockquote>\n<p>反思：虚心是自我提高的前提</p>\n<hr>\n<blockquote>\n<p>卓伯均叹了一口气：“我是玩政治的。政治家与科学家最大的不同就在于，决定科学家一生成就的关键在于他最好的一步棋有多好。而决定政治家一生成就的，在于他最臭的那步棋，究竟有多臭。”</p>\n</blockquote>\n<p>反思：相对而言，当官更不易。但是在权力面前，金钱的吸引力太微不足道了。权力的致命缺点在于它的“短暂”。</p>\n<hr>\n<blockquote>\n<p>有种说法，勤政又廉政的官员，只需要有人送政绩；勤政而不廉政的官员，既需要有人送钱，又需要有人送政绩；既不勤政又不廉政的官员，眼里就只有钱。一个高明的领导还必须有识人之明，分清哪些人只会送钱，哪些人能给自己带来政绩，哪些是只会摇尾巴的哈巴狗，哪些才是能斗的鹰犬。</p>\n</blockquote>\n<p>反思：为官之人，或要政绩，或要钱财；要政绩的官，无非是想达到更大的高度换取更大的利润，类似于放长线钓大鱼。</p>\n<hr>\n<blockquote>\n<p>有句古话叫作“王不见王”，如果杜林祥一上来就和贺小军直接交锋，真要谈崩了就没有转圜余地了。让安幼琪冲在前面，谈得好，杜林祥就能直接拍板，陷入僵局时，他又能出手挽回。</p>\n</blockquote>\n<p>反思：还是那句话，“余地”在交往中必须处处考虑，慎之又慎。</p>\n<hr>\n<blockquote>\n<p>“还有第二个原因。” 杜林祥说，“ 招揽一个中层管理人员，我只管他上班时间的表现，只要能完成我交代下去的任务，其他时间哪怕狂嫖滥赌，我也没兴趣管。但招揽一个高级管理人员，我更关心他下班时间干什么，白天喝什么酒，晚上读什么书，有什么个人爱好，如何对待亲人朋友，我通通关心。中层人员是做事的，高管则是做人的。能做好事，不一定能做好人；能做好人，就一定能做好事。”</p>\n</blockquote>\n<p>反思：不要希望所有人都是能人，让不同的人发挥不同的功用，是管理者能力的体现。</p>\n<hr>\n<blockquote>\n<p>“是啊！” 杜林祥感叹道，“ 一个人越是怀才不遇，越会对提拔他的人感恩戴德。我当初就是这样想的。只是不如吕市长学识渊博，能将历史典故信手拈来。”</p>\n</blockquote>\n<p>反思：笼络人心</p>\n<hr>\n<blockquote>\n<p>谷伟民毕竟是个精明的商人，他不仅不会走出未战先输的臭棋，反而是在谋划着未战先胜。刚才一番话，巧妙地传递出一个信息，我手里有一个壳，如果价钱合适可以出手。但谷伟民又不把话讲透—— 我可没说要卖给你杜林祥。当然，如果买家感兴趣，尽可自己开口。更绝的是，谷伟民搬出了万顺龙，相当于谈判开始前就给杜林祥制造了一个强劲对手。想买我手里的壳，可得看你们谁出价高！</p>\n</blockquote>\n<p>反思：老教父说：不要让别人知道你在想什么。异曲同工。</p>\n<hr>\n<blockquote>\n<p>尹小茵欢喜地拍着手说：“ 这书我也看过。” 尹小茵没有那些白领丽人的成熟知性，却多了份青春活泼。谷伟民笑着说：“ 小茵，接下来的段子就由你讲。书里对上海是怎么形容的？”</p>\n</blockquote>\n<p>反思：很多人不喜欢自己的段子被人“劫走”，但，表现出分享“段子”的大度，更是优雅绅士的体现。</p>\n<hr>\n<blockquote>\n<p>万顺龙点头说：“ 安总说得太对了。甭说在国外，哪怕就是北上广深这些城市，估计也没人信这套。但中国太大了，依旧有许许多多像河州这样的城市。另外还有更多的城市，比河州还落后。仔细一想，这不是发财致富的契机吗？几十年经济发展下来，老百姓兜里都有点钱，也具备一些购买力了。可大多数人的意识，还是相当落后。正所谓人傻钱多，就看生意人能不能速来了。”</p>\n</blockquote>\n<p>反思：每一个资本的原始积累都是带着罪的，无非是利用信息的不对等、智商的不对等。世上哪有绝对无罪的财富。</p>\n<hr>\n<blockquote>\n<p>杜林祥今天心情不错。不仅因为众人的发言条分缕析，思路清楚，更缘于今天会上的每一句话，他都听懂了。以前来战略发展部开会，那些专业的资本市场名词，经常让他听得云里雾里的。杜林祥曾找庄智奇谈过：“ 咱们两方面都要努力啊。我这边要加强学习，尽量补课；你那边的人也要学习，学会用通俗易懂的语言，把资本市场的事讲明白。”</p>\n</blockquote>\n<p>反思：作为下属，展现出才华的同时，必然不要忘了知道你的上司在想什么。</p>\n<hr>\n<blockquote>\n<p>两人对阵，强弱分明。这时，强者如果处处谨慎，步步为营，绝不轻易出杀招，弱者反而没有赢的机会，还会因为实力的悬殊被活活耗死。相反，强者若是招招凌厉、剑剑封喉呢？弱者纵然狼狈不堪，但强者自己终究也会露出破绽。就像足球比赛，强队不大举压上，弱队怎能打出一击致命的防守反击！“ 万顺龙，你就放马过来吧。鹿死谁手还未可知！” 杜林祥在心中为自己打气。</p>\n</blockquote>\n<p>反思：杀死我有很多种容易的方式，你却选了最能激起我斗志的一种！</p>\n<hr>\n<blockquote>\n<p>“别着急，听我讲个故事。” 吕有顺不徐不疾地说，“ 冷战时期，苏联击落了一架在其境内从事间谍侦察的U- 2 飞机，并俘虏了机上的美国飞行员。赫鲁晓夫手里抓到了一副好牌，可他并不急着打出去。相反，苏联透过各种渠道散布消息，说U- 2 是机毁人亡。美国人一看，觉得反正死无对证，就开始放心大胆地撒谎，一会说飞机是搜集气象信息的，一会说飞机导航系统出了问题，才误入苏联国境。看到美国人表演得差不多了，赫鲁晓夫就在莫斯科搞了场公开审判，让被俘虏的美国飞行员，自己站出来揭穿这一个个谎言。这一来，美国对别国实行间谍侦察，同时还公然对国际社会撒谎的事实，就彻底暴露了”</p>\n</blockquote>\n<p>反思：当你有一手好太好的牌的时候，别急着高兴。或许，利用这副牌你能打出3翻再加一个春天。</p>\n"},{"_content":"Status: public\ndescription: COLOR公寓后台系统，数据库设计\ntitle: COLOR公寓数据库设计\ntags: mysql,db,rdb,color\n\n\n# 数据库文档\n\n>oc为opencart的简称，所有数据库表格均以oc_开头。\n\n\n## oc_room\n`room`代表一个单间. 每个`room`必须属于某个`house`。\n\n|      列名     |     类型     |  取值范围 |          代表含义         | 其他 |\n| ------------- | ------------ | --------- | ------------------------- | ---- |\n| id            | int          |           | id                        |      |\n| house_id      | int          |           | 属于哪个house             |      |\n| name          | varchar      |           | 房间名称                  |      |\n| detail        | text         |           | 见下注释                  |      |\n| price         | float        |           | 房间价格，元/月           |      |\n| area          | int          |           | 面积                      |      |\n| orientation   | tinyint      | 0,1,2,3,4 | 未编辑，东西南北          |      |\n| style_id      | int          |           | PK of oc_room_style       |      |\n| slogan        | text         |           | slogan                    |      |\n| weight        | int          |           | 影响排序规则，允许负值    |      |\n| state         | tinyint      | 0~5       | 见下注释                  |      |\n| butler_id     | int          |           | 服务此房间的管家          |      |\n| number        | tinyint u    | [0~max)   | 在大房间内的序号          |      |\n| has_lav       | tinyint      |           | 有独立卫生间              |      |\n| has_balcony   | tinyint      |           | 有私人阳台                |      |\n| hidden        | tinyint      |           | 强制隐藏此房间            |      |\n| update_at     | timestamp    |           | 上次更改                  |      |\n| ceate_at      | timestamp    |           | 创建日期                  |      |\n| complete_at   | date         |           | 预计上线时间              |      |\n| privilidge    | bigint u     |           | 权限禁止管理              |      |\n| second_weight | int          |           | 智能排序规则,每天定时更新 |      |\n| room_type     | varchar(256) |           | 房间类型                  |      |\n\nprivilidge每个位的含义：\n\n* 0: 禁止邀请其他人\n* 1: 禁止被邀请\n\nstate:  \n\n* 0：初始状态\n* 9：预上线\n* 10：已上线\n* 11：已预订\n* 12：已租出\n\ndetail:  \n编辑员对房间的描述。示例如下：\"\\[\\]\"括起来的是标题，剩下的是内容。\n\n\n>[主卧带卫生间，超大阳台，超值空间]  \n周边：人大附中朝阳学校芍药居分校：包括人大附小，初中，高中部。另被 对外经贸大学、北京服装学院、现代文学馆所环绕，周边医院有著名的中日 友好医院！银行，超市等配套设施齐全，毗邻元大都遗址公园。  \n交通：您想每天睡到自然醒么，距离地铁芍药居站步行（地铁10号线和13 号线交汇）只需2分钟，公交119路; 547路; 942快; 专22路步行只需5分 钟，多么舒适多么快捷！快拿起电话拨号吧！  \n价格：正规主卧，朝南向，带阳台，距离地铁站仅需2分钟的超便利位置， 超高性价比。\n\n* room_type: varchar定义规则: 小区名字+房间序号+卧室个数+大厅个数+价格  \n(拼接的字符串相同则认为同一类房源)\n\n\n## oc_house\n`house`代表一套房子，比如一套三室一厅。`house`必须属于某个`district`.\n\n|         列名        |     类型    | 取值范围 |      代表含义      | 其他 |\n| ------------------- | ----------- | -------- | ------------------ | ---- |\n| id                  | int         |          | id                 |      |\n| name                | varchar(20) |          | 名称               |      |\n| floor               | u smallint  |          | 楼层               |      |\n| building_id         | int         |          | PK of oc_buiding   |      |\n| area                | u smallint  |          | 面积               |      |\n| room_count          | u tinyint   |          | 卧室个数           |      |\n| holl_count          | u tinyint   |          | 厅个数             |      |\n| lav_count           | u tinyint   |          | 卫生间个数         |      |\n| total_floor         | u smallint  |          | 总楼层             |      |\n| building_name       | varchar(10) |          | 大楼名称           |      |\n| community_id        | int         |          | PK of oc_community |      |\n| position_id         | int         |          | PK of oc_position  |      |\n| building_postion_id | int         |          | PK of oc_position  |      |\n| state               | tinyint u   |          | 状态               |      |\n| elec_key            | varchar(16) |          | 电费合同账号       |      |\n| gas_key             | varchar(16) |          | 燃气费客户编码     |      |\n| butler_id           | int         |          | 服务此房间的管家   |      |\n\nstate:(装修状态)  \n\n* 0：初始状态\n* 1：已签约\n* 2：已测量\n* 3：已装修完毕\n* 4：采购订单已发出\n* 5：家具设备已签收和验货\n* 6：家具已安装\n* 7：已清洁\n* 8：已拍摄\n* 9：已完成\n\n\n\n## oc_building\n\n`building`代表一栋楼。一个`building`对应一个唯一的地理位置（经纬度）。\n\n|     列名     |     类型    | 取值范围 |      代表含义     | 其他 |\n|--------------|-------------|----------|-------------------|------|\n| id           | int         |          | id                |      |\n| name         | varchar(20) |          | 名称              |      |\n| community_id | int         |          | 所属小区          |      |\n| position_id  | int         |          | PK of oc_position |      |\n\n\n\n## oc_community\n代表一个小区，一个小区一有**唯一**的街道号码。若XX小区分为3期，每期的街道号不同，则视为三个不同小区。\n\n|      列名     |     类型    | 取值范围 |       代表含义       | 其他 |\n| ------------- | ----------- | -------- | -------------------- | ---- |\n| id            | int         |          | id                   |      |\n| name          | varchar(40) |          |                      |      |\n| position_id   | int         |          | PK of oc_position    |      |\n| position_desc | varchar(40) |          | 地理位置的自定义描述 |      |\n| boundary_id   | int         |          | oc_boundary.id       |      |\n\n\n\n## oc_position\n\n\n|      列名     |      类型      | 取值范围 |  代表含义  | 其他 |\n| ------------- | -------------- | -------- | ---------- | ---- |\n| id            | int            |          | id         |      |\n| province      | varchar(8)     |          | 省份       |      |\n| city          | varchar(8)     |          | 城市       |      |\n| district      | varchar(8)     |          | 区         |      |\n| street        | varchar(16)    |          | 街道名     |      |\n| street_number | int(12)        |          | 街道号码   |      |\n| longtitude    | decimal(13,10) |          | 经度       |      |\n| latitude      | decimal(13,10) |          | 纬度       |      |\n| custom_desc   | text           |          | 自定义描述 |      |\n\n\n\n## oc_renter_bill\n\n代表一个实际发生的订单，租客与迈芒的订单。\n\n|       列名      |     类型     | 取值范围 |      代表含义      | 其他 |\n| --------------- | ------------ | -------- | ------------------ | ---- |\n| id              | int          |          | id                 |      |\n| room_id         | int          |          | room id            |      |\n| start_time      | date         |          | 合同开始时间       |      |\n| expect_end_time | date         |          | 合同结束时间       |      |\n| real_end_time   | date         |          | 实际结束合同的时间 |      |\n| price           | decimal(9,6) |          | 标价，元/月        |      |\n| real_price      | decimal(9,6) |          | 实际价格，元/月    |      |\n| deposit         | int unsigned |          | 押金金额           |      |\n| pay_cycle_id    | int          |          |                    |      |\n| user_id         | int          |          | oc_user.id         |      |\n| state           | int          | 0,1,2,3  | 见注释             |      |\n| month_paid      | tinyint      |          | 已付清月数         |      |\n| service_fee     | int unsigned |          | 服务费，元/月      |      |\n| reduce          | int          |          | 减少金额           |      |\n| reduce_reason   | varchar(32)  |          | 减少金额原因       |      |\n\n\nstate:\n\n* 0:未生效\n* 1:已生效\n* 2:已取消\n* 3:已完成\n\n## oc_renter_bill_payment(废弃)\n\n租金支付\n\n|    列名    |   类型  | 取值范围 |      代表含义     | 其他 |\n|------------|---------|----------|-------------------|------|\n| id         | int     |          | id                |      |\n| bill_id    | int     |          | oc_renter_bill.id |      |\n| month      | tinyint |          | 月数              |      |\n| for_month  | tinyint |          | 付了几个月的钱    |      |\n| type       | int     |          | 见下注释          |      |\n| count      | int     |          | 金额              |      |\n| coupon_id  | int     |          | oc_coupon.id      |      |\n| payment_id | int     |          | oc_payment.id     |      |\n\ntype:\n\n* 1:支付押金（count为负数时表示退换押金）\n* 2:支付房租\n* 4:支付服务费\n* 8:用优惠券抵扣房租。\n* 6: 支付房租和服务费。\n\n\n## oc_landlord_bill_payment\n\n房东租金支付\n\n|   列名  |   类型  | 取值范围 |       代表含义      | 其他 |\n|---------|---------|----------|---------------------|------|\n| id      | int     |          | id                  |      |\n| bill_id | int     |          | oc_landlord_bill.id |      |\n| month   | tinyint |          | 月数                |      |\n| type    | int     |          | 见下注释            |      |\n| count   | int     |          | 金额                |      |\n\ntype:\n\n* 0:支付押金（count为负数时表示退换押金）\n* 1:支付房租\n\n\n \n\n## oc_landlord_bill\n\n代表一个实际发生的订单，房主与迈芒的订单。\n\n|       列名      |     类型     | 取值范围 |      代表含义      | 其他 |\n|-----------------|--------------|----------|--------------------|------|\n| id              | int          |          | id                 |      |\n| house_id        | int          |          |                    |      |\n| start_time      | date         |          | 合同开始时间       |      |\n| expect_end_time | date         |          | 合同结束时间       |      |\n| real_end_time   | date         |          | 实际结束合同的时间 |      |\n| price           | decimal(9,6) |          | 标价，元/月        |      |\n| pay_cycle_id    | int          |          | PK of oc_pay_cycle |      |\n| user_id         | int          |          | 客户 id            |      |\n| deposit         | int unsigned |          | 押金金额           |      |\n| state           | int          | 0,1,2,3  | 见注释             |      |\n| property_fee    | float        |          | 物业费(元/月)      |      |\n| agency_fee      | float        |          | 中介费             |      |\n| agency_fee      | float        |          | 中介费             |      |\n\n\n备注：  \n\n* 正常情况`expect_end_time=real_end_time`,当用户提前终止合约的时候，两个时间不等。\n\n\nstate:\n\n* 0:未生效\n* 1:已生效\n* 2:已取消\n* 3:已完成\n\n\n## oc_job\n客户职业\n\n|      列名     |     类型    |   取值范围   | 代表含义 | 其他 |\n| ------------- | ----------- | ------------ | -------- | ---- |\n| id            | int         |              | id       |      |\n| name          | varchar(20) |              | 职业名称 |      |\n| detail        | text        |              | 职业描述 |      |\n| parent_job_id | int         | PK of oc_job | 所属职业 |      |\n| ver_job       | int         |              | 使用版本 |      |\n\nver_job:\n\n* 0:初始化 （老版本使用）\n* 1:2015-11-30整理job分类后使用版本 (新版本)\n\n\n## oc_user\n\n客户账号。\n\n|         列名         |     类型     |  取值范围  |      代表含义     | 其他 |\n| -------------------- | ------------ | ---------- | ----------------- | ---- |\n| id                   | int          |            | id                |      |\n| email                | varchar(50)  |            |                   |      |\n| mobile               | varchar(20)  |            |                   |      |\n| full_name            | varchar(32)  |            |                   |      |\n| icon                 | text         |            | 头像地址          |      |\n| identify_card_img    | text         |            | 身份证照片        |      |\n| identify_card_number | varchar(20)  |            | 身份证号码        |      |\n| user_type            | tinyint      | 0,1,2      | 租客,房主,都是    |      |\n| verified             | tinyint      | 0,1        | 未实名认证,已认证 |      |\n| gender               | tinyint      | 0,1        | 女，男            |      |\n| birthday             | date         |            | 生日              |      |\n| job_id               | int          | PK(oc_job) | 职业              |      |\n| pwd_hash             | varchar(255) |            |                   |      |\n| pwd_reset_token      | varchar(255) |            |                   |      |\n| auth_key             | varchar(32)  |            |                   |      |\n| status               | tinyint      | 10,0       | 激活,未激活       |      |\n| create_at            | timestamp    |            |                   |      |\n| update_at            | timestamp    |            |                   |      |\n| bank_card            | varchar(24)  |            | 银行卡            |      |\n| bank_name            | varchar(20)  |            | 银行名称          |      |\n| bank_of_deposit      | varchar(20)  |            | 开户行            |      |\n| hobby                | varchar(30)  |            | 爱好              |      |\n| state                | tinyint      |            | below             |      |\n| invite_code          | char(6)      |            | 邀请码            |      |\n| invite_by_user_id    | int          |            | 邀请人            |      |\n| invitee_awarded      | tinyint      |            | 邀请人已奖励      |      |\n| say                  | varchar(256) |            | 用户say           |      |\n\ndetail:\n\n* state: 默认/系统生成（0），用户激活（1）\n\n\n\n## oc_keyword\n代表一个关键字。e.g. 南北通透、朝南、落地窗、大床、安静、核心商圈\n\n|    列名    |     类型     | 取值范围 |    代表含义    | 其他 |\n| ---------- | ------------ | -------- | -------------- | ---- |\n| id         | int          |          | id             |      |\n| name       | varchar(10)  | 10 chars | 名称           |      |\n| display    | int          | 0-1      | 是否显示       |      |\n| key_type   | int          |          | 关键字类型     |      |\n| key_desc   | text         |          | 关键字描述信息 |      |\n| icon_url   | varchar(256) |          | icon的oss地址  |      |\n| serial_num | int          |          | 排序           |      |\n\n* display: 房屋筛选里不展示(0), 展示(1)\n* key_type: 未分配(0,老版本使用), 特色配置(1), 其它配置(2)\n* serial_num: 值小的在最前面\n\n## oc_keyword_of_room\n`room`和`keyword`的映射关系。每一行表示某个`room`被添加了某个`keyword`。\n\n|      列名      | 类型 | 取值范围 |         代表含义         | 其他 |\n| -------------- | ---- | -------- | ------------------------ | ---- |\n| id             | int  |          | id                       |      |\n| room_id        | int  |          | 房间id                   |      |\n| keyword_id     | int  |          | 关键字                   |      |\n| display_detail | int  |          | 是否显示在详情页         |      |\n| display_widget | int  |          | 是否显示在点击查看小窗口 |      |\n\n* display_detail: 不展示(0), 展示(1)\n* display_widget: 不展示(0), 展示(1)\n\n## oc_keyword_of_house\n\n## oc_keyword_of_community\n结构跟`oc_keyword_of_room`类似\n\n\n\n\n## oc_room_style\n\n|  列名  |     类型    | 取值范围 | 代表含义 | 其他 |\n|--------|-------------|----------|----------|------|\n| id     | int         |          | id       |      |\n| name   | varchar(10) |          | 风格名称 |      |\n| detail | text        |          | 风格描述 |      |\n\n\n## oc_butler\n\n管家。\n\n|         列名         |     类型    | 取值范围 |  代表含义  | 其他 |\n|----------------------|-------------|----------|------------|------|\n| id                   | int         |          | id         |      |\n| full_name            | varchar(10) |          |            |      |\n| nick_name            | varchar(10) |          | 昵称       |      |\n| identify_card_img    | text        |          | 身份证照片 |      |\n| identify_card_number | varchar(20) |          | 身份证号码 |      |\n| pwd                  | varchar(32) |          |            |      |\n| mobile               | varchar(20) |          |            |      |\n| tel                  | varchar(20) |          | 分机电话   |      |\n| custom_desc          | text        |          | 自定义描述 |      |\n| gender               | tinyint     | 0,1      | 女，男     |      |\n| icon                 | text        |          | 头像地址   |      |\n\n\n## oc_bulter_and_room\n\n|    列名    | 类型 | 取值范围 | 代表含义 | 其他 |\n|------------|------|----------|----------|------|\n| id         | int  |          | id       |      |\n| bulter_id  | int  |          |          |      |\n| room_id    | int  |          |          |      |\n\n\n\n## oc_image_of_room\n\n|    列名   |   类型  | 取值范围 |   代表含义  | 其他 |\n| --------- | ------- | -------- | ----------- | ---- |\n| id        | int     |          | id          |      |\n| room_id   | int     |          |             |      |\n| img       | text    |          |             |      |\n| type      | tinyint | 0~5      | 见下定义    |      |\n| room_desc | text    |          | 图片描述    |      |\n\n`type`:\n\n* 0：未编辑\n* 1：高清大图\n* 2：列表封面\n* 3：三维\n* 4：户型图(无效,户型图和house绑定,参照oc_house_type)\n* 5：普通\n* 6：竖图\n\n\n## oc_image_of_house\n\n|       列名      |   类型  | 取值范围 |      代表含义      | 其他 |     |\n| --------------- | ------- | -------- | ------------------ | ---- | --- |\n| id              | int     |          | id                 |      |     |\n| house_id        | int     |          | oc_house.id        |      |     |\n| img             | text    |          |                    |      |     |\n| house_desc      | text    |          | 公用图片描述       |      |     |\n| floor           | int     |          | 复式房第几层       |      |     |\n| house_layout_id | int     |          | oc_house_layout.id |      |     |\n| type            | tinyint | 0~5      | 见下定义           |      |     |\n\n`floor`: 默认为１，当type为４户型图时，需要配置\n\n\n## oc_image_of_community\n\n|     列名     |   类型  | 取值范围 |     代表含义    | 其他 |\n| ------------ | ------- | -------- | --------------- | ---- |\n| id           | int     |          | id              |      |\n| community_id | int     |          | oc_community.id |      |\n| img          | text    |          |                 |      |\n| type         | tinyint | 0~5      | 见下定义        |      |\n| comm_desc    | text    |          | 小区图片描述    |      |\n\n\n\n## oc_image_of_room_style\n（表格结构跟`oc_image_of_room`基本一样，在此略）\n\n## oc_district\n\n|     列名    |    类型    | 取值范围 |    代表含义    | 其他 |     |\n| ----------- | ---------- | -------- | -------------- | ---- | --- |\n| id          | int        |          | id             |      |     |\n| name        | varchar(8) |          | 名称           |      |     |\n| city        | varchar(8) |          | 城市           |      |     |\n| enable      | boolean    | 0-1      | 是否网站上显示 |      |     |\n| weight      | int        |          | 列表显示顺序   |      |     |\n| boundary_id | int        |          | oc_boundary.id |      |     |\n\n`enable`:\n\n* 0：不显示\n* 1：显示\n\n## oc_circle\n\n商圈。\n\n|     列名    |     类型    | 取值范围 |    代表含义    | 其他 |\n| ----------- | ----------- | -------- | -------------- | ---- |\n| id          | int         |          | id             |      |\n| name        | varchar(20) |          |                |      |\n| district_id | int         |          | oc_district.id |      |\n| enable      | boolean     | 0-1      | 是否网站上显示 |      |\n| boundary_id | int         |          | oc_boundary.id |      |\n\n`enable`:\n\n* 0：不显示\n* 1：显示\n\n## oc_circle_of_community\n\n小区所属商圈。\n\n|     列名     | 类型 | 取值范围 | 代表含义 | 其他 |\n|--------------|------|----------|----------|------|\n| id           | int  |          | id       |      |\n| circle_id    | int  |          |          |      |\n| community_id | int  |          |          |      |\n\n\n## oc_subway_line\n\n|      列名     |     类型    | 取值范围 |  代表含义  | 其他 |\n|---------------|-------------|----------|------------|------|\n| id            | int         |          | id         |      |\n| name          | varchar(10) |          | 名称       |      |\n| number        | tinyint     |          | 线路号     |      |\n| station_count | tinyint     |          | 总共站数量 |      |\n\n\n## oc_subway_station\n\n|     列名    |     类型    | 取值范围 |    代表含义    | 其他 |\n| ----------- | ----------- | -------- | -------------- | ---- |\n| id          | int         |          | id             |      |\n| name        | varchar(10) |          | 名称           |      |\n| position_id | int         |          |                |      |\n| enable      | boolean     | 0-1      | 是否网站上显示 |      |\n| boundary_id | int         |          | oc_boundary.id |      |\n\n## oc_subway_station_of_line\n\n|        列名       | 类型 | 取值范围 |    代表含义    | 其他 |\n|-------------------|------|----------|----------------|------|\n| id                | int  |          | id             |      |\n| subway_line_id    | int  |          | 线路id         |      |\n| subway_station_id | int  |          |                |      |\n| sequence          | int  | 1~N      | 是线路的第几站 |      |\n\n\n## oc_subway_line_of_community\n|      列名      | 类型 | 取值范围 | 代表含义 | 其他 |\n|----------------|------|----------|----------|------|\n| id             | int  |          | id       |      |\n| subway_line_id | int  |          |          |      |\n| community_id   | int  |          |          |      |\n\n\n## oc_subway_station_of_community\n|        列名       | 类型 | 取值范围 | 代表含义 | 其他 |\n|-------------------|------|----------|----------|------|\n| id                | int  |          | id       |      |\n| subway_station_id | int  |          |          |      |\n| community_id      | int  |          |          |      |\n\n\n## oc_price_range\n\n选购房屋时，列出的价格区间选项。\n\n| 列名 | 类型 | 取值范围 | 代表含义 | 其他 |\n|------|------|----------|----------|------|\n| id   | int  |          | id       |      |\n| low  | int  |          | 最低价格 |      |\n| high | int  |          | 最高价格 |      |\n\n\n## oc_pay_cycle\n\n付款周期\n\n|   列名   |   类型  |  取值范围 |    代表含义    | 其他 |\n|----------|---------|-----------|----------------|------|\n| id       | int     |           | id             |      |\n| discount | float   | 0~1       | 折扣数         |      |\n| cycle    | tinyint | 3,6,12,24 | 多少月付款一次 |      |\n\n\n## oc_mobile_validate\n\n待验证的短信验证码\n\n|    列名   |     类型    | 取值范围 |    代表含义    | 其他 |\n|-----------|-------------|----------|----------------|------|\n| id        | int         |          | id             |      |\n| mobile    | varchar(16) |          | 手机号         |      |\n| code      | varchar(4)  |          | 验证码         |      |\n| create_at | timestamp   |          | 创建于XX时刻   |      |\n| ip        | varchar(16) |          | IP             |      |\n| type      | tinyint     |          | 解释见下       |      |\n| used      | tinyint     |          | 是否已经使用了 |      |\n\ntype:\n\n0: 预定房间\n1: 注册账号\n3：找回密码\n\n\n## oc_schedule_bill\n\n客户预定订单\n\n|    列名   |     类型    | 取值范围 | 代表含义 | 其他 |\n|-----------|-------------|----------|----------|------|\n| id        | int         |          | id       |      |\n| mobile    | varchar(16) |          | 手机号   |      |\n| name      | varchar(6)  |          | 姓名     |      |\n| job       | varchar(10) |          | 职业     |      |\n| room_id   | int         |          | oc_room  |      |\n| create_at | timestamp   |          |          |      |\n\n\n\n## oc_bill_subscriber\n\n订单订阅者\n\n|      列名     |     类型    | 取值范围 |    代表含义    | 其他 |\n|---------------|-------------|----------|----------------|------|\n| id            | int         |          | id             |      |\n| name          | varchar(6)  |          |                |      |\n| mobile        | varchar(16) |          |                |      |\n| email         | varchar(40) |          |                |      |\n| status        | tinyint     | 0,1      | 0:激活，1:屏蔽 |      |\n| trigger_event | tinyint     |          |                |      |\n\n* trigger_event：预定房间（0），保洁（1），维修（2）。\n\n\n## oc_cash_flow\n\n公司现金流量表。\n\n|    列名   |       类型       | 取值范围 |          代表含义          | 其他 |\n|-----------|------------------|----------|----------------------------|------|\n| id        | int              |          | id                         |      |\n| bill_type | tinyint unsigned |          |                            |      |\n| bill_id   | int              |          | 订单号                     |      |\n| money     | int              |          | 实际收入金额，负数表示支出 |      |\n| create_at | timestamp        |          |                            |      |\n| comment   | text             |          | 备注                       |      |\n\n解释：\n\n* bill_type: 租入(0),租出(1),家具(2),装修(3)\n\n## oc_furniture\n\n家具定义表\n\n|   列名  |       类型       | 取值范围 |       代表含义       | 其他 |\n|---------|------------------|----------|----------------------|------|\n| id      | int              |          | id                   |      |\n| name    | varchar(40)      |          | 一款物品有唯一的名称 |      |\n| type    | tinyint unsigned |          | 家具类型             |      |\n| comment | text             |          | 备注             |      |\n\ntype:\n\n* 0：未知\n* 1：床\n* 2：沙发\n* 3：书桌\n* 4：衣柜\n* 5：电视\n* 6：空调\n* 7：床垫\n* 8：床套\n* 9：床\n* 10：写字台\n* 11：护眼台灯\n* 12：挂画\n* 13：写字台椅子\n* 14：餐桌\n* 15：多功能衣架\n* 16：隔板+支架\n* 17：小米盒子\n* 18：360路由器\n* 19：窗帘\n* 20：锁\n* 21：冰箱\n* 22：洗衣机\n* 23：宽带\n\n\n## oc_furniture_bill\n\n家具订单\n\n|     列名     |       类型       | 取值范围 |   代表含义   | 其他 |\n|--------------|------------------|----------|--------------|------|\n| id           | int              |          | id           |      |\n| furniture_id | int              |          |              |      |\n| money        | int              |          | 须支付总金额 |      |\n| count        | int unsigned     |          | 采购的数量   |      |\n| status       | tinyint unsigned | 0,1,2    | 见备注       |      |\n| suplier      | varchar(30)      |          | 供货商名称   |      |\n| comment      | text             |          | 备注         |      |\n| create_at    | timestamp        |          |              |      |\n| update_at    | timestamp        |          |              |      |\n\nstatus: \n\n* 0：未提交，编辑中。默认值。\n* 1：已提交给供应商，还未声场完毕。\n* 2：已生产完毕，已入库。\n\n\n## oc_furniture_deploy\n\n家具配置表。house/room与家具之间的分配关系。\n\n|     列名     |   类型  | 取值范围 |          代表含义          | 其他 |\n|--------------|---------|----------|----------------------------|------|\n| id           | int     |          | id                         |      |\n| furniture_id | int     |          | 家具编号                   |      |\n| house_id     | int     |          |                            |      |\n| room_id      | int     |          | 如果为空，表示是套房的家具 |      |\n| count        | tinyint |          | 数量，默认为1              |      |\n\n## oc_decorate_bill\n\n装修订单。\n\n|     列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|-------------|--------------|----------|--------------|------|\n| id          | int          |          | id           |      |\n| house_id    | int          |          |              |      |\n| company     | varcahr(30)  |          | 装修公司名称 |      |\n| money       | int unsigned |          | 金额         |      |\n| comment     | text         |          | 备注         |      |\n| create_at   | timestamp    |          | 下单时间     |      |\n| complete_at | timestamp    |          | 完成时间     |      |\n\n\n## oc_coupon    \n\n优惠券\n\n|    列名    |    类型   | 取值范围 |     代表含义     | 其他 |\n|------------|-----------|----------|------------------|------|\n| id         | int       |          | id               |      |\n| code       | char(6)   |          | 名称             |      |\n| use_method | tinyint   |          | 见下解释         |      |\n| get_from   | tinyint   |          | 见下解释         |      |\n| state      | tinyint   | 0,1,2    |                  |      |\n| validity   | timestamp |          | 到期日期         |      |\n| cash       | smallint  |          | 抵扣金额         |      |\n| stackable  | tinyint   |          | 可叠加使用       |      |\n| create_at  | timestamp |          |                  |      |\n| update_at  | timestamp |          |                  |      |\n| user_id    | int       |          | 已被用户领取     |      |\n| locked     | tinyint   |          | 已锁定（支付中） |      |\n\n注解：\n\nuse_method:\n\n* 0: 支付房租均可使用\n* 1: 支付任何费用均可使用，包括O2O服务。\n\nstate：init(0), active(1), bind(2), used(3)。  \nvalidity： 有效期，天数。最多365天。\n\nfrom:\n\n* 0: default\n* 1：首月半价\n* 2：社交活动\n* 3：推荐其它好友 \n* 4：暂时废弃\n* 5：自己被邀请\n\n## oc_third_payment\n\n第三方支付\n\n|     列名     |     类型     | 取值范围 |       代表含义      | 其他 |\n|--------------|--------------|----------|---------------------|------|\n| id           | int          |          | id                  |      |\n| trade_no     | char(32)     |          | 交易号              |      |\n| method       | tinyint      |          | below               |      |\n| type         | tinyint      |          | below               |      |\n| total_fee    | float        |          | 付款金额            |      |\n| state        | tinyint      |          | below               |      |\n| ext          | varchar(128) |          | json 附加订单信息   |      |\n| third_result | varchar(128) |          | json 第三方返回信息 |      |\n| create_at    | timestamp    |          |                     |      |\n| update_at    | timestamp    |          |                     |      |\n\n\n* method: 支付宝(0)，微信(1)，银联(2)。\n* type: 未知(0)，交房租(1)，预定房间（2），水电气(3)。\n* state: 已创建(0)，已成功(1)，已失败(2)。\n\n\n## oc_coupon_seed\n\n优惠码，生成种子记录\n\n| 列名 |  类型 | 取值范围 |         代表含义        | 其他 |\n|------|-------|----------|-------------------------|------|\n| seed | int u |          | 当前种子值，默认值53213 |      |\n\n\n## oc_clean_order\n|     列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|-------------|--------------|----------|--------------|------|\n| id          | int          |          |              |      |\n| state       | tinyint      |          | below        |      |\n| house_id    | int          |          |              |      |\n| user_id     | int          |          | 申请人       |      |\n| message     | varchar(256) |          |              |      |\n| create_at   | timestamp    |          |              |      |\n| update_at   | timestamp    |          |              |      |\n| serve_at    | timestamp    |          | 设定服务时间 |      |\n| complete_at | timestamp    |          | 完成时间     |      |\n\n* state: 默认（0），提交（1），已安排(2), 完成（3），取消（4）\n\n## oc_repair_order\n\n服务\n\n|     列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|-------------|--------------|----------|--------------|------|\n| id          | int          |          |              |      |\n| state       | tinyint      |          | below        |      |\n| room_id     | int          |          |              |      |\n| house_id    | int          |          |              |      |\n| user_id     | int          |          |              |      |\n| message     | varchar(256) |          |              |      |\n| type        | tinyint      |          |              |      |\n| serve_at    | timestamp    |          | 设定服务时间 |      |\n| complete_at | timestamp    |          | 完成时间     |      |\n| create_at   | timestamp    |          |              |      |\n| update_at   | timestamp    |          |              |      |\n\n* state: 默认（0），提交（1），完成（2），取消（3）\n* type: 家电维修（0），房屋漏水（1），管道疏通/维修（2），房屋维修（3），其它（4）\n\n\n## oc_house_state_log\n\n房屋状态更改日志\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| house_id   | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n\n\n## oc_room_state_log\n\n房屋状态更改日志\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| room_id    | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n\n## oc_renter_pay_bill\n\n租房合同确立后，创建每笔支付订单。\n\n|      列名      |    类型   | 取值范围 |       代表含义       | 其他 |\n|----------------|-----------|----------|----------------------|------|\n| id             | int       |          |                      |      |\n| state          | tinyint u |          |                      |      |\n| index          | tinyint u |          | 支付订单的顺序       |      |\n| renter_bill_id | int       |          |                      |      |\n| start_month    | tinyint u | [0,11]   | 此次支付起始月份     |      |\n| for_month      | tinyint u | [1,12]   | 支付N个月房租        |      |\n| rent_fee       | int u     |          | 租金                 |      |\n| service_fee    | int u     |          | 服务费金额           |      |\n| deposit        | int u     |          | 押金金额             |      |\n| money_to_pay   | int u     |          | 此次支付需要支付金额 |      |\n| reduce         | int u     |          | 减免金额             |      |\n| coupon_reduce  | int u     |          | 优惠券减免           |      |\n| money_paid     | int u     |          | 已支付金额           |      |\n| need_pay_at    | timestamp |          | 需要缴纳房租的时间   |      |\n\nstate: 默认（0），分笔支付中（1），支付完成（2），取消（3）。\n\n## oc_renter_payment\n\n每一条代表一次支付的记录。如果是在线支付，会有online_payment_id链接到对应的第三方支付信息。\n\n|        列名       |    类型   | 取值范围 |       代表含义       | 其他 |\n|-------------------|-----------|----------|----------------------|------|\n| id                | int       |          |                      |      |\n| renter_bill_id    | int       |          |                      |      |\n| money             | int       |          |                      |      |\n| method            | tinyint u |          |                      |      |\n| online_payment_id | int       |          | oc_renter_payment.id |      |\n| create_at         | timestamp |          |                      |      |\n\n* method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）\n* money: 负数表示退款\n\n## oc_advice\n\n用户吐槽\n\n|   列名  |     类型     | 取值范围 |  代表含义  | 其他 |\n|---------|--------------|----------|------------|------|\n| id      | int          |          |            |      |\n| user_id | int          |          | oc_user.id |      |\n| mobile  | varchar(20)  |          |            |      |\n| email   | varchar(50)  |          |            |      |\n| content | varchar(250) |          |            |      |\n\n\n\n\n## oc_coupon_state_log\n\n优惠券发放和使用日志。\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| coupon_id  | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n## oc_article\n\n娱乐圈、彩客秀文章\n\n|    列名   |      类型      | 取值范围 |   代表含义   | 其他 |\n|-----------|----------------|----------|--------------|------|\n| id        | int            |          |              |      |\n| type      | tinyint u      |          |              |      |\n| weight    | int            |          |              |      |\n| create_at | timestamp      |          |              |      |\n| author    | varchar(20)    |          | 作者姓名     |      |\n| cover_img | varchar(256)    |          | 封面图像地址 |      |\n| head_img  | varchar(256)    |          | 作者头像地址 |      |\n| title     | varchar(50)    |          | 标题         |      |\n| brief     | varchar(128)   |          | 内容简介     |      |\n| content   | varchar(10000) |          | 文章全文     |      |\n\n* type: 彩客秀（0），娱乐圈（1）\n* weight: 权重，值越小，排名越靠前\n\n## oc_bank_card\n\n|    列名   |     类型    | 取值范围 |         代表含义        | 其他 |\n|-----------|-------------|----------|-------------------------|------|\n| id        | int         |          |                         |      |\n| user_id   | int         |          | oc_user.id              |      |\n| card      | varchar(24) |          | 卡号                    |      |\n| bank_name | varchar(64) |          | 开户行                  |      |\n| full_name | varchar(24) |          | 真实姓名                |      |\n| type      | tinyint u   |          | below                   |      |\n| validity  | date        |          | 有效期                  |      |\n| cvv       | varchar(8)  |          | 信用卡CVV码             |      |\n| comment   | varchar(64) |          | 备注,标记房租还是水电卡 |      |\n\n* type: 借记卡（0），信用卡（1）\n\n## oc_butler_task\n\n管家任务\n\n|       列名       |     类型     | 取值范围 |       代表含义       | 其他 |\n| ---------------- | ------------ | -------- | -------------------- | ---- |\n| id               | int          |          |                      |      |\n| butler_id        | int          |          |                      |      |\n| user_name        | varchar(32)  |          | 用户名               |      |\n| tel_num          | varchar(20)  |          | 手机号               |      |\n| channel_id       | int          |          | 渠道id               |      |\n| create_at        | timestamp    |          | 创建时间             |      |\n| update_at        | timestamp    |          | 上次更改             |      |\n| show_room_time   | varchar(24)  |          | 看房时间             |      |\n| show_room_style  | varchar(128) |          | 客户看房类型         |      |\n| hope_price_id    | int          |          | 理想价位id           |      |\n| status           | tinyint      |          | 任务状态             |      |\n| room_id          | int          |          | room_id              |      |\n| room_name_brief  | varchar(64)  |          | 房间名字介绍         |      |\n| failure_reason   | varchar(64)  |          | 失败原因             |      |\n| earnest_money_id | int          |          | 定金id               |      |\n| bill_id          | int          |          | 租房合同id           |      |\n| contact_content  | varchar(64)  |          | 已联系内容           |      |\n| stars            | int          |          | 星级                 |      |\n| rev_money        | int          |          | 尾款（签合同收到钱） |      |\n| earnest_method   | varchar(64)  |          | 定金支付方式         |      |\n| earnest_pay_time | date         |          | 定金支付时间         |      |\n| rev_money_method | varchar(64)  |          | 尾款支付方式         |      |\n| rev_money_time   | date         |          | 尾款支付时间         |      |\n\n* status: 初始状态(0), 已分配(1), 已联系(2), 未成功(3), 未成功潜在客户(4), 改约时间(5), 已交定金(6), 直接签约(7), 已完成(表示合同完结8), 已审核(运维审核9)\n* room_id: 没有确定(0), 确定后填写真正预约room_id(room_id)\n* pay_method: 参考oc_renter_payment 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3） \n\n## oc_earnest_money\n\n管家任务定金表\n\n|      列名      |    类型   | 取值范围 |       代表含义       | 其他 |\n|----------------|-----------|----------|---------------------|------|\n| id             | int       |          |                     |      |\n| price          | int       |          | 定金金额            |      |\n| state          | int       |          | 状态                |      |\n| user_id        | int       |          | user id             |      |\n| create_at      | timestamp |          |                     |      |\n\n* state: 初始状态(0)， 已交定金还没签订合同（1）， 交定金签订合同（2）, 用户取消预定（3）,直接签合同（4）\n* price: 负数表示退款\n\n## oc_channel\n\n渠道\n\n|    列名         |      类型      | 取值范围 |   代表含义   | 其他 |\n|-----------------|----------------|----------|--------------|------|\n| id              | int            |          |              |      |\n| channel_name    | varchar(32)    |          |    渠道名字   |      |\n\n\n## oc_hope_price\n\n心理价位\n\n|    列名          |      类型      | 取值范围 |   代表含义   | 其他 |\n|------------------|----------------|----------|--------------|------|\n| id               | int            |          |              |      |\n| hope_price_range | varchar(32)    |          |    价格范围  |      |\n\n* hope_price_range: 为id对应的解释,不限(1)， 1500以下(2)，1500-2000(3)，2000-2500(4), 2500-3000(5), 3000-3500(6), 3500-4000(7), 4000-4500(8), 4500以上(9)\n\n## oc_task_state_log\n\n任务状态更改日志\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| task_id    | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n* from_state、to_state: 参照oc_butler_task state状态描述\n\n\n## oc_sale_activity\n\n特价房活动，每一行代表一个活动。\n\n|    列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|------------|--------------|----------|--------------|------|\n| id         | int          |          |              |      |\n| start_time | timestamp    |          |              |      |\n| end_time   | timestamp    |          |              |      |\n| state      | tinyint      |          | below        |      |\n| name       | varchar(64)  |          |              |      |\n| cover_img  | varchar(256) |          | cover image  |      |\n| banner_img | varchar(256) |          | banner image |      |\n| create_at  | timestamp    |          |              |      |\n\n* state: default(0),active(1),over(2)\n\n\n## oc_rooms_in_sale\n\n参与活动的房间\n\n|     列名    | 类型 | 取值范围 |       代表含义      | 其他 |\n|-------------|------|----------|---------------------|------|\n| id          | int  |          |                     |      |\n| activity_id | int  |          | oc_sale_activity.id |      |\n| room_id     | int  |          | oc_room.id          |      |\n| price       | int  |          | 活动价格            |      |\n\n\n## oc_pre_order\n\n预定房间列表\n\n|     列名     |    类型   | 取值范围 |   代表含义   | 其他 |\n|--------------|-----------|----------|--------------|------|\n| id           | int       |          |              |      |\n| user_id      | int       |          | oc_user.id   |      |\n| room_id      | int       |          | oc_room.id   |      |\n| price        | int       |          | 约定的价格   |      |\n| deposit_paid | int       |          | 已交付的定金 |      |\n| state        | tinyint   |          | below        |      |\n| create_at    | timestamp |          |              |      |\n\n* state: default(0),已付定金(1),已取消(2),已完成入住(3)\n\n## oc_system_log\n\n|    列名   |      类型     | 取值范围 | 代表含义 | 其他 |\n|-----------|---------------|----------|----------|------|\n| id        | int           |          |          |      |\n| app       | varchar(32)   |          | app name |      |\n| username  | varchar(64)   |          |          |      |\n| ip        | varchar(16)   |          |          |      |\n| action    | varchar(128)  |          |          |      |\n| method    | varchar(8)    |          |          |      |\n| params    | varchar(1024) |          |          |      |\n| create_at | timestamp     |          |          |      |\n\n\n## oc_main_banner\n\n网站首页，Banner配置。\n\n|   列名  |     类型     | 取值范围 |    代表含义    | 其他 |\n|---------|--------------|----------|----------------|------|\n| id      | int          |          |                |      |\n| weight  | int          |          |                |      |\n| open    | tinyint      |          | 是否显示       |      |\n| type    | tinyint      |          | below          |      |\n| text    | varchar(128) |          | banner显示文字 |      |\n| img     | varchar(256) |          | 图片地址       |      |\n| url     | varchar(256) |          | 链接地址       |      |\n| comment | varchar(32)  |          | 备注           |      |\n\n* type：PC（0），手机（1），PC和手机都显示（2）\n\n## oc_landlord_bill_increment\n\n房东合同价格递增表\n\n|     列名     |     类型     | 取值范围 |       代表含义      | 其他 |\n| ------------ | ------------ | -------- | ------------------- | ---- |\n| id           | int          |          |                     |      |\n| bill_id      | int          |          | oc_landlord_bill.id |      |\n| index        | int          |          | 第几年租金价格      |      |\n| price        | decimal(9,6) |          | 实际价格            |      |\n| create_at    | timestamp    |          |                     |      |\n| increment_at | timestamp    |          | 递增房租价格时间    |      |\n\n## oc_butler_check_fee\n\n管家查询各表信息(退租、合同结束时查表，数据全部录入)\n注：录入数据信息必须为退租当月信息。\n\n|        列名       |      类型     | 取值范围 |      代表含义      | 其他 |\n| ----------------- | ------------- | -------- | ------------------ | ---- |\n| id                | int           |          |                    |      |\n| butler_id         | int           |          | 抄表管家           |      |\n| room_id           | int           |          | 房间id             |      |\n| butler_check_time | date          |          | 本次抄表日期       |      |\n| butler_check_val  | decimal(10,2) |          | 本次抄表数值       |      |\n| used_val          | decimal(10,2) |          | 估算所用数值       |      |\n| fee_payment       | decimal(10,2) |          | 需要缴费金额（元） |      |\n| user_id           | int           |          | oc_user.id         |      |\n| fee_type          | int           |          | 缴费类型           |      |\n| method            | tinyint u     |          |                    |      |\n| create_at         | timestamp     |          |                    |      |\n\n* fee_type:水（0），电（1），燃气（2）\n* method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）\n\n\n## oc_company_elec_payment\n\n公司代缴电费信息表\n\n|       列名      |      类型     | 取值范围 |       代表含义       | 其他 |\n| --------------- | ------------- | -------- | -------------------- | ---- |\n| id              | int           |          |                      |      |\n| charge_inst     | varchar(32)   |          | 收费单位名称         |      |\n| house_id        | int           |          | 套房id               |      |\n| elec_type       | int           |          | 用电类型             |      |\n| elec_payment    | decimal(10,2) |          | 缴费金额（元）       |      |\n| elec_last_time  | date          |          | 上次抄表日期         |      |\n| elec_check_time | date          |          | 本次抄表日期         |      |\n| elec_last_val   | decimal(10,2) |          | 上次抄表数值（度）   |      |\n| elec_check_val  | decimal(10,2) |          | 本次抄表数值（度）   |      |\n| elec_used_val   | decimal(10,2) |          | 本次所用电度数（度） |      |\n| create_at       | timestamp     |          |                      |      |\n\n* elec_type:居民用电(0)，一般工商业用电（1），大工业用电（2），农业用电（3）\n\n\n## oc_user_elec_payment\n\n租客缴电费信息表（每次录入公司代交电费后自动生成）\n\n|       列名      |      类型     | 取值范围 |          代表含义          | 其他 |\n| --------------- | ------------- | -------- | -------------------------- | ---- |\n| id              | int           |          |                            |      |\n| company_elec_id | int           |          | oc_company_elec_payment.id |      |\n| user_id         | int           |          | oc_user.id                 |      |\n| need_pay        | decimal(10,2) |          | 需要缴费金额（元）         |      |\n| money_paid      | decimal(10,2) |          | 已经缴费金额（元）         |      |\n| state           | int           |          | 支付状态                   |      |\n| elec_check_time | date          |          | 本次缴费日期               |      |\n| elec_used_val   | decimal(10,2) |          | 用电度数(价格做估算)       |      |\n\n* state: 默认（0），未支付（1），支付完成（2）\n\n\n## oc_company_water_payment\n\n公司代缴水费信息表(水费+污水处理费)\n\n|       列名       |      类型     | 取值范围 |      代表含义      | 其他 |\n| ---------------- | ------------- | -------- | ------------------ | ---- |\n| id               | int           |          |                    |      |\n| house_id         | int           |          | 套房id             |      |\n| water_payment    | decimal(10,2) |          | 缴费金额           |      |\n| water_last_time  | date          |          | 上次抄表日期       |      |\n| water_check_time | date          |          | 本次抄表日期       |      |\n| water_last_val   | decimal(10,2) |          | 上次读数（吨）     |      |\n| water_check_val  | decimal(10,2) |          | 本次读数（吨）     |      |\n| water_used_val   | decimal(10,2) |          | 本次所用水量（吨） |      |\n| create_at        | timestamp     |          |                    |      |\n\n\n## oc_user_water_payment\n\n租客缴水费信息表（每次录入公司代交水费后自动生成）\n\n|       列名       |      类型     | 取值范围 |           代表含义          | 其他 |\n| ---------------- | ------------- | -------- | --------------------------- | ---- |\n| id               | int           |          |                             |      |\n| company_water_id | int           |          | oc_company_water_payment.id |      |\n| user_id          | int           |          | oc_user.id                  |      |\n| need_pay         | decimal(10,2) |          | 本次需要缴费金额（元）      |      |\n| money_paid       | decimal(10,2) |          | 本次已经缴费金额（元）      |      |\n| state            | int           |          | 支付状态                    |      |\n| water_check_time | date          |          | 本次缴费日期                |      |\n| water_used_val   | decimal(10,2) |          | 用户所用水量（价格做估算）  |      |\n\n* state: 默认（0），支付中（1），支付完成（2）\n\n\n## oc_company_gas_payment\n\n公司代缴燃气费信息表\n\n|      列名      |      类型     | 取值范围 |        代表含义        | 其他 |\n| -------------- | ------------- | -------- | ---------------------- | ---- |\n| id             | int           |          |                        |      |\n| house_id       | int           |          | 套房id                 |      |\n| charge_inst    | varchar(32)   |          | 收费单位名称           |      |\n| gas_type       | int           |          | 用气类型               |      |\n| gas_payment    | decimal(10,2) |          | 缴费金额               |      |\n| gas_last_time  | date          |          | 上次抄表日期           |      |\n| gas_check_time | date          |          | 本次抄表日期           |      |\n| gas_last_val   | decimal(10,2) |          | 上次读数（立方米）     |      |\n| gas_check_val  | decimal(10,2) |          | 本次读数（立方米）     |      |\n| gas_used_val   | decimal(10,2) |          | 本次所用气量（立方米） |      |\n| create_at      | timestamp     |          |                        |      |\n\n* gas_type:居民用气(0)，学校用气（1），机关事业和企业单位用气（2）\n\n## oc_user_gas_payment\n\n租客缴燃气费信息表（每次录入公司代交燃气费后自动生成）\n\n|      列名      |      类型     | 取值范围 |          代表含义          | 其他 |\n| -------------- | ------------- | -------- | -------------------------- | ---- |\n| id             | int           |          |                            |      |\n| company_gas_id | int           |          | oc_company_gas_payment.id  |      |\n| user_id        | int           |          | oc_user.id                 |      |\n| need_pay       | decimal(10,2) |          | 本次需要缴费金额（元）     |      |\n| money_paid     | decimal(10,2) |          | 本次已经缴费金额（元）     |      |\n| state          | int           |          | 支付状态                   |      |\n| gas_check_time | date          |          | 本次缴费日期               |      |\n| gas_used_val   | decimal(10,2) |          | 用户所用气量（价格做估算） |      |\n\n* state: 默认（0），支付中（1），支付完成（2）\n\n## oc_other_fee_payment\n\n每一条代表一次支付的记录。如果是在线支付，会有third_payment_id链接到对应的第三方支付信息。\n\n|       列名       |      类型     | 取值范围 |        代表含义        | 其他 |\n| ---------------- | ------------- | -------- | ---------------------- | ---- |\n| id               | int           |          |                        |      |\n| fee_type         | int           |          | 缴费类型               |      |\n| user_id          | int           |          | oc_user.id             |      |\n| check_fee_id     | int           |          | oc_butler_check_fee.id |      |\n| money            | decimal(10,2) |          |                        |      |\n| method           | tinyint u     |          |                        |      |\n| third_payment_id | int           |          | oc_third_payment.id    |      |\n| create_at        | timestamp     |          |                        |      |\n\n* method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）\n* fee_type:水（0），电（1），燃气（2）\n* check_fee_id:默认没有，只有在退租或合同结束时结算水电气费用时，生成支付订单才用。\n\n\n## oc_user_wallet\n\n用户钱包，如果remain_money>0，水电气费用金额会从中扣除。\n\n|       列名       |      类型     | 取值范围 |       代表含义      | 其他 |\n| ---------------- | ------------- | -------- | ------------------- | ---- |\n| id               | int           |          |                     |      |\n| user_id          | int           |          | oc_user.id          |      |\n| remain_money     | decimal(10,2) |          | 钱包剩余金额        |      |\n| create_at        | timestamp     |          |                     |      |\n\n\n## oc_main_page\n\n首页内容配置表\n\n|  列名  |     类型     | 取值范围 |  代表含义  | 其他 |\n|--------|--------------|----------|------------|------|\n| id     | int          |          |            |      |\n| column | tinyint u    |          | 栏目id     |      |\n| index  | tinyint u    |          | 栏目内序号 |      |\n| img    | varchar(128) |          | 图片       |      |\n| url    | varchar(128) |          | 跳转地址   |      |\n| config | varchar(512) |          | json配置项 |      |\n| open   | tinyint      |          | 是否打开   |      |\n| show   | tinyint      |          | 显示在哪里 |      |\n\n`show`:  \n\n* 0，PC和Mobile都显示\n* 1，只显示在PC\n* 2，只显示在Mobile\n\n`column`: \n\n* 0，表示首页Banner图的配置。`config`可配置,格式为：\n`{\"alt\":\"图片描述信息\"}`。\n* 1，表示精选房间的配置，此时，`config`需要配置，格式为：`{\"price\":2000,\"name\":\"大冲城市花园3栋6座301\"}`。\n* 2，表示房屋列表快速链接的配置，包括：南山区、福田区、特价房。\n* 3，表示彩客秀配置，此时，需要配置`config`，格式为：`{\"title\":\"小女神的设计师之路\",\"brief\":\"XXXXXX\"}`.\n* 4，表示娱乐圈。`config`可配置,格式为：\n`{\"alt\":\"图片描述信息\"}`。\n* 5，表示新闻配置。'config'需要配置,格式为:`{\"title\":\"测试1\"，\"from\":\"深圳日报\",\"create_time\":\"2015-10-11\"}`。\n\n\n## oc_special_room\n\n特价房\n\n|    列名   |  类型 |    取值范围   | 代表含义 |\n|-----------|-------|---------------|----------|\n| id        | int   |               |          |\n| room_id   | int   | PK of oc_room |          |\n| old_price | float |               | 原来价格 |\n\n\n## oc_boundary\n\n|      列名     |      类型      | 取值范围 |         代表含义        | 其他 |\n| ------------- | -------------- | -------- | ----------------------- | ---- |\n| id            | int            |          | id                      |      |\n| center_lat    | decimal(13,10) |          | 区域地图上中心纬度      |      |\n| center_lng    | decimal(13,10) |          | 区域地图上中心经度      |      |\n| sw_lat        | decimal(13,10) |          | 区域地图上西南角纬度    |      |\n| sw_lng        | decimal(13,10) |          | 区域地图上西南角经度    |      |\n| ne_lat        | decimal(13,10) |          | 区域地图东北角纬度      |      |\n| ne_lng        | decimal(13,10) |          | 区域地图东北角经度      |      |\n| show_zoom     | int            |          | 地图显示时级别          |      |\n| boundary      | text           |          | json格式数据            |      |\n| show_name     | varchar(64)    |          | 地图显示(如:南山区)     |      |\n| grade         | int            |          | 级别(小区/商圈/区域/市) |      |\n| hide          | int            |          | 是否在地图上隐藏(默认0) |      |\n| boundary_desc | varchar(512)   |          | 位置描述信息            |      |\n\n`boundary`:\n\n* 该区域所表示的范围,由多组经纬度坐标围成的一个区域,为json数据字符串组成.\n* 格式如下:\n```json\n{\n    \"main\":[\n        {\"pointLon\":\"113.96189\",\"pointLat\":\"22.550857\"},\n        {\"pointLon\":\"113.961921\",\"pointLat\":\"22.5488\"},\n        {\"pointLon\":\"113.962195\",\"pointLat\":\"22.547987\"},\n        {\"pointLon\":\"113.964019\",\"pointLat\":\"22.548375\"},\n        {\"pointLon\":\"113.964234\",\"pointLat\":\"22.550515\"},\n        {\"pointLon\":\"113.964329\",\"pointLat\":\"22.551041\"}\n    ],\n    \"center\":[{\"pointLon\":\"113.96189\",\"pointLat\":\"22.550857\"}]}\n```\n\n`grade`:\n\n* 1:小区(如:大冲城市花园)\n* 2:商圈(如:科技园)\n* 3:区域(如:南山区)\n* 4:市(如:深圳市)\n* 5:地铁站（如:世界之窗）\n\n## oc_user_question\n\n|     列名    |     类型     | 取值范围 |    代表含义    | 其他 |     |\n| ----------- | ------------ | -------- | -------------- | ---- | --- |\n| id          | int          |          | id             |      |     |\n| user_id     | int          |          | oc_user.id     |      |     |\n| question    | varchar(256) |          | 提问问题       |      |     |\n| answer      | text         |          | 答案           |      |     |\n| thumbs_up   | int          |          | 点赞数量       |      |     |\n| device_type | varchar(32)  |          | 提问时设备类型 |      |     |\n| hide        | int          |          | 是否显示       |      |     |\n| create_at   | timestamp    |          | 创建时间       |      |     |\n| update_at   | timestamp    |          |                |      |     |\n| room_id     | int          |          | 哪个房间提问   |      |     |\n\n## oc_question_of_room\n`room`和`question`的映射关系。\n\n|     列名    | 类型 | 取值范围 |       代表含义      | 其他 |\n| ----------- | ---- | -------- | ------------------- | ---- |\n| id          | int  |          | id                  |      |\n| room_id     | int  |          | 房间id              |      |\n| question_id | int  |          | oc_user_question.id |      |\n\n\n## oc_question_of_house\n\n## oc_question_of_community\n结构跟`oc_question_of_room`类似\n\n\n## oc_life_service\n\n|       列名       |      类型      | 取值范围 |    代表含义   | 其他 |     |\n| ---------------- | -------------- | -------- | ------------- | ---- | --- |\n| id               | int            |          | id            |      |     |\n| service_icon_url | varchar(256)   |          | icon的oss地址 |      |     |\n| service_name     | varchar(128)   |          | 服务场地名字  |      |     |\n| line_icon_url    | varchar(256)   |          | 路线icon地址  |      |     |\n| line_desc        | text           |          | 路线描述      |      |     |\n| longtitude       | decimal(13,10) |          | 经度          |      |     |\n| latitude         | decimal(13,10) |          | 纬度          |      |     |\n| service_type     | int            |          | 服务类型      |      |     |\n\n* service_type: 未定义(0), 购物(1), 美食(2), 运动(3), 娱乐(4)\n\n\n## oc_life_service_of_community\n\n|       列名      | 类型 | 取值范围 |      代表含义      | 其他 |\n| --------------- | ---- | -------- | ------------------ | ---- |\n| id              | int  |          | id                 |      |\n| community_id    | int  |          | 小区id             |      |\n| life_service_id | int  |          | oc_life_service.id |      |\n| hide            | int  |          | 是否显示           |      |\n| serial_num      | int  |          | 排序               |      |\n\n* hide: 显示(0), 隐藏(1)\n\n## oc_user_destination\n\n|    列名   |     类型    | 取值范围 |  代表含义  | 其他 |     |\n| --------- | ----------- | -------- | ---------- | ---- | --- |\n| id        | int         |          | id         |      |     |\n| room_id   | int         |          | oc_room.id |      |     |\n| user_id   | int         |          | oc_user.id |      |     |\n| dest_name | varchar(64) |          | 目的地     |      |     |\n| create_at | timestamp   |          | 创建时间   |      |     |\n\n## oc_hobby\n爱好\n\n|       列名      |     类型    |    取值范围    |  代表含义  | 其他 |     |\n| --------------- | ----------- | -------------- | ---------- | ---- | --- |\n| id              | int         |                | id         |      |     |\n| name            | varchar(32) |                | 名字       |      |     |\n| detail          | text        |                | 爱好描述   |      |     |\n| parent_hobby_id | int         | PK of oc_hobby | 所属爱好   |      |     |\n| display         | int         | 0-1            | 显示在筛选 |      |     |\n| serial_num      | int         |                | 排序       |      |     |\n\n* serial_num: 值小的在最前面\n\n## oc_hobby_of_user\n用户爱好\n\n|    列名    |     类型    | 取值范围 |    代表含义   | 其他 |     |\n| ---------- | ----------- | -------- | ------------- | ---- | --- |\n| id         | int         |          | id            |      |     |\n| user_id    | int         |          | oc_user.id    |      |     |\n| hobby_id   | int         |          | oc_hobby.id   |      |     |\n| grade      | varchar(16) |          | hobby级别描述 |      |     |\n| serial_num | int         |          | 排序          |      |     |\n\n## oc_house_layout\n\n代表一种户型图\n\n|     列名    |     类型    | 取值范围 |    代表含义    | 其他 |     |\n| ----------- | ----------- | -------- | -------------- | ---- | --- |\n| id          | int         |          | id             |      |     |\n| img         | varchar(64) |          | 户型图oss地址  |      |     |\n| layout_desc | varchar(64) |          | 户型图描述信息 |      |     |\n\n## oc_slice\n\n代表一片区域，一个大厅可以由多个slice组成，一个房间也可以由多个slice组成.\n\n\n|       列名      |     类型    | 取值范围 |      代表含义      | 其他 |     |\n| --------------- | ----------- | -------- | ------------------ | ---- | --- |\n| id              | int         |          | id                 |      |     |\n| boundary        | text        |          | json数据格式       |      |     |\n| slice_desc      | varchar(64) |          | slice描述信息      |      |     |\n| house_layout_id | int         |          | oc_house_layout.id |      |     |\n\n`boundary`:\n* 该区域所表示的范围,由多组像素坐标围成的一个区域,相对坐标点为左下角坐标,为json数据字符串组成，编辑需要按照区域顺序填写，切忌不能跳跃填写．\n* 格式如下:\n[{\"pointX\":\"162\",\"pointY\":\"60\"},{\"pointX\":\"162\",\"pointY\":\"290\"},{\"pointX\":\"367\",\"pointY\":\"60\"},{\"pointX\":\"367\",\"pointY\":\"288\"}]\n\n`slice_desc`:\n* 命名规则:户型图名字／地址＋区域介绍\n\n\n## oc_slice_of_scene\n\n一个场景信息\n\n|     列名     |     类型     | 取值范围 |       代表含义       | 其他 |     |\n| ------------ | ------------ | -------- | -------------------- | ---- | --- |\n| id           | int          |          | id                   |      |     |\n| scene_name   | varchar(128) |          | 场景命名             |      |     |\n| slice_id     | int          |          | oc_slice.id          |      |     |\n| house_img_id | int          |          | oc_image_of_house.id |      |     |\n| comm_id      | int          |          | oc_community.id      |      |     |\n| room_id      | int          |          | oc_room.id           |      |     |\n| point_x      | int          |          | 该场景的摄影点x坐标  |      |     |\n| point_y      | int          |          | 摄影点y坐标          |      |     |\n| v_degree     | int          |          | 度数（正北顺时度数） |      |     |\n\n`slice_id`:(非必须)\n* 户型图中某个区域\n`house_img_id`:(非必须)\n* 每个场景需要和套房的哪个户型图关联．（考虑到复式楼）\n`comm_id`:(非必须)\n* 小区场景,如果该场景名字属于小区场景名,需要配置该项\n`room_id`:(非必须)\n*　这个场景对应的房间id，如果不是room则不用填写\n\n\n## oc_expense_fee\n\n公司支出费用，目前包括（中介推荐费\\租客推荐费\\非租客推荐费\\活动返现）\n注：推荐费是在成功签订合同后，公司支出的。\n\n|    列名   |     类型     | 取值范围 |      代表含义     |    其他    |     |\n| --------- | ------------ | -------- | ----------------- | ---------- | --- |\n| id        | int          |          | id                |            |     |\n| fee_type  | int          |          | 费用类型          |            |     |\n| money     | int          |          | 支出金额(大于0)   |            |     |\n| pay_time  | date         |          | 付款时间          |            |     |\n| payee     | varchar(32)  |          | 收款人            |            |     |\n| pay_desc  | varchar(128) |          | 付款详细描述信息  |            |     |\n| create_at | timestamp    |          | 创建时间          |            |     |\n| bill_id   | int          |          | oc_renter_bill.id | 推荐费必填 |     |\n| house_id  | int          |          | oc_house.id       | 维修必填   |     |\n\n`fee_type`:\n* 0:未选择\n* 1:中介推荐费\n* 2:租客推荐费\n* 3:朋友推荐费(非租客/非中介)\n* 4:活动返现费\n* 5:维修费支出\n\n## oc_back_rent_reason\n退租原因\n\n| 列名 |     类型     | 取值范围 | 代表含义 | 其他 |     |\n| ---- | ------------ | -------- | -------- | ---- | --- |\n| id   | int          |          | id       |      |     |\n| name | varchar(128) |          | 退租原因 |      |     |\n\n## oc_back_rent\n退租列表\n\n|      列名      | 类型 | 取值范围 |           代表含义          | 其他 |     |\n| -------------- | ---- | -------- | --------------------------- | ---- | --- |\n| id             | int  |          | id                          |      |     |\n| reason_id      | int  |          | oc_back_rent_reason.id      |      |     |\n| bill_id        | int  |          | oc_renter_bill.id退租前合同 |      |     |\n| back_rent_time | date |          | 退租时间                    |      |     |\n| create_at      |      |          | 创建时间                    |      |     |\n\n\n","source":"_posts/resume/COLOR公寓数据库设计.md","raw":"Status: public\ndescription: COLOR公寓后台系统，数据库设计\ntitle: COLOR公寓数据库设计\ntags: mysql,db,rdb,color\n\n\n# 数据库文档\n\n>oc为opencart的简称，所有数据库表格均以oc_开头。\n\n\n## oc_room\n`room`代表一个单间. 每个`room`必须属于某个`house`。\n\n|      列名     |     类型     |  取值范围 |          代表含义         | 其他 |\n| ------------- | ------------ | --------- | ------------------------- | ---- |\n| id            | int          |           | id                        |      |\n| house_id      | int          |           | 属于哪个house             |      |\n| name          | varchar      |           | 房间名称                  |      |\n| detail        | text         |           | 见下注释                  |      |\n| price         | float        |           | 房间价格，元/月           |      |\n| area          | int          |           | 面积                      |      |\n| orientation   | tinyint      | 0,1,2,3,4 | 未编辑，东西南北          |      |\n| style_id      | int          |           | PK of oc_room_style       |      |\n| slogan        | text         |           | slogan                    |      |\n| weight        | int          |           | 影响排序规则，允许负值    |      |\n| state         | tinyint      | 0~5       | 见下注释                  |      |\n| butler_id     | int          |           | 服务此房间的管家          |      |\n| number        | tinyint u    | [0~max)   | 在大房间内的序号          |      |\n| has_lav       | tinyint      |           | 有独立卫生间              |      |\n| has_balcony   | tinyint      |           | 有私人阳台                |      |\n| hidden        | tinyint      |           | 强制隐藏此房间            |      |\n| update_at     | timestamp    |           | 上次更改                  |      |\n| ceate_at      | timestamp    |           | 创建日期                  |      |\n| complete_at   | date         |           | 预计上线时间              |      |\n| privilidge    | bigint u     |           | 权限禁止管理              |      |\n| second_weight | int          |           | 智能排序规则,每天定时更新 |      |\n| room_type     | varchar(256) |           | 房间类型                  |      |\n\nprivilidge每个位的含义：\n\n* 0: 禁止邀请其他人\n* 1: 禁止被邀请\n\nstate:  \n\n* 0：初始状态\n* 9：预上线\n* 10：已上线\n* 11：已预订\n* 12：已租出\n\ndetail:  \n编辑员对房间的描述。示例如下：\"\\[\\]\"括起来的是标题，剩下的是内容。\n\n\n>[主卧带卫生间，超大阳台，超值空间]  \n周边：人大附中朝阳学校芍药居分校：包括人大附小，初中，高中部。另被 对外经贸大学、北京服装学院、现代文学馆所环绕，周边医院有著名的中日 友好医院！银行，超市等配套设施齐全，毗邻元大都遗址公园。  \n交通：您想每天睡到自然醒么，距离地铁芍药居站步行（地铁10号线和13 号线交汇）只需2分钟，公交119路; 547路; 942快; 专22路步行只需5分 钟，多么舒适多么快捷！快拿起电话拨号吧！  \n价格：正规主卧，朝南向，带阳台，距离地铁站仅需2分钟的超便利位置， 超高性价比。\n\n* room_type: varchar定义规则: 小区名字+房间序号+卧室个数+大厅个数+价格  \n(拼接的字符串相同则认为同一类房源)\n\n\n## oc_house\n`house`代表一套房子，比如一套三室一厅。`house`必须属于某个`district`.\n\n|         列名        |     类型    | 取值范围 |      代表含义      | 其他 |\n| ------------------- | ----------- | -------- | ------------------ | ---- |\n| id                  | int         |          | id                 |      |\n| name                | varchar(20) |          | 名称               |      |\n| floor               | u smallint  |          | 楼层               |      |\n| building_id         | int         |          | PK of oc_buiding   |      |\n| area                | u smallint  |          | 面积               |      |\n| room_count          | u tinyint   |          | 卧室个数           |      |\n| holl_count          | u tinyint   |          | 厅个数             |      |\n| lav_count           | u tinyint   |          | 卫生间个数         |      |\n| total_floor         | u smallint  |          | 总楼层             |      |\n| building_name       | varchar(10) |          | 大楼名称           |      |\n| community_id        | int         |          | PK of oc_community |      |\n| position_id         | int         |          | PK of oc_position  |      |\n| building_postion_id | int         |          | PK of oc_position  |      |\n| state               | tinyint u   |          | 状态               |      |\n| elec_key            | varchar(16) |          | 电费合同账号       |      |\n| gas_key             | varchar(16) |          | 燃气费客户编码     |      |\n| butler_id           | int         |          | 服务此房间的管家   |      |\n\nstate:(装修状态)  \n\n* 0：初始状态\n* 1：已签约\n* 2：已测量\n* 3：已装修完毕\n* 4：采购订单已发出\n* 5：家具设备已签收和验货\n* 6：家具已安装\n* 7：已清洁\n* 8：已拍摄\n* 9：已完成\n\n\n\n## oc_building\n\n`building`代表一栋楼。一个`building`对应一个唯一的地理位置（经纬度）。\n\n|     列名     |     类型    | 取值范围 |      代表含义     | 其他 |\n|--------------|-------------|----------|-------------------|------|\n| id           | int         |          | id                |      |\n| name         | varchar(20) |          | 名称              |      |\n| community_id | int         |          | 所属小区          |      |\n| position_id  | int         |          | PK of oc_position |      |\n\n\n\n## oc_community\n代表一个小区，一个小区一有**唯一**的街道号码。若XX小区分为3期，每期的街道号不同，则视为三个不同小区。\n\n|      列名     |     类型    | 取值范围 |       代表含义       | 其他 |\n| ------------- | ----------- | -------- | -------------------- | ---- |\n| id            | int         |          | id                   |      |\n| name          | varchar(40) |          |                      |      |\n| position_id   | int         |          | PK of oc_position    |      |\n| position_desc | varchar(40) |          | 地理位置的自定义描述 |      |\n| boundary_id   | int         |          | oc_boundary.id       |      |\n\n\n\n## oc_position\n\n\n|      列名     |      类型      | 取值范围 |  代表含义  | 其他 |\n| ------------- | -------------- | -------- | ---------- | ---- |\n| id            | int            |          | id         |      |\n| province      | varchar(8)     |          | 省份       |      |\n| city          | varchar(8)     |          | 城市       |      |\n| district      | varchar(8)     |          | 区         |      |\n| street        | varchar(16)    |          | 街道名     |      |\n| street_number | int(12)        |          | 街道号码   |      |\n| longtitude    | decimal(13,10) |          | 经度       |      |\n| latitude      | decimal(13,10) |          | 纬度       |      |\n| custom_desc   | text           |          | 自定义描述 |      |\n\n\n\n## oc_renter_bill\n\n代表一个实际发生的订单，租客与迈芒的订单。\n\n|       列名      |     类型     | 取值范围 |      代表含义      | 其他 |\n| --------------- | ------------ | -------- | ------------------ | ---- |\n| id              | int          |          | id                 |      |\n| room_id         | int          |          | room id            |      |\n| start_time      | date         |          | 合同开始时间       |      |\n| expect_end_time | date         |          | 合同结束时间       |      |\n| real_end_time   | date         |          | 实际结束合同的时间 |      |\n| price           | decimal(9,6) |          | 标价，元/月        |      |\n| real_price      | decimal(9,6) |          | 实际价格，元/月    |      |\n| deposit         | int unsigned |          | 押金金额           |      |\n| pay_cycle_id    | int          |          |                    |      |\n| user_id         | int          |          | oc_user.id         |      |\n| state           | int          | 0,1,2,3  | 见注释             |      |\n| month_paid      | tinyint      |          | 已付清月数         |      |\n| service_fee     | int unsigned |          | 服务费，元/月      |      |\n| reduce          | int          |          | 减少金额           |      |\n| reduce_reason   | varchar(32)  |          | 减少金额原因       |      |\n\n\nstate:\n\n* 0:未生效\n* 1:已生效\n* 2:已取消\n* 3:已完成\n\n## oc_renter_bill_payment(废弃)\n\n租金支付\n\n|    列名    |   类型  | 取值范围 |      代表含义     | 其他 |\n|------------|---------|----------|-------------------|------|\n| id         | int     |          | id                |      |\n| bill_id    | int     |          | oc_renter_bill.id |      |\n| month      | tinyint |          | 月数              |      |\n| for_month  | tinyint |          | 付了几个月的钱    |      |\n| type       | int     |          | 见下注释          |      |\n| count      | int     |          | 金额              |      |\n| coupon_id  | int     |          | oc_coupon.id      |      |\n| payment_id | int     |          | oc_payment.id     |      |\n\ntype:\n\n* 1:支付押金（count为负数时表示退换押金）\n* 2:支付房租\n* 4:支付服务费\n* 8:用优惠券抵扣房租。\n* 6: 支付房租和服务费。\n\n\n## oc_landlord_bill_payment\n\n房东租金支付\n\n|   列名  |   类型  | 取值范围 |       代表含义      | 其他 |\n|---------|---------|----------|---------------------|------|\n| id      | int     |          | id                  |      |\n| bill_id | int     |          | oc_landlord_bill.id |      |\n| month   | tinyint |          | 月数                |      |\n| type    | int     |          | 见下注释            |      |\n| count   | int     |          | 金额                |      |\n\ntype:\n\n* 0:支付押金（count为负数时表示退换押金）\n* 1:支付房租\n\n\n \n\n## oc_landlord_bill\n\n代表一个实际发生的订单，房主与迈芒的订单。\n\n|       列名      |     类型     | 取值范围 |      代表含义      | 其他 |\n|-----------------|--------------|----------|--------------------|------|\n| id              | int          |          | id                 |      |\n| house_id        | int          |          |                    |      |\n| start_time      | date         |          | 合同开始时间       |      |\n| expect_end_time | date         |          | 合同结束时间       |      |\n| real_end_time   | date         |          | 实际结束合同的时间 |      |\n| price           | decimal(9,6) |          | 标价，元/月        |      |\n| pay_cycle_id    | int          |          | PK of oc_pay_cycle |      |\n| user_id         | int          |          | 客户 id            |      |\n| deposit         | int unsigned |          | 押金金额           |      |\n| state           | int          | 0,1,2,3  | 见注释             |      |\n| property_fee    | float        |          | 物业费(元/月)      |      |\n| agency_fee      | float        |          | 中介费             |      |\n| agency_fee      | float        |          | 中介费             |      |\n\n\n备注：  \n\n* 正常情况`expect_end_time=real_end_time`,当用户提前终止合约的时候，两个时间不等。\n\n\nstate:\n\n* 0:未生效\n* 1:已生效\n* 2:已取消\n* 3:已完成\n\n\n## oc_job\n客户职业\n\n|      列名     |     类型    |   取值范围   | 代表含义 | 其他 |\n| ------------- | ----------- | ------------ | -------- | ---- |\n| id            | int         |              | id       |      |\n| name          | varchar(20) |              | 职业名称 |      |\n| detail        | text        |              | 职业描述 |      |\n| parent_job_id | int         | PK of oc_job | 所属职业 |      |\n| ver_job       | int         |              | 使用版本 |      |\n\nver_job:\n\n* 0:初始化 （老版本使用）\n* 1:2015-11-30整理job分类后使用版本 (新版本)\n\n\n## oc_user\n\n客户账号。\n\n|         列名         |     类型     |  取值范围  |      代表含义     | 其他 |\n| -------------------- | ------------ | ---------- | ----------------- | ---- |\n| id                   | int          |            | id                |      |\n| email                | varchar(50)  |            |                   |      |\n| mobile               | varchar(20)  |            |                   |      |\n| full_name            | varchar(32)  |            |                   |      |\n| icon                 | text         |            | 头像地址          |      |\n| identify_card_img    | text         |            | 身份证照片        |      |\n| identify_card_number | varchar(20)  |            | 身份证号码        |      |\n| user_type            | tinyint      | 0,1,2      | 租客,房主,都是    |      |\n| verified             | tinyint      | 0,1        | 未实名认证,已认证 |      |\n| gender               | tinyint      | 0,1        | 女，男            |      |\n| birthday             | date         |            | 生日              |      |\n| job_id               | int          | PK(oc_job) | 职业              |      |\n| pwd_hash             | varchar(255) |            |                   |      |\n| pwd_reset_token      | varchar(255) |            |                   |      |\n| auth_key             | varchar(32)  |            |                   |      |\n| status               | tinyint      | 10,0       | 激活,未激活       |      |\n| create_at            | timestamp    |            |                   |      |\n| update_at            | timestamp    |            |                   |      |\n| bank_card            | varchar(24)  |            | 银行卡            |      |\n| bank_name            | varchar(20)  |            | 银行名称          |      |\n| bank_of_deposit      | varchar(20)  |            | 开户行            |      |\n| hobby                | varchar(30)  |            | 爱好              |      |\n| state                | tinyint      |            | below             |      |\n| invite_code          | char(6)      |            | 邀请码            |      |\n| invite_by_user_id    | int          |            | 邀请人            |      |\n| invitee_awarded      | tinyint      |            | 邀请人已奖励      |      |\n| say                  | varchar(256) |            | 用户say           |      |\n\ndetail:\n\n* state: 默认/系统生成（0），用户激活（1）\n\n\n\n## oc_keyword\n代表一个关键字。e.g. 南北通透、朝南、落地窗、大床、安静、核心商圈\n\n|    列名    |     类型     | 取值范围 |    代表含义    | 其他 |\n| ---------- | ------------ | -------- | -------------- | ---- |\n| id         | int          |          | id             |      |\n| name       | varchar(10)  | 10 chars | 名称           |      |\n| display    | int          | 0-1      | 是否显示       |      |\n| key_type   | int          |          | 关键字类型     |      |\n| key_desc   | text         |          | 关键字描述信息 |      |\n| icon_url   | varchar(256) |          | icon的oss地址  |      |\n| serial_num | int          |          | 排序           |      |\n\n* display: 房屋筛选里不展示(0), 展示(1)\n* key_type: 未分配(0,老版本使用), 特色配置(1), 其它配置(2)\n* serial_num: 值小的在最前面\n\n## oc_keyword_of_room\n`room`和`keyword`的映射关系。每一行表示某个`room`被添加了某个`keyword`。\n\n|      列名      | 类型 | 取值范围 |         代表含义         | 其他 |\n| -------------- | ---- | -------- | ------------------------ | ---- |\n| id             | int  |          | id                       |      |\n| room_id        | int  |          | 房间id                   |      |\n| keyword_id     | int  |          | 关键字                   |      |\n| display_detail | int  |          | 是否显示在详情页         |      |\n| display_widget | int  |          | 是否显示在点击查看小窗口 |      |\n\n* display_detail: 不展示(0), 展示(1)\n* display_widget: 不展示(0), 展示(1)\n\n## oc_keyword_of_house\n\n## oc_keyword_of_community\n结构跟`oc_keyword_of_room`类似\n\n\n\n\n## oc_room_style\n\n|  列名  |     类型    | 取值范围 | 代表含义 | 其他 |\n|--------|-------------|----------|----------|------|\n| id     | int         |          | id       |      |\n| name   | varchar(10) |          | 风格名称 |      |\n| detail | text        |          | 风格描述 |      |\n\n\n## oc_butler\n\n管家。\n\n|         列名         |     类型    | 取值范围 |  代表含义  | 其他 |\n|----------------------|-------------|----------|------------|------|\n| id                   | int         |          | id         |      |\n| full_name            | varchar(10) |          |            |      |\n| nick_name            | varchar(10) |          | 昵称       |      |\n| identify_card_img    | text        |          | 身份证照片 |      |\n| identify_card_number | varchar(20) |          | 身份证号码 |      |\n| pwd                  | varchar(32) |          |            |      |\n| mobile               | varchar(20) |          |            |      |\n| tel                  | varchar(20) |          | 分机电话   |      |\n| custom_desc          | text        |          | 自定义描述 |      |\n| gender               | tinyint     | 0,1      | 女，男     |      |\n| icon                 | text        |          | 头像地址   |      |\n\n\n## oc_bulter_and_room\n\n|    列名    | 类型 | 取值范围 | 代表含义 | 其他 |\n|------------|------|----------|----------|------|\n| id         | int  |          | id       |      |\n| bulter_id  | int  |          |          |      |\n| room_id    | int  |          |          |      |\n\n\n\n## oc_image_of_room\n\n|    列名   |   类型  | 取值范围 |   代表含义  | 其他 |\n| --------- | ------- | -------- | ----------- | ---- |\n| id        | int     |          | id          |      |\n| room_id   | int     |          |             |      |\n| img       | text    |          |             |      |\n| type      | tinyint | 0~5      | 见下定义    |      |\n| room_desc | text    |          | 图片描述    |      |\n\n`type`:\n\n* 0：未编辑\n* 1：高清大图\n* 2：列表封面\n* 3：三维\n* 4：户型图(无效,户型图和house绑定,参照oc_house_type)\n* 5：普通\n* 6：竖图\n\n\n## oc_image_of_house\n\n|       列名      |   类型  | 取值范围 |      代表含义      | 其他 |     |\n| --------------- | ------- | -------- | ------------------ | ---- | --- |\n| id              | int     |          | id                 |      |     |\n| house_id        | int     |          | oc_house.id        |      |     |\n| img             | text    |          |                    |      |     |\n| house_desc      | text    |          | 公用图片描述       |      |     |\n| floor           | int     |          | 复式房第几层       |      |     |\n| house_layout_id | int     |          | oc_house_layout.id |      |     |\n| type            | tinyint | 0~5      | 见下定义           |      |     |\n\n`floor`: 默认为１，当type为４户型图时，需要配置\n\n\n## oc_image_of_community\n\n|     列名     |   类型  | 取值范围 |     代表含义    | 其他 |\n| ------------ | ------- | -------- | --------------- | ---- |\n| id           | int     |          | id              |      |\n| community_id | int     |          | oc_community.id |      |\n| img          | text    |          |                 |      |\n| type         | tinyint | 0~5      | 见下定义        |      |\n| comm_desc    | text    |          | 小区图片描述    |      |\n\n\n\n## oc_image_of_room_style\n（表格结构跟`oc_image_of_room`基本一样，在此略）\n\n## oc_district\n\n|     列名    |    类型    | 取值范围 |    代表含义    | 其他 |     |\n| ----------- | ---------- | -------- | -------------- | ---- | --- |\n| id          | int        |          | id             |      |     |\n| name        | varchar(8) |          | 名称           |      |     |\n| city        | varchar(8) |          | 城市           |      |     |\n| enable      | boolean    | 0-1      | 是否网站上显示 |      |     |\n| weight      | int        |          | 列表显示顺序   |      |     |\n| boundary_id | int        |          | oc_boundary.id |      |     |\n\n`enable`:\n\n* 0：不显示\n* 1：显示\n\n## oc_circle\n\n商圈。\n\n|     列名    |     类型    | 取值范围 |    代表含义    | 其他 |\n| ----------- | ----------- | -------- | -------------- | ---- |\n| id          | int         |          | id             |      |\n| name        | varchar(20) |          |                |      |\n| district_id | int         |          | oc_district.id |      |\n| enable      | boolean     | 0-1      | 是否网站上显示 |      |\n| boundary_id | int         |          | oc_boundary.id |      |\n\n`enable`:\n\n* 0：不显示\n* 1：显示\n\n## oc_circle_of_community\n\n小区所属商圈。\n\n|     列名     | 类型 | 取值范围 | 代表含义 | 其他 |\n|--------------|------|----------|----------|------|\n| id           | int  |          | id       |      |\n| circle_id    | int  |          |          |      |\n| community_id | int  |          |          |      |\n\n\n## oc_subway_line\n\n|      列名     |     类型    | 取值范围 |  代表含义  | 其他 |\n|---------------|-------------|----------|------------|------|\n| id            | int         |          | id         |      |\n| name          | varchar(10) |          | 名称       |      |\n| number        | tinyint     |          | 线路号     |      |\n| station_count | tinyint     |          | 总共站数量 |      |\n\n\n## oc_subway_station\n\n|     列名    |     类型    | 取值范围 |    代表含义    | 其他 |\n| ----------- | ----------- | -------- | -------------- | ---- |\n| id          | int         |          | id             |      |\n| name        | varchar(10) |          | 名称           |      |\n| position_id | int         |          |                |      |\n| enable      | boolean     | 0-1      | 是否网站上显示 |      |\n| boundary_id | int         |          | oc_boundary.id |      |\n\n## oc_subway_station_of_line\n\n|        列名       | 类型 | 取值范围 |    代表含义    | 其他 |\n|-------------------|------|----------|----------------|------|\n| id                | int  |          | id             |      |\n| subway_line_id    | int  |          | 线路id         |      |\n| subway_station_id | int  |          |                |      |\n| sequence          | int  | 1~N      | 是线路的第几站 |      |\n\n\n## oc_subway_line_of_community\n|      列名      | 类型 | 取值范围 | 代表含义 | 其他 |\n|----------------|------|----------|----------|------|\n| id             | int  |          | id       |      |\n| subway_line_id | int  |          |          |      |\n| community_id   | int  |          |          |      |\n\n\n## oc_subway_station_of_community\n|        列名       | 类型 | 取值范围 | 代表含义 | 其他 |\n|-------------------|------|----------|----------|------|\n| id                | int  |          | id       |      |\n| subway_station_id | int  |          |          |      |\n| community_id      | int  |          |          |      |\n\n\n## oc_price_range\n\n选购房屋时，列出的价格区间选项。\n\n| 列名 | 类型 | 取值范围 | 代表含义 | 其他 |\n|------|------|----------|----------|------|\n| id   | int  |          | id       |      |\n| low  | int  |          | 最低价格 |      |\n| high | int  |          | 最高价格 |      |\n\n\n## oc_pay_cycle\n\n付款周期\n\n|   列名   |   类型  |  取值范围 |    代表含义    | 其他 |\n|----------|---------|-----------|----------------|------|\n| id       | int     |           | id             |      |\n| discount | float   | 0~1       | 折扣数         |      |\n| cycle    | tinyint | 3,6,12,24 | 多少月付款一次 |      |\n\n\n## oc_mobile_validate\n\n待验证的短信验证码\n\n|    列名   |     类型    | 取值范围 |    代表含义    | 其他 |\n|-----------|-------------|----------|----------------|------|\n| id        | int         |          | id             |      |\n| mobile    | varchar(16) |          | 手机号         |      |\n| code      | varchar(4)  |          | 验证码         |      |\n| create_at | timestamp   |          | 创建于XX时刻   |      |\n| ip        | varchar(16) |          | IP             |      |\n| type      | tinyint     |          | 解释见下       |      |\n| used      | tinyint     |          | 是否已经使用了 |      |\n\ntype:\n\n0: 预定房间\n1: 注册账号\n3：找回密码\n\n\n## oc_schedule_bill\n\n客户预定订单\n\n|    列名   |     类型    | 取值范围 | 代表含义 | 其他 |\n|-----------|-------------|----------|----------|------|\n| id        | int         |          | id       |      |\n| mobile    | varchar(16) |          | 手机号   |      |\n| name      | varchar(6)  |          | 姓名     |      |\n| job       | varchar(10) |          | 职业     |      |\n| room_id   | int         |          | oc_room  |      |\n| create_at | timestamp   |          |          |      |\n\n\n\n## oc_bill_subscriber\n\n订单订阅者\n\n|      列名     |     类型    | 取值范围 |    代表含义    | 其他 |\n|---------------|-------------|----------|----------------|------|\n| id            | int         |          | id             |      |\n| name          | varchar(6)  |          |                |      |\n| mobile        | varchar(16) |          |                |      |\n| email         | varchar(40) |          |                |      |\n| status        | tinyint     | 0,1      | 0:激活，1:屏蔽 |      |\n| trigger_event | tinyint     |          |                |      |\n\n* trigger_event：预定房间（0），保洁（1），维修（2）。\n\n\n## oc_cash_flow\n\n公司现金流量表。\n\n|    列名   |       类型       | 取值范围 |          代表含义          | 其他 |\n|-----------|------------------|----------|----------------------------|------|\n| id        | int              |          | id                         |      |\n| bill_type | tinyint unsigned |          |                            |      |\n| bill_id   | int              |          | 订单号                     |      |\n| money     | int              |          | 实际收入金额，负数表示支出 |      |\n| create_at | timestamp        |          |                            |      |\n| comment   | text             |          | 备注                       |      |\n\n解释：\n\n* bill_type: 租入(0),租出(1),家具(2),装修(3)\n\n## oc_furniture\n\n家具定义表\n\n|   列名  |       类型       | 取值范围 |       代表含义       | 其他 |\n|---------|------------------|----------|----------------------|------|\n| id      | int              |          | id                   |      |\n| name    | varchar(40)      |          | 一款物品有唯一的名称 |      |\n| type    | tinyint unsigned |          | 家具类型             |      |\n| comment | text             |          | 备注             |      |\n\ntype:\n\n* 0：未知\n* 1：床\n* 2：沙发\n* 3：书桌\n* 4：衣柜\n* 5：电视\n* 6：空调\n* 7：床垫\n* 8：床套\n* 9：床\n* 10：写字台\n* 11：护眼台灯\n* 12：挂画\n* 13：写字台椅子\n* 14：餐桌\n* 15：多功能衣架\n* 16：隔板+支架\n* 17：小米盒子\n* 18：360路由器\n* 19：窗帘\n* 20：锁\n* 21：冰箱\n* 22：洗衣机\n* 23：宽带\n\n\n## oc_furniture_bill\n\n家具订单\n\n|     列名     |       类型       | 取值范围 |   代表含义   | 其他 |\n|--------------|------------------|----------|--------------|------|\n| id           | int              |          | id           |      |\n| furniture_id | int              |          |              |      |\n| money        | int              |          | 须支付总金额 |      |\n| count        | int unsigned     |          | 采购的数量   |      |\n| status       | tinyint unsigned | 0,1,2    | 见备注       |      |\n| suplier      | varchar(30)      |          | 供货商名称   |      |\n| comment      | text             |          | 备注         |      |\n| create_at    | timestamp        |          |              |      |\n| update_at    | timestamp        |          |              |      |\n\nstatus: \n\n* 0：未提交，编辑中。默认值。\n* 1：已提交给供应商，还未声场完毕。\n* 2：已生产完毕，已入库。\n\n\n## oc_furniture_deploy\n\n家具配置表。house/room与家具之间的分配关系。\n\n|     列名     |   类型  | 取值范围 |          代表含义          | 其他 |\n|--------------|---------|----------|----------------------------|------|\n| id           | int     |          | id                         |      |\n| furniture_id | int     |          | 家具编号                   |      |\n| house_id     | int     |          |                            |      |\n| room_id      | int     |          | 如果为空，表示是套房的家具 |      |\n| count        | tinyint |          | 数量，默认为1              |      |\n\n## oc_decorate_bill\n\n装修订单。\n\n|     列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|-------------|--------------|----------|--------------|------|\n| id          | int          |          | id           |      |\n| house_id    | int          |          |              |      |\n| company     | varcahr(30)  |          | 装修公司名称 |      |\n| money       | int unsigned |          | 金额         |      |\n| comment     | text         |          | 备注         |      |\n| create_at   | timestamp    |          | 下单时间     |      |\n| complete_at | timestamp    |          | 完成时间     |      |\n\n\n## oc_coupon    \n\n优惠券\n\n|    列名    |    类型   | 取值范围 |     代表含义     | 其他 |\n|------------|-----------|----------|------------------|------|\n| id         | int       |          | id               |      |\n| code       | char(6)   |          | 名称             |      |\n| use_method | tinyint   |          | 见下解释         |      |\n| get_from   | tinyint   |          | 见下解释         |      |\n| state      | tinyint   | 0,1,2    |                  |      |\n| validity   | timestamp |          | 到期日期         |      |\n| cash       | smallint  |          | 抵扣金额         |      |\n| stackable  | tinyint   |          | 可叠加使用       |      |\n| create_at  | timestamp |          |                  |      |\n| update_at  | timestamp |          |                  |      |\n| user_id    | int       |          | 已被用户领取     |      |\n| locked     | tinyint   |          | 已锁定（支付中） |      |\n\n注解：\n\nuse_method:\n\n* 0: 支付房租均可使用\n* 1: 支付任何费用均可使用，包括O2O服务。\n\nstate：init(0), active(1), bind(2), used(3)。  \nvalidity： 有效期，天数。最多365天。\n\nfrom:\n\n* 0: default\n* 1：首月半价\n* 2：社交活动\n* 3：推荐其它好友 \n* 4：暂时废弃\n* 5：自己被邀请\n\n## oc_third_payment\n\n第三方支付\n\n|     列名     |     类型     | 取值范围 |       代表含义      | 其他 |\n|--------------|--------------|----------|---------------------|------|\n| id           | int          |          | id                  |      |\n| trade_no     | char(32)     |          | 交易号              |      |\n| method       | tinyint      |          | below               |      |\n| type         | tinyint      |          | below               |      |\n| total_fee    | float        |          | 付款金额            |      |\n| state        | tinyint      |          | below               |      |\n| ext          | varchar(128) |          | json 附加订单信息   |      |\n| third_result | varchar(128) |          | json 第三方返回信息 |      |\n| create_at    | timestamp    |          |                     |      |\n| update_at    | timestamp    |          |                     |      |\n\n\n* method: 支付宝(0)，微信(1)，银联(2)。\n* type: 未知(0)，交房租(1)，预定房间（2），水电气(3)。\n* state: 已创建(0)，已成功(1)，已失败(2)。\n\n\n## oc_coupon_seed\n\n优惠码，生成种子记录\n\n| 列名 |  类型 | 取值范围 |         代表含义        | 其他 |\n|------|-------|----------|-------------------------|------|\n| seed | int u |          | 当前种子值，默认值53213 |      |\n\n\n## oc_clean_order\n|     列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|-------------|--------------|----------|--------------|------|\n| id          | int          |          |              |      |\n| state       | tinyint      |          | below        |      |\n| house_id    | int          |          |              |      |\n| user_id     | int          |          | 申请人       |      |\n| message     | varchar(256) |          |              |      |\n| create_at   | timestamp    |          |              |      |\n| update_at   | timestamp    |          |              |      |\n| serve_at    | timestamp    |          | 设定服务时间 |      |\n| complete_at | timestamp    |          | 完成时间     |      |\n\n* state: 默认（0），提交（1），已安排(2), 完成（3），取消（4）\n\n## oc_repair_order\n\n服务\n\n|     列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|-------------|--------------|----------|--------------|------|\n| id          | int          |          |              |      |\n| state       | tinyint      |          | below        |      |\n| room_id     | int          |          |              |      |\n| house_id    | int          |          |              |      |\n| user_id     | int          |          |              |      |\n| message     | varchar(256) |          |              |      |\n| type        | tinyint      |          |              |      |\n| serve_at    | timestamp    |          | 设定服务时间 |      |\n| complete_at | timestamp    |          | 完成时间     |      |\n| create_at   | timestamp    |          |              |      |\n| update_at   | timestamp    |          |              |      |\n\n* state: 默认（0），提交（1），完成（2），取消（3）\n* type: 家电维修（0），房屋漏水（1），管道疏通/维修（2），房屋维修（3），其它（4）\n\n\n## oc_house_state_log\n\n房屋状态更改日志\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| house_id   | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n\n\n## oc_room_state_log\n\n房屋状态更改日志\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| room_id    | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n\n## oc_renter_pay_bill\n\n租房合同确立后，创建每笔支付订单。\n\n|      列名      |    类型   | 取值范围 |       代表含义       | 其他 |\n|----------------|-----------|----------|----------------------|------|\n| id             | int       |          |                      |      |\n| state          | tinyint u |          |                      |      |\n| index          | tinyint u |          | 支付订单的顺序       |      |\n| renter_bill_id | int       |          |                      |      |\n| start_month    | tinyint u | [0,11]   | 此次支付起始月份     |      |\n| for_month      | tinyint u | [1,12]   | 支付N个月房租        |      |\n| rent_fee       | int u     |          | 租金                 |      |\n| service_fee    | int u     |          | 服务费金额           |      |\n| deposit        | int u     |          | 押金金额             |      |\n| money_to_pay   | int u     |          | 此次支付需要支付金额 |      |\n| reduce         | int u     |          | 减免金额             |      |\n| coupon_reduce  | int u     |          | 优惠券减免           |      |\n| money_paid     | int u     |          | 已支付金额           |      |\n| need_pay_at    | timestamp |          | 需要缴纳房租的时间   |      |\n\nstate: 默认（0），分笔支付中（1），支付完成（2），取消（3）。\n\n## oc_renter_payment\n\n每一条代表一次支付的记录。如果是在线支付，会有online_payment_id链接到对应的第三方支付信息。\n\n|        列名       |    类型   | 取值范围 |       代表含义       | 其他 |\n|-------------------|-----------|----------|----------------------|------|\n| id                | int       |          |                      |      |\n| renter_bill_id    | int       |          |                      |      |\n| money             | int       |          |                      |      |\n| method            | tinyint u |          |                      |      |\n| online_payment_id | int       |          | oc_renter_payment.id |      |\n| create_at         | timestamp |          |                      |      |\n\n* method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）\n* money: 负数表示退款\n\n## oc_advice\n\n用户吐槽\n\n|   列名  |     类型     | 取值范围 |  代表含义  | 其他 |\n|---------|--------------|----------|------------|------|\n| id      | int          |          |            |      |\n| user_id | int          |          | oc_user.id |      |\n| mobile  | varchar(20)  |          |            |      |\n| email   | varchar(50)  |          |            |      |\n| content | varchar(250) |          |            |      |\n\n\n\n\n## oc_coupon_state_log\n\n优惠券发放和使用日志。\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| coupon_id  | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n## oc_article\n\n娱乐圈、彩客秀文章\n\n|    列名   |      类型      | 取值范围 |   代表含义   | 其他 |\n|-----------|----------------|----------|--------------|------|\n| id        | int            |          |              |      |\n| type      | tinyint u      |          |              |      |\n| weight    | int            |          |              |      |\n| create_at | timestamp      |          |              |      |\n| author    | varchar(20)    |          | 作者姓名     |      |\n| cover_img | varchar(256)    |          | 封面图像地址 |      |\n| head_img  | varchar(256)    |          | 作者头像地址 |      |\n| title     | varchar(50)    |          | 标题         |      |\n| brief     | varchar(128)   |          | 内容简介     |      |\n| content   | varchar(10000) |          | 文章全文     |      |\n\n* type: 彩客秀（0），娱乐圈（1）\n* weight: 权重，值越小，排名越靠前\n\n## oc_bank_card\n\n|    列名   |     类型    | 取值范围 |         代表含义        | 其他 |\n|-----------|-------------|----------|-------------------------|------|\n| id        | int         |          |                         |      |\n| user_id   | int         |          | oc_user.id              |      |\n| card      | varchar(24) |          | 卡号                    |      |\n| bank_name | varchar(64) |          | 开户行                  |      |\n| full_name | varchar(24) |          | 真实姓名                |      |\n| type      | tinyint u   |          | below                   |      |\n| validity  | date        |          | 有效期                  |      |\n| cvv       | varchar(8)  |          | 信用卡CVV码             |      |\n| comment   | varchar(64) |          | 备注,标记房租还是水电卡 |      |\n\n* type: 借记卡（0），信用卡（1）\n\n## oc_butler_task\n\n管家任务\n\n|       列名       |     类型     | 取值范围 |       代表含义       | 其他 |\n| ---------------- | ------------ | -------- | -------------------- | ---- |\n| id               | int          |          |                      |      |\n| butler_id        | int          |          |                      |      |\n| user_name        | varchar(32)  |          | 用户名               |      |\n| tel_num          | varchar(20)  |          | 手机号               |      |\n| channel_id       | int          |          | 渠道id               |      |\n| create_at        | timestamp    |          | 创建时间             |      |\n| update_at        | timestamp    |          | 上次更改             |      |\n| show_room_time   | varchar(24)  |          | 看房时间             |      |\n| show_room_style  | varchar(128) |          | 客户看房类型         |      |\n| hope_price_id    | int          |          | 理想价位id           |      |\n| status           | tinyint      |          | 任务状态             |      |\n| room_id          | int          |          | room_id              |      |\n| room_name_brief  | varchar(64)  |          | 房间名字介绍         |      |\n| failure_reason   | varchar(64)  |          | 失败原因             |      |\n| earnest_money_id | int          |          | 定金id               |      |\n| bill_id          | int          |          | 租房合同id           |      |\n| contact_content  | varchar(64)  |          | 已联系内容           |      |\n| stars            | int          |          | 星级                 |      |\n| rev_money        | int          |          | 尾款（签合同收到钱） |      |\n| earnest_method   | varchar(64)  |          | 定金支付方式         |      |\n| earnest_pay_time | date         |          | 定金支付时间         |      |\n| rev_money_method | varchar(64)  |          | 尾款支付方式         |      |\n| rev_money_time   | date         |          | 尾款支付时间         |      |\n\n* status: 初始状态(0), 已分配(1), 已联系(2), 未成功(3), 未成功潜在客户(4), 改约时间(5), 已交定金(6), 直接签约(7), 已完成(表示合同完结8), 已审核(运维审核9)\n* room_id: 没有确定(0), 确定后填写真正预约room_id(room_id)\n* pay_method: 参考oc_renter_payment 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3） \n\n## oc_earnest_money\n\n管家任务定金表\n\n|      列名      |    类型   | 取值范围 |       代表含义       | 其他 |\n|----------------|-----------|----------|---------------------|------|\n| id             | int       |          |                     |      |\n| price          | int       |          | 定金金额            |      |\n| state          | int       |          | 状态                |      |\n| user_id        | int       |          | user id             |      |\n| create_at      | timestamp |          |                     |      |\n\n* state: 初始状态(0)， 已交定金还没签订合同（1）， 交定金签订合同（2）, 用户取消预定（3）,直接签合同（4）\n* price: 负数表示退款\n\n## oc_channel\n\n渠道\n\n|    列名         |      类型      | 取值范围 |   代表含义   | 其他 |\n|-----------------|----------------|----------|--------------|------|\n| id              | int            |          |              |      |\n| channel_name    | varchar(32)    |          |    渠道名字   |      |\n\n\n## oc_hope_price\n\n心理价位\n\n|    列名          |      类型      | 取值范围 |   代表含义   | 其他 |\n|------------------|----------------|----------|--------------|------|\n| id               | int            |          |              |      |\n| hope_price_range | varchar(32)    |          |    价格范围  |      |\n\n* hope_price_range: 为id对应的解释,不限(1)， 1500以下(2)，1500-2000(3)，2000-2500(4), 2500-3000(5), 3000-3500(6), 3500-4000(7), 4000-4500(8), 4500以上(9)\n\n## oc_task_state_log\n\n任务状态更改日志\n\n|    列名    |    类型   | 取值范围 | 代表含义 | 其他 |\n|------------|-----------|----------|----------|------|\n| id         | int       |          |          |      |\n| task_id    | int       |          |          |      |\n| from_state | tinyint u |          |          |      |\n| to_state   | tinyint u |          |          |      |\n| create_at  | timestamp |          |          |      |\n\n* from_state、to_state: 参照oc_butler_task state状态描述\n\n\n## oc_sale_activity\n\n特价房活动，每一行代表一个活动。\n\n|    列名    |     类型     | 取值范围 |   代表含义   | 其他 |\n|------------|--------------|----------|--------------|------|\n| id         | int          |          |              |      |\n| start_time | timestamp    |          |              |      |\n| end_time   | timestamp    |          |              |      |\n| state      | tinyint      |          | below        |      |\n| name       | varchar(64)  |          |              |      |\n| cover_img  | varchar(256) |          | cover image  |      |\n| banner_img | varchar(256) |          | banner image |      |\n| create_at  | timestamp    |          |              |      |\n\n* state: default(0),active(1),over(2)\n\n\n## oc_rooms_in_sale\n\n参与活动的房间\n\n|     列名    | 类型 | 取值范围 |       代表含义      | 其他 |\n|-------------|------|----------|---------------------|------|\n| id          | int  |          |                     |      |\n| activity_id | int  |          | oc_sale_activity.id |      |\n| room_id     | int  |          | oc_room.id          |      |\n| price       | int  |          | 活动价格            |      |\n\n\n## oc_pre_order\n\n预定房间列表\n\n|     列名     |    类型   | 取值范围 |   代表含义   | 其他 |\n|--------------|-----------|----------|--------------|------|\n| id           | int       |          |              |      |\n| user_id      | int       |          | oc_user.id   |      |\n| room_id      | int       |          | oc_room.id   |      |\n| price        | int       |          | 约定的价格   |      |\n| deposit_paid | int       |          | 已交付的定金 |      |\n| state        | tinyint   |          | below        |      |\n| create_at    | timestamp |          |              |      |\n\n* state: default(0),已付定金(1),已取消(2),已完成入住(3)\n\n## oc_system_log\n\n|    列名   |      类型     | 取值范围 | 代表含义 | 其他 |\n|-----------|---------------|----------|----------|------|\n| id        | int           |          |          |      |\n| app       | varchar(32)   |          | app name |      |\n| username  | varchar(64)   |          |          |      |\n| ip        | varchar(16)   |          |          |      |\n| action    | varchar(128)  |          |          |      |\n| method    | varchar(8)    |          |          |      |\n| params    | varchar(1024) |          |          |      |\n| create_at | timestamp     |          |          |      |\n\n\n## oc_main_banner\n\n网站首页，Banner配置。\n\n|   列名  |     类型     | 取值范围 |    代表含义    | 其他 |\n|---------|--------------|----------|----------------|------|\n| id      | int          |          |                |      |\n| weight  | int          |          |                |      |\n| open    | tinyint      |          | 是否显示       |      |\n| type    | tinyint      |          | below          |      |\n| text    | varchar(128) |          | banner显示文字 |      |\n| img     | varchar(256) |          | 图片地址       |      |\n| url     | varchar(256) |          | 链接地址       |      |\n| comment | varchar(32)  |          | 备注           |      |\n\n* type：PC（0），手机（1），PC和手机都显示（2）\n\n## oc_landlord_bill_increment\n\n房东合同价格递增表\n\n|     列名     |     类型     | 取值范围 |       代表含义      | 其他 |\n| ------------ | ------------ | -------- | ------------------- | ---- |\n| id           | int          |          |                     |      |\n| bill_id      | int          |          | oc_landlord_bill.id |      |\n| index        | int          |          | 第几年租金价格      |      |\n| price        | decimal(9,6) |          | 实际价格            |      |\n| create_at    | timestamp    |          |                     |      |\n| increment_at | timestamp    |          | 递增房租价格时间    |      |\n\n## oc_butler_check_fee\n\n管家查询各表信息(退租、合同结束时查表，数据全部录入)\n注：录入数据信息必须为退租当月信息。\n\n|        列名       |      类型     | 取值范围 |      代表含义      | 其他 |\n| ----------------- | ------------- | -------- | ------------------ | ---- |\n| id                | int           |          |                    |      |\n| butler_id         | int           |          | 抄表管家           |      |\n| room_id           | int           |          | 房间id             |      |\n| butler_check_time | date          |          | 本次抄表日期       |      |\n| butler_check_val  | decimal(10,2) |          | 本次抄表数值       |      |\n| used_val          | decimal(10,2) |          | 估算所用数值       |      |\n| fee_payment       | decimal(10,2) |          | 需要缴费金额（元） |      |\n| user_id           | int           |          | oc_user.id         |      |\n| fee_type          | int           |          | 缴费类型           |      |\n| method            | tinyint u     |          |                    |      |\n| create_at         | timestamp     |          |                    |      |\n\n* fee_type:水（0），电（1），燃气（2）\n* method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）\n\n\n## oc_company_elec_payment\n\n公司代缴电费信息表\n\n|       列名      |      类型     | 取值范围 |       代表含义       | 其他 |\n| --------------- | ------------- | -------- | -------------------- | ---- |\n| id              | int           |          |                      |      |\n| charge_inst     | varchar(32)   |          | 收费单位名称         |      |\n| house_id        | int           |          | 套房id               |      |\n| elec_type       | int           |          | 用电类型             |      |\n| elec_payment    | decimal(10,2) |          | 缴费金额（元）       |      |\n| elec_last_time  | date          |          | 上次抄表日期         |      |\n| elec_check_time | date          |          | 本次抄表日期         |      |\n| elec_last_val   | decimal(10,2) |          | 上次抄表数值（度）   |      |\n| elec_check_val  | decimal(10,2) |          | 本次抄表数值（度）   |      |\n| elec_used_val   | decimal(10,2) |          | 本次所用电度数（度） |      |\n| create_at       | timestamp     |          |                      |      |\n\n* elec_type:居民用电(0)，一般工商业用电（1），大工业用电（2），农业用电（3）\n\n\n## oc_user_elec_payment\n\n租客缴电费信息表（每次录入公司代交电费后自动生成）\n\n|       列名      |      类型     | 取值范围 |          代表含义          | 其他 |\n| --------------- | ------------- | -------- | -------------------------- | ---- |\n| id              | int           |          |                            |      |\n| company_elec_id | int           |          | oc_company_elec_payment.id |      |\n| user_id         | int           |          | oc_user.id                 |      |\n| need_pay        | decimal(10,2) |          | 需要缴费金额（元）         |      |\n| money_paid      | decimal(10,2) |          | 已经缴费金额（元）         |      |\n| state           | int           |          | 支付状态                   |      |\n| elec_check_time | date          |          | 本次缴费日期               |      |\n| elec_used_val   | decimal(10,2) |          | 用电度数(价格做估算)       |      |\n\n* state: 默认（0），未支付（1），支付完成（2）\n\n\n## oc_company_water_payment\n\n公司代缴水费信息表(水费+污水处理费)\n\n|       列名       |      类型     | 取值范围 |      代表含义      | 其他 |\n| ---------------- | ------------- | -------- | ------------------ | ---- |\n| id               | int           |          |                    |      |\n| house_id         | int           |          | 套房id             |      |\n| water_payment    | decimal(10,2) |          | 缴费金额           |      |\n| water_last_time  | date          |          | 上次抄表日期       |      |\n| water_check_time | date          |          | 本次抄表日期       |      |\n| water_last_val   | decimal(10,2) |          | 上次读数（吨）     |      |\n| water_check_val  | decimal(10,2) |          | 本次读数（吨）     |      |\n| water_used_val   | decimal(10,2) |          | 本次所用水量（吨） |      |\n| create_at        | timestamp     |          |                    |      |\n\n\n## oc_user_water_payment\n\n租客缴水费信息表（每次录入公司代交水费后自动生成）\n\n|       列名       |      类型     | 取值范围 |           代表含义          | 其他 |\n| ---------------- | ------------- | -------- | --------------------------- | ---- |\n| id               | int           |          |                             |      |\n| company_water_id | int           |          | oc_company_water_payment.id |      |\n| user_id          | int           |          | oc_user.id                  |      |\n| need_pay         | decimal(10,2) |          | 本次需要缴费金额（元）      |      |\n| money_paid       | decimal(10,2) |          | 本次已经缴费金额（元）      |      |\n| state            | int           |          | 支付状态                    |      |\n| water_check_time | date          |          | 本次缴费日期                |      |\n| water_used_val   | decimal(10,2) |          | 用户所用水量（价格做估算）  |      |\n\n* state: 默认（0），支付中（1），支付完成（2）\n\n\n## oc_company_gas_payment\n\n公司代缴燃气费信息表\n\n|      列名      |      类型     | 取值范围 |        代表含义        | 其他 |\n| -------------- | ------------- | -------- | ---------------------- | ---- |\n| id             | int           |          |                        |      |\n| house_id       | int           |          | 套房id                 |      |\n| charge_inst    | varchar(32)   |          | 收费单位名称           |      |\n| gas_type       | int           |          | 用气类型               |      |\n| gas_payment    | decimal(10,2) |          | 缴费金额               |      |\n| gas_last_time  | date          |          | 上次抄表日期           |      |\n| gas_check_time | date          |          | 本次抄表日期           |      |\n| gas_last_val   | decimal(10,2) |          | 上次读数（立方米）     |      |\n| gas_check_val  | decimal(10,2) |          | 本次读数（立方米）     |      |\n| gas_used_val   | decimal(10,2) |          | 本次所用气量（立方米） |      |\n| create_at      | timestamp     |          |                        |      |\n\n* gas_type:居民用气(0)，学校用气（1），机关事业和企业单位用气（2）\n\n## oc_user_gas_payment\n\n租客缴燃气费信息表（每次录入公司代交燃气费后自动生成）\n\n|      列名      |      类型     | 取值范围 |          代表含义          | 其他 |\n| -------------- | ------------- | -------- | -------------------------- | ---- |\n| id             | int           |          |                            |      |\n| company_gas_id | int           |          | oc_company_gas_payment.id  |      |\n| user_id        | int           |          | oc_user.id                 |      |\n| need_pay       | decimal(10,2) |          | 本次需要缴费金额（元）     |      |\n| money_paid     | decimal(10,2) |          | 本次已经缴费金额（元）     |      |\n| state          | int           |          | 支付状态                   |      |\n| gas_check_time | date          |          | 本次缴费日期               |      |\n| gas_used_val   | decimal(10,2) |          | 用户所用气量（价格做估算） |      |\n\n* state: 默认（0），支付中（1），支付完成（2）\n\n## oc_other_fee_payment\n\n每一条代表一次支付的记录。如果是在线支付，会有third_payment_id链接到对应的第三方支付信息。\n\n|       列名       |      类型     | 取值范围 |        代表含义        | 其他 |\n| ---------------- | ------------- | -------- | ---------------------- | ---- |\n| id               | int           |          |                        |      |\n| fee_type         | int           |          | 缴费类型               |      |\n| user_id          | int           |          | oc_user.id             |      |\n| check_fee_id     | int           |          | oc_butler_check_fee.id |      |\n| money            | decimal(10,2) |          |                        |      |\n| method           | tinyint u     |          |                        |      |\n| third_payment_id | int           |          | oc_third_payment.id    |      |\n| create_at        | timestamp     |          |                        |      |\n\n* method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）\n* fee_type:水（0），电（1），燃气（2）\n* check_fee_id:默认没有，只有在退租或合同结束时结算水电气费用时，生成支付订单才用。\n\n\n## oc_user_wallet\n\n用户钱包，如果remain_money>0，水电气费用金额会从中扣除。\n\n|       列名       |      类型     | 取值范围 |       代表含义      | 其他 |\n| ---------------- | ------------- | -------- | ------------------- | ---- |\n| id               | int           |          |                     |      |\n| user_id          | int           |          | oc_user.id          |      |\n| remain_money     | decimal(10,2) |          | 钱包剩余金额        |      |\n| create_at        | timestamp     |          |                     |      |\n\n\n## oc_main_page\n\n首页内容配置表\n\n|  列名  |     类型     | 取值范围 |  代表含义  | 其他 |\n|--------|--------------|----------|------------|------|\n| id     | int          |          |            |      |\n| column | tinyint u    |          | 栏目id     |      |\n| index  | tinyint u    |          | 栏目内序号 |      |\n| img    | varchar(128) |          | 图片       |      |\n| url    | varchar(128) |          | 跳转地址   |      |\n| config | varchar(512) |          | json配置项 |      |\n| open   | tinyint      |          | 是否打开   |      |\n| show   | tinyint      |          | 显示在哪里 |      |\n\n`show`:  \n\n* 0，PC和Mobile都显示\n* 1，只显示在PC\n* 2，只显示在Mobile\n\n`column`: \n\n* 0，表示首页Banner图的配置。`config`可配置,格式为：\n`{\"alt\":\"图片描述信息\"}`。\n* 1，表示精选房间的配置，此时，`config`需要配置，格式为：`{\"price\":2000,\"name\":\"大冲城市花园3栋6座301\"}`。\n* 2，表示房屋列表快速链接的配置，包括：南山区、福田区、特价房。\n* 3，表示彩客秀配置，此时，需要配置`config`，格式为：`{\"title\":\"小女神的设计师之路\",\"brief\":\"XXXXXX\"}`.\n* 4，表示娱乐圈。`config`可配置,格式为：\n`{\"alt\":\"图片描述信息\"}`。\n* 5，表示新闻配置。'config'需要配置,格式为:`{\"title\":\"测试1\"，\"from\":\"深圳日报\",\"create_time\":\"2015-10-11\"}`。\n\n\n## oc_special_room\n\n特价房\n\n|    列名   |  类型 |    取值范围   | 代表含义 |\n|-----------|-------|---------------|----------|\n| id        | int   |               |          |\n| room_id   | int   | PK of oc_room |          |\n| old_price | float |               | 原来价格 |\n\n\n## oc_boundary\n\n|      列名     |      类型      | 取值范围 |         代表含义        | 其他 |\n| ------------- | -------------- | -------- | ----------------------- | ---- |\n| id            | int            |          | id                      |      |\n| center_lat    | decimal(13,10) |          | 区域地图上中心纬度      |      |\n| center_lng    | decimal(13,10) |          | 区域地图上中心经度      |      |\n| sw_lat        | decimal(13,10) |          | 区域地图上西南角纬度    |      |\n| sw_lng        | decimal(13,10) |          | 区域地图上西南角经度    |      |\n| ne_lat        | decimal(13,10) |          | 区域地图东北角纬度      |      |\n| ne_lng        | decimal(13,10) |          | 区域地图东北角经度      |      |\n| show_zoom     | int            |          | 地图显示时级别          |      |\n| boundary      | text           |          | json格式数据            |      |\n| show_name     | varchar(64)    |          | 地图显示(如:南山区)     |      |\n| grade         | int            |          | 级别(小区/商圈/区域/市) |      |\n| hide          | int            |          | 是否在地图上隐藏(默认0) |      |\n| boundary_desc | varchar(512)   |          | 位置描述信息            |      |\n\n`boundary`:\n\n* 该区域所表示的范围,由多组经纬度坐标围成的一个区域,为json数据字符串组成.\n* 格式如下:\n```json\n{\n    \"main\":[\n        {\"pointLon\":\"113.96189\",\"pointLat\":\"22.550857\"},\n        {\"pointLon\":\"113.961921\",\"pointLat\":\"22.5488\"},\n        {\"pointLon\":\"113.962195\",\"pointLat\":\"22.547987\"},\n        {\"pointLon\":\"113.964019\",\"pointLat\":\"22.548375\"},\n        {\"pointLon\":\"113.964234\",\"pointLat\":\"22.550515\"},\n        {\"pointLon\":\"113.964329\",\"pointLat\":\"22.551041\"}\n    ],\n    \"center\":[{\"pointLon\":\"113.96189\",\"pointLat\":\"22.550857\"}]}\n```\n\n`grade`:\n\n* 1:小区(如:大冲城市花园)\n* 2:商圈(如:科技园)\n* 3:区域(如:南山区)\n* 4:市(如:深圳市)\n* 5:地铁站（如:世界之窗）\n\n## oc_user_question\n\n|     列名    |     类型     | 取值范围 |    代表含义    | 其他 |     |\n| ----------- | ------------ | -------- | -------------- | ---- | --- |\n| id          | int          |          | id             |      |     |\n| user_id     | int          |          | oc_user.id     |      |     |\n| question    | varchar(256) |          | 提问问题       |      |     |\n| answer      | text         |          | 答案           |      |     |\n| thumbs_up   | int          |          | 点赞数量       |      |     |\n| device_type | varchar(32)  |          | 提问时设备类型 |      |     |\n| hide        | int          |          | 是否显示       |      |     |\n| create_at   | timestamp    |          | 创建时间       |      |     |\n| update_at   | timestamp    |          |                |      |     |\n| room_id     | int          |          | 哪个房间提问   |      |     |\n\n## oc_question_of_room\n`room`和`question`的映射关系。\n\n|     列名    | 类型 | 取值范围 |       代表含义      | 其他 |\n| ----------- | ---- | -------- | ------------------- | ---- |\n| id          | int  |          | id                  |      |\n| room_id     | int  |          | 房间id              |      |\n| question_id | int  |          | oc_user_question.id |      |\n\n\n## oc_question_of_house\n\n## oc_question_of_community\n结构跟`oc_question_of_room`类似\n\n\n## oc_life_service\n\n|       列名       |      类型      | 取值范围 |    代表含义   | 其他 |     |\n| ---------------- | -------------- | -------- | ------------- | ---- | --- |\n| id               | int            |          | id            |      |     |\n| service_icon_url | varchar(256)   |          | icon的oss地址 |      |     |\n| service_name     | varchar(128)   |          | 服务场地名字  |      |     |\n| line_icon_url    | varchar(256)   |          | 路线icon地址  |      |     |\n| line_desc        | text           |          | 路线描述      |      |     |\n| longtitude       | decimal(13,10) |          | 经度          |      |     |\n| latitude         | decimal(13,10) |          | 纬度          |      |     |\n| service_type     | int            |          | 服务类型      |      |     |\n\n* service_type: 未定义(0), 购物(1), 美食(2), 运动(3), 娱乐(4)\n\n\n## oc_life_service_of_community\n\n|       列名      | 类型 | 取值范围 |      代表含义      | 其他 |\n| --------------- | ---- | -------- | ------------------ | ---- |\n| id              | int  |          | id                 |      |\n| community_id    | int  |          | 小区id             |      |\n| life_service_id | int  |          | oc_life_service.id |      |\n| hide            | int  |          | 是否显示           |      |\n| serial_num      | int  |          | 排序               |      |\n\n* hide: 显示(0), 隐藏(1)\n\n## oc_user_destination\n\n|    列名   |     类型    | 取值范围 |  代表含义  | 其他 |     |\n| --------- | ----------- | -------- | ---------- | ---- | --- |\n| id        | int         |          | id         |      |     |\n| room_id   | int         |          | oc_room.id |      |     |\n| user_id   | int         |          | oc_user.id |      |     |\n| dest_name | varchar(64) |          | 目的地     |      |     |\n| create_at | timestamp   |          | 创建时间   |      |     |\n\n## oc_hobby\n爱好\n\n|       列名      |     类型    |    取值范围    |  代表含义  | 其他 |     |\n| --------------- | ----------- | -------------- | ---------- | ---- | --- |\n| id              | int         |                | id         |      |     |\n| name            | varchar(32) |                | 名字       |      |     |\n| detail          | text        |                | 爱好描述   |      |     |\n| parent_hobby_id | int         | PK of oc_hobby | 所属爱好   |      |     |\n| display         | int         | 0-1            | 显示在筛选 |      |     |\n| serial_num      | int         |                | 排序       |      |     |\n\n* serial_num: 值小的在最前面\n\n## oc_hobby_of_user\n用户爱好\n\n|    列名    |     类型    | 取值范围 |    代表含义   | 其他 |     |\n| ---------- | ----------- | -------- | ------------- | ---- | --- |\n| id         | int         |          | id            |      |     |\n| user_id    | int         |          | oc_user.id    |      |     |\n| hobby_id   | int         |          | oc_hobby.id   |      |     |\n| grade      | varchar(16) |          | hobby级别描述 |      |     |\n| serial_num | int         |          | 排序          |      |     |\n\n## oc_house_layout\n\n代表一种户型图\n\n|     列名    |     类型    | 取值范围 |    代表含义    | 其他 |     |\n| ----------- | ----------- | -------- | -------------- | ---- | --- |\n| id          | int         |          | id             |      |     |\n| img         | varchar(64) |          | 户型图oss地址  |      |     |\n| layout_desc | varchar(64) |          | 户型图描述信息 |      |     |\n\n## oc_slice\n\n代表一片区域，一个大厅可以由多个slice组成，一个房间也可以由多个slice组成.\n\n\n|       列名      |     类型    | 取值范围 |      代表含义      | 其他 |     |\n| --------------- | ----------- | -------- | ------------------ | ---- | --- |\n| id              | int         |          | id                 |      |     |\n| boundary        | text        |          | json数据格式       |      |     |\n| slice_desc      | varchar(64) |          | slice描述信息      |      |     |\n| house_layout_id | int         |          | oc_house_layout.id |      |     |\n\n`boundary`:\n* 该区域所表示的范围,由多组像素坐标围成的一个区域,相对坐标点为左下角坐标,为json数据字符串组成，编辑需要按照区域顺序填写，切忌不能跳跃填写．\n* 格式如下:\n[{\"pointX\":\"162\",\"pointY\":\"60\"},{\"pointX\":\"162\",\"pointY\":\"290\"},{\"pointX\":\"367\",\"pointY\":\"60\"},{\"pointX\":\"367\",\"pointY\":\"288\"}]\n\n`slice_desc`:\n* 命名规则:户型图名字／地址＋区域介绍\n\n\n## oc_slice_of_scene\n\n一个场景信息\n\n|     列名     |     类型     | 取值范围 |       代表含义       | 其他 |     |\n| ------------ | ------------ | -------- | -------------------- | ---- | --- |\n| id           | int          |          | id                   |      |     |\n| scene_name   | varchar(128) |          | 场景命名             |      |     |\n| slice_id     | int          |          | oc_slice.id          |      |     |\n| house_img_id | int          |          | oc_image_of_house.id |      |     |\n| comm_id      | int          |          | oc_community.id      |      |     |\n| room_id      | int          |          | oc_room.id           |      |     |\n| point_x      | int          |          | 该场景的摄影点x坐标  |      |     |\n| point_y      | int          |          | 摄影点y坐标          |      |     |\n| v_degree     | int          |          | 度数（正北顺时度数） |      |     |\n\n`slice_id`:(非必须)\n* 户型图中某个区域\n`house_img_id`:(非必须)\n* 每个场景需要和套房的哪个户型图关联．（考虑到复式楼）\n`comm_id`:(非必须)\n* 小区场景,如果该场景名字属于小区场景名,需要配置该项\n`room_id`:(非必须)\n*　这个场景对应的房间id，如果不是room则不用填写\n\n\n## oc_expense_fee\n\n公司支出费用，目前包括（中介推荐费\\租客推荐费\\非租客推荐费\\活动返现）\n注：推荐费是在成功签订合同后，公司支出的。\n\n|    列名   |     类型     | 取值范围 |      代表含义     |    其他    |     |\n| --------- | ------------ | -------- | ----------------- | ---------- | --- |\n| id        | int          |          | id                |            |     |\n| fee_type  | int          |          | 费用类型          |            |     |\n| money     | int          |          | 支出金额(大于0)   |            |     |\n| pay_time  | date         |          | 付款时间          |            |     |\n| payee     | varchar(32)  |          | 收款人            |            |     |\n| pay_desc  | varchar(128) |          | 付款详细描述信息  |            |     |\n| create_at | timestamp    |          | 创建时间          |            |     |\n| bill_id   | int          |          | oc_renter_bill.id | 推荐费必填 |     |\n| house_id  | int          |          | oc_house.id       | 维修必填   |     |\n\n`fee_type`:\n* 0:未选择\n* 1:中介推荐费\n* 2:租客推荐费\n* 3:朋友推荐费(非租客/非中介)\n* 4:活动返现费\n* 5:维修费支出\n\n## oc_back_rent_reason\n退租原因\n\n| 列名 |     类型     | 取值范围 | 代表含义 | 其他 |     |\n| ---- | ------------ | -------- | -------- | ---- | --- |\n| id   | int          |          | id       |      |     |\n| name | varchar(128) |          | 退租原因 |      |     |\n\n## oc_back_rent\n退租列表\n\n|      列名      | 类型 | 取值范围 |           代表含义          | 其他 |     |\n| -------------- | ---- | -------- | --------------------------- | ---- | --- |\n| id             | int  |          | id                          |      |     |\n| reason_id      | int  |          | oc_back_rent_reason.id      |      |     |\n| bill_id        | int  |          | oc_renter_bill.id退租前合同 |      |     |\n| back_rent_time | date |          | 退租时间                    |      |     |\n| create_at      |      |          | 创建时间                    |      |     |\n\n\n","slug":"resume/COLOR公寓数据库设计","published":1,"date":"2016-03-18T10:37:10.000Z","updated":"2017-07-26T15:55:22.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6l5h00jaq0d4sykynwwd","content":"<p>Status: public<br>description: COLOR公寓后台系统，数据库设计<br>title: COLOR公寓数据库设计<br>tags: mysql,db,rdb,color</p>\n<h1 id=\"数据库文档\"><a href=\"#数据库文档\" class=\"headerlink\" title=\"数据库文档\"></a>数据库文档</h1><blockquote>\n<p>oc为opencart的简称，所有数据库表格均以oc_开头。</p>\n</blockquote>\n<h2 id=\"oc-room\"><a href=\"#oc-room\" class=\"headerlink\" title=\"oc_room\"></a>oc_room</h2><p><code>room</code>代表一个单间. 每个<code>room</code>必须属于某个<code>house</code>。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>属于哪个house</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar</td>\n<td></td>\n<td>房间名称</td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>float</td>\n<td></td>\n<td>房间价格，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>area</td>\n<td>int</td>\n<td></td>\n<td>面积</td>\n<td></td>\n</tr>\n<tr>\n<td>orientation</td>\n<td>tinyint</td>\n<td>0,1,2,3,4</td>\n<td>未编辑，东西南北</td>\n<td></td>\n</tr>\n<tr>\n<td>style_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_room_style</td>\n<td></td>\n</tr>\n<tr>\n<td>slogan</td>\n<td>text</td>\n<td></td>\n<td>slogan</td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td>影响排序规则，允许负值</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td>服务此房间的管家</td>\n<td></td>\n</tr>\n<tr>\n<td>number</td>\n<td>tinyint u</td>\n<td>[0~max)</td>\n<td>在大房间内的序号</td>\n<td></td>\n</tr>\n<tr>\n<td>has_lav</td>\n<td>tinyint</td>\n<td></td>\n<td>有独立卫生间</td>\n<td></td>\n</tr>\n<tr>\n<td>has_balcony</td>\n<td>tinyint</td>\n<td></td>\n<td>有私人阳台</td>\n<td></td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>tinyint</td>\n<td></td>\n<td>强制隐藏此房间</td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td>上次更改</td>\n<td></td>\n</tr>\n<tr>\n<td>ceate_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建日期</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>date</td>\n<td></td>\n<td>预计上线时间</td>\n<td></td>\n</tr>\n<tr>\n<td>privilidge</td>\n<td>bigint u</td>\n<td></td>\n<td>权限禁止管理</td>\n<td></td>\n</tr>\n<tr>\n<td>second_weight</td>\n<td>int</td>\n<td></td>\n<td>智能排序规则,每天定时更新</td>\n<td></td>\n</tr>\n<tr>\n<td>room_type</td>\n<td>varchar(256)</td>\n<td></td>\n<td>房间类型</td>\n</tr>\n</tbody>\n</table>\n<p>privilidge每个位的含义：</p>\n<ul>\n<li>0: 禁止邀请其他人</li>\n<li>1: 禁止被邀请</li>\n</ul>\n<p>state:  </p>\n<ul>\n<li>0：初始状态</li>\n<li>9：预上线</li>\n<li>10：已上线</li>\n<li>11：已预订</li>\n<li>12：已租出</li>\n</ul>\n<p>detail:<br>编辑员对房间的描述。示例如下：”[]“括起来的是标题，剩下的是内容。</p>\n<blockquote>\n<p>[主卧带卫生间，超大阳台，超值空间]<br>周边：人大附中朝阳学校芍药居分校：包括人大附小，初中，高中部。另被 对外经贸大学、北京服装学院、现代文学馆所环绕，周边医院有著名的中日 友好医院！银行，超市等配套设施齐全，毗邻元大都遗址公园。<br>交通：您想每天睡到自然醒么，距离地铁芍药居站步行（地铁10号线和13 号线交汇）只需2分钟，公交119路; 547路; 942快; 专22路步行只需5分 钟，多么舒适多么快捷！快拿起电话拨号吧！<br>价格：正规主卧，朝南向，带阳台，距离地铁站仅需2分钟的超便利位置， 超高性价比。</p>\n</blockquote>\n<ul>\n<li>room_type: varchar定义规则: 小区名字+房间序号+卧室个数+大厅个数+价格<br>(拼接的字符串相同则认为同一类房源)</li>\n</ul>\n<h2 id=\"oc-house\"><a href=\"#oc-house\" class=\"headerlink\" title=\"oc_house\"></a>oc_house</h2><p><code>house</code>代表一套房子，比如一套三室一厅。<code>house</code>必须属于某个<code>district</code>.</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>floor</td>\n<td>u smallint</td>\n<td></td>\n<td>楼层</td>\n<td></td>\n</tr>\n<tr>\n<td>building_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_buiding</td>\n<td></td>\n</tr>\n<tr>\n<td>area</td>\n<td>u smallint</td>\n<td></td>\n<td>面积</td>\n<td></td>\n</tr>\n<tr>\n<td>room_count</td>\n<td>u tinyint</td>\n<td></td>\n<td>卧室个数</td>\n<td></td>\n</tr>\n<tr>\n<td>holl_count</td>\n<td>u tinyint</td>\n<td></td>\n<td>厅个数</td>\n<td></td>\n</tr>\n<tr>\n<td>lav_count</td>\n<td>u tinyint</td>\n<td></td>\n<td>卫生间个数</td>\n<td></td>\n</tr>\n<tr>\n<td>total_floor</td>\n<td>u smallint</td>\n<td></td>\n<td>总楼层</td>\n<td></td>\n</tr>\n<tr>\n<td>building_name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>大楼名称</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_community</td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n<td></td>\n</tr>\n<tr>\n<td>building_postion_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint u</td>\n<td></td>\n<td>状态</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_key</td>\n<td>varchar(16)</td>\n<td></td>\n<td>电费合同账号</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_key</td>\n<td>varchar(16)</td>\n<td></td>\n<td>燃气费客户编码</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td>服务此房间的管家</td>\n</tr>\n</tbody>\n</table>\n<p>state:(装修状态)  </p>\n<ul>\n<li>0：初始状态</li>\n<li>1：已签约</li>\n<li>2：已测量</li>\n<li>3：已装修完毕</li>\n<li>4：采购订单已发出</li>\n<li>5：家具设备已签收和验货</li>\n<li>6：家具已安装</li>\n<li>7：已清洁</li>\n<li>8：已拍摄</li>\n<li>9：已完成</li>\n</ul>\n<h2 id=\"oc-building\"><a href=\"#oc-building\" class=\"headerlink\" title=\"oc_building\"></a>oc_building</h2><p><code>building</code>代表一栋楼。一个<code>building</code>对应一个唯一的地理位置（经纬度）。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>所属小区</td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-community\"><a href=\"#oc-community\" class=\"headerlink\" title=\"oc_community\"></a>oc_community</h2><p>代表一个小区，一个小区一有<strong>唯一</strong>的街道号码。若XX小区分为3期，每期的街道号不同，则视为三个不同小区。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(40)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n<td></td>\n</tr>\n<tr>\n<td>position_desc</td>\n<td>varchar(40)</td>\n<td></td>\n<td>地理位置的自定义描述</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-position\"><a href=\"#oc-position\" class=\"headerlink\" title=\"oc_position\"></a>oc_position</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>province</td>\n<td>varchar(8)</td>\n<td></td>\n<td>省份</td>\n<td></td>\n</tr>\n<tr>\n<td>city</td>\n<td>varchar(8)</td>\n<td></td>\n<td>城市</td>\n<td></td>\n</tr>\n<tr>\n<td>district</td>\n<td>varchar(8)</td>\n<td></td>\n<td>区</td>\n<td></td>\n</tr>\n<tr>\n<td>street</td>\n<td>varchar(16)</td>\n<td></td>\n<td>街道名</td>\n<td></td>\n</tr>\n<tr>\n<td>street_number</td>\n<td>int(12)</td>\n<td></td>\n<td>街道号码</td>\n<td></td>\n</tr>\n<tr>\n<td>longtitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>经度</td>\n<td></td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>custom_desc</td>\n<td>text</td>\n<td></td>\n<td>自定义描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-renter-bill\"><a href=\"#oc-renter-bill\" class=\"headerlink\" title=\"oc_renter_bill\"></a>oc_renter_bill</h2><p>代表一个实际发生的订单，租客与迈芒的订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>room id</td>\n<td></td>\n</tr>\n<tr>\n<td>start_time</td>\n<td>date</td>\n<td></td>\n<td>合同开始时间</td>\n<td></td>\n</tr>\n<tr>\n<td>expect_end_time</td>\n<td>date</td>\n<td></td>\n<td>合同结束时间</td>\n<td></td>\n</tr>\n<tr>\n<td>real_end_time</td>\n<td>date</td>\n<td></td>\n<td>实际结束合同的时间</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>标价，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>real_price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>实际价格，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>int unsigned</td>\n<td></td>\n<td>押金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>pay_cycle_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td>0,1,2,3</td>\n<td>见注释</td>\n<td></td>\n</tr>\n<tr>\n<td>month_paid</td>\n<td>tinyint</td>\n<td></td>\n<td>已付清月数</td>\n<td></td>\n</tr>\n<tr>\n<td>service_fee</td>\n<td>int unsigned</td>\n<td></td>\n<td>服务费，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>reduce</td>\n<td>int</td>\n<td></td>\n<td>减少金额</td>\n<td></td>\n</tr>\n<tr>\n<td>reduce_reason</td>\n<td>varchar(32)</td>\n<td></td>\n<td>减少金额原因</td>\n</tr>\n</tbody>\n</table>\n<p>state:</p>\n<ul>\n<li>0:未生效</li>\n<li>1:已生效</li>\n<li>2:已取消</li>\n<li>3:已完成</li>\n</ul>\n<h2 id=\"oc-renter-bill-payment-废弃\"><a href=\"#oc-renter-bill-payment-废弃\" class=\"headerlink\" title=\"oc_renter_bill_payment(废弃)\"></a>oc_renter_bill_payment(废弃)</h2><p>租金支付</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_bill.id</td>\n<td></td>\n</tr>\n<tr>\n<td>month</td>\n<td>tinyint</td>\n<td></td>\n<td>月数</td>\n<td></td>\n</tr>\n<tr>\n<td>for_month</td>\n<td>tinyint</td>\n<td></td>\n<td>付了几个月的钱</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>int</td>\n<td></td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>int</td>\n<td></td>\n<td>金额</td>\n<td></td>\n</tr>\n<tr>\n<td>coupon_id</td>\n<td>int</td>\n<td></td>\n<td>oc_coupon.id</td>\n<td></td>\n</tr>\n<tr>\n<td>payment_id</td>\n<td>int</td>\n<td></td>\n<td>oc_payment.id</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<ul>\n<li>1:支付押金（count为负数时表示退换押金）</li>\n<li>2:支付房租</li>\n<li>4:支付服务费</li>\n<li>8:用优惠券抵扣房租。</li>\n<li>6: 支付房租和服务费。</li>\n</ul>\n<h2 id=\"oc-landlord-bill-payment\"><a href=\"#oc-landlord-bill-payment\" class=\"headerlink\" title=\"oc_landlord_bill_payment\"></a>oc_landlord_bill_payment</h2><p>房东租金支付</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_landlord_bill.id</td>\n<td></td>\n</tr>\n<tr>\n<td>month</td>\n<td>tinyint</td>\n<td></td>\n<td>月数</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>int</td>\n<td></td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>int</td>\n<td></td>\n<td>金额</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<ul>\n<li>0:支付押金（count为负数时表示退换押金）</li>\n<li>1:支付房租</li>\n</ul>\n<h2 id=\"oc-landlord-bill\"><a href=\"#oc-landlord-bill\" class=\"headerlink\" title=\"oc_landlord_bill\"></a>oc_landlord_bill</h2><p>代表一个实际发生的订单，房主与迈芒的订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>start_time</td>\n<td>date</td>\n<td></td>\n<td>合同开始时间</td>\n<td></td>\n</tr>\n<tr>\n<td>expect_end_time</td>\n<td>date</td>\n<td></td>\n<td>合同结束时间</td>\n<td></td>\n</tr>\n<tr>\n<td>real_end_time</td>\n<td>date</td>\n<td></td>\n<td>实际结束合同的时间</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>标价，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>pay_cycle_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_pay_cycle</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>客户 id</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>int unsigned</td>\n<td></td>\n<td>押金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td>0,1,2,3</td>\n<td>见注释</td>\n<td></td>\n</tr>\n<tr>\n<td>property_fee</td>\n<td>float</td>\n<td></td>\n<td>物业费(元/月)</td>\n<td></td>\n</tr>\n<tr>\n<td>agency_fee</td>\n<td>float</td>\n<td></td>\n<td>中介费</td>\n<td></td>\n</tr>\n<tr>\n<td>agency_fee</td>\n<td>float</td>\n<td></td>\n<td>中介费</td>\n</tr>\n</tbody>\n</table>\n<p>备注：  </p>\n<ul>\n<li>正常情况<code>expect_end_time=real_end_time</code>,当用户提前终止合约的时候，两个时间不等。</li>\n</ul>\n<p>state:</p>\n<ul>\n<li>0:未生效</li>\n<li>1:已生效</li>\n<li>2:已取消</li>\n<li>3:已完成</li>\n</ul>\n<h2 id=\"oc-job\"><a href=\"#oc-job\" class=\"headerlink\" title=\"oc_job\"></a>oc_job</h2><p>客户职业</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>职业名称</td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>职业描述</td>\n<td></td>\n</tr>\n<tr>\n<td>parent_job_id</td>\n<td>int</td>\n<td>PK of oc_job</td>\n<td>所属职业</td>\n<td></td>\n</tr>\n<tr>\n<td>ver_job</td>\n<td>int</td>\n<td></td>\n<td>使用版本</td>\n</tr>\n</tbody>\n</table>\n<p>ver_job:</p>\n<ul>\n<li>0:初始化 （老版本使用）</li>\n<li>1:2015-11-30整理job分类后使用版本 (新版本)</li>\n</ul>\n<h2 id=\"oc-user\"><a href=\"#oc-user\" class=\"headerlink\" title=\"oc_user\"></a>oc_user</h2><p>客户账号。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>email</td>\n<td>varchar(50)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>full_name</td>\n<td>varchar(32)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>icon</td>\n<td>text</td>\n<td></td>\n<td>头像地址</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_img</td>\n<td>text</td>\n<td></td>\n<td>身份证照片</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_number</td>\n<td>varchar(20)</td>\n<td></td>\n<td>身份证号码</td>\n<td></td>\n</tr>\n<tr>\n<td>user_type</td>\n<td>tinyint</td>\n<td>0,1,2</td>\n<td>租客,房主,都是</td>\n<td></td>\n</tr>\n<tr>\n<td>verified</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>未实名认证,已认证</td>\n<td></td>\n</tr>\n<tr>\n<td>gender</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>女，男</td>\n<td></td>\n</tr>\n<tr>\n<td>birthday</td>\n<td>date</td>\n<td></td>\n<td>生日</td>\n<td></td>\n</tr>\n<tr>\n<td>job_id</td>\n<td>int</td>\n<td>PK(oc_job)</td>\n<td>职业</td>\n<td></td>\n</tr>\n<tr>\n<td>pwd_hash</td>\n<td>varchar(255)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pwd_reset_token</td>\n<td>varchar(255)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>auth_key</td>\n<td>varchar(32)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td>10,0</td>\n<td>激活,未激活</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bank_card</td>\n<td>varchar(24)</td>\n<td></td>\n<td>银行卡</td>\n<td></td>\n</tr>\n<tr>\n<td>bank_name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>银行名称</td>\n<td></td>\n</tr>\n<tr>\n<td>bank_of_deposit</td>\n<td>varchar(20)</td>\n<td></td>\n<td>开户行</td>\n<td></td>\n</tr>\n<tr>\n<td>hobby</td>\n<td>varchar(30)</td>\n<td></td>\n<td>爱好</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>invite_code</td>\n<td>char(6)</td>\n<td></td>\n<td>邀请码</td>\n<td></td>\n</tr>\n<tr>\n<td>invite_by_user_id</td>\n<td>int</td>\n<td></td>\n<td>邀请人</td>\n<td></td>\n</tr>\n<tr>\n<td>invitee_awarded</td>\n<td>tinyint</td>\n<td></td>\n<td>邀请人已奖励</td>\n<td></td>\n</tr>\n<tr>\n<td>say</td>\n<td>varchar(256)</td>\n<td></td>\n<td>用户say</td>\n</tr>\n</tbody>\n</table>\n<p>detail:</p>\n<ul>\n<li>state: 默认/系统生成（0），用户激活（1）</li>\n</ul>\n<h2 id=\"oc-keyword\"><a href=\"#oc-keyword\" class=\"headerlink\" title=\"oc_keyword\"></a>oc_keyword</h2><p>代表一个关键字。e.g. 南北通透、朝南、落地窗、大床、安静、核心商圈</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td>10 chars</td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>display</td>\n<td>int</td>\n<td>0-1</td>\n<td>是否显示</td>\n<td></td>\n</tr>\n<tr>\n<td>key_type</td>\n<td>int</td>\n<td></td>\n<td>关键字类型</td>\n<td></td>\n</tr>\n<tr>\n<td>key_desc</td>\n<td>text</td>\n<td></td>\n<td>关键字描述信息</td>\n<td></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>icon的oss地址</td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>display: 房屋筛选里不展示(0), 展示(1)</li>\n<li>key_type: 未分配(0,老版本使用), 特色配置(1), 其它配置(2)</li>\n<li>serial_num: 值小的在最前面</li>\n</ul>\n<h2 id=\"oc-keyword-of-room\"><a href=\"#oc-keyword-of-room\" class=\"headerlink\" title=\"oc_keyword_of_room\"></a>oc_keyword_of_room</h2><p><code>room</code>和<code>keyword</code>的映射关系。每一行表示某个<code>room</code>被添加了某个<code>keyword</code>。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>房间id</td>\n<td></td>\n</tr>\n<tr>\n<td>keyword_id</td>\n<td>int</td>\n<td></td>\n<td>关键字</td>\n<td></td>\n</tr>\n<tr>\n<td>display_detail</td>\n<td>int</td>\n<td></td>\n<td>是否显示在详情页</td>\n<td></td>\n</tr>\n<tr>\n<td>display_widget</td>\n<td>int</td>\n<td></td>\n<td>是否显示在点击查看小窗口</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>display_detail: 不展示(0), 展示(1)</li>\n<li>display_widget: 不展示(0), 展示(1)</li>\n</ul>\n<h2 id=\"oc-keyword-of-house\"><a href=\"#oc-keyword-of-house\" class=\"headerlink\" title=\"oc_keyword_of_house\"></a>oc_keyword_of_house</h2><h2 id=\"oc-keyword-of-community\"><a href=\"#oc-keyword-of-community\" class=\"headerlink\" title=\"oc_keyword_of_community\"></a>oc_keyword_of_community</h2><p>结构跟<code>oc_keyword_of_room</code>类似</p>\n<h2 id=\"oc-room-style\"><a href=\"#oc-room-style\" class=\"headerlink\" title=\"oc_room_style\"></a>oc_room_style</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>风格名称</td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>风格描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-butler\"><a href=\"#oc-butler\" class=\"headerlink\" title=\"oc_butler\"></a>oc_butler</h2><p>管家。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>full_name</td>\n<td>varchar(10)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nick_name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>昵称</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_img</td>\n<td>text</td>\n<td></td>\n<td>身份证照片</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_number</td>\n<td>varchar(20)</td>\n<td></td>\n<td>身份证号码</td>\n<td></td>\n</tr>\n<tr>\n<td>pwd</td>\n<td>varchar(32)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>tel</td>\n<td>varchar(20)</td>\n<td></td>\n<td>分机电话</td>\n<td></td>\n</tr>\n<tr>\n<td>custom_desc</td>\n<td>text</td>\n<td></td>\n<td>自定义描述</td>\n<td></td>\n</tr>\n<tr>\n<td>gender</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>女，男</td>\n<td></td>\n</tr>\n<tr>\n<td>icon</td>\n<td>text</td>\n<td></td>\n<td>头像地址</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-bulter-and-room\"><a href=\"#oc-bulter-and-room\" class=\"headerlink\" title=\"oc_bulter_and_room\"></a>oc_bulter_and_room</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bulter_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-image-of-room\"><a href=\"#oc-image-of-room\" class=\"headerlink\" title=\"oc_image_of_room\"></a>oc_image_of_room</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>text</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下定义</td>\n<td></td>\n</tr>\n<tr>\n<td>room_desc</td>\n<td>text</td>\n<td></td>\n<td>图片描述</td>\n</tr>\n</tbody>\n</table>\n<p><code>type</code>:</p>\n<ul>\n<li>0：未编辑</li>\n<li>1：高清大图</li>\n<li>2：列表封面</li>\n<li>3：三维</li>\n<li>4：户型图(无效,户型图和house绑定,参照oc_house_type)</li>\n<li>5：普通</li>\n<li>6：竖图</li>\n</ul>\n<h2 id=\"oc-image-of-house\"><a href=\"#oc-image-of-house\" class=\"headerlink\" title=\"oc_image_of_house\"></a>oc_image_of_house</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>text</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_desc</td>\n<td>text</td>\n<td></td>\n<td>公用图片描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>floor</td>\n<td>int</td>\n<td></td>\n<td>复式房第几层</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_layout_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house_layout.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下定义</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>floor</code>: 默认为１，当type为４户型图时，需要配置</p>\n<h2 id=\"oc-image-of-community\"><a href=\"#oc-image-of-community\" class=\"headerlink\" title=\"oc_image_of_community\"></a>oc_image_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>oc_community.id</td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>text</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下定义</td>\n<td></td>\n</tr>\n<tr>\n<td>comm_desc</td>\n<td>text</td>\n<td></td>\n<td>小区图片描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-image-of-room-style\"><a href=\"#oc-image-of-room-style\" class=\"headerlink\" title=\"oc_image_of_room_style\"></a>oc_image_of_room_style</h2><p>（表格结构跟<code>oc_image_of_room</code>基本一样，在此略）</p>\n<h2 id=\"oc-district\"><a href=\"#oc-district\" class=\"headerlink\" title=\"oc_district\"></a>oc_district</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(8)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>city</td>\n<td>varchar(8)</td>\n<td></td>\n<td>城市</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>enable</td>\n<td>boolean</td>\n<td>0-1</td>\n<td>是否网站上显示</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td>列表显示顺序</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>enable</code>:</p>\n<ul>\n<li>0：不显示</li>\n<li>1：显示</li>\n</ul>\n<h2 id=\"oc-circle\"><a href=\"#oc-circle\" class=\"headerlink\" title=\"oc_circle\"></a>oc_circle</h2><p>商圈。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>district_id</td>\n<td>int</td>\n<td></td>\n<td>oc_district.id</td>\n<td></td>\n</tr>\n<tr>\n<td>enable</td>\n<td>boolean</td>\n<td>0-1</td>\n<td>是否网站上显示</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n</tr>\n</tbody>\n</table>\n<p><code>enable</code>:</p>\n<ul>\n<li>0：不显示</li>\n<li>1：显示</li>\n</ul>\n<h2 id=\"oc-circle-of-community\"><a href=\"#oc-circle-of-community\" class=\"headerlink\" title=\"oc_circle_of_community\"></a>oc_circle_of_community</h2><p>小区所属商圈。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>circle_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-line\"><a href=\"#oc-subway-line\" class=\"headerlink\" title=\"oc_subway_line\"></a>oc_subway_line</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>number</td>\n<td>tinyint</td>\n<td></td>\n<td>线路号</td>\n<td></td>\n</tr>\n<tr>\n<td>station_count</td>\n<td>tinyint</td>\n<td></td>\n<td>总共站数量</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-station\"><a href=\"#oc-subway-station\" class=\"headerlink\" title=\"oc_subway_station\"></a>oc_subway_station</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>enable</td>\n<td>boolean</td>\n<td>0-1</td>\n<td>是否网站上显示</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-station-of-line\"><a href=\"#oc-subway-station-of-line\" class=\"headerlink\" title=\"oc_subway_station_of_line\"></a>oc_subway_station_of_line</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_line_id</td>\n<td>int</td>\n<td></td>\n<td>线路id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_station_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>sequence</td>\n<td>int</td>\n<td>1~N</td>\n<td>是线路的第几站</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-line-of-community\"><a href=\"#oc-subway-line-of-community\" class=\"headerlink\" title=\"oc_subway_line_of_community\"></a>oc_subway_line_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_line_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-station-of-community\"><a href=\"#oc-subway-station-of-community\" class=\"headerlink\" title=\"oc_subway_station_of_community\"></a>oc_subway_station_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_station_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-price-range\"><a href=\"#oc-price-range\" class=\"headerlink\" title=\"oc_price_range\"></a>oc_price_range</h2><p>选购房屋时，列出的价格区间选项。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>low</td>\n<td>int</td>\n<td></td>\n<td>最低价格</td>\n<td></td>\n</tr>\n<tr>\n<td>high</td>\n<td>int</td>\n<td></td>\n<td>最高价格</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-pay-cycle\"><a href=\"#oc-pay-cycle\" class=\"headerlink\" title=\"oc_pay_cycle\"></a>oc_pay_cycle</h2><p>付款周期</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>discount</td>\n<td>float</td>\n<td>0~1</td>\n<td>折扣数</td>\n<td></td>\n</tr>\n<tr>\n<td>cycle</td>\n<td>tinyint</td>\n<td>3,6,12,24</td>\n<td>多少月付款一次</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-mobile-validate\"><a href=\"#oc-mobile-validate\" class=\"headerlink\" title=\"oc_mobile_validate\"></a>oc_mobile_validate</h2><p>待验证的短信验证码</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(16)</td>\n<td></td>\n<td>手机号</td>\n<td></td>\n</tr>\n<tr>\n<td>code</td>\n<td>varchar(4)</td>\n<td></td>\n<td>验证码</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建于XX时刻</td>\n<td></td>\n</tr>\n<tr>\n<td>ip</td>\n<td>varchar(16)</td>\n<td></td>\n<td>IP</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td>解释见下</td>\n<td></td>\n</tr>\n<tr>\n<td>used</td>\n<td>tinyint</td>\n<td></td>\n<td>是否已经使用了</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<p>0: 预定房间<br>1: 注册账号<br>3：找回密码</p>\n<h2 id=\"oc-schedule-bill\"><a href=\"#oc-schedule-bill\" class=\"headerlink\" title=\"oc_schedule_bill\"></a>oc_schedule_bill</h2><p>客户预定订单</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(16)</td>\n<td></td>\n<td>手机号</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(6)</td>\n<td></td>\n<td>姓名</td>\n<td></td>\n</tr>\n<tr>\n<td>job</td>\n<td>varchar(10)</td>\n<td></td>\n<td>职业</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-bill-subscriber\"><a href=\"#oc-bill-subscriber\" class=\"headerlink\" title=\"oc_bill_subscriber\"></a>oc_bill_subscriber</h2><p>订单订阅者</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(6)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(16)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>email</td>\n<td>varchar(40)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>0:激活，1:屏蔽</td>\n<td></td>\n</tr>\n<tr>\n<td>trigger_event</td>\n<td>tinyint</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>trigger_event：预定房间（0），保洁（1），维修（2）。</li>\n</ul>\n<h2 id=\"oc-cash-flow\"><a href=\"#oc-cash-flow\" class=\"headerlink\" title=\"oc_cash_flow\"></a>oc_cash_flow</h2><p>公司现金流量表。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_type</td>\n<td>tinyint unsigned</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>订单号</td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td>实际收入金额，负数表示支出</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n</tr>\n</tbody>\n</table>\n<p>解释：</p>\n<ul>\n<li>bill_type: 租入(0),租出(1),家具(2),装修(3)</li>\n</ul>\n<h2 id=\"oc-furniture\"><a href=\"#oc-furniture\" class=\"headerlink\" title=\"oc_furniture\"></a>oc_furniture</h2><p>家具定义表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(40)</td>\n<td></td>\n<td>一款物品有唯一的名称</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint unsigned</td>\n<td></td>\n<td>家具类型</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<ul>\n<li>0：未知</li>\n<li>1：床</li>\n<li>2：沙发</li>\n<li>3：书桌</li>\n<li>4：衣柜</li>\n<li>5：电视</li>\n<li>6：空调</li>\n<li>7：床垫</li>\n<li>8：床套</li>\n<li>9：床</li>\n<li>10：写字台</li>\n<li>11：护眼台灯</li>\n<li>12：挂画</li>\n<li>13：写字台椅子</li>\n<li>14：餐桌</li>\n<li>15：多功能衣架</li>\n<li>16：隔板+支架</li>\n<li>17：小米盒子</li>\n<li>18：360路由器</li>\n<li>19：窗帘</li>\n<li>20：锁</li>\n<li>21：冰箱</li>\n<li>22：洗衣机</li>\n<li>23：宽带</li>\n</ul>\n<h2 id=\"oc-furniture-bill\"><a href=\"#oc-furniture-bill\" class=\"headerlink\" title=\"oc_furniture_bill\"></a>oc_furniture_bill</h2><p>家具订单</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>furniture_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td>须支付总金额</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>int unsigned</td>\n<td></td>\n<td>采购的数量</td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint unsigned</td>\n<td>0,1,2</td>\n<td>见备注</td>\n<td></td>\n</tr>\n<tr>\n<td>suplier</td>\n<td>varchar(30)</td>\n<td></td>\n<td>供货商名称</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>status: </p>\n<ul>\n<li>0：未提交，编辑中。默认值。</li>\n<li>1：已提交给供应商，还未声场完毕。</li>\n<li>2：已生产完毕，已入库。</li>\n</ul>\n<h2 id=\"oc-furniture-deploy\"><a href=\"#oc-furniture-deploy\" class=\"headerlink\" title=\"oc_furniture_deploy\"></a>oc_furniture_deploy</h2><p>家具配置表。house/room与家具之间的分配关系。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>furniture_id</td>\n<td>int</td>\n<td></td>\n<td>家具编号</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>如果为空，表示是套房的家具</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>tinyint</td>\n<td></td>\n<td>数量，默认为1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-decorate-bill\"><a href=\"#oc-decorate-bill\" class=\"headerlink\" title=\"oc_decorate_bill\"></a>oc_decorate_bill</h2><p>装修订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company</td>\n<td>varcahr(30)</td>\n<td></td>\n<td>装修公司名称</td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int unsigned</td>\n<td></td>\n<td>金额</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>下单时间</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>timestamp</td>\n<td></td>\n<td>完成时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-coupon\"><a href=\"#oc-coupon\" class=\"headerlink\" title=\"oc_coupon\"></a>oc_coupon</h2><p>优惠券</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>code</td>\n<td>char(6)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>use_method</td>\n<td>tinyint</td>\n<td></td>\n<td>见下解释</td>\n<td></td>\n</tr>\n<tr>\n<td>get_from</td>\n<td>tinyint</td>\n<td></td>\n<td>见下解释</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td>0,1,2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>validity</td>\n<td>timestamp</td>\n<td></td>\n<td>到期日期</td>\n<td></td>\n</tr>\n<tr>\n<td>cash</td>\n<td>smallint</td>\n<td></td>\n<td>抵扣金额</td>\n<td></td>\n</tr>\n<tr>\n<td>stackable</td>\n<td>tinyint</td>\n<td></td>\n<td>可叠加使用</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>已被用户领取</td>\n<td></td>\n</tr>\n<tr>\n<td>locked</td>\n<td>tinyint</td>\n<td></td>\n<td>已锁定（支付中）</td>\n</tr>\n</tbody>\n</table>\n<p>注解：</p>\n<p>use_method:</p>\n<ul>\n<li>0: 支付房租均可使用</li>\n<li>1: 支付任何费用均可使用，包括O2O服务。</li>\n</ul>\n<p>state：init(0), active(1), bind(2), used(3)。<br>validity： 有效期，天数。最多365天。</p>\n<p>from:</p>\n<ul>\n<li>0: default</li>\n<li>1：首月半价</li>\n<li>2：社交活动</li>\n<li>3：推荐其它好友 </li>\n<li>4：暂时废弃</li>\n<li>5：自己被邀请</li>\n</ul>\n<h2 id=\"oc-third-payment\"><a href=\"#oc-third-payment\" class=\"headerlink\" title=\"oc_third_payment\"></a>oc_third_payment</h2><p>第三方支付</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>trade_no</td>\n<td>char(32)</td>\n<td></td>\n<td>交易号</td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>total_fee</td>\n<td>float</td>\n<td></td>\n<td>付款金额</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>ext</td>\n<td>varchar(128)</td>\n<td></td>\n<td>json 附加订单信息</td>\n<td></td>\n</tr>\n<tr>\n<td>third_result</td>\n<td>varchar(128)</td>\n<td></td>\n<td>json 第三方返回信息</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>method: 支付宝(0)，微信(1)，银联(2)。</li>\n<li>type: 未知(0)，交房租(1)，预定房间（2），水电气(3)。</li>\n<li>state: 已创建(0)，已成功(1)，已失败(2)。</li>\n</ul>\n<h2 id=\"oc-coupon-seed\"><a href=\"#oc-coupon-seed\" class=\"headerlink\" title=\"oc_coupon_seed\"></a>oc_coupon_seed</h2><p>优惠码，生成种子记录</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>seed</td>\n<td>int u</td>\n<td></td>\n<td>当前种子值，默认值53213</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-clean-order\"><a href=\"#oc-clean-order\" class=\"headerlink\" title=\"oc_clean_order\"></a>oc_clean_order</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>申请人</td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>varchar(256)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serve_at</td>\n<td>timestamp</td>\n<td></td>\n<td>设定服务时间</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>timestamp</td>\n<td></td>\n<td>完成时间</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），提交（1），已安排(2), 完成（3），取消（4）</li>\n</ul>\n<h2 id=\"oc-repair-order\"><a href=\"#oc-repair-order\" class=\"headerlink\" title=\"oc_repair_order\"></a>oc_repair_order</h2><p>服务</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>varchar(256)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serve_at</td>\n<td>timestamp</td>\n<td></td>\n<td>设定服务时间</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>timestamp</td>\n<td></td>\n<td>完成时间</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），提交（1），完成（2），取消（3）</li>\n<li>type: 家电维修（0），房屋漏水（1），管道疏通/维修（2），房屋维修（3），其它（4）</li>\n</ul>\n<h2 id=\"oc-house-state-log\"><a href=\"#oc-house-state-log\" class=\"headerlink\" title=\"oc_house_state_log\"></a>oc_house_state_log</h2><p>房屋状态更改日志</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-room-state-log\"><a href=\"#oc-room-state-log\" class=\"headerlink\" title=\"oc_room_state_log\"></a>oc_room_state_log</h2><p>房屋状态更改日志</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-renter-pay-bill\"><a href=\"#oc-renter-pay-bill\" class=\"headerlink\" title=\"oc_renter_pay_bill\"></a>oc_renter_pay_bill</h2><p>租房合同确立后，创建每笔支付订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>tinyint u</td>\n<td></td>\n<td>支付订单的顺序</td>\n<td></td>\n</tr>\n<tr>\n<td>renter_bill_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>start_month</td>\n<td>tinyint u</td>\n<td>[0,11]</td>\n<td>此次支付起始月份</td>\n<td></td>\n</tr>\n<tr>\n<td>for_month</td>\n<td>tinyint u</td>\n<td>[1,12]</td>\n<td>支付N个月房租</td>\n<td></td>\n</tr>\n<tr>\n<td>rent_fee</td>\n<td>int u</td>\n<td></td>\n<td>租金</td>\n<td></td>\n</tr>\n<tr>\n<td>service_fee</td>\n<td>int u</td>\n<td></td>\n<td>服务费金额</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>int u</td>\n<td></td>\n<td>押金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>money_to_pay</td>\n<td>int u</td>\n<td></td>\n<td>此次支付需要支付金额</td>\n<td></td>\n</tr>\n<tr>\n<td>reduce</td>\n<td>int u</td>\n<td></td>\n<td>减免金额</td>\n<td></td>\n</tr>\n<tr>\n<td>coupon_reduce</td>\n<td>int u</td>\n<td></td>\n<td>优惠券减免</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>int u</td>\n<td></td>\n<td>已支付金额</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay_at</td>\n<td>timestamp</td>\n<td></td>\n<td>需要缴纳房租的时间</td>\n</tr>\n</tbody>\n</table>\n<p>state: 默认（0），分笔支付中（1），支付完成（2），取消（3）。</p>\n<h2 id=\"oc-renter-payment\"><a href=\"#oc-renter-payment\" class=\"headerlink\" title=\"oc_renter_payment\"></a>oc_renter_payment</h2><p>每一条代表一次支付的记录。如果是在线支付，会有online_payment_id链接到对应的第三方支付信息。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>renter_bill_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>online_payment_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）</li>\n<li>money: 负数表示退款</li>\n</ul>\n<h2 id=\"oc-advice\"><a href=\"#oc-advice\" class=\"headerlink\" title=\"oc_advice\"></a>oc_advice</h2><p>用户吐槽</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>email</td>\n<td>varchar(50)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>content</td>\n<td>varchar(250)</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-coupon-state-log\"><a href=\"#oc-coupon-state-log\" class=\"headerlink\" title=\"oc_coupon_state_log\"></a>oc_coupon_state_log</h2><p>优惠券发放和使用日志。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>coupon_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-article\"><a href=\"#oc-article\" class=\"headerlink\" title=\"oc_article\"></a>oc_article</h2><p>娱乐圈、彩客秀文章</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>author</td>\n<td>varchar(20)</td>\n<td></td>\n<td>作者姓名</td>\n<td></td>\n</tr>\n<tr>\n<td>cover_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>封面图像地址</td>\n<td></td>\n</tr>\n<tr>\n<td>head_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>作者头像地址</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>varchar(50)</td>\n<td></td>\n<td>标题</td>\n<td></td>\n</tr>\n<tr>\n<td>brief</td>\n<td>varchar(128)</td>\n<td></td>\n<td>内容简介</td>\n<td></td>\n</tr>\n<tr>\n<td>content</td>\n<td>varchar(10000)</td>\n<td></td>\n<td>文章全文</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>type: 彩客秀（0），娱乐圈（1）</li>\n<li>weight: 权重，值越小，排名越靠前</li>\n</ul>\n<h2 id=\"oc-bank-card\"><a href=\"#oc-bank-card\" class=\"headerlink\" title=\"oc_bank_card\"></a>oc_bank_card</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>card</td>\n<td>varchar(24)</td>\n<td></td>\n<td>卡号</td>\n<td></td>\n</tr>\n<tr>\n<td>bank_name</td>\n<td>varchar(64)</td>\n<td></td>\n<td>开户行</td>\n<td></td>\n</tr>\n<tr>\n<td>full_name</td>\n<td>varchar(24)</td>\n<td></td>\n<td>真实姓名</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint u</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>validity</td>\n<td>date</td>\n<td></td>\n<td>有效期</td>\n<td></td>\n</tr>\n<tr>\n<td>cvv</td>\n<td>varchar(8)</td>\n<td></td>\n<td>信用卡CVV码</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(64)</td>\n<td></td>\n<td>备注,标记房租还是水电卡</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>type: 借记卡（0），信用卡（1）</li>\n</ul>\n<h2 id=\"oc-butler-task\"><a href=\"#oc-butler-task\" class=\"headerlink\" title=\"oc_butler_task\"></a>oc_butler_task</h2><p>管家任务</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_name</td>\n<td>varchar(32)</td>\n<td></td>\n<td>用户名</td>\n<td></td>\n</tr>\n<tr>\n<td>tel_num</td>\n<td>varchar(20)</td>\n<td></td>\n<td>手机号</td>\n<td></td>\n</tr>\n<tr>\n<td>channel_id</td>\n<td>int</td>\n<td></td>\n<td>渠道id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td>上次更改</td>\n<td></td>\n</tr>\n<tr>\n<td>show_room_time</td>\n<td>varchar(24)</td>\n<td></td>\n<td>看房时间</td>\n<td></td>\n</tr>\n<tr>\n<td>show_room_style</td>\n<td>varchar(128)</td>\n<td></td>\n<td>客户看房类型</td>\n<td></td>\n</tr>\n<tr>\n<td>hope_price_id</td>\n<td>int</td>\n<td></td>\n<td>理想价位id</td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td></td>\n<td>任务状态</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>room_id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_name_brief</td>\n<td>varchar(64)</td>\n<td></td>\n<td>房间名字介绍</td>\n<td></td>\n</tr>\n<tr>\n<td>failure_reason</td>\n<td>varchar(64)</td>\n<td></td>\n<td>失败原因</td>\n<td></td>\n</tr>\n<tr>\n<td>earnest_money_id</td>\n<td>int</td>\n<td></td>\n<td>定金id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>租房合同id</td>\n<td></td>\n</tr>\n<tr>\n<td>contact_content</td>\n<td>varchar(64)</td>\n<td></td>\n<td>已联系内容</td>\n<td></td>\n</tr>\n<tr>\n<td>stars</td>\n<td>int</td>\n<td></td>\n<td>星级</td>\n<td></td>\n</tr>\n<tr>\n<td>rev_money</td>\n<td>int</td>\n<td></td>\n<td>尾款（签合同收到钱）</td>\n<td></td>\n</tr>\n<tr>\n<td>earnest_method</td>\n<td>varchar(64)</td>\n<td></td>\n<td>定金支付方式</td>\n<td></td>\n</tr>\n<tr>\n<td>earnest_pay_time</td>\n<td>date</td>\n<td></td>\n<td>定金支付时间</td>\n<td></td>\n</tr>\n<tr>\n<td>rev_money_method</td>\n<td>varchar(64)</td>\n<td></td>\n<td>尾款支付方式</td>\n<td></td>\n</tr>\n<tr>\n<td>rev_money_time</td>\n<td>date</td>\n<td></td>\n<td>尾款支付时间</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>status: 初始状态(0), 已分配(1), 已联系(2), 未成功(3), 未成功潜在客户(4), 改约时间(5), 已交定金(6), 直接签约(7), 已完成(表示合同完结8), 已审核(运维审核9)</li>\n<li>room_id: 没有确定(0), 确定后填写真正预约room_id(room_id)</li>\n<li>pay_method: 参考oc_renter_payment 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3） </li>\n</ul>\n<h2 id=\"oc-earnest-money\"><a href=\"#oc-earnest-money\" class=\"headerlink\" title=\"oc_earnest_money\"></a>oc_earnest_money</h2><p>管家任务定金表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>int</td>\n<td></td>\n<td>定金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>状态</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>user id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 初始状态(0)， 已交定金还没签订合同（1）， 交定金签订合同（2）, 用户取消预定（3）,直接签合同（4）</li>\n<li>price: 负数表示退款</li>\n</ul>\n<h2 id=\"oc-channel\"><a href=\"#oc-channel\" class=\"headerlink\" title=\"oc_channel\"></a>oc_channel</h2><p>渠道</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>channel_name</td>\n<td>varchar(32)</td>\n<td></td>\n<td>渠道名字</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-hope-price\"><a href=\"#oc-hope-price\" class=\"headerlink\" title=\"oc_hope_price\"></a>oc_hope_price</h2><p>心理价位</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>hope_price_range</td>\n<td>varchar(32)</td>\n<td></td>\n<td>价格范围</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>hope_price_range: 为id对应的解释,不限(1)， 1500以下(2)，1500-2000(3)，2000-2500(4), 2500-3000(5), 3000-3500(6), 3500-4000(7), 4000-4500(8), 4500以上(9)</li>\n</ul>\n<h2 id=\"oc-task-state-log\"><a href=\"#oc-task-state-log\" class=\"headerlink\" title=\"oc_task_state_log\"></a>oc_task_state_log</h2><p>任务状态更改日志</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>task_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>from_state、to_state: 参照oc_butler_task state状态描述</li>\n</ul>\n<h2 id=\"oc-sale-activity\"><a href=\"#oc-sale-activity\" class=\"headerlink\" title=\"oc_sale_activity\"></a>oc_sale_activity</h2><p>特价房活动，每一行代表一个活动。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>start_time</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>end_time</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cover_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>cover image</td>\n<td></td>\n</tr>\n<tr>\n<td>banner_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>banner image</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: default(0),active(1),over(2)</li>\n</ul>\n<h2 id=\"oc-rooms-in-sale\"><a href=\"#oc-rooms-in-sale\" class=\"headerlink\" title=\"oc_rooms_in_sale\"></a>oc_rooms_in_sale</h2><p>参与活动的房间</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>activity_id</td>\n<td>int</td>\n<td></td>\n<td>oc_sale_activity.id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>int</td>\n<td></td>\n<td>活动价格</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-pre-order\"><a href=\"#oc-pre-order\" class=\"headerlink\" title=\"oc_pre_order\"></a>oc_pre_order</h2><p>预定房间列表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>int</td>\n<td></td>\n<td>约定的价格</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit_paid</td>\n<td>int</td>\n<td></td>\n<td>已交付的定金</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: default(0),已付定金(1),已取消(2),已完成入住(3)</li>\n</ul>\n<h2 id=\"oc-system-log\"><a href=\"#oc-system-log\" class=\"headerlink\" title=\"oc_system_log\"></a>oc_system_log</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>app</td>\n<td>varchar(32)</td>\n<td></td>\n<td>app name</td>\n<td></td>\n</tr>\n<tr>\n<td>username</td>\n<td>varchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ip</td>\n<td>varchar(16)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>action</td>\n<td>varchar(128)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>varchar(8)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>params</td>\n<td>varchar(1024)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-main-banner\"><a href=\"#oc-main-banner\" class=\"headerlink\" title=\"oc_main_banner\"></a>oc_main_banner</h2><p>网站首页，Banner配置。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>open</td>\n<td>tinyint</td>\n<td></td>\n<td>是否显示</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>text</td>\n<td>varchar(128)</td>\n<td></td>\n<td>banner显示文字</td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>图片地址</td>\n<td></td>\n</tr>\n<tr>\n<td>url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>链接地址</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(32)</td>\n<td></td>\n<td>备注</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>type：PC（0），手机（1），PC和手机都显示（2）</li>\n</ul>\n<h2 id=\"oc-landlord-bill-increment\"><a href=\"#oc-landlord-bill-increment\" class=\"headerlink\" title=\"oc_landlord_bill_increment\"></a>oc_landlord_bill_increment</h2><p>房东合同价格递增表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_landlord_bill.id</td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>int</td>\n<td></td>\n<td>第几年租金价格</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>实际价格</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>increment_at</td>\n<td>timestamp</td>\n<td></td>\n<td>递增房租价格时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-butler-check-fee\"><a href=\"#oc-butler-check-fee\" class=\"headerlink\" title=\"oc_butler_check_fee\"></a>oc_butler_check_fee</h2><p>管家查询各表信息(退租、合同结束时查表，数据全部录入)<br>注：录入数据信息必须为退租当月信息。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td>抄表管家</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>房间id</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次抄表数值</td>\n<td></td>\n</tr>\n<tr>\n<td>used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>估算所用数值</td>\n<td></td>\n</tr>\n<tr>\n<td>fee_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>fee_type</td>\n<td>int</td>\n<td></td>\n<td>缴费类型</td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>fee_type:水（0），电（1），燃气（2）</li>\n<li>method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）</li>\n</ul>\n<h2 id=\"oc-company-elec-payment\"><a href=\"#oc-company-elec-payment\" class=\"headerlink\" title=\"oc_company_elec_payment\"></a>oc_company_elec_payment</h2><p>公司代缴电费信息表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>charge_inst</td>\n<td>varchar(32)</td>\n<td></td>\n<td>收费单位名称</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>套房id</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_type</td>\n<td>int</td>\n<td></td>\n<td>用电类型</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_last_time</td>\n<td>date</td>\n<td></td>\n<td>上次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_last_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>上次抄表数值（度）</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次抄表数值（度）</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次所用电度数（度）</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>elec_type:居民用电(0)，一般工商业用电（1），大工业用电（2），农业用电（3）</li>\n</ul>\n<h2 id=\"oc-user-elec-payment\"><a href=\"#oc-user-elec-payment\" class=\"headerlink\" title=\"oc_user_elec_payment\"></a>oc_user_elec_payment</h2><p>租客缴电费信息表（每次录入公司代交电费后自动生成）</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company_elec_id</td>\n<td>int</td>\n<td></td>\n<td>oc_company_elec_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>已经缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>支付状态</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次缴费日期</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>用电度数(价格做估算)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），未支付（1），支付完成（2）</li>\n</ul>\n<h2 id=\"oc-company-water-payment\"><a href=\"#oc-company-water-payment\" class=\"headerlink\" title=\"oc_company_water_payment\"></a>oc_company_water_payment</h2><p>公司代缴水费信息表(水费+污水处理费)</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>套房id</td>\n<td></td>\n</tr>\n<tr>\n<td>water_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>缴费金额</td>\n<td></td>\n</tr>\n<tr>\n<td>water_last_time</td>\n<td>date</td>\n<td></td>\n<td>上次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>water_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>water_last_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>上次读数（吨）</td>\n<td></td>\n</tr>\n<tr>\n<td>water_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次读数（吨）</td>\n<td></td>\n</tr>\n<tr>\n<td>water_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次所用水量（吨）</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-user-water-payment\"><a href=\"#oc-user-water-payment\" class=\"headerlink\" title=\"oc_user_water_payment\"></a>oc_user_water_payment</h2><p>租客缴水费信息表（每次录入公司代交水费后自动生成）</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company_water_id</td>\n<td>int</td>\n<td></td>\n<td>oc_company_water_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次已经缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>支付状态</td>\n<td></td>\n</tr>\n<tr>\n<td>water_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次缴费日期</td>\n<td></td>\n</tr>\n<tr>\n<td>water_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>用户所用水量（价格做估算）</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），支付中（1），支付完成（2）</li>\n</ul>\n<h2 id=\"oc-company-gas-payment\"><a href=\"#oc-company-gas-payment\" class=\"headerlink\" title=\"oc_company_gas_payment\"></a>oc_company_gas_payment</h2><p>公司代缴燃气费信息表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>套房id</td>\n<td></td>\n</tr>\n<tr>\n<td>charge_inst</td>\n<td>varchar(32)</td>\n<td></td>\n<td>收费单位名称</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_type</td>\n<td>int</td>\n<td></td>\n<td>用气类型</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>缴费金额</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_last_time</td>\n<td>date</td>\n<td></td>\n<td>上次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_last_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>上次读数（立方米）</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次读数（立方米）</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次所用气量（立方米）</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>gas_type:居民用气(0)，学校用气（1），机关事业和企业单位用气（2）</li>\n</ul>\n<h2 id=\"oc-user-gas-payment\"><a href=\"#oc-user-gas-payment\" class=\"headerlink\" title=\"oc_user_gas_payment\"></a>oc_user_gas_payment</h2><p>租客缴燃气费信息表（每次录入公司代交燃气费后自动生成）</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company_gas_id</td>\n<td>int</td>\n<td></td>\n<td>oc_company_gas_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次已经缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>支付状态</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次缴费日期</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>用户所用气量（价格做估算）</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），支付中（1），支付完成（2）</li>\n</ul>\n<h2 id=\"oc-other-fee-payment\"><a href=\"#oc-other-fee-payment\" class=\"headerlink\" title=\"oc_other_fee_payment\"></a>oc_other_fee_payment</h2><p>每一条代表一次支付的记录。如果是在线支付，会有third_payment_id链接到对应的第三方支付信息。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>fee_type</td>\n<td>int</td>\n<td></td>\n<td>缴费类型</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>check_fee_id</td>\n<td>int</td>\n<td></td>\n<td>oc_butler_check_fee.id</td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>third_payment_id</td>\n<td>int</td>\n<td></td>\n<td>oc_third_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）</li>\n<li>fee_type:水（0），电（1），燃气（2）</li>\n<li>check_fee_id:默认没有，只有在退租或合同结束时结算水电气费用时，生成支付订单才用。</li>\n</ul>\n<h2 id=\"oc-user-wallet\"><a href=\"#oc-user-wallet\" class=\"headerlink\" title=\"oc_user_wallet\"></a>oc_user_wallet</h2><p>用户钱包，如果remain_money&gt;0，水电气费用金额会从中扣除。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>remain_money</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>钱包剩余金额</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-main-page\"><a href=\"#oc-main-page\" class=\"headerlink\" title=\"oc_main_page\"></a>oc_main_page</h2><p>首页内容配置表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>column</td>\n<td>tinyint u</td>\n<td></td>\n<td>栏目id</td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>tinyint u</td>\n<td></td>\n<td>栏目内序号</td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>varchar(128)</td>\n<td></td>\n<td>图片</td>\n<td></td>\n</tr>\n<tr>\n<td>url</td>\n<td>varchar(128)</td>\n<td></td>\n<td>跳转地址</td>\n<td></td>\n</tr>\n<tr>\n<td>config</td>\n<td>varchar(512)</td>\n<td></td>\n<td>json配置项</td>\n<td></td>\n</tr>\n<tr>\n<td>open</td>\n<td>tinyint</td>\n<td></td>\n<td>是否打开</td>\n<td></td>\n</tr>\n<tr>\n<td>show</td>\n<td>tinyint</td>\n<td></td>\n<td>显示在哪里</td>\n</tr>\n</tbody>\n</table>\n<p><code>show</code>:  </p>\n<ul>\n<li>0，PC和Mobile都显示</li>\n<li>1，只显示在PC</li>\n<li>2，只显示在Mobile</li>\n</ul>\n<p><code>column</code>: </p>\n<ul>\n<li>0，表示首页Banner图的配置。<code>config</code>可配置,格式为：<br><code>{&quot;alt&quot;:&quot;图片描述信息&quot;}</code>。</li>\n<li>1，表示精选房间的配置，此时，<code>config</code>需要配置，格式为：<code>{&quot;price&quot;:2000,&quot;name&quot;:&quot;大冲城市花园3栋6座301&quot;}</code>。</li>\n<li>2，表示房屋列表快速链接的配置，包括：南山区、福田区、特价房。</li>\n<li>3，表示彩客秀配置，此时，需要配置<code>config</code>，格式为：<code>{&quot;title&quot;:&quot;小女神的设计师之路&quot;,&quot;brief&quot;:&quot;XXXXXX&quot;}</code>.</li>\n<li>4，表示娱乐圈。<code>config</code>可配置,格式为：<br><code>{&quot;alt&quot;:&quot;图片描述信息&quot;}</code>。</li>\n<li>5，表示新闻配置。’config’需要配置,格式为:<code>{&quot;title&quot;:&quot;测试1&quot;，&quot;from&quot;:&quot;深圳日报&quot;,&quot;create_time&quot;:&quot;2015-10-11&quot;}</code>。</li>\n</ul>\n<h2 id=\"oc-special-room\"><a href=\"#oc-special-room\" class=\"headerlink\" title=\"oc_special_room\"></a>oc_special_room</h2><p>特价房</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td>PK of oc_room</td>\n<td></td>\n</tr>\n<tr>\n<td>old_price</td>\n<td>float</td>\n<td></td>\n<td>原来价格</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-boundary\"><a href=\"#oc-boundary\" class=\"headerlink\" title=\"oc_boundary\"></a>oc_boundary</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>center_lat</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上中心纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>center_lng</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上中心经度</td>\n<td></td>\n</tr>\n<tr>\n<td>sw_lat</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上西南角纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>sw_lng</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上西南角经度</td>\n<td></td>\n</tr>\n<tr>\n<td>ne_lat</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图东北角纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>ne_lng</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图东北角经度</td>\n<td></td>\n</tr>\n<tr>\n<td>show_zoom</td>\n<td>int</td>\n<td></td>\n<td>地图显示时级别</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary</td>\n<td>text</td>\n<td></td>\n<td>json格式数据</td>\n<td></td>\n</tr>\n<tr>\n<td>show_name</td>\n<td>varchar(64)</td>\n<td></td>\n<td>地图显示(如:南山区)</td>\n<td></td>\n</tr>\n<tr>\n<td>grade</td>\n<td>int</td>\n<td></td>\n<td>级别(小区/商圈/区域/市)</td>\n<td></td>\n</tr>\n<tr>\n<td>hide</td>\n<td>int</td>\n<td></td>\n<td>是否在地图上隐藏(默认0)</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_desc</td>\n<td>varchar(512)</td>\n<td></td>\n<td>位置描述信息</td>\n</tr>\n</tbody>\n</table>\n<p><code>boundary</code>:</p>\n<ul>\n<li>该区域所表示的范围,由多组经纬度坐标围成的一个区域,为json数据字符串组成.</li>\n<li>格式如下:<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"main\"</span>:[</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.96189\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.550857\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.961921\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.5488\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.962195\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.547987\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.964019\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.548375\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.964234\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.550515\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.964329\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.551041\"</span>&#125;</div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"attr\">\"center\"</span>:[&#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.96189\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.550857\"</span>&#125;]&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><code>grade</code>:</p>\n<ul>\n<li>1:小区(如:大冲城市花园)</li>\n<li>2:商圈(如:科技园)</li>\n<li>3:区域(如:南山区)</li>\n<li>4:市(如:深圳市)</li>\n<li>5:地铁站（如:世界之窗）</li>\n</ul>\n<h2 id=\"oc-user-question\"><a href=\"#oc-user-question\" class=\"headerlink\" title=\"oc_user_question\"></a>oc_user_question</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>question</td>\n<td>varchar(256)</td>\n<td></td>\n<td>提问问题</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>answer</td>\n<td>text</td>\n<td></td>\n<td>答案</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>thumbs_up</td>\n<td>int</td>\n<td></td>\n<td>点赞数量</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>device_type</td>\n<td>varchar(32)</td>\n<td></td>\n<td>提问时设备类型</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>hide</td>\n<td>int</td>\n<td></td>\n<td>是否显示</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>哪个房间提问</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-question-of-room\"><a href=\"#oc-question-of-room\" class=\"headerlink\" title=\"oc_question_of_room\"></a>oc_question_of_room</h2><p><code>room</code>和<code>question</code>的映射关系。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>房间id</td>\n<td></td>\n</tr>\n<tr>\n<td>question_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user_question.id</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-question-of-house\"><a href=\"#oc-question-of-house\" class=\"headerlink\" title=\"oc_question_of_house\"></a>oc_question_of_house</h2><h2 id=\"oc-question-of-community\"><a href=\"#oc-question-of-community\" class=\"headerlink\" title=\"oc_question_of_community\"></a>oc_question_of_community</h2><p>结构跟<code>oc_question_of_room</code>类似</p>\n<h2 id=\"oc-life-service\"><a href=\"#oc-life-service\" class=\"headerlink\" title=\"oc_life_service\"></a>oc_life_service</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>service_icon_url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>icon的oss地址</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>service_name</td>\n<td>varchar(128)</td>\n<td></td>\n<td>服务场地名字</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>line_icon_url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>路线icon地址</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>line_desc</td>\n<td>text</td>\n<td></td>\n<td>路线描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>longtitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>经度</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>纬度</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>service_type</td>\n<td>int</td>\n<td></td>\n<td>服务类型</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>service_type: 未定义(0), 购物(1), 美食(2), 运动(3), 娱乐(4)</li>\n</ul>\n<h2 id=\"oc-life-service-of-community\"><a href=\"#oc-life-service-of-community\" class=\"headerlink\" title=\"oc_life_service_of_community\"></a>oc_life_service_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>小区id</td>\n<td></td>\n</tr>\n<tr>\n<td>life_service_id</td>\n<td>int</td>\n<td></td>\n<td>oc_life_service.id</td>\n<td></td>\n</tr>\n<tr>\n<td>hide</td>\n<td>int</td>\n<td></td>\n<td>是否显示</td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>hide: 显示(0), 隐藏(1)</li>\n</ul>\n<h2 id=\"oc-user-destination\"><a href=\"#oc-user-destination\" class=\"headerlink\" title=\"oc_user_destination\"></a>oc_user_destination</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>dest_name</td>\n<td>varchar(64)</td>\n<td></td>\n<td>目的地</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-hobby\"><a href=\"#oc-hobby\" class=\"headerlink\" title=\"oc_hobby\"></a>oc_hobby</h2><p>爱好</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(32)</td>\n<td></td>\n<td>名字</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>爱好描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>parent_hobby_id</td>\n<td>int</td>\n<td>PK of oc_hobby</td>\n<td>所属爱好</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>display</td>\n<td>int</td>\n<td>0-1</td>\n<td>显示在筛选</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>serial_num: 值小的在最前面</li>\n</ul>\n<h2 id=\"oc-hobby-of-user\"><a href=\"#oc-hobby-of-user\" class=\"headerlink\" title=\"oc_hobby_of_user\"></a>oc_hobby_of_user</h2><p>用户爱好</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>hobby_id</td>\n<td>int</td>\n<td></td>\n<td>oc_hobby.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>grade</td>\n<td>varchar(16)</td>\n<td></td>\n<td>hobby级别描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-house-layout\"><a href=\"#oc-house-layout\" class=\"headerlink\" title=\"oc_house_layout\"></a>oc_house_layout</h2><p>代表一种户型图</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>varchar(64)</td>\n<td></td>\n<td>户型图oss地址</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>layout_desc</td>\n<td>varchar(64)</td>\n<td></td>\n<td>户型图描述信息</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-slice\"><a href=\"#oc-slice\" class=\"headerlink\" title=\"oc_slice\"></a>oc_slice</h2><p>代表一片区域，一个大厅可以由多个slice组成，一个房间也可以由多个slice组成.</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>boundary</td>\n<td>text</td>\n<td></td>\n<td>json数据格式</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>slice_desc</td>\n<td>varchar(64)</td>\n<td></td>\n<td>slice描述信息</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_layout_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house_layout.id</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>boundary</code>:</p>\n<ul>\n<li>该区域所表示的范围,由多组像素坐标围成的一个区域,相对坐标点为左下角坐标,为json数据字符串组成，编辑需要按照区域顺序填写，切忌不能跳跃填写．</li>\n<li>格式如下:<br>[{“pointX”:”162”,”pointY”:”60”},{“pointX”:”162”,”pointY”:”290”},{“pointX”:”367”,”pointY”:”60”},{“pointX”:”367”,”pointY”:”288”}]</li>\n</ul>\n<p><code>slice_desc</code>:</p>\n<ul>\n<li>命名规则:户型图名字／地址＋区域介绍</li>\n</ul>\n<h2 id=\"oc-slice-of-scene\"><a href=\"#oc-slice-of-scene\" class=\"headerlink\" title=\"oc_slice_of_scene\"></a>oc_slice_of_scene</h2><p>一个场景信息</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>scene_name</td>\n<td>varchar(128)</td>\n<td></td>\n<td>场景命名</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>slice_id</td>\n<td>int</td>\n<td></td>\n<td>oc_slice.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_img_id</td>\n<td>int</td>\n<td></td>\n<td>oc_image_of_house.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>comm_id</td>\n<td>int</td>\n<td></td>\n<td>oc_community.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>point_x</td>\n<td>int</td>\n<td></td>\n<td>该场景的摄影点x坐标</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>point_y</td>\n<td>int</td>\n<td></td>\n<td>摄影点y坐标</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>v_degree</td>\n<td>int</td>\n<td></td>\n<td>度数（正北顺时度数）</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>slice_id</code>:(非必须)</p>\n<ul>\n<li>户型图中某个区域<br><code>house_img_id</code>:(非必须)</li>\n<li>每个场景需要和套房的哪个户型图关联．（考虑到复式楼）<br><code>comm_id</code>:(非必须)</li>\n<li>小区场景,如果该场景名字属于小区场景名,需要配置该项<br><code>room_id</code>:(非必须)<br>*　这个场景对应的房间id，如果不是room则不用填写</li>\n</ul>\n<h2 id=\"oc-expense-fee\"><a href=\"#oc-expense-fee\" class=\"headerlink\" title=\"oc_expense_fee\"></a>oc_expense_fee</h2><p>公司支出费用，目前包括（中介推荐费\\租客推荐费\\非租客推荐费\\活动返现）<br>注：推荐费是在成功签订合同后，公司支出的。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>fee_type</td>\n<td>int</td>\n<td></td>\n<td>费用类型</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td>支出金额(大于0)</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pay_time</td>\n<td>date</td>\n<td></td>\n<td>付款时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>payee</td>\n<td>varchar(32)</td>\n<td></td>\n<td>收款人</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pay_desc</td>\n<td>varchar(128)</td>\n<td></td>\n<td>付款详细描述信息</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_bill.id</td>\n<td>推荐费必填</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house.id</td>\n<td>维修必填</td>\n</tr>\n</tbody>\n</table>\n<p><code>fee_type</code>:</p>\n<ul>\n<li>0:未选择</li>\n<li>1:中介推荐费</li>\n<li>2:租客推荐费</li>\n<li>3:朋友推荐费(非租客/非中介)</li>\n<li>4:活动返现费</li>\n<li>5:维修费支出</li>\n</ul>\n<h2 id=\"oc-back-rent-reason\"><a href=\"#oc-back-rent-reason\" class=\"headerlink\" title=\"oc_back_rent_reason\"></a>oc_back_rent_reason</h2><p>退租原因</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(128)</td>\n<td></td>\n<td>退租原因</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-back-rent\"><a href=\"#oc-back-rent\" class=\"headerlink\" title=\"oc_back_rent\"></a>oc_back_rent</h2><p>退租列表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>reason_id</td>\n<td>int</td>\n<td></td>\n<td>oc_back_rent_reason.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_bill.id退租前合同</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>back_rent_time</td>\n<td>date</td>\n<td></td>\n<td>退租时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td></td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<p>Status: public<br>description: COLOR公寓后台系统，数据库设计<br>title: COLOR公寓数据库设计<br>tags: mysql,db,rdb,color</p>\n<h1 id=\"数据库文档\"><a href=\"#数据库文档\" class=\"headerlink\" title=\"数据库文档\"></a>数据库文档</h1><blockquote>\n<p>oc为opencart的简称，所有数据库表格均以oc_开头。</p>\n</blockquote>\n<h2 id=\"oc-room\"><a href=\"#oc-room\" class=\"headerlink\" title=\"oc_room\"></a>oc_room</h2><p><code>room</code>代表一个单间. 每个<code>room</code>必须属于某个<code>house</code>。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>属于哪个house</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar</td>\n<td></td>\n<td>房间名称</td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>float</td>\n<td></td>\n<td>房间价格，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>area</td>\n<td>int</td>\n<td></td>\n<td>面积</td>\n<td></td>\n</tr>\n<tr>\n<td>orientation</td>\n<td>tinyint</td>\n<td>0,1,2,3,4</td>\n<td>未编辑，东西南北</td>\n<td></td>\n</tr>\n<tr>\n<td>style_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_room_style</td>\n<td></td>\n</tr>\n<tr>\n<td>slogan</td>\n<td>text</td>\n<td></td>\n<td>slogan</td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td>影响排序规则，允许负值</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td>服务此房间的管家</td>\n<td></td>\n</tr>\n<tr>\n<td>number</td>\n<td>tinyint u</td>\n<td>[0~max)</td>\n<td>在大房间内的序号</td>\n<td></td>\n</tr>\n<tr>\n<td>has_lav</td>\n<td>tinyint</td>\n<td></td>\n<td>有独立卫生间</td>\n<td></td>\n</tr>\n<tr>\n<td>has_balcony</td>\n<td>tinyint</td>\n<td></td>\n<td>有私人阳台</td>\n<td></td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>tinyint</td>\n<td></td>\n<td>强制隐藏此房间</td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td>上次更改</td>\n<td></td>\n</tr>\n<tr>\n<td>ceate_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建日期</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>date</td>\n<td></td>\n<td>预计上线时间</td>\n<td></td>\n</tr>\n<tr>\n<td>privilidge</td>\n<td>bigint u</td>\n<td></td>\n<td>权限禁止管理</td>\n<td></td>\n</tr>\n<tr>\n<td>second_weight</td>\n<td>int</td>\n<td></td>\n<td>智能排序规则,每天定时更新</td>\n<td></td>\n</tr>\n<tr>\n<td>room_type</td>\n<td>varchar(256)</td>\n<td></td>\n<td>房间类型</td>\n</tr>\n</tbody>\n</table>\n<p>privilidge每个位的含义：</p>\n<ul>\n<li>0: 禁止邀请其他人</li>\n<li>1: 禁止被邀请</li>\n</ul>\n<p>state:  </p>\n<ul>\n<li>0：初始状态</li>\n<li>9：预上线</li>\n<li>10：已上线</li>\n<li>11：已预订</li>\n<li>12：已租出</li>\n</ul>\n<p>detail:<br>编辑员对房间的描述。示例如下：”[]“括起来的是标题，剩下的是内容。</p>\n<blockquote>\n<p>[主卧带卫生间，超大阳台，超值空间]<br>周边：人大附中朝阳学校芍药居分校：包括人大附小，初中，高中部。另被 对外经贸大学、北京服装学院、现代文学馆所环绕，周边医院有著名的中日 友好医院！银行，超市等配套设施齐全，毗邻元大都遗址公园。<br>交通：您想每天睡到自然醒么，距离地铁芍药居站步行（地铁10号线和13 号线交汇）只需2分钟，公交119路; 547路; 942快; 专22路步行只需5分 钟，多么舒适多么快捷！快拿起电话拨号吧！<br>价格：正规主卧，朝南向，带阳台，距离地铁站仅需2分钟的超便利位置， 超高性价比。</p>\n</blockquote>\n<ul>\n<li>room_type: varchar定义规则: 小区名字+房间序号+卧室个数+大厅个数+价格<br>(拼接的字符串相同则认为同一类房源)</li>\n</ul>\n<h2 id=\"oc-house\"><a href=\"#oc-house\" class=\"headerlink\" title=\"oc_house\"></a>oc_house</h2><p><code>house</code>代表一套房子，比如一套三室一厅。<code>house</code>必须属于某个<code>district</code>.</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>floor</td>\n<td>u smallint</td>\n<td></td>\n<td>楼层</td>\n<td></td>\n</tr>\n<tr>\n<td>building_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_buiding</td>\n<td></td>\n</tr>\n<tr>\n<td>area</td>\n<td>u smallint</td>\n<td></td>\n<td>面积</td>\n<td></td>\n</tr>\n<tr>\n<td>room_count</td>\n<td>u tinyint</td>\n<td></td>\n<td>卧室个数</td>\n<td></td>\n</tr>\n<tr>\n<td>holl_count</td>\n<td>u tinyint</td>\n<td></td>\n<td>厅个数</td>\n<td></td>\n</tr>\n<tr>\n<td>lav_count</td>\n<td>u tinyint</td>\n<td></td>\n<td>卫生间个数</td>\n<td></td>\n</tr>\n<tr>\n<td>total_floor</td>\n<td>u smallint</td>\n<td></td>\n<td>总楼层</td>\n<td></td>\n</tr>\n<tr>\n<td>building_name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>大楼名称</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_community</td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n<td></td>\n</tr>\n<tr>\n<td>building_postion_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint u</td>\n<td></td>\n<td>状态</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_key</td>\n<td>varchar(16)</td>\n<td></td>\n<td>电费合同账号</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_key</td>\n<td>varchar(16)</td>\n<td></td>\n<td>燃气费客户编码</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td>服务此房间的管家</td>\n</tr>\n</tbody>\n</table>\n<p>state:(装修状态)  </p>\n<ul>\n<li>0：初始状态</li>\n<li>1：已签约</li>\n<li>2：已测量</li>\n<li>3：已装修完毕</li>\n<li>4：采购订单已发出</li>\n<li>5：家具设备已签收和验货</li>\n<li>6：家具已安装</li>\n<li>7：已清洁</li>\n<li>8：已拍摄</li>\n<li>9：已完成</li>\n</ul>\n<h2 id=\"oc-building\"><a href=\"#oc-building\" class=\"headerlink\" title=\"oc_building\"></a>oc_building</h2><p><code>building</code>代表一栋楼。一个<code>building</code>对应一个唯一的地理位置（经纬度）。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>所属小区</td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-community\"><a href=\"#oc-community\" class=\"headerlink\" title=\"oc_community\"></a>oc_community</h2><p>代表一个小区，一个小区一有<strong>唯一</strong>的街道号码。若XX小区分为3期，每期的街道号不同，则视为三个不同小区。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(40)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_position</td>\n<td></td>\n</tr>\n<tr>\n<td>position_desc</td>\n<td>varchar(40)</td>\n<td></td>\n<td>地理位置的自定义描述</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-position\"><a href=\"#oc-position\" class=\"headerlink\" title=\"oc_position\"></a>oc_position</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>province</td>\n<td>varchar(8)</td>\n<td></td>\n<td>省份</td>\n<td></td>\n</tr>\n<tr>\n<td>city</td>\n<td>varchar(8)</td>\n<td></td>\n<td>城市</td>\n<td></td>\n</tr>\n<tr>\n<td>district</td>\n<td>varchar(8)</td>\n<td></td>\n<td>区</td>\n<td></td>\n</tr>\n<tr>\n<td>street</td>\n<td>varchar(16)</td>\n<td></td>\n<td>街道名</td>\n<td></td>\n</tr>\n<tr>\n<td>street_number</td>\n<td>int(12)</td>\n<td></td>\n<td>街道号码</td>\n<td></td>\n</tr>\n<tr>\n<td>longtitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>经度</td>\n<td></td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>custom_desc</td>\n<td>text</td>\n<td></td>\n<td>自定义描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-renter-bill\"><a href=\"#oc-renter-bill\" class=\"headerlink\" title=\"oc_renter_bill\"></a>oc_renter_bill</h2><p>代表一个实际发生的订单，租客与迈芒的订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>room id</td>\n<td></td>\n</tr>\n<tr>\n<td>start_time</td>\n<td>date</td>\n<td></td>\n<td>合同开始时间</td>\n<td></td>\n</tr>\n<tr>\n<td>expect_end_time</td>\n<td>date</td>\n<td></td>\n<td>合同结束时间</td>\n<td></td>\n</tr>\n<tr>\n<td>real_end_time</td>\n<td>date</td>\n<td></td>\n<td>实际结束合同的时间</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>标价，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>real_price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>实际价格，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>int unsigned</td>\n<td></td>\n<td>押金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>pay_cycle_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td>0,1,2,3</td>\n<td>见注释</td>\n<td></td>\n</tr>\n<tr>\n<td>month_paid</td>\n<td>tinyint</td>\n<td></td>\n<td>已付清月数</td>\n<td></td>\n</tr>\n<tr>\n<td>service_fee</td>\n<td>int unsigned</td>\n<td></td>\n<td>服务费，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>reduce</td>\n<td>int</td>\n<td></td>\n<td>减少金额</td>\n<td></td>\n</tr>\n<tr>\n<td>reduce_reason</td>\n<td>varchar(32)</td>\n<td></td>\n<td>减少金额原因</td>\n</tr>\n</tbody>\n</table>\n<p>state:</p>\n<ul>\n<li>0:未生效</li>\n<li>1:已生效</li>\n<li>2:已取消</li>\n<li>3:已完成</li>\n</ul>\n<h2 id=\"oc-renter-bill-payment-废弃\"><a href=\"#oc-renter-bill-payment-废弃\" class=\"headerlink\" title=\"oc_renter_bill_payment(废弃)\"></a>oc_renter_bill_payment(废弃)</h2><p>租金支付</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_bill.id</td>\n<td></td>\n</tr>\n<tr>\n<td>month</td>\n<td>tinyint</td>\n<td></td>\n<td>月数</td>\n<td></td>\n</tr>\n<tr>\n<td>for_month</td>\n<td>tinyint</td>\n<td></td>\n<td>付了几个月的钱</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>int</td>\n<td></td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>int</td>\n<td></td>\n<td>金额</td>\n<td></td>\n</tr>\n<tr>\n<td>coupon_id</td>\n<td>int</td>\n<td></td>\n<td>oc_coupon.id</td>\n<td></td>\n</tr>\n<tr>\n<td>payment_id</td>\n<td>int</td>\n<td></td>\n<td>oc_payment.id</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<ul>\n<li>1:支付押金（count为负数时表示退换押金）</li>\n<li>2:支付房租</li>\n<li>4:支付服务费</li>\n<li>8:用优惠券抵扣房租。</li>\n<li>6: 支付房租和服务费。</li>\n</ul>\n<h2 id=\"oc-landlord-bill-payment\"><a href=\"#oc-landlord-bill-payment\" class=\"headerlink\" title=\"oc_landlord_bill_payment\"></a>oc_landlord_bill_payment</h2><p>房东租金支付</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_landlord_bill.id</td>\n<td></td>\n</tr>\n<tr>\n<td>month</td>\n<td>tinyint</td>\n<td></td>\n<td>月数</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>int</td>\n<td></td>\n<td>见下注释</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>int</td>\n<td></td>\n<td>金额</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<ul>\n<li>0:支付押金（count为负数时表示退换押金）</li>\n<li>1:支付房租</li>\n</ul>\n<h2 id=\"oc-landlord-bill\"><a href=\"#oc-landlord-bill\" class=\"headerlink\" title=\"oc_landlord_bill\"></a>oc_landlord_bill</h2><p>代表一个实际发生的订单，房主与迈芒的订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>start_time</td>\n<td>date</td>\n<td></td>\n<td>合同开始时间</td>\n<td></td>\n</tr>\n<tr>\n<td>expect_end_time</td>\n<td>date</td>\n<td></td>\n<td>合同结束时间</td>\n<td></td>\n</tr>\n<tr>\n<td>real_end_time</td>\n<td>date</td>\n<td></td>\n<td>实际结束合同的时间</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>标价，元/月</td>\n<td></td>\n</tr>\n<tr>\n<td>pay_cycle_id</td>\n<td>int</td>\n<td></td>\n<td>PK of oc_pay_cycle</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>客户 id</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>int unsigned</td>\n<td></td>\n<td>押金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td>0,1,2,3</td>\n<td>见注释</td>\n<td></td>\n</tr>\n<tr>\n<td>property_fee</td>\n<td>float</td>\n<td></td>\n<td>物业费(元/月)</td>\n<td></td>\n</tr>\n<tr>\n<td>agency_fee</td>\n<td>float</td>\n<td></td>\n<td>中介费</td>\n<td></td>\n</tr>\n<tr>\n<td>agency_fee</td>\n<td>float</td>\n<td></td>\n<td>中介费</td>\n</tr>\n</tbody>\n</table>\n<p>备注：  </p>\n<ul>\n<li>正常情况<code>expect_end_time=real_end_time</code>,当用户提前终止合约的时候，两个时间不等。</li>\n</ul>\n<p>state:</p>\n<ul>\n<li>0:未生效</li>\n<li>1:已生效</li>\n<li>2:已取消</li>\n<li>3:已完成</li>\n</ul>\n<h2 id=\"oc-job\"><a href=\"#oc-job\" class=\"headerlink\" title=\"oc_job\"></a>oc_job</h2><p>客户职业</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>职业名称</td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>职业描述</td>\n<td></td>\n</tr>\n<tr>\n<td>parent_job_id</td>\n<td>int</td>\n<td>PK of oc_job</td>\n<td>所属职业</td>\n<td></td>\n</tr>\n<tr>\n<td>ver_job</td>\n<td>int</td>\n<td></td>\n<td>使用版本</td>\n</tr>\n</tbody>\n</table>\n<p>ver_job:</p>\n<ul>\n<li>0:初始化 （老版本使用）</li>\n<li>1:2015-11-30整理job分类后使用版本 (新版本)</li>\n</ul>\n<h2 id=\"oc-user\"><a href=\"#oc-user\" class=\"headerlink\" title=\"oc_user\"></a>oc_user</h2><p>客户账号。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>email</td>\n<td>varchar(50)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>full_name</td>\n<td>varchar(32)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>icon</td>\n<td>text</td>\n<td></td>\n<td>头像地址</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_img</td>\n<td>text</td>\n<td></td>\n<td>身份证照片</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_number</td>\n<td>varchar(20)</td>\n<td></td>\n<td>身份证号码</td>\n<td></td>\n</tr>\n<tr>\n<td>user_type</td>\n<td>tinyint</td>\n<td>0,1,2</td>\n<td>租客,房主,都是</td>\n<td></td>\n</tr>\n<tr>\n<td>verified</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>未实名认证,已认证</td>\n<td></td>\n</tr>\n<tr>\n<td>gender</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>女，男</td>\n<td></td>\n</tr>\n<tr>\n<td>birthday</td>\n<td>date</td>\n<td></td>\n<td>生日</td>\n<td></td>\n</tr>\n<tr>\n<td>job_id</td>\n<td>int</td>\n<td>PK(oc_job)</td>\n<td>职业</td>\n<td></td>\n</tr>\n<tr>\n<td>pwd_hash</td>\n<td>varchar(255)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pwd_reset_token</td>\n<td>varchar(255)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>auth_key</td>\n<td>varchar(32)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td>10,0</td>\n<td>激活,未激活</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bank_card</td>\n<td>varchar(24)</td>\n<td></td>\n<td>银行卡</td>\n<td></td>\n</tr>\n<tr>\n<td>bank_name</td>\n<td>varchar(20)</td>\n<td></td>\n<td>银行名称</td>\n<td></td>\n</tr>\n<tr>\n<td>bank_of_deposit</td>\n<td>varchar(20)</td>\n<td></td>\n<td>开户行</td>\n<td></td>\n</tr>\n<tr>\n<td>hobby</td>\n<td>varchar(30)</td>\n<td></td>\n<td>爱好</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>invite_code</td>\n<td>char(6)</td>\n<td></td>\n<td>邀请码</td>\n<td></td>\n</tr>\n<tr>\n<td>invite_by_user_id</td>\n<td>int</td>\n<td></td>\n<td>邀请人</td>\n<td></td>\n</tr>\n<tr>\n<td>invitee_awarded</td>\n<td>tinyint</td>\n<td></td>\n<td>邀请人已奖励</td>\n<td></td>\n</tr>\n<tr>\n<td>say</td>\n<td>varchar(256)</td>\n<td></td>\n<td>用户say</td>\n</tr>\n</tbody>\n</table>\n<p>detail:</p>\n<ul>\n<li>state: 默认/系统生成（0），用户激活（1）</li>\n</ul>\n<h2 id=\"oc-keyword\"><a href=\"#oc-keyword\" class=\"headerlink\" title=\"oc_keyword\"></a>oc_keyword</h2><p>代表一个关键字。e.g. 南北通透、朝南、落地窗、大床、安静、核心商圈</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td>10 chars</td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>display</td>\n<td>int</td>\n<td>0-1</td>\n<td>是否显示</td>\n<td></td>\n</tr>\n<tr>\n<td>key_type</td>\n<td>int</td>\n<td></td>\n<td>关键字类型</td>\n<td></td>\n</tr>\n<tr>\n<td>key_desc</td>\n<td>text</td>\n<td></td>\n<td>关键字描述信息</td>\n<td></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>icon的oss地址</td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>display: 房屋筛选里不展示(0), 展示(1)</li>\n<li>key_type: 未分配(0,老版本使用), 特色配置(1), 其它配置(2)</li>\n<li>serial_num: 值小的在最前面</li>\n</ul>\n<h2 id=\"oc-keyword-of-room\"><a href=\"#oc-keyword-of-room\" class=\"headerlink\" title=\"oc_keyword_of_room\"></a>oc_keyword_of_room</h2><p><code>room</code>和<code>keyword</code>的映射关系。每一行表示某个<code>room</code>被添加了某个<code>keyword</code>。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>房间id</td>\n<td></td>\n</tr>\n<tr>\n<td>keyword_id</td>\n<td>int</td>\n<td></td>\n<td>关键字</td>\n<td></td>\n</tr>\n<tr>\n<td>display_detail</td>\n<td>int</td>\n<td></td>\n<td>是否显示在详情页</td>\n<td></td>\n</tr>\n<tr>\n<td>display_widget</td>\n<td>int</td>\n<td></td>\n<td>是否显示在点击查看小窗口</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>display_detail: 不展示(0), 展示(1)</li>\n<li>display_widget: 不展示(0), 展示(1)</li>\n</ul>\n<h2 id=\"oc-keyword-of-house\"><a href=\"#oc-keyword-of-house\" class=\"headerlink\" title=\"oc_keyword_of_house\"></a>oc_keyword_of_house</h2><h2 id=\"oc-keyword-of-community\"><a href=\"#oc-keyword-of-community\" class=\"headerlink\" title=\"oc_keyword_of_community\"></a>oc_keyword_of_community</h2><p>结构跟<code>oc_keyword_of_room</code>类似</p>\n<h2 id=\"oc-room-style\"><a href=\"#oc-room-style\" class=\"headerlink\" title=\"oc_room_style\"></a>oc_room_style</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>风格名称</td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>风格描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-butler\"><a href=\"#oc-butler\" class=\"headerlink\" title=\"oc_butler\"></a>oc_butler</h2><p>管家。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>full_name</td>\n<td>varchar(10)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nick_name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>昵称</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_img</td>\n<td>text</td>\n<td></td>\n<td>身份证照片</td>\n<td></td>\n</tr>\n<tr>\n<td>identify_card_number</td>\n<td>varchar(20)</td>\n<td></td>\n<td>身份证号码</td>\n<td></td>\n</tr>\n<tr>\n<td>pwd</td>\n<td>varchar(32)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>tel</td>\n<td>varchar(20)</td>\n<td></td>\n<td>分机电话</td>\n<td></td>\n</tr>\n<tr>\n<td>custom_desc</td>\n<td>text</td>\n<td></td>\n<td>自定义描述</td>\n<td></td>\n</tr>\n<tr>\n<td>gender</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>女，男</td>\n<td></td>\n</tr>\n<tr>\n<td>icon</td>\n<td>text</td>\n<td></td>\n<td>头像地址</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-bulter-and-room\"><a href=\"#oc-bulter-and-room\" class=\"headerlink\" title=\"oc_bulter_and_room\"></a>oc_bulter_and_room</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bulter_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-image-of-room\"><a href=\"#oc-image-of-room\" class=\"headerlink\" title=\"oc_image_of_room\"></a>oc_image_of_room</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>text</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下定义</td>\n<td></td>\n</tr>\n<tr>\n<td>room_desc</td>\n<td>text</td>\n<td></td>\n<td>图片描述</td>\n</tr>\n</tbody>\n</table>\n<p><code>type</code>:</p>\n<ul>\n<li>0：未编辑</li>\n<li>1：高清大图</li>\n<li>2：列表封面</li>\n<li>3：三维</li>\n<li>4：户型图(无效,户型图和house绑定,参照oc_house_type)</li>\n<li>5：普通</li>\n<li>6：竖图</li>\n</ul>\n<h2 id=\"oc-image-of-house\"><a href=\"#oc-image-of-house\" class=\"headerlink\" title=\"oc_image_of_house\"></a>oc_image_of_house</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>text</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_desc</td>\n<td>text</td>\n<td></td>\n<td>公用图片描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>floor</td>\n<td>int</td>\n<td></td>\n<td>复式房第几层</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_layout_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house_layout.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下定义</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>floor</code>: 默认为１，当type为４户型图时，需要配置</p>\n<h2 id=\"oc-image-of-community\"><a href=\"#oc-image-of-community\" class=\"headerlink\" title=\"oc_image_of_community\"></a>oc_image_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>oc_community.id</td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>text</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td>0~5</td>\n<td>见下定义</td>\n<td></td>\n</tr>\n<tr>\n<td>comm_desc</td>\n<td>text</td>\n<td></td>\n<td>小区图片描述</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-image-of-room-style\"><a href=\"#oc-image-of-room-style\" class=\"headerlink\" title=\"oc_image_of_room_style\"></a>oc_image_of_room_style</h2><p>（表格结构跟<code>oc_image_of_room</code>基本一样，在此略）</p>\n<h2 id=\"oc-district\"><a href=\"#oc-district\" class=\"headerlink\" title=\"oc_district\"></a>oc_district</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(8)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>city</td>\n<td>varchar(8)</td>\n<td></td>\n<td>城市</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>enable</td>\n<td>boolean</td>\n<td>0-1</td>\n<td>是否网站上显示</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td>列表显示顺序</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>enable</code>:</p>\n<ul>\n<li>0：不显示</li>\n<li>1：显示</li>\n</ul>\n<h2 id=\"oc-circle\"><a href=\"#oc-circle\" class=\"headerlink\" title=\"oc_circle\"></a>oc_circle</h2><p>商圈。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>district_id</td>\n<td>int</td>\n<td></td>\n<td>oc_district.id</td>\n<td></td>\n</tr>\n<tr>\n<td>enable</td>\n<td>boolean</td>\n<td>0-1</td>\n<td>是否网站上显示</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n</tr>\n</tbody>\n</table>\n<p><code>enable</code>:</p>\n<ul>\n<li>0：不显示</li>\n<li>1：显示</li>\n</ul>\n<h2 id=\"oc-circle-of-community\"><a href=\"#oc-circle-of-community\" class=\"headerlink\" title=\"oc_circle_of_community\"></a>oc_circle_of_community</h2><p>小区所属商圈。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>circle_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-line\"><a href=\"#oc-subway-line\" class=\"headerlink\" title=\"oc_subway_line\"></a>oc_subway_line</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>number</td>\n<td>tinyint</td>\n<td></td>\n<td>线路号</td>\n<td></td>\n</tr>\n<tr>\n<td>station_count</td>\n<td>tinyint</td>\n<td></td>\n<td>总共站数量</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-station\"><a href=\"#oc-subway-station\" class=\"headerlink\" title=\"oc_subway_station\"></a>oc_subway_station</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(10)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>position_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>enable</td>\n<td>boolean</td>\n<td>0-1</td>\n<td>是否网站上显示</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_id</td>\n<td>int</td>\n<td></td>\n<td>oc_boundary.id</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-station-of-line\"><a href=\"#oc-subway-station-of-line\" class=\"headerlink\" title=\"oc_subway_station_of_line\"></a>oc_subway_station_of_line</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_line_id</td>\n<td>int</td>\n<td></td>\n<td>线路id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_station_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>sequence</td>\n<td>int</td>\n<td>1~N</td>\n<td>是线路的第几站</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-line-of-community\"><a href=\"#oc-subway-line-of-community\" class=\"headerlink\" title=\"oc_subway_line_of_community\"></a>oc_subway_line_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_line_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-subway-station-of-community\"><a href=\"#oc-subway-station-of-community\" class=\"headerlink\" title=\"oc_subway_station_of_community\"></a>oc_subway_station_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>subway_station_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-price-range\"><a href=\"#oc-price-range\" class=\"headerlink\" title=\"oc_price_range\"></a>oc_price_range</h2><p>选购房屋时，列出的价格区间选项。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>low</td>\n<td>int</td>\n<td></td>\n<td>最低价格</td>\n<td></td>\n</tr>\n<tr>\n<td>high</td>\n<td>int</td>\n<td></td>\n<td>最高价格</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-pay-cycle\"><a href=\"#oc-pay-cycle\" class=\"headerlink\" title=\"oc_pay_cycle\"></a>oc_pay_cycle</h2><p>付款周期</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>discount</td>\n<td>float</td>\n<td>0~1</td>\n<td>折扣数</td>\n<td></td>\n</tr>\n<tr>\n<td>cycle</td>\n<td>tinyint</td>\n<td>3,6,12,24</td>\n<td>多少月付款一次</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-mobile-validate\"><a href=\"#oc-mobile-validate\" class=\"headerlink\" title=\"oc_mobile_validate\"></a>oc_mobile_validate</h2><p>待验证的短信验证码</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(16)</td>\n<td></td>\n<td>手机号</td>\n<td></td>\n</tr>\n<tr>\n<td>code</td>\n<td>varchar(4)</td>\n<td></td>\n<td>验证码</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建于XX时刻</td>\n<td></td>\n</tr>\n<tr>\n<td>ip</td>\n<td>varchar(16)</td>\n<td></td>\n<td>IP</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td>解释见下</td>\n<td></td>\n</tr>\n<tr>\n<td>used</td>\n<td>tinyint</td>\n<td></td>\n<td>是否已经使用了</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<p>0: 预定房间<br>1: 注册账号<br>3：找回密码</p>\n<h2 id=\"oc-schedule-bill\"><a href=\"#oc-schedule-bill\" class=\"headerlink\" title=\"oc_schedule_bill\"></a>oc_schedule_bill</h2><p>客户预定订单</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(16)</td>\n<td></td>\n<td>手机号</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(6)</td>\n<td></td>\n<td>姓名</td>\n<td></td>\n</tr>\n<tr>\n<td>job</td>\n<td>varchar(10)</td>\n<td></td>\n<td>职业</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-bill-subscriber\"><a href=\"#oc-bill-subscriber\" class=\"headerlink\" title=\"oc_bill_subscriber\"></a>oc_bill_subscriber</h2><p>订单订阅者</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(6)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(16)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>email</td>\n<td>varchar(40)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td>0,1</td>\n<td>0:激活，1:屏蔽</td>\n<td></td>\n</tr>\n<tr>\n<td>trigger_event</td>\n<td>tinyint</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>trigger_event：预定房间（0），保洁（1），维修（2）。</li>\n</ul>\n<h2 id=\"oc-cash-flow\"><a href=\"#oc-cash-flow\" class=\"headerlink\" title=\"oc_cash_flow\"></a>oc_cash_flow</h2><p>公司现金流量表。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_type</td>\n<td>tinyint unsigned</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>订单号</td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td>实际收入金额，负数表示支出</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n</tr>\n</tbody>\n</table>\n<p>解释：</p>\n<ul>\n<li>bill_type: 租入(0),租出(1),家具(2),装修(3)</li>\n</ul>\n<h2 id=\"oc-furniture\"><a href=\"#oc-furniture\" class=\"headerlink\" title=\"oc_furniture\"></a>oc_furniture</h2><p>家具定义表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(40)</td>\n<td></td>\n<td>一款物品有唯一的名称</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint unsigned</td>\n<td></td>\n<td>家具类型</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n</tr>\n</tbody>\n</table>\n<p>type:</p>\n<ul>\n<li>0：未知</li>\n<li>1：床</li>\n<li>2：沙发</li>\n<li>3：书桌</li>\n<li>4：衣柜</li>\n<li>5：电视</li>\n<li>6：空调</li>\n<li>7：床垫</li>\n<li>8：床套</li>\n<li>9：床</li>\n<li>10：写字台</li>\n<li>11：护眼台灯</li>\n<li>12：挂画</li>\n<li>13：写字台椅子</li>\n<li>14：餐桌</li>\n<li>15：多功能衣架</li>\n<li>16：隔板+支架</li>\n<li>17：小米盒子</li>\n<li>18：360路由器</li>\n<li>19：窗帘</li>\n<li>20：锁</li>\n<li>21：冰箱</li>\n<li>22：洗衣机</li>\n<li>23：宽带</li>\n</ul>\n<h2 id=\"oc-furniture-bill\"><a href=\"#oc-furniture-bill\" class=\"headerlink\" title=\"oc_furniture_bill\"></a>oc_furniture_bill</h2><p>家具订单</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>furniture_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td>须支付总金额</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>int unsigned</td>\n<td></td>\n<td>采购的数量</td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint unsigned</td>\n<td>0,1,2</td>\n<td>见备注</td>\n<td></td>\n</tr>\n<tr>\n<td>suplier</td>\n<td>varchar(30)</td>\n<td></td>\n<td>供货商名称</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>status: </p>\n<ul>\n<li>0：未提交，编辑中。默认值。</li>\n<li>1：已提交给供应商，还未声场完毕。</li>\n<li>2：已生产完毕，已入库。</li>\n</ul>\n<h2 id=\"oc-furniture-deploy\"><a href=\"#oc-furniture-deploy\" class=\"headerlink\" title=\"oc_furniture_deploy\"></a>oc_furniture_deploy</h2><p>家具配置表。house/room与家具之间的分配关系。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>furniture_id</td>\n<td>int</td>\n<td></td>\n<td>家具编号</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>如果为空，表示是套房的家具</td>\n<td></td>\n</tr>\n<tr>\n<td>count</td>\n<td>tinyint</td>\n<td></td>\n<td>数量，默认为1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-decorate-bill\"><a href=\"#oc-decorate-bill\" class=\"headerlink\" title=\"oc_decorate_bill\"></a>oc_decorate_bill</h2><p>装修订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company</td>\n<td>varcahr(30)</td>\n<td></td>\n<td>装修公司名称</td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int unsigned</td>\n<td></td>\n<td>金额</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>text</td>\n<td></td>\n<td>备注</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>下单时间</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>timestamp</td>\n<td></td>\n<td>完成时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-coupon\"><a href=\"#oc-coupon\" class=\"headerlink\" title=\"oc_coupon\"></a>oc_coupon</h2><p>优惠券</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>code</td>\n<td>char(6)</td>\n<td></td>\n<td>名称</td>\n<td></td>\n</tr>\n<tr>\n<td>use_method</td>\n<td>tinyint</td>\n<td></td>\n<td>见下解释</td>\n<td></td>\n</tr>\n<tr>\n<td>get_from</td>\n<td>tinyint</td>\n<td></td>\n<td>见下解释</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td>0,1,2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>validity</td>\n<td>timestamp</td>\n<td></td>\n<td>到期日期</td>\n<td></td>\n</tr>\n<tr>\n<td>cash</td>\n<td>smallint</td>\n<td></td>\n<td>抵扣金额</td>\n<td></td>\n</tr>\n<tr>\n<td>stackable</td>\n<td>tinyint</td>\n<td></td>\n<td>可叠加使用</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>已被用户领取</td>\n<td></td>\n</tr>\n<tr>\n<td>locked</td>\n<td>tinyint</td>\n<td></td>\n<td>已锁定（支付中）</td>\n</tr>\n</tbody>\n</table>\n<p>注解：</p>\n<p>use_method:</p>\n<ul>\n<li>0: 支付房租均可使用</li>\n<li>1: 支付任何费用均可使用，包括O2O服务。</li>\n</ul>\n<p>state：init(0), active(1), bind(2), used(3)。<br>validity： 有效期，天数。最多365天。</p>\n<p>from:</p>\n<ul>\n<li>0: default</li>\n<li>1：首月半价</li>\n<li>2：社交活动</li>\n<li>3：推荐其它好友 </li>\n<li>4：暂时废弃</li>\n<li>5：自己被邀请</li>\n</ul>\n<h2 id=\"oc-third-payment\"><a href=\"#oc-third-payment\" class=\"headerlink\" title=\"oc_third_payment\"></a>oc_third_payment</h2><p>第三方支付</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>trade_no</td>\n<td>char(32)</td>\n<td></td>\n<td>交易号</td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>total_fee</td>\n<td>float</td>\n<td></td>\n<td>付款金额</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>ext</td>\n<td>varchar(128)</td>\n<td></td>\n<td>json 附加订单信息</td>\n<td></td>\n</tr>\n<tr>\n<td>third_result</td>\n<td>varchar(128)</td>\n<td></td>\n<td>json 第三方返回信息</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>method: 支付宝(0)，微信(1)，银联(2)。</li>\n<li>type: 未知(0)，交房租(1)，预定房间（2），水电气(3)。</li>\n<li>state: 已创建(0)，已成功(1)，已失败(2)。</li>\n</ul>\n<h2 id=\"oc-coupon-seed\"><a href=\"#oc-coupon-seed\" class=\"headerlink\" title=\"oc_coupon_seed\"></a>oc_coupon_seed</h2><p>优惠码，生成种子记录</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>seed</td>\n<td>int u</td>\n<td></td>\n<td>当前种子值，默认值53213</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-clean-order\"><a href=\"#oc-clean-order\" class=\"headerlink\" title=\"oc_clean_order\"></a>oc_clean_order</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>申请人</td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>varchar(256)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serve_at</td>\n<td>timestamp</td>\n<td></td>\n<td>设定服务时间</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>timestamp</td>\n<td></td>\n<td>完成时间</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），提交（1），已安排(2), 完成（3），取消（4）</li>\n</ul>\n<h2 id=\"oc-repair-order\"><a href=\"#oc-repair-order\" class=\"headerlink\" title=\"oc_repair_order\"></a>oc_repair_order</h2><p>服务</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>varchar(256)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serve_at</td>\n<td>timestamp</td>\n<td></td>\n<td>设定服务时间</td>\n<td></td>\n</tr>\n<tr>\n<td>complete_at</td>\n<td>timestamp</td>\n<td></td>\n<td>完成时间</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），提交（1），完成（2），取消（3）</li>\n<li>type: 家电维修（0），房屋漏水（1），管道疏通/维修（2），房屋维修（3），其它（4）</li>\n</ul>\n<h2 id=\"oc-house-state-log\"><a href=\"#oc-house-state-log\" class=\"headerlink\" title=\"oc_house_state_log\"></a>oc_house_state_log</h2><p>房屋状态更改日志</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-room-state-log\"><a href=\"#oc-room-state-log\" class=\"headerlink\" title=\"oc_room_state_log\"></a>oc_room_state_log</h2><p>房屋状态更改日志</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-renter-pay-bill\"><a href=\"#oc-renter-pay-bill\" class=\"headerlink\" title=\"oc_renter_pay_bill\"></a>oc_renter_pay_bill</h2><p>租房合同确立后，创建每笔支付订单。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>tinyint u</td>\n<td></td>\n<td>支付订单的顺序</td>\n<td></td>\n</tr>\n<tr>\n<td>renter_bill_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>start_month</td>\n<td>tinyint u</td>\n<td>[0,11]</td>\n<td>此次支付起始月份</td>\n<td></td>\n</tr>\n<tr>\n<td>for_month</td>\n<td>tinyint u</td>\n<td>[1,12]</td>\n<td>支付N个月房租</td>\n<td></td>\n</tr>\n<tr>\n<td>rent_fee</td>\n<td>int u</td>\n<td></td>\n<td>租金</td>\n<td></td>\n</tr>\n<tr>\n<td>service_fee</td>\n<td>int u</td>\n<td></td>\n<td>服务费金额</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>int u</td>\n<td></td>\n<td>押金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>money_to_pay</td>\n<td>int u</td>\n<td></td>\n<td>此次支付需要支付金额</td>\n<td></td>\n</tr>\n<tr>\n<td>reduce</td>\n<td>int u</td>\n<td></td>\n<td>减免金额</td>\n<td></td>\n</tr>\n<tr>\n<td>coupon_reduce</td>\n<td>int u</td>\n<td></td>\n<td>优惠券减免</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>int u</td>\n<td></td>\n<td>已支付金额</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay_at</td>\n<td>timestamp</td>\n<td></td>\n<td>需要缴纳房租的时间</td>\n</tr>\n</tbody>\n</table>\n<p>state: 默认（0），分笔支付中（1），支付完成（2），取消（3）。</p>\n<h2 id=\"oc-renter-payment\"><a href=\"#oc-renter-payment\" class=\"headerlink\" title=\"oc_renter_payment\"></a>oc_renter_payment</h2><p>每一条代表一次支付的记录。如果是在线支付，会有online_payment_id链接到对应的第三方支付信息。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>renter_bill_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>online_payment_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）</li>\n<li>money: 负数表示退款</li>\n</ul>\n<h2 id=\"oc-advice\"><a href=\"#oc-advice\" class=\"headerlink\" title=\"oc_advice\"></a>oc_advice</h2><p>用户吐槽</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>varchar(20)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>email</td>\n<td>varchar(50)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>content</td>\n<td>varchar(250)</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-coupon-state-log\"><a href=\"#oc-coupon-state-log\" class=\"headerlink\" title=\"oc_coupon_state_log\"></a>oc_coupon_state_log</h2><p>优惠券发放和使用日志。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>coupon_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-article\"><a href=\"#oc-article\" class=\"headerlink\" title=\"oc_article\"></a>oc_article</h2><p>娱乐圈、彩客秀文章</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>author</td>\n<td>varchar(20)</td>\n<td></td>\n<td>作者姓名</td>\n<td></td>\n</tr>\n<tr>\n<td>cover_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>封面图像地址</td>\n<td></td>\n</tr>\n<tr>\n<td>head_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>作者头像地址</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>varchar(50)</td>\n<td></td>\n<td>标题</td>\n<td></td>\n</tr>\n<tr>\n<td>brief</td>\n<td>varchar(128)</td>\n<td></td>\n<td>内容简介</td>\n<td></td>\n</tr>\n<tr>\n<td>content</td>\n<td>varchar(10000)</td>\n<td></td>\n<td>文章全文</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>type: 彩客秀（0），娱乐圈（1）</li>\n<li>weight: 权重，值越小，排名越靠前</li>\n</ul>\n<h2 id=\"oc-bank-card\"><a href=\"#oc-bank-card\" class=\"headerlink\" title=\"oc_bank_card\"></a>oc_bank_card</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>card</td>\n<td>varchar(24)</td>\n<td></td>\n<td>卡号</td>\n<td></td>\n</tr>\n<tr>\n<td>bank_name</td>\n<td>varchar(64)</td>\n<td></td>\n<td>开户行</td>\n<td></td>\n</tr>\n<tr>\n<td>full_name</td>\n<td>varchar(24)</td>\n<td></td>\n<td>真实姓名</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint u</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>validity</td>\n<td>date</td>\n<td></td>\n<td>有效期</td>\n<td></td>\n</tr>\n<tr>\n<td>cvv</td>\n<td>varchar(8)</td>\n<td></td>\n<td>信用卡CVV码</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(64)</td>\n<td></td>\n<td>备注,标记房租还是水电卡</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>type: 借记卡（0），信用卡（1）</li>\n</ul>\n<h2 id=\"oc-butler-task\"><a href=\"#oc-butler-task\" class=\"headerlink\" title=\"oc_butler_task\"></a>oc_butler_task</h2><p>管家任务</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_name</td>\n<td>varchar(32)</td>\n<td></td>\n<td>用户名</td>\n<td></td>\n</tr>\n<tr>\n<td>tel_num</td>\n<td>varchar(20)</td>\n<td></td>\n<td>手机号</td>\n<td></td>\n</tr>\n<tr>\n<td>channel_id</td>\n<td>int</td>\n<td></td>\n<td>渠道id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td>上次更改</td>\n<td></td>\n</tr>\n<tr>\n<td>show_room_time</td>\n<td>varchar(24)</td>\n<td></td>\n<td>看房时间</td>\n<td></td>\n</tr>\n<tr>\n<td>show_room_style</td>\n<td>varchar(128)</td>\n<td></td>\n<td>客户看房类型</td>\n<td></td>\n</tr>\n<tr>\n<td>hope_price_id</td>\n<td>int</td>\n<td></td>\n<td>理想价位id</td>\n<td></td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td></td>\n<td>任务状态</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>room_id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_name_brief</td>\n<td>varchar(64)</td>\n<td></td>\n<td>房间名字介绍</td>\n<td></td>\n</tr>\n<tr>\n<td>failure_reason</td>\n<td>varchar(64)</td>\n<td></td>\n<td>失败原因</td>\n<td></td>\n</tr>\n<tr>\n<td>earnest_money_id</td>\n<td>int</td>\n<td></td>\n<td>定金id</td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>租房合同id</td>\n<td></td>\n</tr>\n<tr>\n<td>contact_content</td>\n<td>varchar(64)</td>\n<td></td>\n<td>已联系内容</td>\n<td></td>\n</tr>\n<tr>\n<td>stars</td>\n<td>int</td>\n<td></td>\n<td>星级</td>\n<td></td>\n</tr>\n<tr>\n<td>rev_money</td>\n<td>int</td>\n<td></td>\n<td>尾款（签合同收到钱）</td>\n<td></td>\n</tr>\n<tr>\n<td>earnest_method</td>\n<td>varchar(64)</td>\n<td></td>\n<td>定金支付方式</td>\n<td></td>\n</tr>\n<tr>\n<td>earnest_pay_time</td>\n<td>date</td>\n<td></td>\n<td>定金支付时间</td>\n<td></td>\n</tr>\n<tr>\n<td>rev_money_method</td>\n<td>varchar(64)</td>\n<td></td>\n<td>尾款支付方式</td>\n<td></td>\n</tr>\n<tr>\n<td>rev_money_time</td>\n<td>date</td>\n<td></td>\n<td>尾款支付时间</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>status: 初始状态(0), 已分配(1), 已联系(2), 未成功(3), 未成功潜在客户(4), 改约时间(5), 已交定金(6), 直接签约(7), 已完成(表示合同完结8), 已审核(运维审核9)</li>\n<li>room_id: 没有确定(0), 确定后填写真正预约room_id(room_id)</li>\n<li>pay_method: 参考oc_renter_payment 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3） </li>\n</ul>\n<h2 id=\"oc-earnest-money\"><a href=\"#oc-earnest-money\" class=\"headerlink\" title=\"oc_earnest_money\"></a>oc_earnest_money</h2><p>管家任务定金表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>int</td>\n<td></td>\n<td>定金金额</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>状态</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>user id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 初始状态(0)， 已交定金还没签订合同（1）， 交定金签订合同（2）, 用户取消预定（3）,直接签合同（4）</li>\n<li>price: 负数表示退款</li>\n</ul>\n<h2 id=\"oc-channel\"><a href=\"#oc-channel\" class=\"headerlink\" title=\"oc_channel\"></a>oc_channel</h2><p>渠道</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>channel_name</td>\n<td>varchar(32)</td>\n<td></td>\n<td>渠道名字</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-hope-price\"><a href=\"#oc-hope-price\" class=\"headerlink\" title=\"oc_hope_price\"></a>oc_hope_price</h2><p>心理价位</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>hope_price_range</td>\n<td>varchar(32)</td>\n<td></td>\n<td>价格范围</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>hope_price_range: 为id对应的解释,不限(1)， 1500以下(2)，1500-2000(3)，2000-2500(4), 2500-3000(5), 3000-3500(6), 3500-4000(7), 4000-4500(8), 4500以上(9)</li>\n</ul>\n<h2 id=\"oc-task-state-log\"><a href=\"#oc-task-state-log\" class=\"headerlink\" title=\"oc_task_state_log\"></a>oc_task_state_log</h2><p>任务状态更改日志</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>task_id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>from_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>to_state</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>from_state、to_state: 参照oc_butler_task state状态描述</li>\n</ul>\n<h2 id=\"oc-sale-activity\"><a href=\"#oc-sale-activity\" class=\"headerlink\" title=\"oc_sale_activity\"></a>oc_sale_activity</h2><p>特价房活动，每一行代表一个活动。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>start_time</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>end_time</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cover_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>cover image</td>\n<td></td>\n</tr>\n<tr>\n<td>banner_img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>banner image</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: default(0),active(1),over(2)</li>\n</ul>\n<h2 id=\"oc-rooms-in-sale\"><a href=\"#oc-rooms-in-sale\" class=\"headerlink\" title=\"oc_rooms_in_sale\"></a>oc_rooms_in_sale</h2><p>参与活动的房间</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>activity_id</td>\n<td>int</td>\n<td></td>\n<td>oc_sale_activity.id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>int</td>\n<td></td>\n<td>活动价格</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-pre-order\"><a href=\"#oc-pre-order\" class=\"headerlink\" title=\"oc_pre_order\"></a>oc_pre_order</h2><p>预定房间列表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>int</td>\n<td></td>\n<td>约定的价格</td>\n<td></td>\n</tr>\n<tr>\n<td>deposit_paid</td>\n<td>int</td>\n<td></td>\n<td>已交付的定金</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: default(0),已付定金(1),已取消(2),已完成入住(3)</li>\n</ul>\n<h2 id=\"oc-system-log\"><a href=\"#oc-system-log\" class=\"headerlink\" title=\"oc_system_log\"></a>oc_system_log</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>app</td>\n<td>varchar(32)</td>\n<td></td>\n<td>app name</td>\n<td></td>\n</tr>\n<tr>\n<td>username</td>\n<td>varchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ip</td>\n<td>varchar(16)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>action</td>\n<td>varchar(128)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>varchar(8)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>params</td>\n<td>varchar(1024)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-main-banner\"><a href=\"#oc-main-banner\" class=\"headerlink\" title=\"oc_main_banner\"></a>oc_main_banner</h2><p>网站首页，Banner配置。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>open</td>\n<td>tinyint</td>\n<td></td>\n<td>是否显示</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>tinyint</td>\n<td></td>\n<td>below</td>\n<td></td>\n</tr>\n<tr>\n<td>text</td>\n<td>varchar(128)</td>\n<td></td>\n<td>banner显示文字</td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>varchar(256)</td>\n<td></td>\n<td>图片地址</td>\n<td></td>\n</tr>\n<tr>\n<td>url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>链接地址</td>\n<td></td>\n</tr>\n<tr>\n<td>comment</td>\n<td>varchar(32)</td>\n<td></td>\n<td>备注</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>type：PC（0），手机（1），PC和手机都显示（2）</li>\n</ul>\n<h2 id=\"oc-landlord-bill-increment\"><a href=\"#oc-landlord-bill-increment\" class=\"headerlink\" title=\"oc_landlord_bill_increment\"></a>oc_landlord_bill_increment</h2><p>房东合同价格递增表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_landlord_bill.id</td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>int</td>\n<td></td>\n<td>第几年租金价格</td>\n<td></td>\n</tr>\n<tr>\n<td>price</td>\n<td>decimal(9,6)</td>\n<td></td>\n<td>实际价格</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>increment_at</td>\n<td>timestamp</td>\n<td></td>\n<td>递增房租价格时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-butler-check-fee\"><a href=\"#oc-butler-check-fee\" class=\"headerlink\" title=\"oc_butler_check_fee\"></a>oc_butler_check_fee</h2><p>管家查询各表信息(退租、合同结束时查表，数据全部录入)<br>注：录入数据信息必须为退租当月信息。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>butler_id</td>\n<td>int</td>\n<td></td>\n<td>抄表管家</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>房间id</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>butler_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次抄表数值</td>\n<td></td>\n</tr>\n<tr>\n<td>used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>估算所用数值</td>\n<td></td>\n</tr>\n<tr>\n<td>fee_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>fee_type</td>\n<td>int</td>\n<td></td>\n<td>缴费类型</td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>fee_type:水（0），电（1），燃气（2）</li>\n<li>method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）</li>\n</ul>\n<h2 id=\"oc-company-elec-payment\"><a href=\"#oc-company-elec-payment\" class=\"headerlink\" title=\"oc_company_elec_payment\"></a>oc_company_elec_payment</h2><p>公司代缴电费信息表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>charge_inst</td>\n<td>varchar(32)</td>\n<td></td>\n<td>收费单位名称</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>套房id</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_type</td>\n<td>int</td>\n<td></td>\n<td>用电类型</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_last_time</td>\n<td>date</td>\n<td></td>\n<td>上次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_last_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>上次抄表数值（度）</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次抄表数值（度）</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次所用电度数（度）</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>elec_type:居民用电(0)，一般工商业用电（1），大工业用电（2），农业用电（3）</li>\n</ul>\n<h2 id=\"oc-user-elec-payment\"><a href=\"#oc-user-elec-payment\" class=\"headerlink\" title=\"oc_user_elec_payment\"></a>oc_user_elec_payment</h2><p>租客缴电费信息表（每次录入公司代交电费后自动生成）</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company_elec_id</td>\n<td>int</td>\n<td></td>\n<td>oc_company_elec_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>已经缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>支付状态</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次缴费日期</td>\n<td></td>\n</tr>\n<tr>\n<td>elec_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>用电度数(价格做估算)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），未支付（1），支付完成（2）</li>\n</ul>\n<h2 id=\"oc-company-water-payment\"><a href=\"#oc-company-water-payment\" class=\"headerlink\" title=\"oc_company_water_payment\"></a>oc_company_water_payment</h2><p>公司代缴水费信息表(水费+污水处理费)</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>套房id</td>\n<td></td>\n</tr>\n<tr>\n<td>water_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>缴费金额</td>\n<td></td>\n</tr>\n<tr>\n<td>water_last_time</td>\n<td>date</td>\n<td></td>\n<td>上次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>water_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>water_last_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>上次读数（吨）</td>\n<td></td>\n</tr>\n<tr>\n<td>water_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次读数（吨）</td>\n<td></td>\n</tr>\n<tr>\n<td>water_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次所用水量（吨）</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-user-water-payment\"><a href=\"#oc-user-water-payment\" class=\"headerlink\" title=\"oc_user_water_payment\"></a>oc_user_water_payment</h2><p>租客缴水费信息表（每次录入公司代交水费后自动生成）</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company_water_id</td>\n<td>int</td>\n<td></td>\n<td>oc_company_water_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次已经缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>支付状态</td>\n<td></td>\n</tr>\n<tr>\n<td>water_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次缴费日期</td>\n<td></td>\n</tr>\n<tr>\n<td>water_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>用户所用水量（价格做估算）</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），支付中（1），支付完成（2）</li>\n</ul>\n<h2 id=\"oc-company-gas-payment\"><a href=\"#oc-company-gas-payment\" class=\"headerlink\" title=\"oc_company_gas_payment\"></a>oc_company_gas_payment</h2><p>公司代缴燃气费信息表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>套房id</td>\n<td></td>\n</tr>\n<tr>\n<td>charge_inst</td>\n<td>varchar(32)</td>\n<td></td>\n<td>收费单位名称</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_type</td>\n<td>int</td>\n<td></td>\n<td>用气类型</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_payment</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>缴费金额</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_last_time</td>\n<td>date</td>\n<td></td>\n<td>上次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次抄表日期</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_last_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>上次读数（立方米）</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_check_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次读数（立方米）</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次所用气量（立方米）</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>gas_type:居民用气(0)，学校用气（1），机关事业和企业单位用气（2）</li>\n</ul>\n<h2 id=\"oc-user-gas-payment\"><a href=\"#oc-user-gas-payment\" class=\"headerlink\" title=\"oc_user_gas_payment\"></a>oc_user_gas_payment</h2><p>租客缴燃气费信息表（每次录入公司代交燃气费后自动生成）</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>company_gas_id</td>\n<td>int</td>\n<td></td>\n<td>oc_company_gas_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>need_pay</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次需要缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>money_paid</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>本次已经缴费金额（元）</td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>int</td>\n<td></td>\n<td>支付状态</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_check_time</td>\n<td>date</td>\n<td></td>\n<td>本次缴费日期</td>\n<td></td>\n</tr>\n<tr>\n<td>gas_used_val</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>用户所用气量（价格做估算）</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>state: 默认（0），支付中（1），支付完成（2）</li>\n</ul>\n<h2 id=\"oc-other-fee-payment\"><a href=\"#oc-other-fee-payment\" class=\"headerlink\" title=\"oc_other_fee_payment\"></a>oc_other_fee_payment</h2><p>每一条代表一次支付的记录。如果是在线支付，会有third_payment_id链接到对应的第三方支付信息。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>fee_type</td>\n<td>int</td>\n<td></td>\n<td>缴费类型</td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>check_fee_id</td>\n<td>int</td>\n<td></td>\n<td>oc_butler_check_fee.id</td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>tinyint u</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>third_payment_id</td>\n<td>int</td>\n<td></td>\n<td>oc_third_payment.id</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>method: 线下支付宝（0），线下刷卡（1），现金（2），线上支付（3）</li>\n<li>fee_type:水（0），电（1），燃气（2）</li>\n<li>check_fee_id:默认没有，只有在退租或合同结束时结算水电气费用时，生成支付订单才用。</li>\n</ul>\n<h2 id=\"oc-user-wallet\"><a href=\"#oc-user-wallet\" class=\"headerlink\" title=\"oc_user_wallet\"></a>oc_user_wallet</h2><p>用户钱包，如果remain_money&gt;0，水电气费用金额会从中扣除。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n</tr>\n<tr>\n<td>remain_money</td>\n<td>decimal(10,2)</td>\n<td></td>\n<td>钱包剩余金额</td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-main-page\"><a href=\"#oc-main-page\" class=\"headerlink\" title=\"oc_main_page\"></a>oc_main_page</h2><p>首页内容配置表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>column</td>\n<td>tinyint u</td>\n<td></td>\n<td>栏目id</td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>tinyint u</td>\n<td></td>\n<td>栏目内序号</td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>varchar(128)</td>\n<td></td>\n<td>图片</td>\n<td></td>\n</tr>\n<tr>\n<td>url</td>\n<td>varchar(128)</td>\n<td></td>\n<td>跳转地址</td>\n<td></td>\n</tr>\n<tr>\n<td>config</td>\n<td>varchar(512)</td>\n<td></td>\n<td>json配置项</td>\n<td></td>\n</tr>\n<tr>\n<td>open</td>\n<td>tinyint</td>\n<td></td>\n<td>是否打开</td>\n<td></td>\n</tr>\n<tr>\n<td>show</td>\n<td>tinyint</td>\n<td></td>\n<td>显示在哪里</td>\n</tr>\n</tbody>\n</table>\n<p><code>show</code>:  </p>\n<ul>\n<li>0，PC和Mobile都显示</li>\n<li>1，只显示在PC</li>\n<li>2，只显示在Mobile</li>\n</ul>\n<p><code>column</code>: </p>\n<ul>\n<li>0，表示首页Banner图的配置。<code>config</code>可配置,格式为：<br><code>{&quot;alt&quot;:&quot;图片描述信息&quot;}</code>。</li>\n<li>1，表示精选房间的配置，此时，<code>config</code>需要配置，格式为：<code>{&quot;price&quot;:2000,&quot;name&quot;:&quot;大冲城市花园3栋6座301&quot;}</code>。</li>\n<li>2，表示房屋列表快速链接的配置，包括：南山区、福田区、特价房。</li>\n<li>3，表示彩客秀配置，此时，需要配置<code>config</code>，格式为：<code>{&quot;title&quot;:&quot;小女神的设计师之路&quot;,&quot;brief&quot;:&quot;XXXXXX&quot;}</code>.</li>\n<li>4，表示娱乐圈。<code>config</code>可配置,格式为：<br><code>{&quot;alt&quot;:&quot;图片描述信息&quot;}</code>。</li>\n<li>5，表示新闻配置。’config’需要配置,格式为:<code>{&quot;title&quot;:&quot;测试1&quot;，&quot;from&quot;:&quot;深圳日报&quot;,&quot;create_time&quot;:&quot;2015-10-11&quot;}</code>。</li>\n</ul>\n<h2 id=\"oc-special-room\"><a href=\"#oc-special-room\" class=\"headerlink\" title=\"oc_special_room\"></a>oc_special_room</h2><p>特价房</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td>PK of oc_room</td>\n<td></td>\n</tr>\n<tr>\n<td>old_price</td>\n<td>float</td>\n<td></td>\n<td>原来价格</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-boundary\"><a href=\"#oc-boundary\" class=\"headerlink\" title=\"oc_boundary\"></a>oc_boundary</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>center_lat</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上中心纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>center_lng</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上中心经度</td>\n<td></td>\n</tr>\n<tr>\n<td>sw_lat</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上西南角纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>sw_lng</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图上西南角经度</td>\n<td></td>\n</tr>\n<tr>\n<td>ne_lat</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图东北角纬度</td>\n<td></td>\n</tr>\n<tr>\n<td>ne_lng</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>区域地图东北角经度</td>\n<td></td>\n</tr>\n<tr>\n<td>show_zoom</td>\n<td>int</td>\n<td></td>\n<td>地图显示时级别</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary</td>\n<td>text</td>\n<td></td>\n<td>json格式数据</td>\n<td></td>\n</tr>\n<tr>\n<td>show_name</td>\n<td>varchar(64)</td>\n<td></td>\n<td>地图显示(如:南山区)</td>\n<td></td>\n</tr>\n<tr>\n<td>grade</td>\n<td>int</td>\n<td></td>\n<td>级别(小区/商圈/区域/市)</td>\n<td></td>\n</tr>\n<tr>\n<td>hide</td>\n<td>int</td>\n<td></td>\n<td>是否在地图上隐藏(默认0)</td>\n<td></td>\n</tr>\n<tr>\n<td>boundary_desc</td>\n<td>varchar(512)</td>\n<td></td>\n<td>位置描述信息</td>\n</tr>\n</tbody>\n</table>\n<p><code>boundary</code>:</p>\n<ul>\n<li>该区域所表示的范围,由多组经纬度坐标围成的一个区域,为json数据字符串组成.</li>\n<li>格式如下:<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"main\"</span>:[</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.96189\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.550857\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.961921\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.5488\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.962195\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.547987\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.964019\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.548375\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.964234\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.550515\"</span>&#125;,</div><div class=\"line\">        &#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.964329\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.551041\"</span>&#125;</div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"attr\">\"center\"</span>:[&#123;<span class=\"attr\">\"pointLon\"</span>:<span class=\"string\">\"113.96189\"</span>,<span class=\"attr\">\"pointLat\"</span>:<span class=\"string\">\"22.550857\"</span>&#125;]&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><code>grade</code>:</p>\n<ul>\n<li>1:小区(如:大冲城市花园)</li>\n<li>2:商圈(如:科技园)</li>\n<li>3:区域(如:南山区)</li>\n<li>4:市(如:深圳市)</li>\n<li>5:地铁站（如:世界之窗）</li>\n</ul>\n<h2 id=\"oc-user-question\"><a href=\"#oc-user-question\" class=\"headerlink\" title=\"oc_user_question\"></a>oc_user_question</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>question</td>\n<td>varchar(256)</td>\n<td></td>\n<td>提问问题</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>answer</td>\n<td>text</td>\n<td></td>\n<td>答案</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>thumbs_up</td>\n<td>int</td>\n<td></td>\n<td>点赞数量</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>device_type</td>\n<td>varchar(32)</td>\n<td></td>\n<td>提问时设备类型</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>hide</td>\n<td>int</td>\n<td></td>\n<td>是否显示</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>update_at</td>\n<td>timestamp</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>哪个房间提问</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-question-of-room\"><a href=\"#oc-question-of-room\" class=\"headerlink\" title=\"oc_question_of_room\"></a>oc_question_of_room</h2><p><code>room</code>和<code>question</code>的映射关系。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>房间id</td>\n<td></td>\n</tr>\n<tr>\n<td>question_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user_question.id</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-question-of-house\"><a href=\"#oc-question-of-house\" class=\"headerlink\" title=\"oc_question_of_house\"></a>oc_question_of_house</h2><h2 id=\"oc-question-of-community\"><a href=\"#oc-question-of-community\" class=\"headerlink\" title=\"oc_question_of_community\"></a>oc_question_of_community</h2><p>结构跟<code>oc_question_of_room</code>类似</p>\n<h2 id=\"oc-life-service\"><a href=\"#oc-life-service\" class=\"headerlink\" title=\"oc_life_service\"></a>oc_life_service</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>service_icon_url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>icon的oss地址</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>service_name</td>\n<td>varchar(128)</td>\n<td></td>\n<td>服务场地名字</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>line_icon_url</td>\n<td>varchar(256)</td>\n<td></td>\n<td>路线icon地址</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>line_desc</td>\n<td>text</td>\n<td></td>\n<td>路线描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>longtitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>经度</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>decimal(13,10)</td>\n<td></td>\n<td>纬度</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>service_type</td>\n<td>int</td>\n<td></td>\n<td>服务类型</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>service_type: 未定义(0), 购物(1), 美食(2), 运动(3), 娱乐(4)</li>\n</ul>\n<h2 id=\"oc-life-service-of-community\"><a href=\"#oc-life-service-of-community\" class=\"headerlink\" title=\"oc_life_service_of_community\"></a>oc_life_service_of_community</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n</tr>\n<tr>\n<td>community_id</td>\n<td>int</td>\n<td></td>\n<td>小区id</td>\n<td></td>\n</tr>\n<tr>\n<td>life_service_id</td>\n<td>int</td>\n<td></td>\n<td>oc_life_service.id</td>\n<td></td>\n</tr>\n<tr>\n<td>hide</td>\n<td>int</td>\n<td></td>\n<td>是否显示</td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>hide: 显示(0), 隐藏(1)</li>\n</ul>\n<h2 id=\"oc-user-destination\"><a href=\"#oc-user-destination\" class=\"headerlink\" title=\"oc_user_destination\"></a>oc_user_destination</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>dest_name</td>\n<td>varchar(64)</td>\n<td></td>\n<td>目的地</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-hobby\"><a href=\"#oc-hobby\" class=\"headerlink\" title=\"oc_hobby\"></a>oc_hobby</h2><p>爱好</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(32)</td>\n<td></td>\n<td>名字</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>detail</td>\n<td>text</td>\n<td></td>\n<td>爱好描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>parent_hobby_id</td>\n<td>int</td>\n<td>PK of oc_hobby</td>\n<td>所属爱好</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>display</td>\n<td>int</td>\n<td>0-1</td>\n<td>显示在筛选</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>serial_num: 值小的在最前面</li>\n</ul>\n<h2 id=\"oc-hobby-of-user\"><a href=\"#oc-hobby-of-user\" class=\"headerlink\" title=\"oc_hobby_of_user\"></a>oc_hobby_of_user</h2><p>用户爱好</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>int</td>\n<td></td>\n<td>oc_user.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>hobby_id</td>\n<td>int</td>\n<td></td>\n<td>oc_hobby.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>grade</td>\n<td>varchar(16)</td>\n<td></td>\n<td>hobby级别描述</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>serial_num</td>\n<td>int</td>\n<td></td>\n<td>排序</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-house-layout\"><a href=\"#oc-house-layout\" class=\"headerlink\" title=\"oc_house_layout\"></a>oc_house_layout</h2><p>代表一种户型图</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>img</td>\n<td>varchar(64)</td>\n<td></td>\n<td>户型图oss地址</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>layout_desc</td>\n<td>varchar(64)</td>\n<td></td>\n<td>户型图描述信息</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-slice\"><a href=\"#oc-slice\" class=\"headerlink\" title=\"oc_slice\"></a>oc_slice</h2><p>代表一片区域，一个大厅可以由多个slice组成，一个房间也可以由多个slice组成.</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>boundary</td>\n<td>text</td>\n<td></td>\n<td>json数据格式</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>slice_desc</td>\n<td>varchar(64)</td>\n<td></td>\n<td>slice描述信息</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_layout_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house_layout.id</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>boundary</code>:</p>\n<ul>\n<li>该区域所表示的范围,由多组像素坐标围成的一个区域,相对坐标点为左下角坐标,为json数据字符串组成，编辑需要按照区域顺序填写，切忌不能跳跃填写．</li>\n<li>格式如下:<br>[{“pointX”:”162”,”pointY”:”60”},{“pointX”:”162”,”pointY”:”290”},{“pointX”:”367”,”pointY”:”60”},{“pointX”:”367”,”pointY”:”288”}]</li>\n</ul>\n<p><code>slice_desc</code>:</p>\n<ul>\n<li>命名规则:户型图名字／地址＋区域介绍</li>\n</ul>\n<h2 id=\"oc-slice-of-scene\"><a href=\"#oc-slice-of-scene\" class=\"headerlink\" title=\"oc_slice_of_scene\"></a>oc_slice_of_scene</h2><p>一个场景信息</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>scene_name</td>\n<td>varchar(128)</td>\n<td></td>\n<td>场景命名</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>slice_id</td>\n<td>int</td>\n<td></td>\n<td>oc_slice.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>house_img_id</td>\n<td>int</td>\n<td></td>\n<td>oc_image_of_house.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>comm_id</td>\n<td>int</td>\n<td></td>\n<td>oc_community.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>room_id</td>\n<td>int</td>\n<td></td>\n<td>oc_room.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>point_x</td>\n<td>int</td>\n<td></td>\n<td>该场景的摄影点x坐标</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>point_y</td>\n<td>int</td>\n<td></td>\n<td>摄影点y坐标</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>v_degree</td>\n<td>int</td>\n<td></td>\n<td>度数（正北顺时度数）</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>slice_id</code>:(非必须)</p>\n<ul>\n<li>户型图中某个区域<br><code>house_img_id</code>:(非必须)</li>\n<li>每个场景需要和套房的哪个户型图关联．（考虑到复式楼）<br><code>comm_id</code>:(非必须)</li>\n<li>小区场景,如果该场景名字属于小区场景名,需要配置该项<br><code>room_id</code>:(非必须)<br>*　这个场景对应的房间id，如果不是room则不用填写</li>\n</ul>\n<h2 id=\"oc-expense-fee\"><a href=\"#oc-expense-fee\" class=\"headerlink\" title=\"oc_expense_fee\"></a>oc_expense_fee</h2><p>公司支出费用，目前包括（中介推荐费\\租客推荐费\\非租客推荐费\\活动返现）<br>注：推荐费是在成功签订合同后，公司支出的。</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>fee_type</td>\n<td>int</td>\n<td></td>\n<td>费用类型</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>money</td>\n<td>int</td>\n<td></td>\n<td>支出金额(大于0)</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pay_time</td>\n<td>date</td>\n<td></td>\n<td>付款时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>payee</td>\n<td>varchar(32)</td>\n<td></td>\n<td>收款人</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>pay_desc</td>\n<td>varchar(128)</td>\n<td></td>\n<td>付款详细描述信息</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td>timestamp</td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_bill.id</td>\n<td>推荐费必填</td>\n<td></td>\n</tr>\n<tr>\n<td>house_id</td>\n<td>int</td>\n<td></td>\n<td>oc_house.id</td>\n<td>维修必填</td>\n</tr>\n</tbody>\n</table>\n<p><code>fee_type</code>:</p>\n<ul>\n<li>0:未选择</li>\n<li>1:中介推荐费</li>\n<li>2:租客推荐费</li>\n<li>3:朋友推荐费(非租客/非中介)</li>\n<li>4:活动返现费</li>\n<li>5:维修费支出</li>\n</ul>\n<h2 id=\"oc-back-rent-reason\"><a href=\"#oc-back-rent-reason\" class=\"headerlink\" title=\"oc_back_rent_reason\"></a>oc_back_rent_reason</h2><p>退租原因</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(128)</td>\n<td></td>\n<td>退租原因</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"oc-back-rent\"><a href=\"#oc-back-rent\" class=\"headerlink\" title=\"oc_back_rent\"></a>oc_back_rent</h2><p>退租列表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>取值范围</th>\n<th>代表含义</th>\n<th>其他</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td></td>\n<td>id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>reason_id</td>\n<td>int</td>\n<td></td>\n<td>oc_back_rent_reason.id</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bill_id</td>\n<td>int</td>\n<td></td>\n<td>oc_renter_bill.id退租前合同</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>back_rent_time</td>\n<td>date</td>\n<td></td>\n<td>退租时间</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>create_at</td>\n<td></td>\n<td></td>\n<td>创建时间</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"[设计模式]创建型模式","date":"2016-03-07T10:05:00.000Z","_content":"\n\n摘要：设计模式并不能减小系统的复杂度，并不能减少`if...else...`。它只是帮助把代码放在适当的位置，以便在需求更改时改动的代码最少。\n\n\n## 简单工厂模式\n\n* 简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。\n* 简单工厂模式最大的优点在于实现对象的创建和对象的使用分离，将对象的创建交给专门的工厂类负责，但是其最大的缺点在于工厂类不够灵活，增加新的具体产品需要修改工厂类的判断逻辑代码，而且产品较多时，工厂方法代码将会非常复杂。\n* 简单工厂模式适用情况包括：工厂类负责创建的对象比较少；客户端只知道传入工厂类的参数，对于如何创建对象不关心。\n\n\n![](SimpleFactory.jpg)\n\n## 工厂方法模式\n\n本质上说就是产品创建功能的下放，交给子类去做。\n\n* 工厂方法模式是简单工厂模式的进一步抽象和推广。由于使用了面向对象的多态性，工厂方法模式保持了简单工厂模式的优点，而且克服了它的缺点。在工厂方法模式中，核心的工厂类不再负责所有产品的创建，而是将具体创建工作交给子类去做。这个核心类仅仅负责给出具体工厂必须实现的接口，而不负责产品类被实例化这种细节，这使得工厂方法模式可以允许系统在不修改工厂角色的情况下引进新产品。\n* 工厂方法模式的主要优点是增加新的产品类时无须修改现有系统，并封装了产品对象的创建细节，系统具有良好的灵活性和可扩展性；其缺点在于增加新产品的同时需要增加新的工厂，导致系统类的个数成对增加，在一定程度上增加了系统的复杂性。\n\n![](FactoryMethod.jpg)\n\n## 抽象工厂模式\n\n\n最重要的概念：**产品族**。\n抽象工厂模式适用情况包括：  \n\n* 一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；\n* 系统中有多于一个的产品族，而每次只使用其中某一产品族；\n* 属于同一个产品族的产品将在一起使用；\n* 系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。\n\n![](AbatractFactory.jpg)\n\n## 建造者模式\n\n* 在建造者模式的结构中引入了一个指挥者类，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责控制产品的生成过程。指挥者针对抽象建造者编程，客户端只需要知道具体建造者的类型，即可通过指挥者类调用建造者的相关方法，返回一个完整的产品对象。\n* 建造者模式适用情况包括：需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性；需要生成的产品对象的属性相互依赖，需要指定其生成顺序；对象的创建过程独立于创建该对象的类；隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同类型的产品。\n* 建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。\n\n![](Builder.jpg)\n\n\n## 单例模式\n\n（略）\n\n## 原型模式\n\n关键字： `- clone();`;\n\n\n## 区分\n\n1. 抽象工厂模式与建造者模式相似，都可以创建组复杂对象。主要的区别是Builder模式着重于一步步构建一个复杂对象。而Abstract Factory着重于多个系列的产品对象。Builder在最后一步返回产品（封装了产品的构建），而对于Abstract Factory来说，产品是立即返回的。\n","source":"_posts/技术/设计模式/创建型模式.md","raw":"---\ntitle: \"[设计模式]创建型模式\"\ndate: 2016-03-07 18:05\ntags:\n- 设计模式\n- design\n- pattern\n- creational\n- factory\n- method\n- abstract\n- singlton\ncategories: \n- 技术\n---\n\n\n摘要：设计模式并不能减小系统的复杂度，并不能减少`if...else...`。它只是帮助把代码放在适当的位置，以便在需求更改时改动的代码最少。\n\n\n## 简单工厂模式\n\n* 简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。\n* 简单工厂模式最大的优点在于实现对象的创建和对象的使用分离，将对象的创建交给专门的工厂类负责，但是其最大的缺点在于工厂类不够灵活，增加新的具体产品需要修改工厂类的判断逻辑代码，而且产品较多时，工厂方法代码将会非常复杂。\n* 简单工厂模式适用情况包括：工厂类负责创建的对象比较少；客户端只知道传入工厂类的参数，对于如何创建对象不关心。\n\n\n![](SimpleFactory.jpg)\n\n## 工厂方法模式\n\n本质上说就是产品创建功能的下放，交给子类去做。\n\n* 工厂方法模式是简单工厂模式的进一步抽象和推广。由于使用了面向对象的多态性，工厂方法模式保持了简单工厂模式的优点，而且克服了它的缺点。在工厂方法模式中，核心的工厂类不再负责所有产品的创建，而是将具体创建工作交给子类去做。这个核心类仅仅负责给出具体工厂必须实现的接口，而不负责产品类被实例化这种细节，这使得工厂方法模式可以允许系统在不修改工厂角色的情况下引进新产品。\n* 工厂方法模式的主要优点是增加新的产品类时无须修改现有系统，并封装了产品对象的创建细节，系统具有良好的灵活性和可扩展性；其缺点在于增加新产品的同时需要增加新的工厂，导致系统类的个数成对增加，在一定程度上增加了系统的复杂性。\n\n![](FactoryMethod.jpg)\n\n## 抽象工厂模式\n\n\n最重要的概念：**产品族**。\n抽象工厂模式适用情况包括：  \n\n* 一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；\n* 系统中有多于一个的产品族，而每次只使用其中某一产品族；\n* 属于同一个产品族的产品将在一起使用；\n* 系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。\n\n![](AbatractFactory.jpg)\n\n## 建造者模式\n\n* 在建造者模式的结构中引入了一个指挥者类，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责控制产品的生成过程。指挥者针对抽象建造者编程，客户端只需要知道具体建造者的类型，即可通过指挥者类调用建造者的相关方法，返回一个完整的产品对象。\n* 建造者模式适用情况包括：需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性；需要生成的产品对象的属性相互依赖，需要指定其生成顺序；对象的创建过程独立于创建该对象的类；隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同类型的产品。\n* 建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。\n\n![](Builder.jpg)\n\n\n## 单例模式\n\n（略）\n\n## 原型模式\n\n关键字： `- clone();`;\n\n\n## 区分\n\n1. 抽象工厂模式与建造者模式相似，都可以创建组复杂对象。主要的区别是Builder模式着重于一步步构建一个复杂对象。而Abstract Factory着重于多个系列的产品对象。Builder在最后一步返回产品（封装了产品的构建），而对于Abstract Factory来说，产品是立即返回的。\n","slug":"技术/设计模式/创建型模式","published":1,"updated":"2017-07-26T15:24:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6l6n00jbq0d4rzn21pg6","content":"<p>摘要：设计模式并不能减小系统的复杂度，并不能减少<code>if...else...</code>。它只是帮助把代码放在适当的位置，以便在需求更改时改动的代码最少。</p>\n<h2 id=\"简单工厂模式\"><a href=\"#简单工厂模式\" class=\"headerlink\" title=\"简单工厂模式\"></a>简单工厂模式</h2><ul>\n<li>简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。</li>\n<li>简单工厂模式最大的优点在于实现对象的创建和对象的使用分离，将对象的创建交给专门的工厂类负责，但是其最大的缺点在于工厂类不够灵活，增加新的具体产品需要修改工厂类的判断逻辑代码，而且产品较多时，工厂方法代码将会非常复杂。</li>\n<li>简单工厂模式适用情况包括：工厂类负责创建的对象比较少；客户端只知道传入工厂类的参数，对于如何创建对象不关心。</li>\n</ul>\n<p><img src=\"SimpleFactory.jpg\" alt=\"\"></p>\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><p>本质上说就是产品创建功能的下放，交给子类去做。</p>\n<ul>\n<li>工厂方法模式是简单工厂模式的进一步抽象和推广。由于使用了面向对象的多态性，工厂方法模式保持了简单工厂模式的优点，而且克服了它的缺点。在工厂方法模式中，核心的工厂类不再负责所有产品的创建，而是将具体创建工作交给子类去做。这个核心类仅仅负责给出具体工厂必须实现的接口，而不负责产品类被实例化这种细节，这使得工厂方法模式可以允许系统在不修改工厂角色的情况下引进新产品。</li>\n<li>工厂方法模式的主要优点是增加新的产品类时无须修改现有系统，并封装了产品对象的创建细节，系统具有良好的灵活性和可扩展性；其缺点在于增加新产品的同时需要增加新的工厂，导致系统类的个数成对增加，在一定程度上增加了系统的复杂性。</li>\n</ul>\n<p><img src=\"FactoryMethod.jpg\" alt=\"\"></p>\n<h2 id=\"抽象工厂模式\"><a href=\"#抽象工厂模式\" class=\"headerlink\" title=\"抽象工厂模式\"></a>抽象工厂模式</h2><p>最重要的概念：<strong>产品族</strong>。<br>抽象工厂模式适用情况包括：  </p>\n<ul>\n<li>一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；</li>\n<li>系统中有多于一个的产品族，而每次只使用其中某一产品族；</li>\n<li>属于同一个产品族的产品将在一起使用；</li>\n<li>系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。</li>\n</ul>\n<p><img src=\"AbatractFactory.jpg\" alt=\"\"></p>\n<h2 id=\"建造者模式\"><a href=\"#建造者模式\" class=\"headerlink\" title=\"建造者模式\"></a>建造者模式</h2><ul>\n<li>在建造者模式的结构中引入了一个指挥者类，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责控制产品的生成过程。指挥者针对抽象建造者编程，客户端只需要知道具体建造者的类型，即可通过指挥者类调用建造者的相关方法，返回一个完整的产品对象。</li>\n<li>建造者模式适用情况包括：需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性；需要生成的产品对象的属性相互依赖，需要指定其生成顺序；对象的创建过程独立于创建该对象的类；隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同类型的产品。</li>\n<li>建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。</li>\n</ul>\n<p><img src=\"Builder.jpg\" alt=\"\"></p>\n<h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><p>（略）</p>\n<h2 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h2><p>关键字： <code>- clone();</code>;</p>\n<h2 id=\"区分\"><a href=\"#区分\" class=\"headerlink\" title=\"区分\"></a>区分</h2><ol>\n<li>抽象工厂模式与建造者模式相似，都可以创建组复杂对象。主要的区别是Builder模式着重于一步步构建一个复杂对象。而Abstract Factory着重于多个系列的产品对象。Builder在最后一步返回产品（封装了产品的构建），而对于Abstract Factory来说，产品是立即返回的。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>摘要：设计模式并不能减小系统的复杂度，并不能减少<code>if...else...</code>。它只是帮助把代码放在适当的位置，以便在需求更改时改动的代码最少。</p>\n<h2 id=\"简单工厂模式\"><a href=\"#简单工厂模式\" class=\"headerlink\" title=\"简单工厂模式\"></a>简单工厂模式</h2><ul>\n<li>简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。</li>\n<li>简单工厂模式最大的优点在于实现对象的创建和对象的使用分离，将对象的创建交给专门的工厂类负责，但是其最大的缺点在于工厂类不够灵活，增加新的具体产品需要修改工厂类的判断逻辑代码，而且产品较多时，工厂方法代码将会非常复杂。</li>\n<li>简单工厂模式适用情况包括：工厂类负责创建的对象比较少；客户端只知道传入工厂类的参数，对于如何创建对象不关心。</li>\n</ul>\n<p><img src=\"SimpleFactory.jpg\" alt=\"\"></p>\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><p>本质上说就是产品创建功能的下放，交给子类去做。</p>\n<ul>\n<li>工厂方法模式是简单工厂模式的进一步抽象和推广。由于使用了面向对象的多态性，工厂方法模式保持了简单工厂模式的优点，而且克服了它的缺点。在工厂方法模式中，核心的工厂类不再负责所有产品的创建，而是将具体创建工作交给子类去做。这个核心类仅仅负责给出具体工厂必须实现的接口，而不负责产品类被实例化这种细节，这使得工厂方法模式可以允许系统在不修改工厂角色的情况下引进新产品。</li>\n<li>工厂方法模式的主要优点是增加新的产品类时无须修改现有系统，并封装了产品对象的创建细节，系统具有良好的灵活性和可扩展性；其缺点在于增加新产品的同时需要增加新的工厂，导致系统类的个数成对增加，在一定程度上增加了系统的复杂性。</li>\n</ul>\n<p><img src=\"FactoryMethod.jpg\" alt=\"\"></p>\n<h2 id=\"抽象工厂模式\"><a href=\"#抽象工厂模式\" class=\"headerlink\" title=\"抽象工厂模式\"></a>抽象工厂模式</h2><p>最重要的概念：<strong>产品族</strong>。<br>抽象工厂模式适用情况包括：  </p>\n<ul>\n<li>一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；</li>\n<li>系统中有多于一个的产品族，而每次只使用其中某一产品族；</li>\n<li>属于同一个产品族的产品将在一起使用；</li>\n<li>系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。</li>\n</ul>\n<p><img src=\"AbatractFactory.jpg\" alt=\"\"></p>\n<h2 id=\"建造者模式\"><a href=\"#建造者模式\" class=\"headerlink\" title=\"建造者模式\"></a>建造者模式</h2><ul>\n<li>在建造者模式的结构中引入了一个指挥者类，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责控制产品的生成过程。指挥者针对抽象建造者编程，客户端只需要知道具体建造者的类型，即可通过指挥者类调用建造者的相关方法，返回一个完整的产品对象。</li>\n<li>建造者模式适用情况包括：需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性；需要生成的产品对象的属性相互依赖，需要指定其生成顺序；对象的创建过程独立于创建该对象的类；隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同类型的产品。</li>\n<li>建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。</li>\n</ul>\n<p><img src=\"Builder.jpg\" alt=\"\"></p>\n<h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><p>（略）</p>\n<h2 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h2><p>关键字： <code>- clone();</code>;</p>\n<h2 id=\"区分\"><a href=\"#区分\" class=\"headerlink\" title=\"区分\"></a>区分</h2><ol>\n<li>抽象工厂模式与建造者模式相似，都可以创建组复杂对象。主要的区别是Builder模式着重于一步步构建一个复杂对象。而Abstract Factory着重于多个系列的产品对象。Builder在最后一步返回产品（封装了产品的构建），而对于Abstract Factory来说，产品是立即返回的。</li>\n</ol>\n"},{"title":"[设计模式]创建型模式-2013","date":"2013-08-08T06:54:00.000Z","description":"阅读 Design Patterns - GoF 的笔记和感悟. 有些模式在表现上有相似之处, 或者在应用场合上的差异不是很明显. 我通过查阅其他资料, 加上自己的理解, 在此做一个总结.","_content":"\n见<http://www.cnblogs.com/jhzhu/p/3245809.html>","source":"_posts/技术/设计模式/创建型模式-2013.md","raw":"---\ntitle: \"[设计模式]创建型模式-2013\"\ndate: 2013-08-08 14:54:00\ntags: \n- 设计模式\n- creational\n- prototype\n- abstract factory\n- factory method\n- builder\n- singleton\ncategories: \n- 技术\ndescription: 阅读 Design Patterns - GoF 的笔记和感悟. 有些模式在表现上有相似之处, 或者在应用场合上的差异不是很明显. 我通过查阅其他资料, 加上自己的理解, 在此做一个总结.\n---\n\n见<http://www.cnblogs.com/jhzhu/p/3245809.html>","slug":"技术/设计模式/创建型模式-2013","published":1,"updated":"2017-07-26T15:22:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6l6p00jcq0d4tylsjhd5","content":"<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3245809.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3245809.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>见<a href=\"http://www.cnblogs.com/jhzhu/p/3245809.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/jhzhu/p/3245809.html</a></p>\n"},{"date":"2013-12-18T16:00:00.000Z","title":"[设计模式]结构型模式-2013","_content":"\n## Adapter(适配器)  \n在设计模式中，适配器模式（英语：adapter pattern）有时候也称包装样式或者包装。将一个类的接口转接成用户所期待的。一个适配使得因接口不兼容而不能在一起工作的类工作在一起，做法是将类别自己的接口包裹在一个已存在的类中。  \n有两类适配器模式：\n\n* 对象适配器模式 - 在这种适配器模式中，适配器容纳一个它我包裹的类的实例。在这种情况下，适配器调用被包裹对象的物理实体。\n* 类适配器模式 - 这种适配器模式下，适配器继承自已实现的类（一般多重继承）。\n\n\n## Bridge(桥接)\n在软件系统中，某些类型由于自身的逻辑，它具有两个或多个维度的变化，那么如何应对这种“多维度的变化”？如何利用面向对象的技术来使得该类型能够轻松的沿着多个方向进行变化，而又不引入额外的复杂度？这就要使用Bridge模式。\n\n### UML图例\n![]()\n![]()\n\n### 举个栗子\n比如一个动物`IAnimal`, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成`IMovable,IBreathable,IEatable,IBreedable`. 上面的四个接口, 每个接口都有若干种实现方式, 比如`IMovable`有`Swamable`,`Runnable`,`Fliable`三种实现方式. 这样, 我们**定义**或者说**添加**一种新动物`AnimalNew`的时候, 只需把对应的行为方式组装到`AnimalNew`中即可.\n\n深刻体会过的例子是游戏的**背包系统**. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips...等行为\n\n### 解决了什么问题\n  \n如果一个实体类的某个行为有多种实现方式, 我们一般用继承来协调他们. 假设一个实体类的有n种行为. 每种行为有f(n)种实现方式, 那么我们继承的代价就是n*f(n)。继承机制将抽象部分与他的实现部分固定在一起，使得难以对抽象部分和实现部分独立地进行修改、扩充和充用。  \n如果用桥接模式,把每种行为都抽象出来,则会更加灵活.  \n\n其实我觉得Bridge的本质就是把该抽象的都抽象出来,每个接口只表示一种行为. \n \n参考博客:\n\n* [设计模式-----桥接模式(Bridge Pattern)](http://www.cnblogs.com/houleixx/archive/2008/02/23/1078877.html)\n* [设计模式（六）桥连模式Bridge（结构型）](http://blog.csdn.net/hguisu/article/details/7529194)\n\n##\n","source":"_posts/技术/设计模式/结构型模式-2013.md","raw":"---\ndate: 2013-12-19 \ntitle: \"[设计模式]结构型模式-2013\"\ntags:\n- 设计模式\n- design\n- pattern\n- adapter\n- bridge\n- uml\ncategories: \n- 技术\n---\n\n## Adapter(适配器)  \n在设计模式中，适配器模式（英语：adapter pattern）有时候也称包装样式或者包装。将一个类的接口转接成用户所期待的。一个适配使得因接口不兼容而不能在一起工作的类工作在一起，做法是将类别自己的接口包裹在一个已存在的类中。  \n有两类适配器模式：\n\n* 对象适配器模式 - 在这种适配器模式中，适配器容纳一个它我包裹的类的实例。在这种情况下，适配器调用被包裹对象的物理实体。\n* 类适配器模式 - 这种适配器模式下，适配器继承自已实现的类（一般多重继承）。\n\n\n## Bridge(桥接)\n在软件系统中，某些类型由于自身的逻辑，它具有两个或多个维度的变化，那么如何应对这种“多维度的变化”？如何利用面向对象的技术来使得该类型能够轻松的沿着多个方向进行变化，而又不引入额外的复杂度？这就要使用Bridge模式。\n\n### UML图例\n![]()\n![]()\n\n### 举个栗子\n比如一个动物`IAnimal`, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成`IMovable,IBreathable,IEatable,IBreedable`. 上面的四个接口, 每个接口都有若干种实现方式, 比如`IMovable`有`Swamable`,`Runnable`,`Fliable`三种实现方式. 这样, 我们**定义**或者说**添加**一种新动物`AnimalNew`的时候, 只需把对应的行为方式组装到`AnimalNew`中即可.\n\n深刻体会过的例子是游戏的**背包系统**. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips...等行为\n\n### 解决了什么问题\n  \n如果一个实体类的某个行为有多种实现方式, 我们一般用继承来协调他们. 假设一个实体类的有n种行为. 每种行为有f(n)种实现方式, 那么我们继承的代价就是n*f(n)。继承机制将抽象部分与他的实现部分固定在一起，使得难以对抽象部分和实现部分独立地进行修改、扩充和充用。  \n如果用桥接模式,把每种行为都抽象出来,则会更加灵活.  \n\n其实我觉得Bridge的本质就是把该抽象的都抽象出来,每个接口只表示一种行为. \n \n参考博客:\n\n* [设计模式-----桥接模式(Bridge Pattern)](http://www.cnblogs.com/houleixx/archive/2008/02/23/1078877.html)\n* [设计模式（六）桥连模式Bridge（结构型）](http://blog.csdn.net/hguisu/article/details/7529194)\n\n##\n","slug":"技术/设计模式/结构型模式-2013","published":1,"updated":"2017-07-26T15:55:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6l6r00jeq0d43u5z15rc","content":"<h2 id=\"Adapter-适配器\"><a href=\"#Adapter-适配器\" class=\"headerlink\" title=\"Adapter(适配器)\"></a>Adapter(适配器)</h2><p>在设计模式中，适配器模式（英语：adapter pattern）有时候也称包装样式或者包装。将一个类的接口转接成用户所期待的。一个适配使得因接口不兼容而不能在一起工作的类工作在一起，做法是将类别自己的接口包裹在一个已存在的类中。<br>有两类适配器模式：</p>\n<ul>\n<li>对象适配器模式 - 在这种适配器模式中，适配器容纳一个它我包裹的类的实例。在这种情况下，适配器调用被包裹对象的物理实体。</li>\n<li>类适配器模式 - 这种适配器模式下，适配器继承自已实现的类（一般多重继承）。</li>\n</ul>\n<h2 id=\"Bridge-桥接\"><a href=\"#Bridge-桥接\" class=\"headerlink\" title=\"Bridge(桥接)\"></a>Bridge(桥接)</h2><p>在软件系统中，某些类型由于自身的逻辑，它具有两个或多个维度的变化，那么如何应对这种“多维度的变化”？如何利用面向对象的技术来使得该类型能够轻松的沿着多个方向进行变化，而又不引入额外的复杂度？这就要使用Bridge模式。</p>\n<h3 id=\"UML图例\"><a href=\"#UML图例\" class=\"headerlink\" title=\"UML图例\"></a>UML图例</h3><p><img src=\"\" alt=\"\"><br><img src=\"\" alt=\"\"></p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>比如一个动物<code>IAnimal</code>, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成<code>IMovable,IBreathable,IEatable,IBreedable</code>. 上面的四个接口, 每个接口都有若干种实现方式, 比如<code>IMovable</code>有<code>Swamable</code>,<code>Runnable</code>,<code>Fliable</code>三种实现方式. 这样, 我们<strong>定义</strong>或者说<strong>添加</strong>一种新动物<code>AnimalNew</code>的时候, 只需把对应的行为方式组装到<code>AnimalNew</code>中即可.</p>\n<p>深刻体会过的例子是游戏的<strong>背包系统</strong>. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips…等行为</p>\n<h3 id=\"解决了什么问题\"><a href=\"#解决了什么问题\" class=\"headerlink\" title=\"解决了什么问题\"></a>解决了什么问题</h3><p>如果一个实体类的某个行为有多种实现方式, 我们一般用继承来协调他们. 假设一个实体类的有n种行为. 每种行为有f(n)种实现方式, 那么我们继承的代价就是n*f(n)。继承机制将抽象部分与他的实现部分固定在一起，使得难以对抽象部分和实现部分独立地进行修改、扩充和充用。<br>如果用桥接模式,把每种行为都抽象出来,则会更加灵活.  </p>\n<p>其实我觉得Bridge的本质就是把该抽象的都抽象出来,每个接口只表示一种行为. </p>\n<p>参考博客:</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/houleixx/archive/2008/02/23/1078877.html\" target=\"_blank\" rel=\"external\">设计模式—–桥接模式(Bridge Pattern)</a></li>\n<li><a href=\"http://blog.csdn.net/hguisu/article/details/7529194\" target=\"_blank\" rel=\"external\">设计模式（六）桥连模式Bridge（结构型）</a></li>\n</ul>\n<p>##</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Adapter-适配器\"><a href=\"#Adapter-适配器\" class=\"headerlink\" title=\"Adapter(适配器)\"></a>Adapter(适配器)</h2><p>在设计模式中，适配器模式（英语：adapter pattern）有时候也称包装样式或者包装。将一个类的接口转接成用户所期待的。一个适配使得因接口不兼容而不能在一起工作的类工作在一起，做法是将类别自己的接口包裹在一个已存在的类中。<br>有两类适配器模式：</p>\n<ul>\n<li>对象适配器模式 - 在这种适配器模式中，适配器容纳一个它我包裹的类的实例。在这种情况下，适配器调用被包裹对象的物理实体。</li>\n<li>类适配器模式 - 这种适配器模式下，适配器继承自已实现的类（一般多重继承）。</li>\n</ul>\n<h2 id=\"Bridge-桥接\"><a href=\"#Bridge-桥接\" class=\"headerlink\" title=\"Bridge(桥接)\"></a>Bridge(桥接)</h2><p>在软件系统中，某些类型由于自身的逻辑，它具有两个或多个维度的变化，那么如何应对这种“多维度的变化”？如何利用面向对象的技术来使得该类型能够轻松的沿着多个方向进行变化，而又不引入额外的复杂度？这就要使用Bridge模式。</p>\n<h3 id=\"UML图例\"><a href=\"#UML图例\" class=\"headerlink\" title=\"UML图例\"></a>UML图例</h3><p><img src=\"\" alt=\"\"><br><img src=\"\" alt=\"\"></p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>比如一个动物<code>IAnimal</code>, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成<code>IMovable,IBreathable,IEatable,IBreedable</code>. 上面的四个接口, 每个接口都有若干种实现方式, 比如<code>IMovable</code>有<code>Swamable</code>,<code>Runnable</code>,<code>Fliable</code>三种实现方式. 这样, 我们<strong>定义</strong>或者说<strong>添加</strong>一种新动物<code>AnimalNew</code>的时候, 只需把对应的行为方式组装到<code>AnimalNew</code>中即可.</p>\n<p>深刻体会过的例子是游戏的<strong>背包系统</strong>. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips…等行为</p>\n<h3 id=\"解决了什么问题\"><a href=\"#解决了什么问题\" class=\"headerlink\" title=\"解决了什么问题\"></a>解决了什么问题</h3><p>如果一个实体类的某个行为有多种实现方式, 我们一般用继承来协调他们. 假设一个实体类的有n种行为. 每种行为有f(n)种实现方式, 那么我们继承的代价就是n*f(n)。继承机制将抽象部分与他的实现部分固定在一起，使得难以对抽象部分和实现部分独立地进行修改、扩充和充用。<br>如果用桥接模式,把每种行为都抽象出来,则会更加灵活.  </p>\n<p>其实我觉得Bridge的本质就是把该抽象的都抽象出来,每个接口只表示一种行为. </p>\n<p>参考博客:</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/houleixx/archive/2008/02/23/1078877.html\" target=\"_blank\" rel=\"external\">设计模式—–桥接模式(Bridge Pattern)</a></li>\n<li><a href=\"http://blog.csdn.net/hguisu/article/details/7529194\" target=\"_blank\" rel=\"external\">设计模式（六）桥连模式Bridge（结构型）</a></li>\n</ul>\n<p>##</p>\n"},{"date":"2016-03-07T16:00:00.000Z","title":"[设计模式]结构型模式","_content":"\n简要：开发中，有些知识我们只需学一次，在实际生产中又能得到频繁的使用。如果淡忘了，很容易能找回来，那就不需要记忆。比如Android的某个调用通知的API。还有一些知识，必须时刻记在脑子里，才有可能被用到。一旦淡忘了，就会越来越远离我们，并且实际的编码过程中也很难唤起记忆，那就需要我们经常复习。比如，设计模式。\n\n\n## 适配器模式\n\n最直观的理解就是：中英式转换插头。\n![](Adapter.jpg)\n\n\n## 桥接模式\n\n一个简单的例子：\n![](Bridge.png)\n\n理解桥接模式，重点需要理解如何将抽象化(Abstraction)与实现化(Implementation)脱耦，使得二者可以独立地变化。\n* 你不希望在抽象和它的实现部分之间有一个固定的绑定关系。例如这种情况可能是因为，在程序运行时刻实现部分应可以被选择或者切换。\n* 一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。虽然在系统中使用继承是没有问题的，但是由于抽象化角色和具体化角色需要独立变化，设计要求需要独立管理这两者。\n* 对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。\n\n模型图：\n![](Bridge.jpg)\n\n### 举个栗子\n比如一个动物`IAnimal`, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成`IMovable,IBreathable,IEatable,IBreedable`. 上面的四个接口, 每个接口都有若干种实现方式, 比如`IMovable`有`Swamable`,`Runnable`,`Fliable`三种实现方式. 这样, 我们**定义**或者说**添加**一种新动物`AnimalNew`的时候, 只需把对应的行为方式组装到`AnimalNew`中即可.\n\n深刻体会过的例子是游戏的**背包系统**. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips...等行为\n\n## 组合模式\n\n将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。\n\n最典型的例子是UI系统的树形结构。\n\n## 装饰模式\n\n一般有两种方式可以实现给一个类或对象增加行为：\n\n* 继承机制，使用继承机制是给现有类添加功能的一种有效途径，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有父类的方法。但是这种方法是静态的，用户不能控制增加行为的方式和时机。\n* 关联机制，即将一个类的对象嵌入另一个对象中，由另一个对象来决定是否调用嵌入对象的行为以便扩展自己的行为，我们称这个嵌入的对象为装饰器(Decorator)\n\n![](Decorator.jpg)\n\n\n最常见的例子：\n\n![](Decorator-Example.png)\n\n## 外观模式\n\n* 外观模式要求一个子系统的外部与其内部的通信通过一个统一的外观对象进行，外观类将客户端与子系统的内部复杂性分隔开，使得客户端只需要与外观对象打交道，而不需要与子系统内部的很多对象打交道。\n* 当要为一个复杂子系统提供一个简单接口时可以使用外观模式。该接口可以满足大多数用户的需求，而且用户也可以越过外观类直接访问子系统。\n* 客户程序与多个子系统之间存在很大的依赖性。引入外观类将子系统与客户以及其他子系统解耦，可以提高子系统的独立性和可移植性。\n\n![](Facade.jpg)\n\n\n直观的例子：\n\n![](Facade-Exmaple.png)\n\n## 享元模式\n\n最典型的例子，文字渲染程序：\n\n![](Flyweight-example.png)\n\n在以下情况下可以使用享元模式：\n\n* 一个系统有大量相同或者相似的对象，由于这类对象的大量使用，造成内存的大量耗费。\n* 对象的大部分状态都可以外部化，可以将这些外部状态传入对象中。\n* 使用享元模式需要维护一个存储享元对象的享元池，而这需要耗费资源，因此，应当在多次重复使用享元对象时才值得使用享元模式。\n* 并非所有的Flyweight子类都需要被共享。Flyweight接口使共享成为可能，但它并不强制共享。在Flyweight对象结构的某些层次，UnsharedConcreteFlyweight对象通常将ConcreteFlyweight对象作为子节点(Row和Column就是这样)。\n\n![](Flyweight.jpg)\n\n## 代理模式\n\n* 为其它对象提供一种代理以控制对这个对象的访问。对一个对象进行访问控制的一个原因是为了只有在我们确实需要这个对象时才对他进行创建和初始化。\n* 一些常见的可以使用Proxy模式的情况：\n    - 远程代理：为一个对象在不同的地址空间提供局部代表。\n    - 虚代理：根据需要创建开销很大的对象。\n    - 保护代理：控制对原始对象的访问。\n    - 智能指引：取代了简单的指针，他在访问对象时执行了一些附加的操作。\n\n\n![](Proxy.jpg)\n\n## 一些区分\n\n* Facade定义一个新的借口，而Adapter则复用一个原有的接口，让之前的两个接口能协同工作。\n* Decorator旨在不需要生成子类即可以给对象添加职责。这样就避免了静态实现所有功能组合，从而导致子类急剧增加。\n* Proxy的设计目的是，当直接访问一个实体不方便或者不符合需求时，为这个尸体提供一个替代者。\n\n","source":"_posts/技术/设计模式/结构型模式.md","raw":"---\ndate: 2016-03-08 \ntitle: \"[设计模式]结构型模式\"\ntags:\n- 设计模式\n- design\n- pattern\n- adapter\n- bridge\ncategories: \n- 技术\n---\n\n简要：开发中，有些知识我们只需学一次，在实际生产中又能得到频繁的使用。如果淡忘了，很容易能找回来，那就不需要记忆。比如Android的某个调用通知的API。还有一些知识，必须时刻记在脑子里，才有可能被用到。一旦淡忘了，就会越来越远离我们，并且实际的编码过程中也很难唤起记忆，那就需要我们经常复习。比如，设计模式。\n\n\n## 适配器模式\n\n最直观的理解就是：中英式转换插头。\n![](Adapter.jpg)\n\n\n## 桥接模式\n\n一个简单的例子：\n![](Bridge.png)\n\n理解桥接模式，重点需要理解如何将抽象化(Abstraction)与实现化(Implementation)脱耦，使得二者可以独立地变化。\n* 你不希望在抽象和它的实现部分之间有一个固定的绑定关系。例如这种情况可能是因为，在程序运行时刻实现部分应可以被选择或者切换。\n* 一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。虽然在系统中使用继承是没有问题的，但是由于抽象化角色和具体化角色需要独立变化，设计要求需要独立管理这两者。\n* 对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。\n\n模型图：\n![](Bridge.jpg)\n\n### 举个栗子\n比如一个动物`IAnimal`, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成`IMovable,IBreathable,IEatable,IBreedable`. 上面的四个接口, 每个接口都有若干种实现方式, 比如`IMovable`有`Swamable`,`Runnable`,`Fliable`三种实现方式. 这样, 我们**定义**或者说**添加**一种新动物`AnimalNew`的时候, 只需把对应的行为方式组装到`AnimalNew`中即可.\n\n深刻体会过的例子是游戏的**背包系统**. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips...等行为\n\n## 组合模式\n\n将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。\n\n最典型的例子是UI系统的树形结构。\n\n## 装饰模式\n\n一般有两种方式可以实现给一个类或对象增加行为：\n\n* 继承机制，使用继承机制是给现有类添加功能的一种有效途径，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有父类的方法。但是这种方法是静态的，用户不能控制增加行为的方式和时机。\n* 关联机制，即将一个类的对象嵌入另一个对象中，由另一个对象来决定是否调用嵌入对象的行为以便扩展自己的行为，我们称这个嵌入的对象为装饰器(Decorator)\n\n![](Decorator.jpg)\n\n\n最常见的例子：\n\n![](Decorator-Example.png)\n\n## 外观模式\n\n* 外观模式要求一个子系统的外部与其内部的通信通过一个统一的外观对象进行，外观类将客户端与子系统的内部复杂性分隔开，使得客户端只需要与外观对象打交道，而不需要与子系统内部的很多对象打交道。\n* 当要为一个复杂子系统提供一个简单接口时可以使用外观模式。该接口可以满足大多数用户的需求，而且用户也可以越过外观类直接访问子系统。\n* 客户程序与多个子系统之间存在很大的依赖性。引入外观类将子系统与客户以及其他子系统解耦，可以提高子系统的独立性和可移植性。\n\n![](Facade.jpg)\n\n\n直观的例子：\n\n![](Facade-Exmaple.png)\n\n## 享元模式\n\n最典型的例子，文字渲染程序：\n\n![](Flyweight-example.png)\n\n在以下情况下可以使用享元模式：\n\n* 一个系统有大量相同或者相似的对象，由于这类对象的大量使用，造成内存的大量耗费。\n* 对象的大部分状态都可以外部化，可以将这些外部状态传入对象中。\n* 使用享元模式需要维护一个存储享元对象的享元池，而这需要耗费资源，因此，应当在多次重复使用享元对象时才值得使用享元模式。\n* 并非所有的Flyweight子类都需要被共享。Flyweight接口使共享成为可能，但它并不强制共享。在Flyweight对象结构的某些层次，UnsharedConcreteFlyweight对象通常将ConcreteFlyweight对象作为子节点(Row和Column就是这样)。\n\n![](Flyweight.jpg)\n\n## 代理模式\n\n* 为其它对象提供一种代理以控制对这个对象的访问。对一个对象进行访问控制的一个原因是为了只有在我们确实需要这个对象时才对他进行创建和初始化。\n* 一些常见的可以使用Proxy模式的情况：\n    - 远程代理：为一个对象在不同的地址空间提供局部代表。\n    - 虚代理：根据需要创建开销很大的对象。\n    - 保护代理：控制对原始对象的访问。\n    - 智能指引：取代了简单的指针，他在访问对象时执行了一些附加的操作。\n\n\n![](Proxy.jpg)\n\n## 一些区分\n\n* Facade定义一个新的借口，而Adapter则复用一个原有的接口，让之前的两个接口能协同工作。\n* Decorator旨在不需要生成子类即可以给对象添加职责。这样就避免了静态实现所有功能组合，从而导致子类急剧增加。\n* Proxy的设计目的是，当直接访问一个实体不方便或者不符合需求时，为这个尸体提供一个替代者。\n\n","slug":"技术/设计模式/结构型模式","published":1,"updated":"2017-07-26T15:24:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6l6t00jgq0d4nbbo7355","content":"<p>简要：开发中，有些知识我们只需学一次，在实际生产中又能得到频繁的使用。如果淡忘了，很容易能找回来，那就不需要记忆。比如Android的某个调用通知的API。还有一些知识，必须时刻记在脑子里，才有可能被用到。一旦淡忘了，就会越来越远离我们，并且实际的编码过程中也很难唤起记忆，那就需要我们经常复习。比如，设计模式。</p>\n<h2 id=\"适配器模式\"><a href=\"#适配器模式\" class=\"headerlink\" title=\"适配器模式\"></a>适配器模式</h2><p>最直观的理解就是：中英式转换插头。<br><img src=\"Adapter.jpg\" alt=\"\"></p>\n<h2 id=\"桥接模式\"><a href=\"#桥接模式\" class=\"headerlink\" title=\"桥接模式\"></a>桥接模式</h2><p>一个简单的例子：<br><img src=\"Bridge.png\" alt=\"\"></p>\n<p>理解桥接模式，重点需要理解如何将抽象化(Abstraction)与实现化(Implementation)脱耦，使得二者可以独立地变化。</p>\n<ul>\n<li>你不希望在抽象和它的实现部分之间有一个固定的绑定关系。例如这种情况可能是因为，在程序运行时刻实现部分应可以被选择或者切换。</li>\n<li>一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。虽然在系统中使用继承是没有问题的，但是由于抽象化角色和具体化角色需要独立变化，设计要求需要独立管理这两者。</li>\n<li>对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。</li>\n</ul>\n<p>模型图：<br><img src=\"Bridge.jpg\" alt=\"\"></p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>比如一个动物<code>IAnimal</code>, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成<code>IMovable,IBreathable,IEatable,IBreedable</code>. 上面的四个接口, 每个接口都有若干种实现方式, 比如<code>IMovable</code>有<code>Swamable</code>,<code>Runnable</code>,<code>Fliable</code>三种实现方式. 这样, 我们<strong>定义</strong>或者说<strong>添加</strong>一种新动物<code>AnimalNew</code>的时候, 只需把对应的行为方式组装到<code>AnimalNew</code>中即可.</p>\n<p>深刻体会过的例子是游戏的<strong>背包系统</strong>. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips…等行为</p>\n<h2 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h2><p>将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。</p>\n<p>最典型的例子是UI系统的树形结构。</p>\n<h2 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h2><p>一般有两种方式可以实现给一个类或对象增加行为：</p>\n<ul>\n<li>继承机制，使用继承机制是给现有类添加功能的一种有效途径，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有父类的方法。但是这种方法是静态的，用户不能控制增加行为的方式和时机。</li>\n<li>关联机制，即将一个类的对象嵌入另一个对象中，由另一个对象来决定是否调用嵌入对象的行为以便扩展自己的行为，我们称这个嵌入的对象为装饰器(Decorator)</li>\n</ul>\n<p><img src=\"Decorator.jpg\" alt=\"\"></p>\n<p>最常见的例子：</p>\n<p><img src=\"Decorator-Example.png\" alt=\"\"></p>\n<h2 id=\"外观模式\"><a href=\"#外观模式\" class=\"headerlink\" title=\"外观模式\"></a>外观模式</h2><ul>\n<li>外观模式要求一个子系统的外部与其内部的通信通过一个统一的外观对象进行，外观类将客户端与子系统的内部复杂性分隔开，使得客户端只需要与外观对象打交道，而不需要与子系统内部的很多对象打交道。</li>\n<li>当要为一个复杂子系统提供一个简单接口时可以使用外观模式。该接口可以满足大多数用户的需求，而且用户也可以越过外观类直接访问子系统。</li>\n<li>客户程序与多个子系统之间存在很大的依赖性。引入外观类将子系统与客户以及其他子系统解耦，可以提高子系统的独立性和可移植性。</li>\n</ul>\n<p><img src=\"Facade.jpg\" alt=\"\"></p>\n<p>直观的例子：</p>\n<p><img src=\"Facade-Exmaple.png\" alt=\"\"></p>\n<h2 id=\"享元模式\"><a href=\"#享元模式\" class=\"headerlink\" title=\"享元模式\"></a>享元模式</h2><p>最典型的例子，文字渲染程序：</p>\n<p><img src=\"Flyweight-example.png\" alt=\"\"></p>\n<p>在以下情况下可以使用享元模式：</p>\n<ul>\n<li>一个系统有大量相同或者相似的对象，由于这类对象的大量使用，造成内存的大量耗费。</li>\n<li>对象的大部分状态都可以外部化，可以将这些外部状态传入对象中。</li>\n<li>使用享元模式需要维护一个存储享元对象的享元池，而这需要耗费资源，因此，应当在多次重复使用享元对象时才值得使用享元模式。</li>\n<li>并非所有的Flyweight子类都需要被共享。Flyweight接口使共享成为可能，但它并不强制共享。在Flyweight对象结构的某些层次，UnsharedConcreteFlyweight对象通常将ConcreteFlyweight对象作为子节点(Row和Column就是这样)。</li>\n</ul>\n<p><img src=\"Flyweight.jpg\" alt=\"\"></p>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><ul>\n<li>为其它对象提供一种代理以控制对这个对象的访问。对一个对象进行访问控制的一个原因是为了只有在我们确实需要这个对象时才对他进行创建和初始化。</li>\n<li>一些常见的可以使用Proxy模式的情况：<ul>\n<li>远程代理：为一个对象在不同的地址空间提供局部代表。</li>\n<li>虚代理：根据需要创建开销很大的对象。</li>\n<li>保护代理：控制对原始对象的访问。</li>\n<li>智能指引：取代了简单的指针，他在访问对象时执行了一些附加的操作。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"Proxy.jpg\" alt=\"\"></p>\n<h2 id=\"一些区分\"><a href=\"#一些区分\" class=\"headerlink\" title=\"一些区分\"></a>一些区分</h2><ul>\n<li>Facade定义一个新的借口，而Adapter则复用一个原有的接口，让之前的两个接口能协同工作。</li>\n<li>Decorator旨在不需要生成子类即可以给对象添加职责。这样就避免了静态实现所有功能组合，从而导致子类急剧增加。</li>\n<li>Proxy的设计目的是，当直接访问一个实体不方便或者不符合需求时，为这个尸体提供一个替代者。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>简要：开发中，有些知识我们只需学一次，在实际生产中又能得到频繁的使用。如果淡忘了，很容易能找回来，那就不需要记忆。比如Android的某个调用通知的API。还有一些知识，必须时刻记在脑子里，才有可能被用到。一旦淡忘了，就会越来越远离我们，并且实际的编码过程中也很难唤起记忆，那就需要我们经常复习。比如，设计模式。</p>\n<h2 id=\"适配器模式\"><a href=\"#适配器模式\" class=\"headerlink\" title=\"适配器模式\"></a>适配器模式</h2><p>最直观的理解就是：中英式转换插头。<br><img src=\"Adapter.jpg\" alt=\"\"></p>\n<h2 id=\"桥接模式\"><a href=\"#桥接模式\" class=\"headerlink\" title=\"桥接模式\"></a>桥接模式</h2><p>一个简单的例子：<br><img src=\"Bridge.png\" alt=\"\"></p>\n<p>理解桥接模式，重点需要理解如何将抽象化(Abstraction)与实现化(Implementation)脱耦，使得二者可以独立地变化。</p>\n<ul>\n<li>你不希望在抽象和它的实现部分之间有一个固定的绑定关系。例如这种情况可能是因为，在程序运行时刻实现部分应可以被选择或者切换。</li>\n<li>一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。虽然在系统中使用继承是没有问题的，但是由于抽象化角色和具体化角色需要独立变化，设计要求需要独立管理这两者。</li>\n<li>对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。</li>\n</ul>\n<p>模型图：<br><img src=\"Bridge.jpg\" alt=\"\"></p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>比如一个动物<code>IAnimal</code>, 有移动,呼吸,吃东西,繁殖四种行为.我们把这几种行为都抽象出来, 变成<code>IMovable,IBreathable,IEatable,IBreedable</code>. 上面的四个接口, 每个接口都有若干种实现方式, 比如<code>IMovable</code>有<code>Swamable</code>,<code>Runnable</code>,<code>Fliable</code>三种实现方式. 这样, 我们<strong>定义</strong>或者说<strong>添加</strong>一种新动物<code>AnimalNew</code>的时候, 只需把对应的行为方式组装到<code>AnimalNew</code>中即可.</p>\n<p>深刻体会过的例子是游戏的<strong>背包系统</strong>. 背包中每个物品有交易(买卖),穿戴(佩戴),损耗(随着某个变量而效果减少),作用(属性加成),生成tips…等行为</p>\n<h2 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h2><p>将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。</p>\n<p>最典型的例子是UI系统的树形结构。</p>\n<h2 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h2><p>一般有两种方式可以实现给一个类或对象增加行为：</p>\n<ul>\n<li>继承机制，使用继承机制是给现有类添加功能的一种有效途径，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有父类的方法。但是这种方法是静态的，用户不能控制增加行为的方式和时机。</li>\n<li>关联机制，即将一个类的对象嵌入另一个对象中，由另一个对象来决定是否调用嵌入对象的行为以便扩展自己的行为，我们称这个嵌入的对象为装饰器(Decorator)</li>\n</ul>\n<p><img src=\"Decorator.jpg\" alt=\"\"></p>\n<p>最常见的例子：</p>\n<p><img src=\"Decorator-Example.png\" alt=\"\"></p>\n<h2 id=\"外观模式\"><a href=\"#外观模式\" class=\"headerlink\" title=\"外观模式\"></a>外观模式</h2><ul>\n<li>外观模式要求一个子系统的外部与其内部的通信通过一个统一的外观对象进行，外观类将客户端与子系统的内部复杂性分隔开，使得客户端只需要与外观对象打交道，而不需要与子系统内部的很多对象打交道。</li>\n<li>当要为一个复杂子系统提供一个简单接口时可以使用外观模式。该接口可以满足大多数用户的需求，而且用户也可以越过外观类直接访问子系统。</li>\n<li>客户程序与多个子系统之间存在很大的依赖性。引入外观类将子系统与客户以及其他子系统解耦，可以提高子系统的独立性和可移植性。</li>\n</ul>\n<p><img src=\"Facade.jpg\" alt=\"\"></p>\n<p>直观的例子：</p>\n<p><img src=\"Facade-Exmaple.png\" alt=\"\"></p>\n<h2 id=\"享元模式\"><a href=\"#享元模式\" class=\"headerlink\" title=\"享元模式\"></a>享元模式</h2><p>最典型的例子，文字渲染程序：</p>\n<p><img src=\"Flyweight-example.png\" alt=\"\"></p>\n<p>在以下情况下可以使用享元模式：</p>\n<ul>\n<li>一个系统有大量相同或者相似的对象，由于这类对象的大量使用，造成内存的大量耗费。</li>\n<li>对象的大部分状态都可以外部化，可以将这些外部状态传入对象中。</li>\n<li>使用享元模式需要维护一个存储享元对象的享元池，而这需要耗费资源，因此，应当在多次重复使用享元对象时才值得使用享元模式。</li>\n<li>并非所有的Flyweight子类都需要被共享。Flyweight接口使共享成为可能，但它并不强制共享。在Flyweight对象结构的某些层次，UnsharedConcreteFlyweight对象通常将ConcreteFlyweight对象作为子节点(Row和Column就是这样)。</li>\n</ul>\n<p><img src=\"Flyweight.jpg\" alt=\"\"></p>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><ul>\n<li>为其它对象提供一种代理以控制对这个对象的访问。对一个对象进行访问控制的一个原因是为了只有在我们确实需要这个对象时才对他进行创建和初始化。</li>\n<li>一些常见的可以使用Proxy模式的情况：<ul>\n<li>远程代理：为一个对象在不同的地址空间提供局部代表。</li>\n<li>虚代理：根据需要创建开销很大的对象。</li>\n<li>保护代理：控制对原始对象的访问。</li>\n<li>智能指引：取代了简单的指针，他在访问对象时执行了一些附加的操作。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"Proxy.jpg\" alt=\"\"></p>\n<h2 id=\"一些区分\"><a href=\"#一些区分\" class=\"headerlink\" title=\"一些区分\"></a>一些区分</h2><ul>\n<li>Facade定义一个新的借口，而Adapter则复用一个原有的接口，让之前的两个接口能协同工作。</li>\n<li>Decorator旨在不需要生成子类即可以给对象添加职责。这样就避免了静态实现所有功能组合，从而导致子类急剧增加。</li>\n<li>Proxy的设计目的是，当直接访问一个实体不方便或者不符合需求时，为这个尸体提供一个替代者。</li>\n</ul>\n"},{"date":"2016-03-08T08:40:00.000Z","title":"[设计模式]行为模式","descprition":"开发中，有些知识我们只需学一次，在实际生产中又能得到频繁的使用。如果淡忘了，很容易能找回来，那就不需要记忆。比如Android的某个调用通知的API。还有一些知识，必须时刻记在脑子里，才有可能被用到。一旦淡忘了，就会越来越远离我们，并且实际的编码过程中也很难唤起记忆，那就需要我们经常复习。比如，设计模式。","_content":"\n## 职责链模式\n\n\n当客户提交一个请求时，请求沿链传递直至有一个ConcreteHandler对象负责处理它。\n\n典型的例子是UI系统的事件冒泡系统。\n\n\n## 命令模式\n\n\n* 命令模式允许请求的一方和接收的一方独立开来，使得请求的一方不必知道接收请求的一方的接口，更不必知道请求是怎么被接收，以及操作是否被执行、何时被执行，以及是怎么被执行的。\n* 命令模式使请求本身成为一个对象，这个对象和其他对象一样可以被存储和传递。\n* 命令模式的关键在于引入了抽象命令接口，且发送者针对抽象命令接口编程，只有实现了抽象命令接口的具体命令才能与接收者相关联。\n\n![](Command.jpg)\n\n最典型的例子是yii2框架里的Action。\n\n## 解释器模式\n\n(略)\n\n## 迭代器模式\n\n1. 它支持以不同方式遍历一个集合。\n2. 简化了集合的接口\n3. 在同一个集合上，可以同时有多个遍历。\n\n## 中介者模式\n\n用一个中介对象来封装一系列的对象交互。中介者是的各对象不需要显示地互相引用，从而使其耦合松散，而且可以独立的改变他们之间的交互。\n\n典型的例子：cocos2d-x 中的 cc::Director。\niOS中的Controller其实也是一个中介者。\n\n## 备忘录模式\n\n在不破坏封装性的前提下，捕获一个对象的内部状态，并在该独享之外保存这个状态，以便以后将对象恢复到之前的状态。\n\n![](Memento.png)\n\n## 观察者模式\n\n定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。\n\n![](Observer.png)\n\n典型的例子是常见的`addEventListener()`以及`MessageCenter`.\n\n## 状态模式\n\n允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。  \n\n在下面的两种情况下均可使用State模式:  \n* 一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它的行为。\n* 一个操作中含有庞大的多分支的条件语句,且这些分支依赖于该对象的状态。这个状\n态通常用一个或多个枚举常量表示。通常,有多个操作包含这一相同的条件结构。State模式将每一个条件分支放入一个独立的类中。这使得你可以根据对象自身的情况将对象的状态作为一个对象,这一对象可以不依赖于其他对象而独立变化。\n\n![](State.png)\n\n## 策略模式\n\n定义一系列的算法，把他们一个个封装起来，并且使他们可以相互替换。本模式使得算法可独立于使用它的客户端而变化。\n\n一个典型的例子是cocos2d-x中的`Render`。\n\n## 模板方法模式\n\n* 定义一个操作中的算法骨架，而将一些步骤延迟到子类中。TemplateMethod使得子类可以不改变一个算法的结构即可重定义改算法的某些特定步骤。\n* 一个模板方法用一些抽象的操作定义一个算法，而子类将重定义这些操作以提供具体的行为。\n\n\n## 访问者模式\n\n表示一个作用于某对象结构中的各元素的操作。他使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。\n\n![](Visitor.png)\n","source":"_posts/技术/设计模式/行为模式.md","raw":"---\ndate: 2016-03-08 16:40\ntitle: \"[设计模式]行为模式\"\ntags: \n- 设计模式 \n- design \n- pattern \ncategories: \n- 技术\ndescprition: 开发中，有些知识我们只需学一次，在实际生产中又能得到频繁的使用。如果淡忘了，很容易能找回来，那就不需要记忆。比如Android的某个调用通知的API。还有一些知识，必须时刻记在脑子里，才有可能被用到。一旦淡忘了，就会越来越远离我们，并且实际的编码过程中也很难唤起记忆，那就需要我们经常复习。比如，设计模式。\n---\n\n## 职责链模式\n\n\n当客户提交一个请求时，请求沿链传递直至有一个ConcreteHandler对象负责处理它。\n\n典型的例子是UI系统的事件冒泡系统。\n\n\n## 命令模式\n\n\n* 命令模式允许请求的一方和接收的一方独立开来，使得请求的一方不必知道接收请求的一方的接口，更不必知道请求是怎么被接收，以及操作是否被执行、何时被执行，以及是怎么被执行的。\n* 命令模式使请求本身成为一个对象，这个对象和其他对象一样可以被存储和传递。\n* 命令模式的关键在于引入了抽象命令接口，且发送者针对抽象命令接口编程，只有实现了抽象命令接口的具体命令才能与接收者相关联。\n\n![](Command.jpg)\n\n最典型的例子是yii2框架里的Action。\n\n## 解释器模式\n\n(略)\n\n## 迭代器模式\n\n1. 它支持以不同方式遍历一个集合。\n2. 简化了集合的接口\n3. 在同一个集合上，可以同时有多个遍历。\n\n## 中介者模式\n\n用一个中介对象来封装一系列的对象交互。中介者是的各对象不需要显示地互相引用，从而使其耦合松散，而且可以独立的改变他们之间的交互。\n\n典型的例子：cocos2d-x 中的 cc::Director。\niOS中的Controller其实也是一个中介者。\n\n## 备忘录模式\n\n在不破坏封装性的前提下，捕获一个对象的内部状态，并在该独享之外保存这个状态，以便以后将对象恢复到之前的状态。\n\n![](Memento.png)\n\n## 观察者模式\n\n定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。\n\n![](Observer.png)\n\n典型的例子是常见的`addEventListener()`以及`MessageCenter`.\n\n## 状态模式\n\n允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。  \n\n在下面的两种情况下均可使用State模式:  \n* 一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它的行为。\n* 一个操作中含有庞大的多分支的条件语句,且这些分支依赖于该对象的状态。这个状\n态通常用一个或多个枚举常量表示。通常,有多个操作包含这一相同的条件结构。State模式将每一个条件分支放入一个独立的类中。这使得你可以根据对象自身的情况将对象的状态作为一个对象,这一对象可以不依赖于其他对象而独立变化。\n\n![](State.png)\n\n## 策略模式\n\n定义一系列的算法，把他们一个个封装起来，并且使他们可以相互替换。本模式使得算法可独立于使用它的客户端而变化。\n\n一个典型的例子是cocos2d-x中的`Render`。\n\n## 模板方法模式\n\n* 定义一个操作中的算法骨架，而将一些步骤延迟到子类中。TemplateMethod使得子类可以不改变一个算法的结构即可重定义改算法的某些特定步骤。\n* 一个模板方法用一些抽象的操作定义一个算法，而子类将重定义这些操作以提供具体的行为。\n\n\n## 访问者模式\n\n表示一个作用于某对象结构中的各元素的操作。他使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。\n\n![](Visitor.png)\n","slug":"技术/设计模式/行为模式","published":1,"updated":"2017-07-26T15:26:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5ls6l6v00jiq0d4wluw7j5l","content":"<h2 id=\"职责链模式\"><a href=\"#职责链模式\" class=\"headerlink\" title=\"职责链模式\"></a>职责链模式</h2><p>当客户提交一个请求时，请求沿链传递直至有一个ConcreteHandler对象负责处理它。</p>\n<p>典型的例子是UI系统的事件冒泡系统。</p>\n<h2 id=\"命令模式\"><a href=\"#命令模式\" class=\"headerlink\" title=\"命令模式\"></a>命令模式</h2><ul>\n<li>命令模式允许请求的一方和接收的一方独立开来，使得请求的一方不必知道接收请求的一方的接口，更不必知道请求是怎么被接收，以及操作是否被执行、何时被执行，以及是怎么被执行的。</li>\n<li>命令模式使请求本身成为一个对象，这个对象和其他对象一样可以被存储和传递。</li>\n<li>命令模式的关键在于引入了抽象命令接口，且发送者针对抽象命令接口编程，只有实现了抽象命令接口的具体命令才能与接收者相关联。</li>\n</ul>\n<p><img src=\"Command.jpg\" alt=\"\"></p>\n<p>最典型的例子是yii2框架里的Action。</p>\n<h2 id=\"解释器模式\"><a href=\"#解释器模式\" class=\"headerlink\" title=\"解释器模式\"></a>解释器模式</h2><p>(略)</p>\n<h2 id=\"迭代器模式\"><a href=\"#迭代器模式\" class=\"headerlink\" title=\"迭代器模式\"></a>迭代器模式</h2><ol>\n<li>它支持以不同方式遍历一个集合。</li>\n<li>简化了集合的接口</li>\n<li>在同一个集合上，可以同时有多个遍历。</li>\n</ol>\n<h2 id=\"中介者模式\"><a href=\"#中介者模式\" class=\"headerlink\" title=\"中介者模式\"></a>中介者模式</h2><p>用一个中介对象来封装一系列的对象交互。中介者是的各对象不需要显示地互相引用，从而使其耦合松散，而且可以独立的改变他们之间的交互。</p>\n<p>典型的例子：cocos2d-x 中的 cc::Director。<br>iOS中的Controller其实也是一个中介者。</p>\n<h2 id=\"备忘录模式\"><a href=\"#备忘录模式\" class=\"headerlink\" title=\"备忘录模式\"></a>备忘录模式</h2><p>在不破坏封装性的前提下，捕获一个对象的内部状态，并在该独享之外保存这个状态，以便以后将对象恢复到之前的状态。</p>\n<p><img src=\"Memento.png\" alt=\"\"></p>\n<h2 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h2><p>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。</p>\n<p><img src=\"Observer.png\" alt=\"\"></p>\n<p>典型的例子是常见的<code>addEventListener()</code>以及<code>MessageCenter</code>.</p>\n<h2 id=\"状态模式\"><a href=\"#状态模式\" class=\"headerlink\" title=\"状态模式\"></a>状态模式</h2><p>允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。  </p>\n<p>在下面的两种情况下均可使用State模式:  </p>\n<ul>\n<li>一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它的行为。</li>\n<li>一个操作中含有庞大的多分支的条件语句,且这些分支依赖于该对象的状态。这个状<br>态通常用一个或多个枚举常量表示。通常,有多个操作包含这一相同的条件结构。State模式将每一个条件分支放入一个独立的类中。这使得你可以根据对象自身的情况将对象的状态作为一个对象,这一对象可以不依赖于其他对象而独立变化。</li>\n</ul>\n<p><img src=\"State.png\" alt=\"\"></p>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><p>定义一系列的算法，把他们一个个封装起来，并且使他们可以相互替换。本模式使得算法可独立于使用它的客户端而变化。</p>\n<p>一个典型的例子是cocos2d-x中的<code>Render</code>。</p>\n<h2 id=\"模板方法模式\"><a href=\"#模板方法模式\" class=\"headerlink\" title=\"模板方法模式\"></a>模板方法模式</h2><ul>\n<li>定义一个操作中的算法骨架，而将一些步骤延迟到子类中。TemplateMethod使得子类可以不改变一个算法的结构即可重定义改算法的某些特定步骤。</li>\n<li>一个模板方法用一些抽象的操作定义一个算法，而子类将重定义这些操作以提供具体的行为。</li>\n</ul>\n<h2 id=\"访问者模式\"><a href=\"#访问者模式\" class=\"headerlink\" title=\"访问者模式\"></a>访问者模式</h2><p>表示一个作用于某对象结构中的各元素的操作。他使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。</p>\n<p><img src=\"Visitor.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"职责链模式\"><a href=\"#职责链模式\" class=\"headerlink\" title=\"职责链模式\"></a>职责链模式</h2><p>当客户提交一个请求时，请求沿链传递直至有一个ConcreteHandler对象负责处理它。</p>\n<p>典型的例子是UI系统的事件冒泡系统。</p>\n<h2 id=\"命令模式\"><a href=\"#命令模式\" class=\"headerlink\" title=\"命令模式\"></a>命令模式</h2><ul>\n<li>命令模式允许请求的一方和接收的一方独立开来，使得请求的一方不必知道接收请求的一方的接口，更不必知道请求是怎么被接收，以及操作是否被执行、何时被执行，以及是怎么被执行的。</li>\n<li>命令模式使请求本身成为一个对象，这个对象和其他对象一样可以被存储和传递。</li>\n<li>命令模式的关键在于引入了抽象命令接口，且发送者针对抽象命令接口编程，只有实现了抽象命令接口的具体命令才能与接收者相关联。</li>\n</ul>\n<p><img src=\"Command.jpg\" alt=\"\"></p>\n<p>最典型的例子是yii2框架里的Action。</p>\n<h2 id=\"解释器模式\"><a href=\"#解释器模式\" class=\"headerlink\" title=\"解释器模式\"></a>解释器模式</h2><p>(略)</p>\n<h2 id=\"迭代器模式\"><a href=\"#迭代器模式\" class=\"headerlink\" title=\"迭代器模式\"></a>迭代器模式</h2><ol>\n<li>它支持以不同方式遍历一个集合。</li>\n<li>简化了集合的接口</li>\n<li>在同一个集合上，可以同时有多个遍历。</li>\n</ol>\n<h2 id=\"中介者模式\"><a href=\"#中介者模式\" class=\"headerlink\" title=\"中介者模式\"></a>中介者模式</h2><p>用一个中介对象来封装一系列的对象交互。中介者是的各对象不需要显示地互相引用，从而使其耦合松散，而且可以独立的改变他们之间的交互。</p>\n<p>典型的例子：cocos2d-x 中的 cc::Director。<br>iOS中的Controller其实也是一个中介者。</p>\n<h2 id=\"备忘录模式\"><a href=\"#备忘录模式\" class=\"headerlink\" title=\"备忘录模式\"></a>备忘录模式</h2><p>在不破坏封装性的前提下，捕获一个对象的内部状态，并在该独享之外保存这个状态，以便以后将对象恢复到之前的状态。</p>\n<p><img src=\"Memento.png\" alt=\"\"></p>\n<h2 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h2><p>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。</p>\n<p><img src=\"Observer.png\" alt=\"\"></p>\n<p>典型的例子是常见的<code>addEventListener()</code>以及<code>MessageCenter</code>.</p>\n<h2 id=\"状态模式\"><a href=\"#状态模式\" class=\"headerlink\" title=\"状态模式\"></a>状态模式</h2><p>允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。  </p>\n<p>在下面的两种情况下均可使用State模式:  </p>\n<ul>\n<li>一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它的行为。</li>\n<li>一个操作中含有庞大的多分支的条件语句,且这些分支依赖于该对象的状态。这个状<br>态通常用一个或多个枚举常量表示。通常,有多个操作包含这一相同的条件结构。State模式将每一个条件分支放入一个独立的类中。这使得你可以根据对象自身的情况将对象的状态作为一个对象,这一对象可以不依赖于其他对象而独立变化。</li>\n</ul>\n<p><img src=\"State.png\" alt=\"\"></p>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><p>定义一系列的算法，把他们一个个封装起来，并且使他们可以相互替换。本模式使得算法可独立于使用它的客户端而变化。</p>\n<p>一个典型的例子是cocos2d-x中的<code>Render</code>。</p>\n<h2 id=\"模板方法模式\"><a href=\"#模板方法模式\" class=\"headerlink\" title=\"模板方法模式\"></a>模板方法模式</h2><ul>\n<li>定义一个操作中的算法骨架，而将一些步骤延迟到子类中。TemplateMethod使得子类可以不改变一个算法的结构即可重定义改算法的某些特定步骤。</li>\n<li>一个模板方法用一些抽象的操作定义一个算法，而子类将重定义这些操作以提供具体的行为。</li>\n</ul>\n<h2 id=\"访问者模式\"><a href=\"#访问者模式\" class=\"headerlink\" title=\"访问者模式\"></a>访问者模式</h2><p>表示一个作用于某对象结构中的各元素的操作。他使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。</p>\n<p><img src=\"Visitor.png\" alt=\"\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/扯淡/Color公寓一周岁了/第一章海报.JPG","slug":"第一章海报.JPG","post":"cj5ls6kn3002dq0d43eyazze3","modified":1,"renderable":0},{"_id":"source/_posts/扯淡/我的技能树/我的技能树.png","post":"cj5ls6koh002uq0d4so266cp1","slug":"我的技能树.png","modified":1,"renderable":1},{"_id":"source/_posts/管理/技术领导者的任务/技术领导者的任务.png","post":"cj5ls6ks4006eq0d44wje75ga","slug":"技术领导者的任务.png","modified":1,"renderable":1},{"_id":"source/_posts/管理/Scrum项目管理规范/Scrum-backlog.png","post":"cj5ls6ks7006iq0d4ijh22jrf","slug":"Scrum-backlog.png","modified":1,"renderable":1},{"_id":"source/_posts/管理/Scrum项目管理规范/Scrum-task.png","post":"cj5ls6ks7006iq0d4ijh22jrf","slug":"Scrum-task.png","modified":1,"renderable":1},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_1.PNG","post":"cj5ls6kn3002dq0d43eyazze3","slug":"chat_log_1.PNG","modified":1,"renderable":1},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_2.PNG","post":"cj5ls6kn3002dq0d43eyazze3","slug":"chat_log_2.PNG","modified":1,"renderable":1},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_5.PNG","post":"cj5ls6kn3002dq0d43eyazze3","slug":"chat_log_5.PNG","modified":1,"renderable":1},{"_id":"source/_posts/扯淡/Color公寓一周岁了/chat_log_6.png","post":"cj5ls6kn3002dq0d43eyazze3","slug":"chat_log_6.png","modified":1,"renderable":1},{"_id":"source/_posts/扯淡/Color公寓一周岁了/first-version-web.png","slug":"first-version-web.png","post":"cj5ls6kn3002dq0d43eyazze3","modified":1,"renderable":0},{"_id":"source/_posts/扯淡/Color公寓一周岁了/第一个租客.JPG","post":"cj5ls6kn3002dq0d43eyazze3","slug":"第一个租客.JPG","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/创建型模式/AbatractFactory.jpg","post":"cj5ls6l6n00jbq0d4rzn21pg6","slug":"AbatractFactory.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/创建型模式/Builder.jpg","post":"cj5ls6l6n00jbq0d4rzn21pg6","slug":"Builder.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/创建型模式/FactoryMethod.jpg","post":"cj5ls6l6n00jbq0d4rzn21pg6","slug":"FactoryMethod.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/创建型模式/SimpleFactory.jpg","post":"cj5ls6l6n00jbq0d4rzn21pg6","slug":"SimpleFactory.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/行为模式/Command.jpg","post":"cj5ls6l6v00jiq0d4wluw7j5l","slug":"Command.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/行为模式/Memento.png","post":"cj5ls6l6v00jiq0d4wluw7j5l","slug":"Memento.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/行为模式/Observer.png","post":"cj5ls6l6v00jiq0d4wluw7j5l","slug":"Observer.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/行为模式/State.png","post":"cj5ls6l6v00jiq0d4wluw7j5l","slug":"State.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/行为模式/Visitor.png","post":"cj5ls6l6v00jiq0d4wluw7j5l","slug":"Visitor.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Adapter.jpg","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Adapter.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Bridge.jpg","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Bridge.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Bridge.png","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Bridge.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Decorator-Example.png","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Decorator-Example.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Decorator.jpg","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Decorator.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Facade-Exmaple.png","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Facade-Exmaple.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Facade.jpg","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Facade.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Flyweight-example.png","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Flyweight-example.png","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Flyweight.jpg","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Flyweight.jpg","modified":1,"renderable":1},{"_id":"source/_posts/技术/设计模式/结构型模式/Proxy.jpg","post":"cj5ls6l6t00jgq0d4nbbo7355","slug":"Proxy.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cj5ls6km20027q0d4a4gkoiuz","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6knh002iq0d49jxz6l34"},{"post_id":"cj5ls6kn3002dq0d43eyazze3","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6knm002mq0d471pvocut"},{"post_id":"cj5ls6knb002hq0d489i8btgf","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6kny002oq0d4qvdqqu5g"},{"post_id":"cj5ls6km90028q0d4m626u6g4","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6koa002rq0d4mntflsx9"},{"post_id":"cj5ls6knn002nq0d436mwkcx6","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6koh002tq0d4jbl6qxk5"},{"post_id":"cj5ls6kob002sq0d4vdyd7zqa","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6kou002xq0d4afziga6j"},{"post_id":"cj5ls6koh002uq0d4so266cp1","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6kox002zq0d41egmiqsm"},{"post_id":"cj5ls6kop002wq0d4g7vu5lab","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6koy0032q0d4podur920"},{"post_id":"cj5ls6kou002yq0d4cgddwox6","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6kp00035q0d4cdts8g4y"},{"post_id":"cj5ls6kox0030q0d4hh5e7b46","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6kp70039q0d4lm2z8y1g"},{"post_id":"cj5ls6koy0034q0d41hj4x3ma","category_id":"cj5ls6kmg0029q0d4y2f0fwjo","_id":"cj5ls6kpc003dq0d4sqfcyvgi"},{"post_id":"cj5ls6kpd003iq0d4at83qrl9","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kpk003pq0d44vaxiuzs"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kpn003sq0d4u1kczn50"},{"post_id":"cj5ls6kpe003kq0d475rusflk","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kpo003vq0d4obhrzjfk"},{"post_id":"cj5ls6kpg003oq0d4epex8uil","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kps003yq0d474v0vrxb"},{"post_id":"cj5ls6kp7003bq0d4dwcqpt7s","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kpt0042q0d4m85ttrb3"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kpv0045q0d40vn5dfoq"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kpy0048q0d47ousxkjq"},{"post_id":"cj5ls6kpc003fq0d4amr5s79o","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kq2004aq0d41dw44z70"},{"post_id":"cj5ls6kpo003xq0d4wdoe9p0q","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kq6004cq0d42w251t4p"},{"post_id":"cj5ls6kps0040q0d4jlgm4pl8","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqp004fq0d420750or6"},{"post_id":"cj5ls6kpu0044q0d4s4qpbydt","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqq004hq0d4gs482dut"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqr004kq0d4lmiypyvg"},{"post_id":"cj5ls6kq10049q0d4xmd5kis8","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqs004nq0d4312ehmzd"},{"post_id":"cj5ls6kq3004bq0d4np1zra85","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqt004rq0d4pdbifu6q"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqv004uq0d4ui1qe1rp"},{"post_id":"cj5ls6kqp004gq0d4pz3vwjmx","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kqy004yq0d4hu6knf17"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kr00051q0d4q6z7d6ky"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kr30053q0d4p52vqyeb"},{"post_id":"cj5ls6kqs004pq0d46eth2e7q","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kr60057q0d4y03dxvb7"},{"post_id":"cj5ls6kqt004tq0d4vf0cq7ls","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kr8005aq0d4eqkfo2wn"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6krb005eq0d4od2aa6d1"},{"post_id":"cj5ls6kqz0050q0d4x9s57wua","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6kri005hq0d4gsf6lzc7"},{"post_id":"cj5ls6kr00052q0d4psgap8cr","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6krm005lq0d4pff5jzrv"},{"post_id":"cj5ls6kr50055q0d41m7550lw","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6krp005oq0d4ayjjf86i"},{"post_id":"cj5ls6kr70058q0d4hviwwuhh","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6krr005sq0d4pxkah4xl"},{"post_id":"cj5ls6krc005fq0d4rmhgfnrz","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6krv005vq0d4shvygdd4"},{"post_id":"cj5ls6krj005iq0d4jl3yn5n8","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6krx005yq0d46r7qz8zy"},{"post_id":"cj5ls6krn005mq0d49irjj64u","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6ks10062q0d4z1hdq8du"},{"post_id":"cj5ls6krp005pq0d4iry1ah0x","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6ks30066q0d46od2zltg"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6ks4006aq0d466qslsq9"},{"post_id":"cj5ls6krv005wq0d4onz3k3gj","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6ks4006dq0d4y5b8coq8"},{"post_id":"cj5ls6ks4006bq0d4j0di4f69","category_id":"cj5ls6ks30065q0d4outln6l2","_id":"cj5ls6ks8006kq0d4wk6evllp"},{"post_id":"cj5ls6krx0060q0d4cqcjkuzn","category_id":"cj5ls6ks30065q0d4outln6l2","_id":"cj5ls6ksc006oq0d4qshn8xkz"},{"post_id":"cj5ls6ks4006eq0d44wje75ga","category_id":"cj5ls6ks30065q0d4outln6l2","_id":"cj5ls6ksf006rq0d4qz22cyar"},{"post_id":"cj5ls6ks7006iq0d4ijh22jrf","category_id":"cj5ls6ks30065q0d4outln6l2","_id":"cj5ls6ksj006vq0d477nzlorx"},{"post_id":"cj5ls6ks10063q0d42o3pf79u","category_id":"cj5ls6ks30065q0d4outln6l2","_id":"cj5ls6ksk006zq0d4719dzf6r"},{"post_id":"cj5ls6ks8006lq0d43jd1libm","category_id":"cj5ls6ks30065q0d4outln6l2","_id":"cj5ls6ksl0072q0d425uj0va7"},{"post_id":"cj5ls6ksk0070q0d49chhpkft","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksn0078q0d4afbi71gr"},{"post_id":"cj5ls6ksc006pq0d4qe9zz22v","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6kso007dq0d4pq5kek00"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksp007gq0d4upsj032e"},{"post_id":"cj5ls6ksm0077q0d4bx70ekqj","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksu007kq0d4opa2gbrl"},{"post_id":"cj5ls6ksf006sq0d4sf1ljvtj","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksv007mq0d4bp80s8sc"},{"post_id":"cj5ls6ksn007aq0d4i3m4yilz","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksw007oq0d4sxwm64cc"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksw007qq0d4r1f8609y"},{"post_id":"cj5ls6ksj006xq0d4katybaxh","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6ksy007rq0d40hfpe91x"},{"post_id":"cj5ls6ksp007iq0d44l0ebkzx","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6kt0007tq0d4a37gzwm6"},{"post_id":"cj5ls6ksv007nq0d4c25vvxo5","category_id":"cj5ls6ksi006uq0d4lovuif9j","_id":"cj5ls6kt0007uq0d462luep1r"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6l6t00jfq0d4dfpgyjw9"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6l6v00jhq0d4vh33s4ps"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6l6x00jkq0d49s5n69q7"},{"post_id":"cj5ls6l6t00jgq0d4nbbo7355","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6l6y00jmq0d4mzk7cya4"},{"post_id":"cj5ls6l6v00jiq0d4wluw7j5l","category_id":"cj5ls6kpc003cq0d4q36t30hl","_id":"cj5ls6l6y00jpq0d4knbvgs22"}],"PostTag":[{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jfe0003q0d4xn4pp780","_id":"cj5ls6jim000hq0d4v5lhg8gn"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jhg0006q0d4nijy2h8a","_id":"cj5ls6jiq000iq0d4cwhm46jn"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6jir000kq0d4utsub4jm"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jhk0008q0d469o7j23r","_id":"cj5ls6jis000lq0d41thw5syu"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jhq0009q0d4z71ducmx","_id":"cj5ls6jis000nq0d47uo4yial"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jht000aq0d4p9bzgvh1","_id":"cj5ls6jit000oq0d4roymzin5"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jhw000bq0d4tto2n4oa","_id":"cj5ls6jiu000qq0d4v07wviep"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6ji0000cq0d4ixmk9t4b","_id":"cj5ls6jiu000rq0d4kuzl2j9w"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jia000dq0d48ewzt5pk","_id":"cj5ls6jiv000tq0d4xjy7ud6x"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jie000eq0d42m334uka","_id":"cj5ls6jiv000uq0d4eh0qapbn"},{"post_id":"cj5ls6jf50000q0d4ha4qmye7","tag_id":"cj5ls6jif000fq0d4igghncmt","_id":"cj5ls6jiw000wq0d45wkrkzgs"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jfe0003q0d4xn4pp780","_id":"cj5ls6jj30013q0d4qqz2d9sw"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jhg0006q0d4nijy2h8a","_id":"cj5ls6jj30014q0d4i93d00iu"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6jj40016q0d4lnzhuc08"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jhk0008q0d469o7j23r","_id":"cj5ls6jj40017q0d4293ezj4g"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jhq0009q0d4z71ducmx","_id":"cj5ls6jj70019q0d4k1an0hdu"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jht000aq0d4p9bzgvh1","_id":"cj5ls6jj7001aq0d4nst63qap"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jhw000bq0d4tto2n4oa","_id":"cj5ls6jj9001cq0d4wnqbaad4"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6ji0000cq0d4ixmk9t4b","_id":"cj5ls6jja001dq0d4lf4vb5q8"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jia000dq0d48ewzt5pk","_id":"cj5ls6jja001fq0d4y65haohl"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jie000eq0d42m334uka","_id":"cj5ls6jjb001gq0d4fy47p574"},{"post_id":"cj5ls6jfc0002q0d4gcvxhlxq","tag_id":"cj5ls6jif000fq0d4igghncmt","_id":"cj5ls6jjb001iq0d4ym4ds8zm"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jfe0003q0d4xn4pp780","_id":"cj5ls6jjs001oq0d4k2isbxsn"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jhg0006q0d4nijy2h8a","_id":"cj5ls6jjs001pq0d4lecdih9u"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6jjs001qq0d4yb9lfrtu"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jhk0008q0d469o7j23r","_id":"cj5ls6jjs001rq0d4ltft3l0o"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jhq0009q0d4z71ducmx","_id":"cj5ls6jjs001sq0d4c7r5cnts"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jht000aq0d4p9bzgvh1","_id":"cj5ls6jjs001tq0d4yzqplu3c"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jhw000bq0d4tto2n4oa","_id":"cj5ls6jjt001uq0d4w0iulk4b"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6ji0000cq0d4ixmk9t4b","_id":"cj5ls6jjt001vq0d432nqzaoq"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jia000dq0d48ewzt5pk","_id":"cj5ls6jjt001wq0d4s8qzfkle"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jie000eq0d42m334uka","_id":"cj5ls6jjt001xq0d4ogcnklax"},{"post_id":"cj5ls6jfg0004q0d4ficaxwz0","tag_id":"cj5ls6jif000fq0d4igghncmt","_id":"cj5ls6jju001yq0d4k3vkbq6y"},{"post_id":"cj5ls6kkm0020q0d4cnmy2pwa","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6km20026q0d4ao1s0xdr"},{"post_id":"cj5ls6km20027q0d4a4gkoiuz","tag_id":"cj5ls6kmi002aq0d4l0b3zxsp","_id":"cj5ls6knb002gq0d4o3rqfdym"},{"post_id":"cj5ls6kn3002dq0d43eyazze3","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6knh002jq0d4j7lpj6r5"},{"post_id":"cj5ls6km90028q0d4m626u6g4","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6koy0033q0d45owxtomc"},{"post_id":"cj5ls6km90028q0d4m626u6g4","tag_id":"cj5ls6kn4002fq0d41ldavskq","_id":"cj5ls6kp00036q0d45uv5p7wr"},{"post_id":"cj5ls6km90028q0d4m626u6g4","tag_id":"cj5ls6knj002lq0d4zyx0i94a","_id":"cj5ls6kp7003aq0d4hi8uganv"},{"post_id":"cj5ls6km90028q0d4m626u6g4","tag_id":"cj5ls6ko8002qq0d4ca5ev296","_id":"cj5ls6kpc003eq0d4cximrphr"},{"post_id":"cj5ls6km90028q0d4m626u6g4","tag_id":"cj5ls6kop002vq0d4hkb9utrm","_id":"cj5ls6kpd003hq0d4ud4pix4t"},{"post_id":"cj5ls6knb002hq0d489i8btgf","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6kpe003jq0d4uhs8s953"},{"post_id":"cj5ls6knb002hq0d489i8btgf","tag_id":"cj5ls6koy0031q0d4k7c8r6vj","_id":"cj5ls6kpf003nq0d4ycj71fqv"},{"post_id":"cj5ls6knn002nq0d436mwkcx6","tag_id":"cj5ls6kp70038q0d4wvw7m158","_id":"cj5ls6kpo003wq0d4d5bwtge0"},{"post_id":"cj5ls6knn002nq0d436mwkcx6","tag_id":"cj5ls6kpd003gq0d4anv1bwai","_id":"cj5ls6kps003zq0d4zdx18sih"},{"post_id":"cj5ls6knn002nq0d436mwkcx6","tag_id":"cj5ls6kpf003mq0d44q1q0tby","_id":"cj5ls6kpt0043q0d4fp7cjxq4"},{"post_id":"cj5ls6knz002pq0d4o2ba7lzg","tag_id":"cj5ls6jfe0003q0d4xn4pp780","_id":"cj5ls6kqr004lq0d4fzg3d0w3"},{"post_id":"cj5ls6knz002pq0d4o2ba7lzg","tag_id":"cj5ls6kpo003uq0d44879rz17","_id":"cj5ls6kqs004oq0d45xlriqkx"},{"post_id":"cj5ls6knz002pq0d4o2ba7lzg","tag_id":"cj5ls6kpt0041q0d4wmtldj2k","_id":"cj5ls6kqt004sq0d475v6414u"},{"post_id":"cj5ls6knz002pq0d4o2ba7lzg","tag_id":"cj5ls6kpx0047q0d4buzmh7j2","_id":"cj5ls6kqv004vq0d44ynxzzym"},{"post_id":"cj5ls6knz002pq0d4o2ba7lzg","tag_id":"cj5ls6kq6004dq0d4i0rk2e3u","_id":"cj5ls6kqz004zq0d40e1g4jzl"},{"post_id":"cj5ls6kob002sq0d4vdyd7zqa","tag_id":"cj5ls6kqr004jq0d4v3u4w3nh","_id":"cj5ls6kr60056q0d4if2p3cox"},{"post_id":"cj5ls6kob002sq0d4vdyd7zqa","tag_id":"cj5ls6kqt004qq0d475lc9fko","_id":"cj5ls6kr80059q0d4mjbxd15p"},{"post_id":"cj5ls6kob002sq0d4vdyd7zqa","tag_id":"cj5ls6kqy004xq0d4ubtifirq","_id":"cj5ls6krb005dq0d4t7rn617d"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jfe0003q0d4xn4pp780","_id":"cj5ls6krg005gq0d4yxs68gn4"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jhg0006q0d4nijy2h8a","_id":"cj5ls6krm005kq0d4lh0f43v3"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6kr40054q0d409xm0wgr","_id":"cj5ls6krp005nq0d4t4sa20ha"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jhk0008q0d469o7j23r","_id":"cj5ls6krr005rq0d40fu8fa2k"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jhq0009q0d4z71ducmx","_id":"cj5ls6krv005uq0d49ldfmo2d"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jht000aq0d4p9bzgvh1","_id":"cj5ls6krw005xq0d4qkjclmvt"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jhw000bq0d4tto2n4oa","_id":"cj5ls6ks10061q0d4ramcz85b"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6ji0000cq0d4ixmk9t4b","_id":"cj5ls6ks20064q0d4znyovbdq"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jia000dq0d48ewzt5pk","_id":"cj5ls6ks40069q0d4a1hpsr0f"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jie000eq0d42m334uka","_id":"cj5ls6ks4006cq0d4t56f33z6"},{"post_id":"cj5ls6koh002uq0d4so266cp1","tag_id":"cj5ls6jif000fq0d4igghncmt","_id":"cj5ls6ks6006hq0d4vg173mrj"},{"post_id":"cj5ls6kop002wq0d4g7vu5lab","tag_id":"cj5ls6kr9005cq0d4ct02lkam","_id":"cj5ls6ks8006jq0d4aee83hzo"},{"post_id":"cj5ls6kop002wq0d4g7vu5lab","tag_id":"cj5ls6krm005jq0d47qlrbhd9","_id":"cj5ls6ksc006nq0d4fzig8y62"},{"post_id":"cj5ls6kop002wq0d4g7vu5lab","tag_id":"cj5ls6krq005qq0d46u65dw3b","_id":"cj5ls6kse006qq0d4svepaaxm"},{"post_id":"cj5ls6kou002yq0d4cgddwox6","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6ksi006tq0d4bd189bbc"},{"post_id":"cj5ls6kou002yq0d4cgddwox6","tag_id":"cj5ls6krx005zq0d4hdm5u5y5","_id":"cj5ls6ksk006yq0d44eduh5s7"},{"post_id":"cj5ls6kou002yq0d4cgddwox6","tag_id":"cj5ls6ks30068q0d48qmepbjm","_id":"cj5ls6ksl0071q0d4ecsf7cxw"},{"post_id":"cj5ls6kox0030q0d4hh5e7b46","tag_id":"cj5ls6ks6006gq0d46kidvr3r","_id":"cj5ls6ksm0076q0d4qi0cnivy"},{"post_id":"cj5ls6kox0030q0d4hh5e7b46","tag_id":"cj5ls6ksc006mq0d4j10oalm0","_id":"cj5ls6ksn0079q0d4y218j990"},{"post_id":"cj5ls6kox0030q0d4hh5e7b46","tag_id":"cj5ls6ksj006wq0d4rd59ibr9","_id":"cj5ls6ksp007eq0d4i2lvmd16"},{"post_id":"cj5ls6koy0034q0d41hj4x3ma","tag_id":"cj5ls6ksl0075q0d4pxehc1jz","_id":"cj5ls6ksp007hq0d4gnc7e90t"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","tag_id":"cj5ls6kso007cq0d4ifhap2d0","_id":"cj5ls6kt1007yq0d42hb6vvko"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","tag_id":"cj5ls6kst007jq0d4vr73kt16","_id":"cj5ls6kt1007zq0d4xhbq4ktl"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","tag_id":"cj5ls6ksw007pq0d41zkr12n3","_id":"cj5ls6kt30081q0d489eoiwi3"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","tag_id":"cj5ls6kt0007sq0d48ly1slcz","_id":"cj5ls6kt30082q0d4pae3ckgw"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","tag_id":"cj5ls6kt1007vq0d46yw8sltj","_id":"cj5ls6kt30084q0d42lp8cgmp"},{"post_id":"cj5ls6kp40037q0d4mz1chnqd","tag_id":"cj5ls6kt1007wq0d41i21cnyq","_id":"cj5ls6kt30085q0d4ouws77qa"},{"post_id":"cj5ls6kp7003bq0d4dwcqpt7s","tag_id":"cj5ls6kt1007xq0d4j4ibmh50","_id":"cj5ls6kt40089q0d4yak47jmx"},{"post_id":"cj5ls6kp7003bq0d4dwcqpt7s","tag_id":"cj5ls6kt20080q0d4ho1bnkj4","_id":"cj5ls6kt4008aq0d4xh002v11"},{"post_id":"cj5ls6kp7003bq0d4dwcqpt7s","tag_id":"cj5ls6kt30083q0d4y9lzvafj","_id":"cj5ls6kt5008cq0d4vj3yrms2"},{"post_id":"cj5ls6kp7003bq0d4dwcqpt7s","tag_id":"cj5ls6kt30086q0d4ioy8hfx7","_id":"cj5ls6kt5008dq0d40mmem6vw"},{"post_id":"cj5ls6kp7003bq0d4dwcqpt7s","tag_id":"cj5ls6kt30087q0d48fgrbhnp","_id":"cj5ls6kt5008fq0d4xs401te9"},{"post_id":"cj5ls6kpc003fq0d4amr5s79o","tag_id":"cj5ls6kso007cq0d4ifhap2d0","_id":"cj5ls6kt6008hq0d42s4qisor"},{"post_id":"cj5ls6kpc003fq0d4amr5s79o","tag_id":"cj5ls6kst007jq0d4vr73kt16","_id":"cj5ls6kt7008iq0d47gbvp2l3"},{"post_id":"cj5ls6kpc003fq0d4amr5s79o","tag_id":"cj5ls6kt5008eq0d4sprzholr","_id":"cj5ls6kt8008kq0d4u7mt79is"},{"post_id":"cj5ls6kpd003iq0d4at83qrl9","tag_id":"cj5ls6kso007cq0d4ifhap2d0","_id":"cj5ls6kta008mq0d48ng8ul2c"},{"post_id":"cj5ls6kpd003iq0d4at83qrl9","tag_id":"cj5ls6kt7008jq0d46mrhlj3o","_id":"cj5ls6ktb008nq0d46b7genu6"},{"post_id":"cj5ls6kpe003kq0d475rusflk","tag_id":"cj5ls6kt9008lq0d4yr1u46w2","_id":"cj5ls6ktb008qq0d4aa32dezl"},{"post_id":"cj5ls6kpe003kq0d475rusflk","tag_id":"cj5ls6jhq0009q0d4z71ducmx","_id":"cj5ls6ktb008rq0d4lin8u789"},{"post_id":"cj5ls6kpe003kq0d475rusflk","tag_id":"cj5ls6ktb008oq0d41zhhnhy3","_id":"cj5ls6ktc008tq0d4zcl7exc4"},{"post_id":"cj5ls6kpg003oq0d4epex8uil","tag_id":"cj5ls6ktb008pq0d4llymsrwb","_id":"cj5ls6ktc008xq0d4lsb3jhwe"},{"post_id":"cj5ls6kpg003oq0d4epex8uil","tag_id":"cj5ls6ktc008sq0d4cnm4iqtq","_id":"cj5ls6ktc008yq0d47laszapp"},{"post_id":"cj5ls6kpg003oq0d4epex8uil","tag_id":"cj5ls6ktc008uq0d40k8hjxja","_id":"cj5ls6ktd0090q0d4v81vgyku"},{"post_id":"cj5ls6kpg003oq0d4epex8uil","tag_id":"cj5ls6ktc008vq0d4tcb1y7fy","_id":"cj5ls6ktd0091q0d4mze6ht7f"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktc008wq0d4rmh4cnyf","_id":"cj5ls6kth0099q0d4zpbzv133"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktd008zq0d4w67ythzh","_id":"cj5ls6kti009aq0d4fb0slbuo"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktd0092q0d4mywctlja","_id":"cj5ls6kti009cq0d46hrf8s8m"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktd0093q0d46bzp8xvd","_id":"cj5ls6kti009dq0d477fvu8j3"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6kte0094q0d4zyyraeve","_id":"cj5ls6kti009fq0d4xedfwlrm"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktf0095q0d43hax3vt3","_id":"cj5ls6kti009gq0d4wah3x63h"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktg0096q0d4tkjdp4z8","_id":"cj5ls6ktj009iq0d4l21d46a8"},{"post_id":"cj5ls6kpk003qq0d435aj26yk","tag_id":"cj5ls6ktg0097q0d4muw7poyw","_id":"cj5ls6ktj009jq0d4zf5h1saa"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","tag_id":"cj5ls6ktc008wq0d4rmh4cnyf","_id":"cj5ls6ktk009nq0d4ltu77uix"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","tag_id":"cj5ls6kti009bq0d4rbh6hbhx","_id":"cj5ls6ktk009oq0d4vm0b218r"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","tag_id":"cj5ls6ktc008sq0d4cnm4iqtq","_id":"cj5ls6ktl009qq0d43f003zlq"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","tag_id":"cj5ls6kti009hq0d4no6si209","_id":"cj5ls6ktl009rq0d4ehk4mged"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","tag_id":"cj5ls6ktc008uq0d40k8hjxja","_id":"cj5ls6kto009tq0d4ski9qk09"},{"post_id":"cj5ls6kpn003tq0d4s04q9rok","tag_id":"cj5ls6ktc008vq0d4tcb1y7fy","_id":"cj5ls6ktp009uq0d4jgjudndx"},{"post_id":"cj5ls6kpo003xq0d4wdoe9p0q","tag_id":"cj5ls6ktj009mq0d4r4xc9abt","_id":"cj5ls6kts009wq0d4ze7t4hyu"},{"post_id":"cj5ls6kpo003xq0d4wdoe9p0q","tag_id":"cj5ls6ktk009pq0d428g7zcbv","_id":"cj5ls6kts009xq0d4r1rh5r95"},{"post_id":"cj5ls6kpo003xq0d4wdoe9p0q","tag_id":"cj5ls6ktl009sq0d455c8cxn6","_id":"cj5ls6kts009zq0d4qip78tkm"},{"post_id":"cj5ls6kps0040q0d4jlgm4pl8","tag_id":"cj5ls6ktb008pq0d4llymsrwb","_id":"cj5ls6ktt00a3q0d41500nheb"},{"post_id":"cj5ls6kps0040q0d4jlgm4pl8","tag_id":"cj5ls6kts009yq0d48i6but03","_id":"cj5ls6ktt00a4q0d4bw9429h7"},{"post_id":"cj5ls6kps0040q0d4jlgm4pl8","tag_id":"cj5ls6kts00a0q0d4dwg1hk0f","_id":"cj5ls6ktt00a6q0d4i5nonjb3"},{"post_id":"cj5ls6kps0040q0d4jlgm4pl8","tag_id":"cj5ls6kts00a1q0d4rf8m6o5j","_id":"cj5ls6ktu00a7q0d41ja71k05"},{"post_id":"cj5ls6kpu0044q0d4s4qpbydt","tag_id":"cj5ls6ktb008pq0d4llymsrwb","_id":"cj5ls6ktw00abq0d42jxq6107"},{"post_id":"cj5ls6kpu0044q0d4s4qpbydt","tag_id":"cj5ls6ktc008wq0d4rmh4cnyf","_id":"cj5ls6ktx00acq0d4uuko3kor"},{"post_id":"cj5ls6kpu0044q0d4s4qpbydt","tag_id":"cj5ls6ktu00a8q0d4abn9557t","_id":"cj5ls6ktx00aeq0d4wtxaoqfy"},{"post_id":"cj5ls6kpu0044q0d4s4qpbydt","tag_id":"cj5ls6ktu00a9q0d40hb9f5oo","_id":"cj5ls6kty00afq0d4eto2ptmp"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6ktc008wq0d4rmh4cnyf","_id":"cj5ls6ktz00amq0d4l4rqm8i6"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6ktc008vq0d4tcb1y7fy","_id":"cj5ls6ktz00anq0d4ck7j05gq"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6kty00agq0d40k8s14xa","_id":"cj5ls6ktz00apq0d4ijgc8qgf"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6kty00ahq0d4cqr7wmvg","_id":"cj5ls6ktz00aqq0d4yb95xe76"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6kty00aiq0d4bxsto5m4","_id":"cj5ls6ku000asq0d4kd58ghi4"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6kty00ajq0d49yd4mn6q","_id":"cj5ls6ku000atq0d4spn2yhge"},{"post_id":"cj5ls6kpv0046q0d4zbbp1kl7","tag_id":"cj5ls6kty00akq0d4miinknix","_id":"cj5ls6ku200avq0d44u3lhrod"},{"post_id":"cj5ls6kq10049q0d4xmd5kis8","tag_id":"cj5ls6ktb008pq0d4llymsrwb","_id":"cj5ls6ku200awq0d4453g6wx0"},{"post_id":"cj5ls6kq10049q0d4xmd5kis8","tag_id":"cj5ls6ktz00aoq0d4lgqru0wu","_id":"cj5ls6ku300ayq0d41gcbwb3m"},{"post_id":"cj5ls6kq10049q0d4xmd5kis8","tag_id":"cj5ls6ktc008wq0d4rmh4cnyf","_id":"cj5ls6ku300azq0d49x54wyh1"},{"post_id":"cj5ls6kq3004bq0d4np1zra85","tag_id":"cj5ls6ku000auq0d48ltquzqb","_id":"cj5ls6ku500b1q0d4ua23ig2d"},{"post_id":"cj5ls6kq3004bq0d4np1zra85","tag_id":"cj5ls6ku200axq0d4s1n48qov","_id":"cj5ls6ku800b2q0d4ooc3595b"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6ku300b0q0d42o5bhew2","_id":"cj5ls6kue00baq0d4vwju1yr2"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6ku800b3q0d4pjhb8mko","_id":"cj5ls6kue00bbq0d4ht8a2k9q"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6ku800b4q0d4lc4vuvnk","_id":"cj5ls6kue00bdq0d41n19g4hk"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6ku900b5q0d4ctdq5hib","_id":"cj5ls6kue00beq0d44yq3riyl"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6kua00b6q0d4u13s4hcj","_id":"cj5ls6kue00bgq0d4vcfcxwtl"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6kub00b7q0d4s6dowgwn","_id":"cj5ls6kue00bhq0d4ww3hx49o"},{"post_id":"cj5ls6kq7004eq0d4agu15r5w","tag_id":"cj5ls6kub00b8q0d4yd3k48jy","_id":"cj5ls6kue00bjq0d44z2ng621"},{"post_id":"cj5ls6kqp004gq0d4pz3vwjmx","tag_id":"cj5ls6kuc00b9q0d4cm02fbbt","_id":"cj5ls6kug00bmq0d47boqry44"},{"post_id":"cj5ls6kqp004gq0d4pz3vwjmx","tag_id":"cj5ls6kue00bcq0d4emejjkfh","_id":"cj5ls6kug00bnq0d45cieae6m"},{"post_id":"cj5ls6kqp004gq0d4pz3vwjmx","tag_id":"cj5ls6kue00bfq0d41vxugopo","_id":"cj5ls6kug00bpq0d4tiep4stl"},{"post_id":"cj5ls6kqp004gq0d4pz3vwjmx","tag_id":"cj5ls6kue00biq0d4b5bl0azb","_id":"cj5ls6kug00bqq0d4u2dwsstp"},{"post_id":"cj5ls6kqp004gq0d4pz3vwjmx","tag_id":"cj5ls6kuf00bkq0d4f9vqjfu8","_id":"cj5ls6kug00bsq0d4iarzcoqt"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6kui00byq0d4v4asxcuw"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kuf00blq0d45p92svia","_id":"cj5ls6kui00bzq0d4z2n47nba"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kug00boq0d4jc6hh5j2","_id":"cj5ls6kui00c1q0d43wsfzl7h"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kug00brq0d4u5sp964g","_id":"cj5ls6kui00c2q0d4aslgqdh4"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kug00btq0d4ak77qjvn","_id":"cj5ls6kuj00c4q0d4n4n8rfzs"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kug00buq0d47vt6v7l2","_id":"cj5ls6kuj00c5q0d40028p5de"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kuh00bvq0d4wp4sg2la","_id":"cj5ls6kuj00c7q0d4x9ujz8vt"},{"post_id":"cj5ls6kqq004iq0d4rvhht6y1","tag_id":"cj5ls6kuh00bwq0d44felwcqi","_id":"cj5ls6kuk00c8q0d4ey4y1jwk"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6kup00cdq0d4jni7uulr"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kuh00bxq0d4250ixgya","_id":"cj5ls6kup00ceq0d4trswel1j"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kui00c0q0d464a6zxdo","_id":"cj5ls6kup00cgq0d4ykui54g8"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kuj00c3q0d4q80xhr5n","_id":"cj5ls6kup00chq0d45a0yzlxh"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kuj00c6q0d4lacambkq","_id":"cj5ls6kup00cjq0d47qez8fvf"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kuk00c9q0d4yfp8hsls","_id":"cj5ls6kup00ckq0d4cf0qs9jk"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kul00caq0d42ocv66ju","_id":"cj5ls6kup00cmq0d4mgeklzok"},{"post_id":"cj5ls6kqr004mq0d4licl8zw7","tag_id":"cj5ls6kun00cbq0d4t1v4q2hk","_id":"cj5ls6kup00cnq0d4ae5yooib"},{"post_id":"cj5ls6kqs004pq0d46eth2e7q","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6kuq00cpq0d4dq4k65qw"},{"post_id":"cj5ls6kqs004pq0d46eth2e7q","tag_id":"cj5ls6kuo00ccq0d4lbfov6ua","_id":"cj5ls6kuq00cqq0d4zeperjlb"},{"post_id":"cj5ls6kqs004pq0d46eth2e7q","tag_id":"cj5ls6kup00cfq0d4i5bvj3h4","_id":"cj5ls6kuq00csq0d45cxprjm3"},{"post_id":"cj5ls6kqs004pq0d46eth2e7q","tag_id":"cj5ls6kup00ciq0d4z8e7ued3","_id":"cj5ls6kuq00ctq0d4xs39kn9g"},{"post_id":"cj5ls6kqs004pq0d46eth2e7q","tag_id":"cj5ls6kup00clq0d4e5s6326y","_id":"cj5ls6kur00cvq0d4zj3mmm4u"},{"post_id":"cj5ls6kqt004tq0d4vf0cq7ls","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6kuu00cyq0d48ia0xjiz"},{"post_id":"cj5ls6kqt004tq0d4vf0cq7ls","tag_id":"cj5ls6kup00coq0d4oeeoxaus","_id":"cj5ls6kuu00czq0d4uqxxp879"},{"post_id":"cj5ls6kqt004tq0d4vf0cq7ls","tag_id":"cj5ls6kuq00crq0d4iu71m9ok","_id":"cj5ls6kuv00d1q0d4h0uukjgb"},{"post_id":"cj5ls6kqt004tq0d4vf0cq7ls","tag_id":"cj5ls6kuq00cuq0d4s4y5xoxn","_id":"cj5ls6kuv00d2q0d477jer72g"},{"post_id":"cj5ls6kqt004tq0d4vf0cq7ls","tag_id":"cj5ls6kur00cwq0d4ga1sg4n0","_id":"cj5ls6kuv00d4q0d4h3i4xaou"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kut00cxq0d4hf27sxey","_id":"cj5ls6kux00dbq0d4wrnvjmg4"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kuu00d0q0d4htw9eifr","_id":"cj5ls6kux00dcq0d42ag0zslw"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kug00boq0d4jc6hh5j2","_id":"cj5ls6kux00deq0d45e93xdm4"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kuv00d5q0d4lus7y65f","_id":"cj5ls6kuy00dfq0d4lrhvvaf6"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kuw00d6q0d4yng436so","_id":"cj5ls6kuy00dhq0d414cuo41y"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kuw00d7q0d446fncju6","_id":"cj5ls6kuy00diq0d4hxditomn"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kuw00d8q0d4g6lj05lu","_id":"cj5ls6kuy00dkq0d4v3i3vqri"},{"post_id":"cj5ls6kqv004wq0d4lo7st0nn","tag_id":"cj5ls6kuw00d9q0d4wrkgs8ct","_id":"cj5ls6kuy00dlq0d4efex9gll"},{"post_id":"cj5ls6kqz0050q0d4x9s57wua","tag_id":"cj5ls6jhi0007q0d4bhpzjxdi","_id":"cj5ls6kuz00dnq0d4seu1mqua"},{"post_id":"cj5ls6kqz0050q0d4x9s57wua","tag_id":"cj5ls6kuw00daq0d49e0r4s40","_id":"cj5ls6kuz00doq0d4wa0hrqhn"},{"post_id":"cj5ls6kqz0050q0d4x9s57wua","tag_id":"cj5ls6kux00ddq0d4zgslxvdb","_id":"cj5ls6kuz00dqq0d4ochrzcok"},{"post_id":"cj5ls6kqz0050q0d4x9s57wua","tag_id":"cj5ls6kuy00dgq0d4zeoxaq8u","_id":"cj5ls6kv000drq0d4kduwfi5h"},{"post_id":"cj5ls6kqz0050q0d4x9s57wua","tag_id":"cj5ls6kuy00djq0d4z5mf5871","_id":"cj5ls6kv000dtq0d43b0jpf80"},{"post_id":"cj5ls6kr00052q0d4psgap8cr","tag_id":"cj5ls6kuy00dmq0d4g6jhqcyg","_id":"cj5ls6kv600dvq0d4dsurkp2q"},{"post_id":"cj5ls6kr00052q0d4psgap8cr","tag_id":"cj5ls6kuz00dpq0d4nm3sxrmx","_id":"cj5ls6kv600dwq0d4f0q9g26z"},{"post_id":"cj5ls6kr00052q0d4psgap8cr","tag_id":"cj5ls6kv000dsq0d4c4f59dd2","_id":"cj5ls6kv800dyq0d4p84vb2xl"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kut00cxq0d4hf27sxey","_id":"cj5ls6kvd00e5q0d4h64b6tp5"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kuu00d0q0d4htw9eifr","_id":"cj5ls6kve00e6q0d4gh1qqbjs"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kv800dzq0d4k74nn65y","_id":"cj5ls6kve00e8q0d4fk8w1rky"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kvc00e0q0d4xhsynxrr","_id":"cj5ls6kve00e9q0d4zh91gs9e"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kvc00e1q0d4jicexmdl","_id":"cj5ls6kve00ebq0d46l9jm2ed"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kvc00e2q0d442b3zxuf","_id":"cj5ls6kve00ecq0d4b8ihasl7"},{"post_id":"cj5ls6kr50055q0d41m7550lw","tag_id":"cj5ls6kvc00e3q0d41jmtoitj","_id":"cj5ls6kvf00eeq0d4d6kycatc"},{"post_id":"cj5ls6kr70058q0d4hviwwuhh","tag_id":"cj5ls6kut00cxq0d4hf27sxey","_id":"cj5ls6kvg00ehq0d4ozdts3jt"},{"post_id":"cj5ls6kr70058q0d4hviwwuhh","tag_id":"cj5ls6kve00e7q0d42itshyex","_id":"cj5ls6kvh00eiq0d447druafb"},{"post_id":"cj5ls6kr70058q0d4hviwwuhh","tag_id":"cj5ls6kve00eaq0d4vgiu97dl","_id":"cj5ls6kvh00ekq0d4vcmfxgrv"},{"post_id":"cj5ls6kr70058q0d4hviwwuhh","tag_id":"cj5ls6kve00edq0d4di7rxfzc","_id":"cj5ls6kvi00elq0d4k2fjgo3q"},{"post_id":"cj5ls6kr70058q0d4hviwwuhh","tag_id":"cj5ls6kvf00efq0d4dawocph5","_id":"cj5ls6kvk00enq0d427469gyi"},{"post_id":"cj5ls6kr9005bq0d45vrej73o","tag_id":"cj5ls6kvf00egq0d4t4j7oih2","_id":"cj5ls6kvm00epq0d4jz8erwvg"},{"post_id":"cj5ls6kr9005bq0d45vrej73o","tag_id":"cj5ls6kvh00ejq0d48j1u53ah","_id":"cj5ls6kvm00eqq0d4zvq5l3o9"},{"post_id":"cj5ls6kr9005bq0d45vrej73o","tag_id":"cj5ls6kvi00emq0d4cgfq1mt2","_id":"cj5ls6kvm00esq0d4x6wdn3d6"},{"post_id":"cj5ls6krc005fq0d4rmhgfnrz","tag_id":"cj5ls6kvf00egq0d4t4j7oih2","_id":"cj5ls6kvn00euq0d4bn0eke2j"},{"post_id":"cj5ls6krc005fq0d4rmhgfnrz","tag_id":"cj5ls6kvm00erq0d4g4lh93my","_id":"cj5ls6kvn00evq0d4hyfjws95"},{"post_id":"cj5ls6krj005iq0d4jl3yn5n8","tag_id":"cj5ls6kvf00egq0d4t4j7oih2","_id":"cj5ls6kvs00f1q0d4njihy8kz"},{"post_id":"cj5ls6krj005iq0d4jl3yn5n8","tag_id":"cj5ls6kvn00ewq0d4dw6ihitr","_id":"cj5ls6kvs00f2q0d480xr7hh9"},{"post_id":"cj5ls6krj005iq0d4jl3yn5n8","tag_id":"cj5ls6kvo00exq0d45ous4cti","_id":"cj5ls6kvt00f4q0d4udn1f351"},{"post_id":"cj5ls6krj005iq0d4jl3yn5n8","tag_id":"cj5ls6kvo00eyq0d47dn210jn","_id":"cj5ls6kvt00f5q0d46vmwa6n9"},{"post_id":"cj5ls6krj005iq0d4jl3yn5n8","tag_id":"cj5ls6kvp00ezq0d4pd63ch4y","_id":"cj5ls6kvu00f7q0d45nhz2upa"},{"post_id":"cj5ls6krn005mq0d49irjj64u","tag_id":"cj5ls6kvq00f0q0d4qfufsdgk","_id":"cj5ls6kvu00f8q0d4vlpjf3bt"},{"post_id":"cj5ls6krn005mq0d49irjj64u","tag_id":"cj5ls6kvs00f3q0d4u22hmfa0","_id":"cj5ls6kvu00faq0d4jno968d0"},{"post_id":"cj5ls6krp005pq0d4iry1ah0x","tag_id":"cj5ls6kvt00f6q0d4ufbgctr2","_id":"cj5ls6kvv00fdq0d46bksv1bu"},{"post_id":"cj5ls6krp005pq0d4iry1ah0x","tag_id":"cj5ls6kvu00f9q0d41i2w5wdu","_id":"cj5ls6kvv00feq0d4b3dnglcj"},{"post_id":"cj5ls6krp005pq0d4iry1ah0x","tag_id":"cj5ls6kvu00fbq0d4d261n9vx","_id":"cj5ls6kvw00fgq0d4xdua0fq1"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kvu00fcq0d46q6732tp","_id":"cj5ls6kwr00foq0d4vwzkootw"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kvv00ffq0d4alxed8fk","_id":"cj5ls6kwr00fpq0d47m535g7v"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kuz00dpq0d4nm3sxrmx","_id":"cj5ls6kws00frq0d49tf9naj7"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kvz00fiq0d4wy1dfufp","_id":"cj5ls6kws00fsq0d456j3hdc3"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kw100fjq0d4cjmb02yl","_id":"cj5ls6kwt00fuq0d4tk642mtm"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kw300fkq0d4ftgtk0fe","_id":"cj5ls6kwt00fvq0d4j8bebwob"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kw400flq0d4x1cs4qrp","_id":"cj5ls6kwt00fxq0d4qrhltfv7"},{"post_id":"cj5ls6krs005tq0d4fihm2b06","tag_id":"cj5ls6kw500fmq0d441ihrhf4","_id":"cj5ls6kwu00fyq0d4prngu4sl"},{"post_id":"cj5ls6krv005wq0d4onz3k3gj","tag_id":"cj5ls6kw600fnq0d4odg94d4p","_id":"cj5ls6kwu00fzq0d4tpig4yym"},{"post_id":"cj5ls6krv005wq0d4onz3k3gj","tag_id":"cj5ls6kwr00fqq0d45gh187b9","_id":"cj5ls6kwv00g1q0d4us8nsdj8"},{"post_id":"cj5ls6krv005wq0d4onz3k3gj","tag_id":"cj5ls6kws00ftq0d43d84jfgo","_id":"cj5ls6kwv00g2q0d4wflmldl5"},{"post_id":"cj5ls6krx0060q0d4cqcjkuzn","tag_id":"cj5ls6kwt00fwq0d4f523u299","_id":"cj5ls6kww00g4q0d4qi3g5ymp"},{"post_id":"cj5ls6krx0060q0d4cqcjkuzn","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6kww00g5q0d4169ykv3o"},{"post_id":"cj5ls6ks10063q0d42o3pf79u","tag_id":"cj5ls6kwt00fwq0d4f523u299","_id":"cj5ls6kwx00g7q0d4dx59eo3d"},{"post_id":"cj5ls6ks10063q0d42o3pf79u","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6kwx00g8q0d4bvgm2xc9"},{"post_id":"cj5ls6ks4006bq0d4j0di4f69","tag_id":"cj5ls6kwv00g3q0d4uvfkeu58","_id":"cj5ls6kwy00gaq0d4eallgkau"},{"post_id":"cj5ls6ks4006bq0d4j0di4f69","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6kwy00gbq0d4alh8l51d"},{"post_id":"cj5ls6ks4006eq0d44wje75ga","tag_id":"cj5ls6koy0031q0d4k7c8r6vj","_id":"cj5ls6kx300geq0d4c3a9oayw"},{"post_id":"cj5ls6ks4006eq0d44wje75ga","tag_id":"cj5ls6kww00g6q0d4xqz72qjk","_id":"cj5ls6kx400gfq0d4jk1rwnbk"},{"post_id":"cj5ls6ks4006eq0d44wje75ga","tag_id":"cj5ls6kwy00g9q0d4kpkua0ow","_id":"cj5ls6kx400ghq0d4wweejiuu"},{"post_id":"cj5ls6ks4006eq0d44wje75ga","tag_id":"cj5ls6kwy00gcq0d4e6eisb7m","_id":"cj5ls6kx400giq0d4ayxfeghs"},{"post_id":"cj5ls6ks7006iq0d4ijh22jrf","tag_id":"cj5ls6kl90022q0d4jqszaomc","_id":"cj5ls6kx500gkq0d42d5fdbg9"},{"post_id":"cj5ls6ks7006iq0d4ijh22jrf","tag_id":"cj5ls6kwz00gdq0d4dt5jpiyp","_id":"cj5ls6kx500glq0d4la0z7idr"},{"post_id":"cj5ls6ks7006iq0d4ijh22jrf","tag_id":"cj5ls6jif000fq0d4igghncmt","_id":"cj5ls6kx500gnq0d41gt4poop"},{"post_id":"cj5ls6ks7006iq0d4ijh22jrf","tag_id":"cj5ls6kx400ggq0d4bhxo2757","_id":"cj5ls6kx500goq0d4avkudlxv"},{"post_id":"cj5ls6ks8006lq0d43jd1libm","tag_id":"cj5ls6koy0031q0d4k7c8r6vj","_id":"cj5ls6kx600grq0d45jk2ha19"},{"post_id":"cj5ls6ks8006lq0d43jd1libm","tag_id":"cj5ls6kx400gjq0d4dr6l25mj","_id":"cj5ls6kx600gsq0d4oo4e9ftp"},{"post_id":"cj5ls6ks8006lq0d43jd1libm","tag_id":"cj5ls6kx500gmq0d4q8xdcv71","_id":"cj5ls6kx800guq0d4q92qjx9c"},{"post_id":"cj5ls6ks8006lq0d43jd1libm","tag_id":"cj5ls6kx500gpq0d48zn7w9vs","_id":"cj5ls6kx800gvq0d4t6e2buhy"},{"post_id":"cj5ls6ksc006pq0d4qe9zz22v","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kxd00gyq0d4qpqjgoug"},{"post_id":"cj5ls6ksc006pq0d4qe9zz22v","tag_id":"cj5ls6kx600gtq0d484m4kj8d","_id":"cj5ls6kxd00gzq0d4jeeksnpq"},{"post_id":"cj5ls6ksc006pq0d4qe9zz22v","tag_id":"cj5ls6kx800gwq0d4r7ggziq4","_id":"cj5ls6kxe00h1q0d4bkp4dgep"},{"post_id":"cj5ls6ksf006sq0d4sf1ljvtj","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kxh00h3q0d41iq77z0b"},{"post_id":"cj5ls6ksf006sq0d4sf1ljvtj","tag_id":"cj5ls6kxd00h0q0d4oqm3nv14","_id":"cj5ls6kxi00h4q0d4of6peshe"},{"post_id":"cj5ls6ksj006xq0d4katybaxh","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kxn00h9q0d4kyqpx6d5"},{"post_id":"cj5ls6ksj006xq0d4katybaxh","tag_id":"cj5ls6kxi00h5q0d4azw8uq12","_id":"cj5ls6kxn00haq0d4wz3xyo4b"},{"post_id":"cj5ls6ksj006xq0d4katybaxh","tag_id":"cj5ls6kxk00h6q0d4o0wfnlui","_id":"cj5ls6kxo00hcq0d4uxlz9bqq"},{"post_id":"cj5ls6ksj006xq0d4katybaxh","tag_id":"cj5ls6kxl00h7q0d44dv1x6ms","_id":"cj5ls6kxo00hdq0d4z8uts43l"},{"post_id":"cj5ls6ksk0070q0d49chhpkft","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kxt00hhq0d4dnpsq078"},{"post_id":"cj5ls6ksk0070q0d49chhpkft","tag_id":"cj5ls6kxn00hbq0d4szlww6ug","_id":"cj5ls6kxt00hiq0d4irsszu3r"},{"post_id":"cj5ls6ksk0070q0d49chhpkft","tag_id":"cj5ls6ku200axq0d4s1n48qov","_id":"cj5ls6kxv00hkq0d457fan3w5"},{"post_id":"cj5ls6ksk0070q0d49chhpkft","tag_id":"cj5ls6kxp00hfq0d4b18096gs","_id":"cj5ls6kxv00hlq0d4rvp93w9c"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6ky000hrq0d4hr8b3k8r"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","tag_id":"cj5ls6kxt00hjq0d4u15paf6z","_id":"cj5ls6ky000hsq0d4hjghaobh"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","tag_id":"cj5ls6kxv00hmq0d41ek64uz5","_id":"cj5ls6ky100huq0d43nzuoveu"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","tag_id":"cj5ls6kxw00hnq0d4bl7x9q11","_id":"cj5ls6ky100hvq0d4p4gmhsz6"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","tag_id":"cj5ls6kxw00hoq0d46c1a37m7","_id":"cj5ls6ky200hxq0d4q90zngby"},{"post_id":"cj5ls6ksl0073q0d4cnbg4kh9","tag_id":"cj5ls6kxx00hpq0d41zhhm078","_id":"cj5ls6ky200hyq0d4tp7zsjj7"},{"post_id":"cj5ls6ksm0077q0d4bx70ekqj","tag_id":"cj5ls6kxx00hqq0d4aaedlksg","_id":"cj5ls6ky400i2q0d4k222jrs4"},{"post_id":"cj5ls6ksm0077q0d4bx70ekqj","tag_id":"cj5ls6ky000htq0d484n5kzmq","_id":"cj5ls6ky500i3q0d46cy39ywj"},{"post_id":"cj5ls6ksm0077q0d4bx70ekqj","tag_id":"cj5ls6ky100hwq0d4pbrtwu18","_id":"cj5ls6ky500i5q0d4idw6mj2x"},{"post_id":"cj5ls6ksm0077q0d4bx70ekqj","tag_id":"cj5ls6kxv00hmq0d41ek64uz5","_id":"cj5ls6ky500i6q0d4ka9l5veh"},{"post_id":"cj5ls6ksm0077q0d4bx70ekqj","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6ky600i8q0d4w46awzx6"},{"post_id":"cj5ls6ksn007aq0d4i3m4yilz","tag_id":"cj5ls6ky300i1q0d4ehv8gjqz","_id":"cj5ls6kyd00icq0d4hpa0w522"},{"post_id":"cj5ls6ksn007aq0d4i3m4yilz","tag_id":"cj5ls6ky500i4q0d4vf1ezmqw","_id":"cj5ls6kyd00idq0d4606v0vjy"},{"post_id":"cj5ls6ksn007aq0d4i3m4yilz","tag_id":"cj5ls6ky500i7q0d43cuyonyr","_id":"cj5ls6kyh00ifq0d4mw3v77xs"},{"post_id":"cj5ls6ksn007aq0d4i3m4yilz","tag_id":"cj5ls6ky700i9q0d47g90klsp","_id":"cj5ls6kyh00igq0d4mpyvfftz"},{"post_id":"cj5ls6ksn007aq0d4i3m4yilz","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kyi00iiq0d4ewoecgrs"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kyl00ioq0d438be4aue"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6ky100hwq0d4pbrtwu18","_id":"cj5ls6kym00ipq0d4ujqo9pak"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6kyh00ihq0d44h6gf055","_id":"cj5ls6kyn00irq0d4r0y0dyj9"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6kyi00ijq0d4mjtoop76","_id":"cj5ls6kyn00isq0d4p1jugc8u"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6kyi00ikq0d48x1950vr","_id":"cj5ls6kyo00iuq0d4opizheo7"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6kyi00ilq0d4rcsqs7xa","_id":"cj5ls6kyo00ivq0d4577x56nj"},{"post_id":"cj5ls6ksp007fq0d43cbf3rkp","tag_id":"cj5ls6kyi00imq0d4l36ao7gd","_id":"cj5ls6kyq00ixq0d45qbgb1uz"},{"post_id":"cj5ls6ksp007iq0d44l0ebkzx","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kyq00iyq0d4a1ccd54x"},{"post_id":"cj5ls6ksp007iq0d44l0ebkzx","tag_id":"cj5ls6kym00iqq0d4b7a4uyon","_id":"cj5ls6kyq00j0q0d4vpl1b2na"},{"post_id":"cj5ls6ksp007iq0d44l0ebkzx","tag_id":"cj5ls6kyn00itq0d4sf7bnfq1","_id":"cj5ls6kyq00j1q0d48k9tofgc"},{"post_id":"cj5ls6ksv007nq0d4c25vvxo5","tag_id":"cj5ls6kx600gqq0d4yhpkiarb","_id":"cj5ls6kyw00j5q0d4rnlveinb"},{"post_id":"cj5ls6ksv007nq0d4c25vvxo5","tag_id":"cj5ls6kyq00izq0d4gfle5ssz","_id":"cj5ls6kyw00j6q0d41lfpzrry"},{"post_id":"cj5ls6ksv007nq0d4c25vvxo5","tag_id":"cj5ls6ky100hwq0d4pbrtwu18","_id":"cj5ls6kyw00j7q0d4hd2ivmyh"},{"post_id":"cj5ls6ksv007nq0d4c25vvxo5","tag_id":"cj5ls6kyr00j3q0d4a4x783gs","_id":"cj5ls6kyw00j8q0d47rlv480y"},{"post_id":"cj5ls6ksv007nq0d4c25vvxo5","tag_id":"cj5ls6kys00j4q0d4geqyd916","_id":"cj5ls6kyw00j9q0d4js1g9l55"},{"post_id":"cj5ls6l6v00jiq0d4wluw7j5l","tag_id":"cj5ls6kwr00fqq0d45gh187b9","_id":"cj5ls6l6y00jlq0d4o0cf88wq"},{"post_id":"cj5ls6l6v00jiq0d4wluw7j5l","tag_id":"cj5ls6ktl009sq0d455c8cxn6","_id":"cj5ls6l6y00joq0d4mmoobyx7"},{"post_id":"cj5ls6l6v00jiq0d4wluw7j5l","tag_id":"cj5ls6l6r00jdq0d4a2jcnllc","_id":"cj5ls6l6y00jqq0d4ptqydw0u"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6kwr00fqq0d45gh187b9","_id":"cj5ls6l7100jvq0d40mzb5ors"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6ktl009sq0d455c8cxn6","_id":"cj5ls6l7200jwq0d44aob8o76"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6l6r00jdq0d4a2jcnllc","_id":"cj5ls6l7200jyq0d42lent06u"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6l6w00jjq0d4arv3i6az","_id":"cj5ls6l7200jzq0d4s1hgy28t"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6l6y00jnq0d4eg57ivb3","_id":"cj5ls6l7300k1q0d4rlic46gr"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6l6y00jrq0d42swyobft","_id":"cj5ls6l7300k2q0d49hvfe6si"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6l6z00jsq0d4lav06dba","_id":"cj5ls6l7300k4q0d4z0xupej3"},{"post_id":"cj5ls6l6n00jbq0d4rzn21pg6","tag_id":"cj5ls6l6z00jtq0d45opslpes","_id":"cj5ls6l7300k5q0d4bi665rx4"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6kwr00fqq0d45gh187b9","_id":"cj5ls6l7b00k9q0d46wrj2v5y"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6l6w00jjq0d4arv3i6az","_id":"cj5ls6l7b00kaq0d45uelwvh4"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6l7200jxq0d4gwe99tkl","_id":"cj5ls6l7c00kcq0d42ijxugu4"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6l7200k0q0d44nmahrq7","_id":"cj5ls6l7c00kdq0d4zciohezd"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6l7300k3q0d413g7be1f","_id":"cj5ls6l7d00kfq0d4nwnv16vo"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6l7300k6q0d4gal6nqip","_id":"cj5ls6l7d00kgq0d4bmsjzb3k"},{"post_id":"cj5ls6l6p00jcq0d4tylsjhd5","tag_id":"cj5ls6l7300k7q0d49ecu362y","_id":"cj5ls6l7e00kiq0d4knfnz87h"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","tag_id":"cj5ls6kwr00fqq0d45gh187b9","_id":"cj5ls6l7e00kjq0d4vh8x3esn"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","tag_id":"cj5ls6ktl009sq0d455c8cxn6","_id":"cj5ls6l7f00klq0d4wojp78qj"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","tag_id":"cj5ls6l6r00jdq0d4a2jcnllc","_id":"cj5ls6l7f00kmq0d4x7tzdaib"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","tag_id":"cj5ls6l7b00kbq0d419lqlidh","_id":"cj5ls6l7g00knq0d47ij8ymuf"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","tag_id":"cj5ls6l7c00keq0d4kenhvigd","_id":"cj5ls6l7g00koq0d4ujlrmlse"},{"post_id":"cj5ls6l6r00jeq0d43u5z15rc","tag_id":"cj5ls6ku000auq0d48ltquzqb","_id":"cj5ls6l7g00kpq0d4ietqwr1i"},{"post_id":"cj5ls6l6t00jgq0d4nbbo7355","tag_id":"cj5ls6kwr00fqq0d45gh187b9","_id":"cj5ls6l7g00kqq0d48smf03yb"},{"post_id":"cj5ls6l6t00jgq0d4nbbo7355","tag_id":"cj5ls6ktl009sq0d455c8cxn6","_id":"cj5ls6l7g00krq0d4j8hqhrb0"},{"post_id":"cj5ls6l6t00jgq0d4nbbo7355","tag_id":"cj5ls6l6r00jdq0d4a2jcnllc","_id":"cj5ls6l7g00ksq0d4m4eybv7e"},{"post_id":"cj5ls6l6t00jgq0d4nbbo7355","tag_id":"cj5ls6l7b00kbq0d419lqlidh","_id":"cj5ls6l7g00ktq0d4pq7ypcjn"},{"post_id":"cj5ls6l6t00jgq0d4nbbo7355","tag_id":"cj5ls6l7c00keq0d4kenhvigd","_id":"cj5ls6l7g00kuq0d4uojquo2i"}],"Tag":[{"name":"iOS","_id":"cj5ls6jfe0003q0d4xn4pp780"},{"name":"Android","_id":"cj5ls6jhg0006q0d4nijy2h8a"},{"name":"cocos2dx","_id":"cj5ls6jhi0007q0d4bhpzjxdi"},{"name":"Yii","_id":"cj5ls6jhk0008q0d469o7j23r"},{"name":"PHP","_id":"cj5ls6jhq0009q0d4z71ducmx"},{"name":"MySQL","_id":"cj5ls6jht000aq0d4p9bzgvh1"},{"name":"RDB","_id":"cj5ls6jhw000bq0d4tto2n4oa"},{"name":"java","_id":"cj5ls6ji0000cq0d4ixmk9t4b"},{"name":"C/C++","_id":"cj5ls6jia000dq0d48ewzt5pk"},{"name":"Objective-C","_id":"cj5ls6jie000eq0d42m334uka"},{"name":"scrum","_id":"cj5ls6jif000fq0d4igghncmt"},{"name":"color","_id":"cj5ls6kl90022q0d4jqszaomc"},{"name":"学习计划","_id":"cj5ls6kmi002aq0d4l0b3zxsp"},{"name":"社区","_id":"cj5ls6kn4002fq0d41ldavskq"},{"name":"领袖","_id":"cj5ls6knj002lq0d4zyx0i94a"},{"name":"仪式","_id":"cj5ls6ko8002qq0d4ca5ev296"},{"name":"表演","_id":"cj5ls6kop002vq0d4hkb9utrm"},{"name":"团队管理","_id":"cj5ls6koy0031q0d4k7c8r6vj"},{"name":"感悟","_id":"cj5ls6kp70038q0d4wvw7m158"},{"name":"家乡","_id":"cj5ls6kpd003gq0d4anv1bwai"},{"name":"人生","_id":"cj5ls6kpf003mq0d44q1q0tby"},{"name":"Wechat","_id":"cj5ls6kpo003uq0d44879rz17"},{"name":"微信","_id":"cj5ls6kpt0041q0d4wmtldj2k"},{"name":"power","_id":"cj5ls6kpx0047q0d4buzmh7j2"},{"name":"energy","_id":"cj5ls6kq6004dq0d4i0rk2e3u"},{"name":"博客","_id":"cj5ls6kqr004jq0d4v3u4w3nh"},{"name":"为什么写博客","_id":"cj5ls6kqt004qq0d475lc9fko"},{"name":"人生感悟","_id":"cj5ls6kqy004xq0d4ubtifirq"},{"name":"cocos2d-x","_id":"cj5ls6kr40054q0d409xm0wgr"},{"name":"O2O","_id":"cj5ls6kr9005cq0d4ct02lkam"},{"name":"摄影","_id":"cj5ls6krm005jq0d47qlrbhd9"},{"name":"市场调研","_id":"cj5ls6krq005qq0d46u65dw3b"},{"name":"社交","_id":"cj5ls6krx005zq0d4hdm5u5y5"},{"name":"公寓","_id":"cj5ls6ks30068q0d48qmepbjm"},{"name":"技术","_id":"cj5ls6ks6006gq0d46kidvr3r"},{"name":"内功","_id":"cj5ls6ksc006mq0d4j10oalm0"},{"name":"外功","_id":"cj5ls6ksj006wq0d4rd59ibr9"},{"name":"自省","_id":"cj5ls6ksl0075q0d4pxehc1jz"},{"name":"AS3","_id":"cj5ls6kso007cq0d4ifhap2d0"},{"name":"字体","_id":"cj5ls6kst007jq0d4vr73kt16"},{"name":"动态加载","_id":"cj5ls6ksw007pq0d41zkr12n3"},{"name":"font","_id":"cj5ls6kt0007sq0d48ly1slcz"},{"name":"dynamic","_id":"cj5ls6kt1007vq0d46yw8sltj"},{"name":"load","_id":"cj5ls6kt1007wq0d41i21cnyq"},{"name":"nodejs","_id":"cj5ls6kt1007xq0d4j4ibmh50"},{"name":"npm","_id":"cj5ls6kt20080q0d4ho1bnkj4"},{"name":"express","_id":"cj5ls6kt30083q0d4y9lzvafj"},{"name":"lean","_id":"cj5ls6kt30086q0d4ioy8hfx7"},{"name":"avoscloud","_id":"cj5ls6kt30087q0d48fgrbhnp"},{"name":"swf","_id":"cj5ls6kt5008eq0d4sprzholr"},{"name":"性能","_id":"cj5ls6kt7008jq0d46mrhlj3o"},{"name":"OAuth","_id":"cj5ls6kt9008lq0d4yr1u46w2"},{"name":"Server","_id":"cj5ls6ktb008oq0d41zhhnhy3"},{"name":"yii2","_id":"cj5ls6ktb008pq0d4llymsrwb"},{"name":"ActiveRecord","_id":"cj5ls6ktc008sq0d4cnm4iqtq"},{"name":"db","_id":"cj5ls6ktc008uq0d40k8hjxja"},{"name":"mysql","_id":"cj5ls6ktc008vq0d4tcb1y7fy"},{"name":"php","_id":"cj5ls6ktc008wq0d4rmh4cnyf"},{"name":"swoole","_id":"cj5ls6ktd008zq0d4w67ythzh"},{"name":"swoole_server","_id":"cj5ls6ktd0092q0d4mywctlja"},{"name":"worker","_id":"cj5ls6ktd0093q0d46bzp8xvd"},{"name":"manager","_id":"cj5ls6kte0094q0d4zyyraeve"},{"name":"process","_id":"cj5ls6ktf0095q0d43hax3vt3"},{"name":"进程","_id":"cj5ls6ktg0096q0d4tkjdp4z8"},{"name":"线程","_id":"cj5ls6ktg0097q0d4muw7poyw"},{"name":"Yii2","_id":"cj5ls6kti009bq0d4rbh6hbhx"},{"name":"web","_id":"cj5ls6kti009hq0d4no6si209"},{"name":"ood","_id":"cj5ls6ktj009mq0d4r4xc9abt"},{"name":"priciple","_id":"cj5ls6ktk009pq0d428g7zcbv"},{"name":"design","_id":"cj5ls6ktl009sq0d455c8cxn6"},{"name":"component","_id":"cj5ls6kts009yq0d48i6but03"},{"name":"action","_id":"cj5ls6kts00a0q0d4dwg1hk0f"},{"name":"filter","_id":"cj5ls6kts00a1q0d4rf8m6o5j"},{"name":"application","_id":"cj5ls6ktu00a8q0d4abn9557t"},{"name":"run","_id":"cj5ls6ktu00a9q0d40hb9f5oo"},{"name":"cache","_id":"cj5ls6kty00agq0d40k8s14xa"},{"name":"css","_id":"cj5ls6kty00ahq0d4cqr7wmvg"},{"name":"xdebug","_id":"cj5ls6kty00aiq0d4bxsto5m4"},{"name":"composer","_id":"cj5ls6kty00ajq0d49yd4mn6q"},{"name":"pear","_id":"cj5ls6kty00akq0d4miinknix"},{"name":"coreComponents","_id":"cj5ls6ktz00aoq0d4lgqru0wu"},{"name":"uml","_id":"cj5ls6ku000auq0d48ltquzqb"},{"name":"构架","_id":"cj5ls6ku200axq0d4s1n48qov"},{"name":"restful","_id":"cj5ls6ku300b0q0d42o5bhew2"},{"name":"rest","_id":"cj5ls6ku800b3q0d4pjhb8mko"},{"name":"api","_id":"cj5ls6ku800b4q0d4lc4vuvnk"},{"name":"http","_id":"cj5ls6ku900b5q0d4ctdq5hib"},{"name":"get","_id":"cj5ls6kua00b6q0d4u13s4hcj"},{"name":"post","_id":"cj5ls6kub00b7q0d4s6dowgwn"},{"name":"put","_id":"cj5ls6kub00b8q0d4yd3k48jy"},{"name":"Web","_id":"cj5ls6kuc00b9q0d4cm02fbbt"},{"name":"HTTP","_id":"cj5ls6kue00bcq0d4emejjkfh"},{"name":"JS","_id":"cj5ls6kue00bfq0d41vxugopo"},{"name":"CSS","_id":"cj5ls6kue00biq0d4b5bl0azb"},{"name":"HTML","_id":"cj5ls6kuf00bkq0d4f9vqjfu8"},{"name":"cocos2dx-3.x","_id":"cj5ls6kuf00blq0d45p92svia"},{"name":"anchorPoint","_id":"cj5ls6kug00boq0d4jc6hh5j2"},{"name":"vector","_id":"cj5ls6kug00brq0d4u5sp964g"},{"name":"Sprite","_id":"cj5ls6kug00btq0d4ak77qjvn"},{"name":"GLProgram","_id":"cj5ls6kug00buq0d47vt6v7l2"},{"name":"Armature","_id":"cj5ls6kuh00bvq0d4wp4sg2la"},{"name":"UILayer","_id":"cj5ls6kuh00bwq0d44felwcqi"},{"name":"openGL","_id":"cj5ls6kuh00bxq0d4250ixgya"},{"name":"GLView","_id":"cj5ls6kui00c0q0d464a6zxdo"},{"name":"Application","_id":"cj5ls6kuj00c3q0d4q80xhr5n"},{"name":"Director","_id":"cj5ls6kuj00c6q0d4lacambkq"},{"name":"class","_id":"cj5ls6kuk00c9q0d4yfp8hsls"},{"name":"Renderer","_id":"cj5ls6kul00caq0d42ocv66ju"},{"name":"Node","_id":"cj5ls6kun00cbq0d4t1v4q2hk"},{"name":"ndk","_id":"cj5ls6kuo00ccq0d4lbfov6ua"},{"name":"c++","_id":"cj5ls6kup00cfq0d4i5bvj3h4"},{"name":"logcat","_id":"cj5ls6kup00ciq0d4z8e7ued3"},{"name":"ndk-stack","_id":"cj5ls6kup00clq0d4e5s6326y"},{"name":"EventDispatcher","_id":"cj5ls6kup00coq0d4oeeoxaus"},{"name":"Event","_id":"cj5ls6kuq00crq0d4iu71m9ok"},{"name":"EventListener","_id":"cj5ls6kuq00cuq0d4s4y5xoxn"},{"name":"fixedPriority","_id":"cj5ls6kur00cwq0d4ga1sg4n0"},{"name":"ios","_id":"cj5ls6kut00cxq0d4hf27sxey"},{"name":"transform","_id":"cj5ls6kuu00d0q0d4htw9eifr"},{"name":"frame","_id":"cj5ls6kuv00d5q0d4lus7y65f"},{"name":"center","_id":"cj5ls6kuw00d6q0d4yng436so"},{"name":"bounds","_id":"cj5ls6kuw00d7q0d446fncju6"},{"name":"position","_id":"cj5ls6kuw00d8q0d4g6lj05lu"},{"name":"UIView","_id":"cj5ls6kuw00d9q0d4wrkgs8ct"},{"name":"uibutton","_id":"cj5ls6kuw00daq0d49e0r4s40"},{"name":"button","_id":"cj5ls6kux00ddq0d4zgslxvdb"},{"name":"disable","_id":"cj5ls6kuy00dgq0d4zeoxaq8u"},{"name":"uiwidget","_id":"cj5ls6kuy00djq0d4z5mf5871"},{"name":"hadoop","_id":"cj5ls6kuy00dmq0d4g6jhqcyg"},{"name":"google","_id":"cj5ls6kuz00dpq0d4nm3sxrmx"},{"name":"mapreduce","_id":"cj5ls6kv000dsq0d4c4f59dd2"},{"name":"orientation","_id":"cj5ls6kv800dzq0d4k74nn65y"},{"name":"screen","_id":"cj5ls6kvc00e0q0d4xhsynxrr"},{"name":"ios6","_id":"cj5ls6kvc00e1q0d4jicexmdl"},{"name":"ios7","_id":"cj5ls6kvc00e2q0d442b3zxuf"},{"name":"interface","_id":"cj5ls6kvc00e3q0d41jmtoitj"},{"name":"voip","_id":"cj5ls6kve00e7q0d42itshyex"},{"name":"socket","_id":"cj5ls6kve00eaq0d4vgiu97dl"},{"name":"background","_id":"cj5ls6kve00edq0d4di7rxfzc"},{"name":"iphone","_id":"cj5ls6kvf00efq0d4dawocph5"},{"name":"opencv","_id":"cj5ls6kvf00egq0d4t4j7oih2"},{"name":"windows","_id":"cj5ls6kvh00ejq0d48j1u53ah"},{"name":"cmake","_id":"cj5ls6kvi00emq0d4cgfq1mt2"},{"name":"图像处理","_id":"cj5ls6kvm00erq0d4g4lh93my"},{"name":"haar","_id":"cj5ls6kvn00ewq0d4dw6ihitr"},{"name":"taining","_id":"cj5ls6kvo00exq0d45ous4cti"},{"name":"classifiy","_id":"cj5ls6kvo00eyq0d47dn210jn"},{"name":"分类器","_id":"cj5ls6kvp00ezq0d4pd63ch4y"},{"name":"exception","_id":"cj5ls6kvq00f0q0d4qfufsdgk"},{"name":"oo","_id":"cj5ls6kvs00f3q0d4u22hmfa0"},{"name":"js","_id":"cj5ls6kvt00f6q0d4ufbgctr2"},{"name":"bbs","_id":"cj5ls6kvu00f9q0d41i2w5wdu"},{"name":"weiphone","_id":"cj5ls6kvu00fbq0d4d261n9vx"},{"name":"SpeechToText","_id":"cj5ls6kvu00fcq0d46q6732tp"},{"name":"API","_id":"cj5ls6kvv00ffq0d4alxed8fk"},{"name":"STT","_id":"cj5ls6kvz00fiq0d4wy1dfufp"},{"name":"ASR","_id":"cj5ls6kw100fjq0d4cjmb02yl"},{"name":"SR","_id":"cj5ls6kw300fkq0d4ftgtk0fe"},{"name":"speech","_id":"cj5ls6kw400flq0d4x1cs4qrp"},{"name":"recognition","_id":"cj5ls6kw500fmq0d441ihrhf4"},{"name":"框架","_id":"cj5ls6kw600fnq0d4odg94d4p"},{"name":"设计模式","_id":"cj5ls6kwr00fqq0d45gh187b9"},{"name":"NLDV","_id":"cj5ls6kws00ftq0d43d84jfgo"},{"name":"薪酬","_id":"cj5ls6kwt00fwq0d4f523u299"},{"name":"期权","_id":"cj5ls6kwv00g3q0d4uvfkeu58"},{"name":"沟通","_id":"cj5ls6kww00g6q0d4xqz72qjk"},{"name":"决策","_id":"cj5ls6kwy00g9q0d4kpkua0ow"},{"name":"流程监督","_id":"cj5ls6kwy00gcq0d4e6eisb7m"},{"name":"worktile","_id":"cj5ls6kwz00gdq0d4dt5jpiyp"},{"name":"项目管理","_id":"cj5ls6kx400ggq0d4bhxo2757"},{"name":"招聘","_id":"cj5ls6kx400gjq0d4dr6l25mj"},{"name":"责任感","_id":"cj5ls6kx500gmq0d4q8xdcv71"},{"name":"参与度","_id":"cj5ls6kx500gpq0d48zn7w9vs"},{"name":"读书笔记","_id":"cj5ls6kx600gqq0d4yhpkiarb"},{"name":"谈话","_id":"cj5ls6kx600gtq0d484m4kj8d"},{"name":"交流","_id":"cj5ls6kx800gwq0d4r7ggziq4"},{"name":"原则","_id":"cj5ls6kxd00h0q0d4oqm3nv14"},{"name":"心理","_id":"cj5ls6kxi00h5q0d4azw8uq12"},{"name":"自我","_id":"cj5ls6kxk00h6q0d4o0wfnlui"},{"name":"自尊","_id":"cj5ls6kxl00h7q0d44dv1x6ms"},{"name":"淘宝","_id":"cj5ls6kxn00hbq0d4szlww6ug"},{"name":"数据库","_id":"cj5ls6kxp00hfq0d4b18096gs"},{"name":"人类简史","_id":"cj5ls6kxt00hjq0d4u15paf6z"},{"name":"历史","_id":"cj5ls6kxv00hmq0d41ek64uz5"},{"name":"大脑","_id":"cj5ls6kxw00hnq0d4bl7x9q11"},{"name":"食物链","_id":"cj5ls6kxw00hoq0d46c1a37m7"},{"name":"农业革命","_id":"cj5ls6kxx00hpq0d41zhhm078"},{"name":"日本","_id":"cj5ls6kxx00hqq0d4aaedlksg"},{"name":"金融危机","_id":"cj5ls6ky000htq0d484n5kzmq"},{"name":"经济","_id":"cj5ls6ky100hwq0d4pbrtwu18"},{"name":"如何阅读一本书","_id":"cj5ls6ky300i1q0d4ehv8gjqz"},{"name":"检视阅读","_id":"cj5ls6ky500i4q0d4vf1ezmqw"},{"name":"分析阅读","_id":"cj5ls6ky500i7q0d43cuyonyr"},{"name":"主题阅读","_id":"cj5ls6ky700i9q0d47g90klsp"},{"name":"政治","_id":"cj5ls6kyh00ihq0d44h6gf055"},{"name":"财富","_id":"cj5ls6kyi00ijq0d4mjtoop76"},{"name":"货币","_id":"cj5ls6kyi00ikq0d48x1950vr"},{"name":"土地","_id":"cj5ls6kyi00ilq0d4rcsqs7xa"},{"name":"劳动价值","_id":"cj5ls6kyi00imq0d4l36ao7gd"},{"name":"社会学","_id":"cj5ls6kym00iqq0d4b7a4uyon"},{"name":"马斯洛需求层次","_id":"cj5ls6kyn00itq0d4sf7bnfq1"},{"name":"官场","_id":"cj5ls6kyq00izq0d4gfle5ssz"},{"name":"房地产","_id":"cj5ls6kyr00j3q0d4a4x783gs"},{"name":"厚黑学","_id":"cj5ls6kys00j4q0d4geqyd916"},{"name":"pattern","_id":"cj5ls6l6r00jdq0d4a2jcnllc"},{"name":"creational","_id":"cj5ls6l6w00jjq0d4arv3i6az"},{"name":"factory","_id":"cj5ls6l6y00jnq0d4eg57ivb3"},{"name":"method","_id":"cj5ls6l6y00jrq0d42swyobft"},{"name":"abstract","_id":"cj5ls6l6z00jsq0d4lav06dba"},{"name":"singlton","_id":"cj5ls6l6z00jtq0d45opslpes"},{"name":"prototype","_id":"cj5ls6l7200jxq0d4gwe99tkl"},{"name":"abstract factory","_id":"cj5ls6l7200k0q0d44nmahrq7"},{"name":"factory method","_id":"cj5ls6l7300k3q0d413g7be1f"},{"name":"builder","_id":"cj5ls6l7300k6q0d4gal6nqip"},{"name":"singleton","_id":"cj5ls6l7300k7q0d49ecu362y"},{"name":"adapter","_id":"cj5ls6l7b00kbq0d419lqlidh"},{"name":"bridge","_id":"cj5ls6l7c00keq0d4kenhvigd"}]}}